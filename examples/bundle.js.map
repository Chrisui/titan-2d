{"version":3,"sources":["webpack:///webpack/bootstrap bb22cc1d85e3a9b423ed","webpack:///d:/Projects/titan-2d/examples/index.js","webpack:///d:/Projects/titan-2d/examples/master/index.js","webpack:///./examples/style.css?ecdd","webpack:///./examples/style.css","webpack:///./~/style-loader/addStyles.js","webpack:///./~/mathjs/index.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/matter-js/build/matter.js","webpack:///./~/pixi.js/bin/pixi.js","webpack:///./~/lodash/lang/cloneDeep.js","webpack:///./~/mathjs/lib/math.js","webpack:///./~/lodash/internal/baseClone.js","webpack:///./~/lodash/internal/bindCallback.js","webpack:///./~/mathjs/lib/util/object.js","webpack:///./~/mathjs/lib/util/number.js","webpack:///./~/mathjs/lib/constants.js","webpack:///./~/mathjs/lib/type/BigNumber.js","webpack:///./~/mathjs/lib/error/index.js","webpack:///./~/mathjs/lib/type/Complex.js","webpack:///./~/mathjs/lib/type/Range.js","webpack:///./~/mathjs/lib/type/Index.js","webpack:///./~/mathjs/lib/type/Matrix.js","webpack:///./~/mathjs/lib/type/Unit.js","webpack:///./~/mathjs/lib/type/Help.js","webpack:///./~/mathjs/lib/type/ResultSet.js","webpack:///./~/mathjs/lib/type/collection.js","webpack:///./~/mathjs/lib/type/matrix/CcsMatrix.js","webpack:///./~/mathjs/lib/type/matrix/CrsMatrix.js","webpack:///./~/mathjs/lib/type/matrix/DenseMatrix.js","webpack:///./~/mathjs/lib/expression/node/index.js","webpack:///./~/mathjs/lib/expression/parse.js","webpack:///./~/mathjs/lib/expression/Parser.js","webpack:///./~/mathjs/lib/expression/docs/index.js","webpack:///./~/mathjs/lib/json/reviver.js","webpack:///./~/mathjs/lib/expression/transform/concat.transform.js","webpack:///./~/mathjs/lib/expression/transform/filter.transform.js","webpack:///./~/mathjs/lib/expression/transform/forEach.transform.js","webpack:///./~/mathjs/lib/expression/transform/index.transform.js","webpack:///./~/mathjs/lib/expression/transform/map.transform.js","webpack:///./~/mathjs/lib/expression/transform/max.transform.js","webpack:///./~/mathjs/lib/expression/transform/mean.transform.js","webpack:///./~/mathjs/lib/expression/transform/min.transform.js","webpack:///./~/mathjs/lib/expression/transform/range.transform.js","webpack:///./~/mathjs/lib/expression/transform/subset.transform.js","webpack:///./~/mathjs/lib/chaining/Chain.js","webpack:///./~/mathjs/lib/function/construction/bignumber.js","webpack:///./~/mathjs/lib/function/construction/boolean.js","webpack:///./~/mathjs/lib/function/construction/complex.js","webpack:///./~/mathjs/lib/function/construction/index.js","webpack:///./~/mathjs/lib/function/construction/matrix.js","webpack:///./~/mathjs/lib/function/construction/number.js","webpack:///./~/mathjs/lib/function/construction/parser.js","webpack:///./~/mathjs/lib/function/construction/chain.js","webpack:///./~/mathjs/lib/function/construction/string.js","webpack:///./~/mathjs/lib/function/construction/unit.js","webpack:///./~/mathjs/lib/function/expression/compile.js","webpack:///./~/mathjs/lib/function/expression/eval.js","webpack:///./~/mathjs/lib/function/expression/help.js","webpack:///./~/mathjs/lib/function/expression/parse.js","webpack:///./~/mathjs/lib/function/arithmetic/abs.js","webpack:///./~/mathjs/lib/function/arithmetic/add.js","webpack:///./~/mathjs/lib/function/arithmetic/ceil.js","webpack:///./~/mathjs/lib/function/arithmetic/cube.js","webpack:///./~/mathjs/lib/function/arithmetic/_divide.js","webpack:///./~/mathjs/lib/function/arithmetic/divide.js","webpack:///./~/mathjs/lib/function/arithmetic/dotDivide.js","webpack:///./~/mathjs/lib/function/arithmetic/dotMultiply.js","webpack:///./~/mathjs/lib/function/arithmetic/dotPow.js","webpack:///./~/mathjs/lib/function/arithmetic/exp.js","webpack:///./~/mathjs/lib/function/arithmetic/fix.js","webpack:///./~/mathjs/lib/function/arithmetic/floor.js","webpack:///./~/mathjs/lib/function/arithmetic/gcd.js","webpack:///./~/mathjs/lib/function/arithmetic/lcm.js","webpack:///./~/mathjs/lib/function/arithmetic/log.js","webpack:///./~/mathjs/lib/function/arithmetic/log10.js","webpack:///./~/mathjs/lib/function/arithmetic/mod.js","webpack:///./~/mathjs/lib/function/arithmetic/multiply.js","webpack:///./~/mathjs/lib/function/arithmetic/norm.js","webpack:///./~/mathjs/lib/function/arithmetic/nthRoot.js","webpack:///./~/mathjs/lib/function/arithmetic/pow.js","webpack:///./~/mathjs/lib/function/arithmetic/round.js","webpack:///./~/mathjs/lib/function/arithmetic/sign.js","webpack:///./~/mathjs/lib/function/arithmetic/sqrt.js","webpack:///./~/mathjs/lib/function/arithmetic/square.js","webpack:///./~/mathjs/lib/function/arithmetic/subtract.js","webpack:///./~/mathjs/lib/function/arithmetic/unaryMinus.js","webpack:///./~/mathjs/lib/function/arithmetic/unaryPlus.js","webpack:///./~/mathjs/lib/function/arithmetic/xgcd.js","webpack:///./~/mathjs/lib/function/bitwise/bitAnd.js","webpack:///./~/mathjs/lib/function/bitwise/bitNot.js","webpack:///./~/mathjs/lib/function/bitwise/bitOr.js","webpack:///./~/mathjs/lib/function/bitwise/bitXor.js","webpack:///./~/mathjs/lib/function/bitwise/leftShift.js","webpack:///./~/mathjs/lib/function/bitwise/rightArithShift.js","webpack:///./~/mathjs/lib/function/bitwise/rightLogShift.js","webpack:///./~/mathjs/lib/function/complex/arg.js","webpack:///./~/mathjs/lib/function/complex/conj.js","webpack:///./~/mathjs/lib/function/complex/re.js","webpack:///./~/mathjs/lib/function/complex/im.js","webpack:///./~/mathjs/lib/function/logical/and.js","webpack:///./~/mathjs/lib/function/logical/not.js","webpack:///./~/mathjs/lib/function/logical/or.js","webpack:///./~/mathjs/lib/function/logical/xor.js","webpack:///./~/mathjs/lib/function/matrix/concat.js","webpack:///./~/mathjs/lib/function/matrix/cross.js","webpack:///./~/mathjs/lib/function/matrix/det.js","webpack:///./~/mathjs/lib/function/matrix/diag.js","webpack:///./~/mathjs/lib/function/matrix/dot.js","webpack:///./~/mathjs/lib/function/matrix/eye.js","webpack:///./~/mathjs/lib/function/matrix/flatten.js","webpack:///./~/mathjs/lib/function/matrix/inv.js","webpack:///./~/mathjs/lib/function/matrix/ones.js","webpack:///./~/mathjs/lib/function/matrix/range.js","webpack:///./~/mathjs/lib/function/matrix/resize.js","webpack:///./~/mathjs/lib/function/matrix/size.js","webpack:///./~/mathjs/lib/function/matrix/squeeze.js","webpack:///./~/mathjs/lib/function/matrix/subset.js","webpack:///./~/mathjs/lib/function/matrix/trace.js","webpack:///./~/mathjs/lib/function/matrix/transpose.js","webpack:///./~/mathjs/lib/function/matrix/zeros.js","webpack:///./~/mathjs/lib/function/probability/factorial.js","webpack:///./~/mathjs/lib/function/probability/gamma.js","webpack:///./~/mathjs/lib/function/probability/random.js","webpack:///./~/mathjs/lib/function/probability/randomInt.js","webpack:///./~/mathjs/lib/function/probability/pickRandom.js","webpack:///./~/mathjs/lib/function/probability/permutations.js","webpack:///./~/mathjs/lib/function/probability/combinations.js","webpack:///./~/mathjs/lib/function/relational/compare.js","webpack:///./~/mathjs/lib/function/relational/deepEqual.js","webpack:///./~/mathjs/lib/function/relational/equal.js","webpack:///./~/mathjs/lib/function/relational/larger.js","webpack:///./~/mathjs/lib/function/relational/largerEq.js","webpack:///./~/mathjs/lib/function/relational/smaller.js","webpack:///./~/mathjs/lib/function/relational/smallerEq.js","webpack:///./~/mathjs/lib/function/relational/unequal.js","webpack:///./~/mathjs/lib/function/statistics/min.js","webpack:///./~/mathjs/lib/function/statistics/max.js","webpack:///./~/mathjs/lib/function/statistics/mean.js","webpack:///./~/mathjs/lib/function/statistics/median.js","webpack:///./~/mathjs/lib/function/statistics/prod.js","webpack:///./~/mathjs/lib/function/statistics/std.js","webpack:///./~/mathjs/lib/function/statistics/sum.js","webpack:///./~/mathjs/lib/function/statistics/var.js","webpack:///./~/mathjs/lib/function/trigonometry/acos.js","webpack:///./~/mathjs/lib/function/trigonometry/acosh.js","webpack:///./~/mathjs/lib/function/trigonometry/acot.js","webpack:///./~/mathjs/lib/function/trigonometry/acoth.js","webpack:///./~/mathjs/lib/function/trigonometry/acsc.js","webpack:///./~/mathjs/lib/function/trigonometry/acsch.js","webpack:///./~/mathjs/lib/function/trigonometry/asec.js","webpack:///./~/mathjs/lib/function/trigonometry/asech.js","webpack:///./~/mathjs/lib/function/trigonometry/asin.js","webpack:///./~/mathjs/lib/function/trigonometry/asinh.js","webpack:///./~/mathjs/lib/function/trigonometry/atan.js","webpack:///./~/mathjs/lib/function/trigonometry/atan2.js","webpack:///./~/mathjs/lib/function/trigonometry/atanh.js","webpack:///./~/mathjs/lib/function/trigonometry/cos.js","webpack:///./~/mathjs/lib/function/trigonometry/cosh.js","webpack:///./~/mathjs/lib/function/trigonometry/cot.js","webpack:///./~/mathjs/lib/function/trigonometry/coth.js","webpack:///./~/mathjs/lib/function/trigonometry/csc.js","webpack:///./~/mathjs/lib/function/trigonometry/csch.js","webpack:///./~/mathjs/lib/function/trigonometry/sec.js","webpack:///./~/mathjs/lib/function/trigonometry/sech.js","webpack:///./~/mathjs/lib/function/trigonometry/sin.js","webpack:///./~/mathjs/lib/function/trigonometry/sinh.js","webpack:///./~/mathjs/lib/function/trigonometry/tan.js","webpack:///./~/mathjs/lib/function/trigonometry/tanh.js","webpack:///./~/mathjs/lib/function/units/to.js","webpack:///./~/mathjs/lib/function/utils/clone.js","webpack:///./~/mathjs/lib/function/utils/filter.js","webpack:///./~/mathjs/lib/function/utils/format.js","webpack:///./~/mathjs/lib/function/utils/import.js","webpack:///./~/mathjs/lib/function/utils/map.js","webpack:///./~/mathjs/lib/function/utils/print.js","webpack:///./~/mathjs/lib/function/utils/sort.js","webpack:///./~/mathjs/lib/function/utils/typeof.js","webpack:///./~/mathjs/lib/function/utils/forEach.js","webpack:///./~/lodash/internal/arrayCopy.js","webpack:///./~/lodash/internal/arrayEach.js","webpack:///./~/lodash/internal/baseAssign.js","webpack:///./~/lodash/internal/baseForOwn.js","webpack:///./~/lodash/internal/initCloneArray.js","webpack:///./~/lodash/internal/initCloneByTag.js","webpack:///./~/lodash/internal/initCloneObject.js","webpack:///./~/lodash/lang/isArray.js","webpack:///./~/lodash/lang/isObject.js","webpack:///./~/lodash/utility/identity.js","webpack:///./~/mathjs/lib/util/NumberFormatter.js","webpack:///./~/mathjs/lib/util/bignumber.js","webpack:///./~/mathjs/lib/util/array.js","webpack:///./~/mathjs/lib/version.js","webpack:///./~/mathjs/lib/error/ArgumentsError.js","webpack:///./~/mathjs/lib/error/DimensionError.js","webpack:///./~/mathjs/lib/error/IndexError.js","webpack:///./~/mathjs/lib/error/UnsupportedTypeError.js","webpack:///./~/mathjs/lib/util/index.js","webpack:///./~/mathjs/lib/util/string.js","webpack:///./~/mathjs/lib/expression/node/ArrayNode.js","webpack:///./~/mathjs/lib/expression/node/AssignmentNode.js","webpack:///./~/mathjs/lib/expression/node/BlockNode.js","webpack:///./~/mathjs/lib/expression/node/ConditionalNode.js","webpack:///./~/mathjs/lib/expression/node/ConstantNode.js","webpack:///./~/mathjs/lib/expression/node/IndexNode.js","webpack:///./~/mathjs/lib/expression/node/FunctionAssignmentNode.js","webpack:///./~/mathjs/lib/expression/node/FunctionNode.js","webpack:///./~/mathjs/lib/expression/node/Node.js","webpack:///./~/mathjs/lib/expression/node/OperatorNode.js","webpack:///./~/mathjs/lib/expression/node/RangeNode.js","webpack:///./~/mathjs/lib/expression/node/SymbolNode.js","webpack:///./~/mathjs/lib/expression/node/UpdateNode.js","webpack:///./~/mathjs/lib/expression/docs/constants/e.js","webpack:///./~/mathjs/lib/expression/docs/constants/false.js","webpack:///./~/mathjs/lib/expression/docs/constants/i.js","webpack:///./~/mathjs/lib/expression/docs/constants/Infinity.js","webpack:///./~/mathjs/lib/expression/docs/constants/LN2.js","webpack:///./~/mathjs/lib/expression/docs/constants/LN10.js","webpack:///./~/mathjs/lib/expression/docs/constants/LOG2E.js","webpack:///./~/mathjs/lib/expression/docs/constants/LOG10E.js","webpack:///./~/mathjs/lib/expression/docs/constants/NaN.js","webpack:///./~/mathjs/lib/expression/docs/constants/null.js","webpack:///./~/mathjs/lib/expression/docs/constants/pi.js","webpack:///./~/mathjs/lib/expression/docs/constants/phi.js","webpack:///./~/mathjs/lib/expression/docs/constants/SQRT1_2.js","webpack:///./~/mathjs/lib/expression/docs/constants/SQRT2.js","webpack:///./~/mathjs/lib/expression/docs/constants/tau.js","webpack:///./~/mathjs/lib/expression/docs/constants/true.js","webpack:///./~/mathjs/lib/expression/docs/constants/version.js","webpack:///./~/mathjs/lib/function/utils ^\\.\\/.*$","webpack:///./~/mathjs/lib/expression/transform/error.transform.js","webpack:///./~/mathjs/lib/util/boolean.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/abs.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/add.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/ceil.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/cube.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/divide.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/dotDivide.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/dotMultiply.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/dotPow.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/exp.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/fix.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/floor.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/gcd.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/lcm.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/log.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/log10.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/mod.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/multiply.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/norm.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/nthRoot.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/pow.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/round.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/sign.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/sqrt.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/square.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/subtract.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/unaryMinus.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/unaryPlus.js","webpack:///./~/mathjs/lib/expression/docs/function/arithmetic/xgcd.js","webpack:///./~/mathjs/lib/expression/docs/function/bitwise/bitAnd.js","webpack:///./~/mathjs/lib/expression/docs/function/bitwise/bitNot.js","webpack:///./~/mathjs/lib/expression/docs/function/bitwise/bitOr.js","webpack:///./~/mathjs/lib/expression/docs/function/bitwise/bitXor.js","webpack:///./~/mathjs/lib/expression/docs/function/bitwise/leftShift.js","webpack:///./~/mathjs/lib/expression/docs/function/bitwise/rightArithShift.js","webpack:///./~/mathjs/lib/expression/docs/function/bitwise/rightLogShift.js","webpack:///./~/mathjs/lib/expression/docs/function/complex/arg.js","webpack:///./~/mathjs/lib/expression/docs/function/complex/conj.js","webpack:///./~/mathjs/lib/expression/docs/function/complex/re.js","webpack:///./~/mathjs/lib/expression/docs/function/complex/im.js","webpack:///./~/mathjs/lib/expression/docs/function/construction/bignumber.js","webpack:///./~/mathjs/lib/expression/docs/function/construction/boolean.js","webpack:///./~/mathjs/lib/expression/docs/function/construction/complex.js","webpack:///./~/mathjs/lib/expression/docs/function/construction/index.js","webpack:///./~/mathjs/lib/expression/docs/function/construction/matrix.js","webpack:///./~/mathjs/lib/expression/docs/function/construction/number.js","webpack:///./~/mathjs/lib/expression/docs/function/construction/string.js","webpack:///./~/mathjs/lib/expression/docs/function/construction/unit.js","webpack:///./~/mathjs/lib/expression/docs/function/expression/eval.js","webpack:///./~/mathjs/lib/expression/docs/function/expression/help.js","webpack:///./~/mathjs/lib/expression/docs/function/logical/and.js","webpack:///./~/mathjs/lib/expression/docs/function/logical/not.js","webpack:///./~/mathjs/lib/expression/docs/function/logical/or.js","webpack:///./~/mathjs/lib/expression/docs/function/logical/xor.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/concat.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/cross.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/det.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/diag.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/dot.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/eye.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/flatten.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/inv.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/ones.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/range.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/resize.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/size.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/squeeze.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/subset.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/trace.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/transpose.js","webpack:///./~/mathjs/lib/expression/docs/function/matrix/zeros.js","webpack:///./~/mathjs/lib/expression/docs/function/probability/combinations.js","webpack:///./~/mathjs/lib/expression/docs/function/probability/factorial.js","webpack:///./~/mathjs/lib/expression/docs/function/probability/gamma.js","webpack:///./~/mathjs/lib/expression/docs/function/probability/permutations.js","webpack:///./~/mathjs/lib/expression/docs/function/probability/pickRandom.js","webpack:///./~/mathjs/lib/expression/docs/function/probability/random.js","webpack:///./~/mathjs/lib/expression/docs/function/probability/randomInt.js","webpack:///./~/mathjs/lib/expression/docs/function/relational/compare.js","webpack:///./~/mathjs/lib/expression/docs/function/relational/deepEqual.js","webpack:///./~/mathjs/lib/expression/docs/function/relational/equal.js","webpack:///./~/mathjs/lib/expression/docs/function/relational/larger.js","webpack:///./~/mathjs/lib/expression/docs/function/relational/largerEq.js","webpack:///./~/mathjs/lib/expression/docs/function/relational/smaller.js","webpack:///./~/mathjs/lib/expression/docs/function/relational/smallerEq.js","webpack:///./~/mathjs/lib/expression/docs/function/relational/unequal.js","webpack:///./~/mathjs/lib/expression/docs/function/statistics/max.js","webpack:///./~/mathjs/lib/expression/docs/function/statistics/mean.js","webpack:///./~/mathjs/lib/expression/docs/function/statistics/median.js","webpack:///./~/mathjs/lib/expression/docs/function/statistics/min.js","webpack:///./~/mathjs/lib/expression/docs/function/statistics/prod.js","webpack:///./~/mathjs/lib/expression/docs/function/statistics/std.js","webpack:///./~/mathjs/lib/expression/docs/function/statistics/sum.js","webpack:///./~/mathjs/lib/expression/docs/function/statistics/var.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/acos.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/acosh.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/acot.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/acoth.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/acsc.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/acsch.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/asec.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/asech.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/asin.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/asinh.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/atan.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/atanh.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/atan2.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/cos.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/cosh.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/cot.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/coth.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/csc.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/csch.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/sec.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/sech.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/sin.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/sinh.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/tan.js","webpack:///./~/mathjs/lib/expression/docs/function/trigonometry/tanh.js","webpack:///./~/mathjs/lib/expression/docs/function/units/to.js","webpack:///./~/mathjs/lib/expression/docs/function/utils/clone.js","webpack:///./~/mathjs/lib/expression/docs/function/utils/map.js","webpack:///./~/mathjs/lib/expression/docs/function/utils/filter.js","webpack:///./~/mathjs/lib/expression/docs/function/utils/forEach.js","webpack:///./~/mathjs/lib/expression/docs/function/utils/format.js","webpack:///./~/mathjs/lib/expression/docs/function/utils/import.js","webpack:///./~/mathjs/lib/expression/docs/function/utils/sort.js","webpack:///./~/mathjs/lib/expression/docs/function/utils/typeof.js","webpack:///./~/mathjs/lib/function/probability/distribution.js","webpack:///./~/mathjs/lib/util/types.js","webpack:///./~/lodash/internal/baseCopy.js","webpack:///./~/lodash/internal/getSymbols.js","webpack:///./~/lodash/lang/isNative.js","webpack:///./~/lodash/object/keys.js","webpack:///./~/lodash/internal/baseFor.js","webpack:///./~/lodash/internal/bufferClone.js","webpack:///./~/lodash/internal/isLength.js","webpack:///./~/lodash/internal/isObjectLike.js","webpack:///./~/mathjs/lib/util/function.js","webpack:///./~/mathjs/~/decimal.js/decimal.js","webpack:///./~/mathjs/lib/expression/keywords.js","webpack:///./~/mathjs/lib/expression/operators.js","webpack:///./~/mathjs/lib/util/latex.js","webpack:///./~/lodash/utility/constant.js","webpack:///./~/lodash/internal/toObject.js","webpack:///./~/lodash/internal/shimKeys.js","webpack:///./~/lodash/string/escapeRegExp.js","webpack:///./~/lodash/internal/createBaseFor.js","webpack:///./~/lodash/internal/baseToString.js","webpack:///./~/lodash/lang/isArguments.js","webpack:///./~/lodash/internal/isIndex.js","webpack:///./~/lodash/object/keysIn.js","webpack:///./~/lodash/support.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;KCtCY,MAAM,+CAAM,CAAgB;;AAExC,OAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;;AAEpD,oBAAO,CAAC,CAAoC,CAAC,C;;;;;;;;;;SCE7B,MAAM,GAAN,MAAM;SAoKN,OAAO,GAAP,OAAO;;;;;mCA1KsF,CAAQ;;KAA7G,MAAM,WAAN,MAAM;KAAE,KAAK,WAAL,KAAK;KAAE,MAAM,WAAN,MAAM;KAAE,MAAM,WAAN,MAAM;KAAE,UAAU,WAAV,UAAU;KAAE,UAAU,WAAV,UAAU;KAAE,UAAU,WAAV,UAAU;KAAE,MAAM,WAAN,MAAM;KAAE,SAAS,WAAT,SAAS;KAAE,QAAQ,WAAR,QAAQ;;KAC/F,IAAI,uCAAM,CAAQ;;KAClB,IAAI,uCAAM,CAAM;;AACvB,OAAM,CAAC,IAAI,GAAG,IAAI,CAAC;;KACZ,SAAS,uCAAM,CAAuB;;AAEtC,UAAS,MAAM,CAAC,QAAQ,EAAE;;AAE/B,OAAM,GAAG,GAAG,EAAE,CAAC;AACf,OAAM,KAAK,GAAG,IAAI,GAAG,GAAG,CAAC;;AAEzB,OAAI,aAAa,GAAG,EAAE,CAAC;AACvB,gBAAa,CAAC,UAAU,GAAG,IAAI,CAAC;AAChC,gBAAa,CAAC,SAAS,GAAG,KAAK,CAAC;AAChC,gBAAa,CAAC,SAAS,GAAG,IAAI,CAAC;AAC/B,gBAAa,CAAC,cAAc,GAAG,KAAK,CAAC;AACrC,gBAAa,CAAC,UAAU,GAAG,KAAK,CAAC;AACjC,gBAAa,CAAC,YAAY,GAAG,KAAK,CAAC;AACnC,gBAAa,CAAC,cAAc,GAAG,KAAK,CAAC;AACrC,gBAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;AAC/B,gBAAa,CAAC,aAAa,GAAG,KAAK,CAAC;AACpC,gBAAa,CAAC,kBAAkB,GAAG,KAAK,CAAC;AACzC,gBAAa,CAAC,OAAO,GAAG,KAAK,CAAC;AAC9B,gBAAa,CAAC,WAAW,GAAG,KAAK,CAAC;AAClC,gBAAa,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,EACvC,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;;AAE1C,OAAI,YAAY,CAAC;;AAEjB,OAAI,YAAY,GAAG;AACjB,WAAM,EAAE;AACN,UAAG,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACnB,UAAG,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,UAAU,EAAE,CAAC,EAAE,MAAM,CAAC,WAAW,EAAE;MACrD;AACD,YAAO,EAAE,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;IACtB,CAAC;;;AAGF,OAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AACzB,WAAM,EAAE;AACN,cAAO,EAAE,QAAQ;AACjB,cAAO,EAAE,aAAa;MACvB;AACD,UAAK,EAAE,YAAY;AACnB,mBAAc,EAAE,IAAI;AACpB,WAAM,EAAE;AACN,gBAAS,EAAE,CAAC;MACb;IACF,CAAC,CAAC;;AAEH,SAAM,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;;AAE/B,OAAI,MAAM,GAAG,CAAC,CAAC;AACf,OAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,QAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CACpB,MAAM,CAAC,SAAS,CAAE,MAAM,CAAC,UAAU,GAAG,GAAG,EAAE,MAAM,CAAC,WAAW,GAAG,QAAQ,GAAG,EAAE,EAAE,MAAM,CAAC,UAAU,GAAG,GAAG,EAAE,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CACxI,CAAC,CAAC;;AAEH,OAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,OAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,UAAS,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE;AACjG,YAAO,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5E,CAAC,CAAC;;AAEH,QAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;AAE/B,OAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,GAAG,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,KAAK,EAAC,CAAC,CAAC;;AAEtG,QAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAC9B,QAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,UAAU,CAAC,MAAM,CAAC;AACtC,WAAM,EAAE,EAAC,CAAC,EAAE,MAAM,CAAC,UAAU,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,EAAC;AAC3C,UAAK,EAAE,IAAI;AACX,cAAS,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;;AAEJ,OAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,UAAS,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE;AAC5E,YAAO,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;AACzE,YAAO,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;IACvF,CAAC,CAAC;;AAEH,QAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;;AAE/B,SAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;;AAEnB,aAAU,CAAC,YAAW;AACpB,WAAM,CAAC,MAAM,CAAC,SAAS,GAAG,GAAG;IAC9B,EAAE,IAAI,CAAC,CAAC;;AAET,aAAU,CAAC,YAAW;AACpB,WAAM,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;AAC5B,SAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,UAAS,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE;AAC9E,cAAO,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;AACzE,cAAO,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,WAAW,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC;MACrF,CAAC,CAAC;;AAEH,UAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAChC,EAAE,IAAI,CAAC,CAAC;;AAET,aAAU,CAAC,YAAW;AACpB,WAAM,CAAC,MAAM,CAAC,SAAS,GAAG,GAAG;IAC9B,EAAE,IAAI,CAAC,CAAC;;AAET,aAAU,CAAC,YAAW;AACpB,WAAM,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;AAC5B,SAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,UAAS,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE;AACjG,cAAO,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC;MAC5E,CAAC,CAAC;;AAEH,UAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAChC,EAAE,IAAI,CAAC,CAAC;;AAET,aAAU,CAAC,YAAW;AACpB,WAAM,CAAC,MAAM,CAAC,SAAS,GAAG,GAAG;IAC9B,EAAE,IAAI,CAAC,CAAC;;AAET,SAAM,CAAC,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,YAAW,EAE3C,CAAC,CAAC;;AAEH,YAAS,WAAW,CAAC,MAAM,EAAE;AAC3B,YAAO,SAAS,CAAC,MAAM,CAAC,CAAC;IAC1B;;AAED,YAAS,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE;AACrC,SAAI,OAAO,CAAC,KAAK,EAAE;AACf,cAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;;AAE9B,aAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;AAEtB,WAAI,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;AAEhD,YAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,aAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACrB,iBAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC1B,aAAI,CAAC,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;QAC7B;MACJ;IACF;;AAED,SAAM,CAAC,aAAa,GAAG,YAAuB;SAAd,MAAM,gCAAG,GAAG;;AAC1C,UAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,EAAE,CAAC,EAAE;AAC/B,aAAM,CAAC,MAAM,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;MACpC;AACD,WAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAC7B;;AAGD,SAAM,CAAC,QAAQ,GAAG,YAAW;AAC3B,WAAM,CAAC,OAAO,GAAG,KAAK,CAAC;;AAEvB,iBAAY,GAAG,MAAM,CAAC,MAAM,CAAC;AAC3B,aAAM,EAAE;AACN,gBAAO,EAAE,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC;AAC1C,gBAAO,EAAE,SAAS,CAAC,aAAa,CAAC;QAClC;AACD,YAAK,EAAE,SAAS,CAAC,YAAY,CAAC;AAC9B,qBAAc,EAAE,IAAI;MACrB,CAAC,CAAC;;AAEH,gBAAW,CAAC,YAAY,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;;AAE/C,WAAM,CAAC,YAAY,GAAG,YAAY,CAAC;IACpC,CAAC;;AAGF,SAAM,CAAC,MAAM,GAAG,MAAM,CAAC;AACvB,SAAM,CAAC,IAAI,GAAG,IAAI,CAAC;EAEpB;;AAEM,UAAS,OAAO,CAAC,SAAS,EAAE,E;;;;;;AC1KnC;;AAEA;AACA;AACA;AACA;AACA,gDAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;ACpBA;AACA,8BAA6B,6BAA6B,KAAK,cAAc,yDAAyD,gBAAgB,KAAK,gBAAgB,yBAAyB,KAAK,Q;;;;;;ACDzM;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,sBAAsB;AACtC;AACA;AACA,mBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA,kBAAiB,2BAA2B;AAC5C;AACA;AACA,SAAQ,uBAAuB;AAC/B;AACA;AACA,IAAG;AACH;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA,iCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wDAAuD;AACvD;;AAEA,8BAA6B,mBAAmB;;AAEhD;;AAEA;;AAEA;AACA;AACA;;;;;;;ACzNA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,iBAAiB;AACjC;AACA;AACA,yCAAwC,gBAAgB;AACxD,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA,aAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,aAAa;AACpC,qBAAoB,aAAa;AACjC;AACA,+BAA8B,aAAa;AAC3C,iCAAgC,uBAAuB;AACvD;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,KAAK;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4CAA2C,2CAA2C;AACtF;AACA,4CAA2C,yCAAyC;;AAEpF;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,aAAa,GAAG,eAAe,GAAG,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjiBAAgB;AAChB,iBAAgB,UAAU;AAC1B;AACA;AACA,+B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA0B,iCAAiC;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,iBAAgB;AAChB,iBAAgB,UAAU;AAC1B;AACA;AACA;;AAEA,iDAAgD,iBAAiB;;AAEjE,wBAAuB,oBAAoB;AAC3C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gDAA+C,iBAAiB;;AAEhE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,iBAAgB;AAChB,gBAAe,QAAQ;AACvB,iBAAgB,UAAU;AAC1B;AACA;AACA;;AAEA,oDAAmD,iBAAiB;;AAEpE,wBAAuB,oBAAoB;AAC3C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mDAAkD,iBAAiB;;AAEnE;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,UAAU;AACzB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,UAAU;AACzB,gBAAe,QAAQ;AACvB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,kCAAkC;AAC7D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,OAAO;AACtB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,KAAK;AACpB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,KAAK;AACpB,gBAAe,QAAQ;AACvB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,iCAAiC;AAC5D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,OAAO;AACtB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,WAAW;AAC1B,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,WAAW;AAC1B,gBAAe,QAAQ;AACvB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,iCAAiC;AAC5D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,OAAO;AACtB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA,4BAA2B,iCAAiC;AAC5D;AACA;AACA;;AAEA;AACA,wEAAuE,sBAAsB,EAAE;AAC/F,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,iBAAgB,OAAO;AACvB;AACA;AACA;;AAEA,wBAAuB,iCAAiC;AACxD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,iBAAgB,aAAa;AAC7B;AACA;AACA;;AAEA,wBAAuB,iCAAiC;AACxD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,iBAAgB,YAAY;AAC5B;AACA;AACA;;AAEA,wBAAuB,iCAAiC;AACxD;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mD;AACA,2D;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,gBAAe,WAAW;AAC1B,gBAAe,SAAS;AACxB,gBAAe,WAAW;AAC1B,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,oBAAoB;AAC3C;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA;AACA,uBAAsB,aAAa;AACnC,sB;AACA,uBAAsB,aAAa;AACnC,uBAAsB,iB;AACtB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,QAAQ;AACvB;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,UAAU;AACzB,iBAAgB,MAAM;AACtB;;AAEA;AACA;AACA;AACA,iBAAgB,MAAM;AACtB,iBAAgB,KAAK;AACrB,kBAAiB,MAAM;AACvB;;AAEA;AACA;AACA;AACA,iBAAgB,MAAM;AACtB,iBAAgB,WAAW;AAC3B,kBAAiB,MAAM;AACvB;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,4BAA4B;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C,gCAA+B,mBAAmB;AAClD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAmB,mBAAmB;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,2CAA0C,qBAAqB;AAC/D,+CAA8C,qBAAqB;AACnE;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA,iB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAuB,qBAAqB;AAC5C;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,qBAAqB;AAChD;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,KAAK;AACpB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA,+B;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,uBAAuB;AAC1C;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,SAAS;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sEAAqE,kBAAkB;AACvF;;AAEA,wBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB,iBAAgB,OAAO;AACvB;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,kBAAkB;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAmB,kBAAkB;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA,wBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,kBAAkB;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA,yBAAwB;AACxB;;AAEA,wBAAuB,kBAAkB;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,KAAK;AACpB,gBAAe,UAAU;AACzB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT,0BAAyB;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,kC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA,6BAA4B;AAC5B,6BAA4B;AAC5B,uBAAsB,4BAA4B;AAClD;AACA;;AAEA,wBAAuB,iBAAiB;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA;;AAEA,wBAAuB,qBAAqB;AAC5C;;AAEA,6B;AACA,2B;AACA,cAAa,sB;AACb,2B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA;AACA,6BAA4B,aAAa;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB,WAAW;AAC3B;AACA;AACA;;AAEA;AACA;AACA,kCAAiC;AACjC;AACA,kCAAiC;;AAEjC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,OAAO;AACtB;AACA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,WAAW;AAC1B,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT,+BAA8B;AAC9B;AACA;;AAEA;AACA;AACA,wB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT,+BAA8B;AAC9B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB;AAChB,iBAAgB,gBAAgB;AAChC;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA,6C;AACA;AACA;AACA,sBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,gBAAgB;AAC/B,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA,8CAA6C;AAC7C;;AAEA;AACA,uEAAsE,2BAA2B;AACjG;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA,6DAA4D,2BAA2B;AACvF;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA,2DAA0D,eAAe;;AAEzE;AACA,2DAA0D,eAAe;;AAEzE;AACA,yDAAwD,eAAe;;AAEvE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,eAAc,MAAM;AACpB,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,eAAc,MAAM;AACpB,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,eAAc,MAAM;AACpB,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,eAAc,MAAM;AACpB,eAAc,KAAK;AACnB,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,eAAc,MAAM;AACpB,eAAc,KAAK;AACnB,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB,gBAAe,QAAQ;AACvB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA,wBAAuB,iBAAiB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB,gBAAe,KAAK;AACpB,kBAAiB;AACjB;AACA;AACA,gCAA+B;AAC/B;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA,mD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB,MAAM;AACtB;AACA;AACA,uCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAmB,iCAAiC;AACpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uDAAsD,8BAA8B;;AAEpF;AACA;AACA,oBAAmB,+BAA+B;AAClD;AACA;;AAEA;AACA,oBAAmB,+BAA+B;AAClD;AACA;AACA;;AAEA;AACA;AACA,wDAAuD,+BAA+B;;AAEtF;AACA,qDAAoD,4BAA4B;;AAEhF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,4BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA,wBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA,wBAAuB,mBAAmB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA,gBAAe,OAAO;AACtB;AACA;AACA,wBAAuB,mBAAmB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,eAAc,oBAAoB;AAClC,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,eAAc,oBAAoB;AAClC,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,eAAc,oBAAoB;AAClC,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,eAAc,oBAAoB;AAClC,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,eAAc,oBAAoB;AAClC,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,eAAc,oBAAoB;AAClC,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,eAAc,oBAAoB;AAClC,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,gBAAe;AACf,eAAc,oBAAoB;AAClC,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,gBAAe;AACf,eAAc,oBAAoB;AAClC,gBAAe;AACf,gBAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,gBAAe;AACf,gBAAe;AACf,eAAc,oBAAoB;AAClC,gBAAe;AACf,gBAAe;AACfiBAAgB;AAChB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA,wBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAuB,kBAAkB;AACzC;AACA;;AAEA;AACA,gCAA+B,sBAAsB;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB,gBAAe,OAAO;AACtB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,4BAA2B,kBAAkB;AAC7C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oCAAmC,sBAAsB;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,iBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA0B;AAC1B,2BAA0B;AAC1B,oCAAmC;AACnC,kCAAiC;AACjC,yBAAwB;AACxB,wBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB,gBAAe,YAAY;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA,iB;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6DAA4D,+BAA+B,wBAAwB,EAAE,UAAU;;AAE/H;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA,wBAAuB,kBAAkB;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,KAAK;AACrB;AACA;AACA;;AAEA,0B;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,KAAK;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,0B;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,KAAK;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,KAAK;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB,WAAW;AAClC;AACA;AACA;;AAEA;AACA;;AAEA,wB;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA2C;AAC3C;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,iBAAgB,UAAU;AAC1B;AACA;AACA,uCAAsC,iBAAiB;AACvD;AACA;AACA;AACA;;AAEA,0BAAyB,YAAY;AACrC;;AAEA,iCAAgC,kBAAkB;AAClD;;AAEA;AACA;AACA,2E;;AAEA;AACA;;AAEA,2CAA0C,0CAA0C;;AAEpF;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,UAAU;AAC1B;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAAyB,sDAAsD;AAC/E;AACA,0BAAyB;AACzB;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB,YAAY;AACjC,0BAAyB,eAAe;AACxC;AACA;AACA;AACA,yFAAwF,6BAA6B;AACrH;AACA;;AAEA,0BAAyB,eAAe;AACxC;AACA;AACA;AACA,yFAAwF,6BAA6B;;AAErH;AACA;AACA,6FAA4F,6BAA6B;AACzH;;AAEA;AACA;AACA,6FAA4F,6BAA6B;AACzH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2CAA0C,mEAAmE;AAC7G;;AAEA;;AAEA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,UAAU;AAC1B;AACA;AACA,+CAA8C,0BAA0B;;AAExE,wBAAuB,YAAY;AACnC;AACA;AACA,8BAA6B,+EAA+E;AAC5G,iDAAgD,UAAU,yCAAyC,iBAAiB;;AAEpH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAoC,eAAe;AACnD,kE;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,cAAa;;AAEb,sF;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;;AAET,sF;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,sBAAqB,mCAAmC;AACxD;AACA;AACA,UAAS;;AAET;AACA;AACA,sBAAqB,mCAAmC;AACxD;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,QAAQ;AACvB,gBAAe,OAAO;AACtB,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB,UAAU;AAC1B;AACA;AACA,0CAAyC,oBAAoB;AAC7D,4CAA2C,iBAAiB;;AAE5D;AACA;AACA,UAAS;;AAET;;AAEA;;AAEA;AACA;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,KAAK;AACrB;AACA;AACA;;AAEA;AACA,wBAAuB,qBAAqB;AAC5C;AACA,4C;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,KAAK;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,OAAO;AACvB;AACA;AACA,uB;AACA,mBAAkB,aAAa;AAC/B,mBAAkB;AAClB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA,6CAA4C,aAAa;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA,qBAAoB;AACpB,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA,EAAC;;AAED,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa,aAAa,GAAG,eAAe,GAAG,cAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,KAAK;AACpB;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;AACA,0BAAyB,qCAAqC;AAC9D,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA,uBAAsB,aAAa;AACnC;AACA;AACA;;AAEA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,KAAK;AACpB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA,UAAS;AACT,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,iBAAgB,QAAQ;AACxB;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gD;AACA;AACA;AACA,cAAa;;AAEb,gD;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA2B,eAAe;AAC1C;AACA;AACA;;AAEA;AACA;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,2C;AACA,mB;AACA;AACA;AACA,cAAa;AACb,mB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,c;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA,4BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B,gBAAe,iBAAiB;AAChC;AACA;AACA;;AAEA,wBAAuB,wBAAwB;AAC/C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,gCAA+B,0BAA0B;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,mBAAmB;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+D;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iE;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,oCAAmC,0BAA0B;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAmB,mBAAmB;AACtC;;AAEA;AACA;;AAEA;;AAEA,wBAAuB,0BAA0B;AACjD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAuB,mBAAmB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAmB,mBAAmB;AACtC;;AAEA;AACA;;AAEA;AACA;AACA,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;;AAEA,wBAAuB,mBAAmB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,iBAAiB;AAChC;AACA;AACA;;AAEA,wBAAuB,mBAAmB;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA,wBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA,oBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;;AAEA,wBAAuB,uBAAuB;AAC9C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,UAAU;AACzB,gBAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB,qBAAqB;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,cAAc;AACzD,4CAA2C,cAAc;AACzD;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,iBAAgB,MAAM;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,WAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2C;AACA,mB;AACA;AACA;AACA,cAAa;AACb,mB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA,mDAAkD,cAAc;AAChE,mDAAkD,cAAc;;AAEhE;AACA;;AAEA;AACA;AACA;AACA,gBAAe,WAAW;AAC1B;AACA;AACA;AACA;;AAEA;AACA,wC;AACA,0D;AACA;;AAEA;AACA,0C;AACA,8D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,WAAW;AAC1B,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8D;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;;AAEA;AACA,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA,oBAAmB,mBAAmB;AACtC;;AAEA,oBAAmB,wBAAwB;AAC3C;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,gBAAe,KAAK;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,WAAW;AAC1B,gBAAe,KAAK;AACpB,iBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,WAAW;AAC1B,gBAAe,KAAK;AACpB,iBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;;AAEA,wBAAuB,0BAA0B;AACjD;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAe,WAAW;AAC1B,gBAAe,OAAO;AACtB,iBAAgB,aAAa;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,EAAC;;;AAGD,EAAC;;;AAGD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC,I;;;;;;ACzuPD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,mBAAmB,wEAAwE,6LAA6L,eAAe,6BAA6B,0XAA0X,+GAA+G,wBAAwB,oBAAoB,2DAA2D,4JAA4J,qBAAqB,oFAAoF,mCAAmC,mCAAmC,oBAAoB,6BAA6B,mFAAmF,mBAAmB,uBAAuB,wBAAwB,oCAAoC,kCAAkC,qCAAqC,uCAAuC,qEAAqE,yDAAyD,wCAAwC,6DAA6D,8CAA8C,0CAA0C,aAAa,0BAA0B,aAAa,mCAAmC,SAAS,+GAA+G,yFAAyF,4BAA4B,IAAI,0BAA0B,IAAI,6BAA6B,sCAAsC,0BAA0B,wBAAwB,4CAA4C,8CAA8C,IAAI,OAAO,sHAAsH,UAAU,SAAS,oEAAoE,yCAAyC,qCAAqC,+CAA+C,2CAA2C,2BAA2B,oDAAoD,wBAAwB,yCAAyC,0FAA0F,qEAAqE,yDAAyD,sCAAsC,2DAA2D,4CAA4C,0CAA0C,qDAAqD,wBAAwB,0CAA0C,oFAAoF,kFAAkF,2EAA2E,+CAA+C,gFAAgF,qDAAqD,0CAA0C,aAAa,0BAA0B,aAAa,mCAAmC,SAAS,iFAAiF,wDAAwD,0CAA0C,0EAA0E,wCAAwC,+CAA+C,iBAAiB,6MAA6M,wCAAwC,8FAA8F,+CAA+C,iBAAiB,uCAAuC,4IAA4I,4CAA4C,kCAAkC,wCAAwC,0EAA0E,uCAAuC,4DAA4D,wIAAwI,uCAAuC,wCAAwC,oJAAoJ,wCAAwC,oEAAoE,0DAA0D,oeAAoe,sHAAsH,eAAe,yBAAyB,iBAAiB,uDAAuD,kEAAkE,eAAe,WAAW,GAAG,uBAAuB,WAAW,SAAS,UAAU,0DAA0D,eAAe,kBAAkB,iBAAiB,oFAAoF,6DAA6D,eAAe,qBAAqB,iBAAiB,MAAM,iBAAiB,WAAW,8BAA8B,WAAW,iBAAiB,mBAAmB,4BAA4B,iBAAiB,mEAAmE,eAAe,2BAA2B,iBAAiB,6GAA6G,uDAAuD,mEAAmE,2tBAA2tB,kJAAkJ,4BAA4B,qDAAqD,wCAAwC,yDAAyD,sDAAsD,2DAA2D,8EAA8E,4HAA4H,kDAAkD,6BAA6B,gDAAgD,wEAAwE,iDAAiD,oGAAoG,2DAA2D,0KAA0K,4DAA4D,uBAAuB,4BAA4B,8EAA8E,KAAK,gDAAgD,yFAAyF,oBAAoB,6TAA6T,2DAA2D,qFAAqF,oDAAoD,IAAI,qDAAqD,IAAI,+FAA+F,eAAe,uBAAuB,iBAAiB,mBAAmB,uDAAuD,eAAe,uBAAuB,iBAAiB,mBAAmB,sCAAsC,4CAA4C,uNAAuN,eAAe,gDAAgD,iBAAiB,kCAAkC,wCAAwC,qEAAqE,eAAe,iDAAiD,iBAAiB,mCAAmC,yCAAyC,0DAA0D,+CAA+C,6DAA6D,kKAAkK,iGAAiG,+DAA+D,UAAU,oDAAoD,6GAA6G,uCAAuC,8DAA8D,+BAA+B,sFAAsF,SAAS,gEAAgE,uFAAuF,4BAA4B,sDAAsD,2DAA2D,kLAAkL,wBAAwB,4DAA4D,+BAA+B,uCAAuC,8DAA8D,yBAAyB,wFAAwF,iEAAiE,6DAA6D,cAAc,wCAAwC,WAAW,KAAK,WAAW,qDAAqD,SAAS,4CAA4C,gGAAgG,+DAA+D,+GAA+G,IAAI,uCAAuC,qLAAqL,oDAAoD,4EAA4E,IAAI,KAAK,uBAAuB,8HAA8H,8BAA8B,mBAAmB,8CAA8C,8DAA8D,0BAA0B,qCAAqC,mCAAmC,IAAI,uCAAuC,uBAAuB,+BAA+B,kEAAkE,sDAAsD,mCAAmC,IAAI,KAAK,uBAAuB,wBAAwB,oEAAoE,mCAAmC,IAAI,KAAK,uBAAuB,yBAAyB,yDAAyD,6DAA6D,mCAAmC,+DAA+D,QAAQ,8BAA8B,iNAAiN,IAAI,qCAAqC,sIAAsI,oCAAoC,IAAI,sCAAsC,8DAA8D,sCAAsC,+DAA+D,iDAAiD,mCAAmC,IAAI,KAAK,uBAAuB,mBAAmB,sCAAsC,sBAAsB,8UAA8U,gKAAgK,eAAe,6CAA6C,iBAAiB,uDAAuD,qDAAqD,eAAe,8CAA8C,iBAAiB,yDAAyD,4CAA4C,wCAAwC,+CAA+C,qIAAqI,0CAA0C,0OAA0O,0EAA0E,KAAK,oGAAoG,gKAAgK,mBAAmB,oEAAoE,6CAA6C,mCAAmC,QAAQ,8BAA8B,oBAAoB,4LAA4L,IAAI,qCAAqC,8GAA8G,+DAA+D,IAAI,sCAAsC,8CAA8C,kGAAkG,2NAA2N,uDAAuD,yNAAyN,kPAAkP,w4BAAw4B,mCAAmC,IAAI,sCAAsC,sCAAsC,gCAAgC,wBAAwB,sFAAsF,uBAAuB,oCAAoC,iCAAiC,uBAAuB,2BAA2B,sEAAsE,2KAA2K,iEAAiE,oDAAoD,oCAAoC,kDAAkD,oUAAoU,mDAAmD,yDAAyD,gBAAgB,kEAAkE,uCAAuC,uBAAuB,KAAK,uBAAuB,cAAc,0BAA0B,yTAAyT,KAAK,2CAA2C,uBAAuB,yOAAyO,yBAAyB,qIAAqI,kKAAkK,eAAe,6BAA6B,wCAAwC,gBAAgB,uCAAuC,gBAAgB,+CAA+C,oCAAoC,6BAA6B,uDAAuD,+CAA+C,oCAAoC,kDAAkD,8DAA8D,uCAAuC,6BAA6B,0PAA0P,oCAAoC,iBAAiB,WAAW,0CAA0C,0BAA0B,oCAAoC,iBAAiB,WAAW,0CAA0C,0BAA0B,0BAA0B,mCAAmC,wEAAwE,gMAAgM,wIAAwI,eAAe,2FAA2F,iBAAiB,uDAAuD,mDAAmD,eAAe,4FAA4F,iBAAiB,yDAAyD,wCAAwC,OAAO,idAAid,sCAAsC,0CAA0C,wCAAwC,sFAAsF,gBAAgB,kDAAkD,iGAAiG,WAAW,KAAK,2CAA2C,uBAAuB,mCAAmC,uHAAuH,gFAAgF,0bAA0b,QAAQ,0BAA0B,kDAAkD,8IAA8I,QAAQ,WAAW,sNAAsN,+CAA+C,WAAW,mSAAmS,qBAAqB,2CAA2C,4UAA4U,2CAA2C,wHAAwH,4CAA4C,yHAAyH,sDAAsD,oCAAoC,OAAO,KAAK,iEAAiE,SAAS,wFAAwF,qJAAqJ,iEAAiE,QAAQ,IAAI,KAAK,QAAQ,IAAI,sBAAsB,KAAK,MAAM,WAAW,KAAK,gCAAgC,IAAI,KAAK,QAAQ,IAAI,sBAAsB,KAAK,MAAM,WAAW,KAAK,yFAAyF,SAAS,uCAAuC,iCAAiC,WAAW,KAAK,yDAAyD,WAAW,KAAK,mFAAmF,oFAAoF,wBAAwB,SAAS,wCAAwC,+FAA+F,sCAAsC,yEAAyE,8BAA8B,mKAAmK,sJAAsJ,qKAAqK,+BAA+B,6CAA6C,OAAO,sCAAsC,wBAAwB,uJAAuJ,8CAA8C,8GAA8G,mBAAmB,KAAK,8BAA8B,+GAA+G,KAAK,iBAAiB,iDAAiD,sFAAsF,wBAAwB,8BAA8B,SAAS,QAAQ,KAAK,KAAK,QAAQ,0FAA0F,4DAA4D,QAAQ,IAAI,KAAK,4CAA4C,iMAAiM,KAAK,uBAAuB,EAAE,8CAA8C,uCAAuC,wDAAwD,mDAAmD,4GAA4G,sBAAsB,8BAA8B,iEAAiE,8DAA8D,8FAA8F,6FAA6F,4FAA4F,6DAA6D;AAC759B,4MAA2M,uIAAuI,sCAAsC,KAAK,KAAK,WAAW,4MAA4M,sDAAsD,+GAA+G,gEAAgE,ynBAAynB,wDAAwD,82BAA82B,kDAAkD,gBAAgB,+BAA+B,2CAA2C,YAAY,QAAQ,2CAA2C,oDAAoD,QAAQ,IAAI,KAAK,+BAA+B,qQAAqQ,qGAAqG,mEAAmE,cAAc,2CAA2C,IAAI,oDAAoD,6IAA6I,wDAAwD,sEAAsE,yDAAyD,uKAAuK,2CAA2C,IAAI,KAAK,+BAA+B,sCAAsC,wDAAwD,wIAAwI,0NAA0N,IAAI,KAAK,+BAA+B,sIAAsI,uDAAuD,sEAAsE,mCAAmC,kDAAkD,YAAY,IAAI,KAAK,+BAA+B,mFAAmF,mEAAmE,sDAAsD,sEAAsE,6NAA6N,IAAI,KAAK,+BAA+B,+LAA+L,sDAAsD,eAAe,4BAA4B,iDAAiD,8CAA8C,2EAA2E,0BAA0B,uEAAuE,qDAAqD,iCAAiC,qBAAqB,QAAQ,WAAW,KAAK,WAAW,oDAAoD,wBAAwB,QAAQ,IAAI,KAAK,wCAAwC,0BAA0B,SAAS,wDAAwD,2CAA2C,oPAAoP,IAAI,sJAAsJ,YAAY,IAAI,KAAK,yNAAyN,YAAY,+BAA+B,KAAK,+BAA+B,0EAA0E,yDAAyD,2CAA2C,yDAAyD,2CAA2C,6LAA6L,IAAI,sJAAsJ,YAAY,IAAI,KAAK,OAAO,sBAAsB,2NAA2N,2CAA2C,IAAI,KAAK,+BAA+B,0IAA0I,gEAAgE,uDAAuD,2CAA2C,kPAAkP,IAAI,sJAAsJ,YAAY,IAAI,KAAK,OAAO,sCAAsC,+IAA+I,2CAA2C,IAAI,KAAK,+BAA+B,gVAAgV,mDAAmD,0DAA0D,2CAA2C,kPAAkP,IAAI,sJAAsJ,YAAY,IAAI,KAAK,OAAO,sCAAsC,+IAA+I,2CAA2C,IAAI,KAAK,+BAA+B,uOAAuO,mDAAmD,qBAAqB,yPAAyP,gKAAgK,+CAA+C,8CAA8C,kBAAkB,mCAAmC,IAAI,uCAAuC,gHAAgH,kDAAkD,oFAAoF,wCAAwC,mEAAmE,+CAA+C,4CAA4C,aAAa,4CAA4C,qCAAqC,yJAAyJ,8DAA8D,4EAA4E,OAAO,IAAI,eAAe,8DAA8D,gBAAgB,6CAA6C,6BAA6B,mDAAmD,uBAAuB,4CAA4C,iFAAiF,mBAAmB,aAAa,0CAA0C,IAAI,mBAAmB,yDAAyD,qCAAqC,sBAAsB,IAAI,qBAAqB,4CAA4C,iCAAiC,yDAAyD,iBAAiB,6BAA6B,sEAAsE,mFAAmF,YAAY,WAAW,QAAQ,sCAAsC,WAAW,wCAAwC,yCAAyC,uCAAuC,qBAAqB,yBAAyB,+JAA+J,iCAAiC,6BAA6B,YAAY,IAAI,OAAO,SAAS,8BAA8B,0CAA0C,gBAAgB,iBAAiB,6CAA6C,mBAAmB,wBAAwB,0CAA0C,kDAAkD,sCAAsC,sCAAsC,8HAA8H,sDAAsD,QAAQ,IAAI,0DAA0D,yBAAyB,kFAAkF,uCAAuC,0CAA0C,0DAA0D,sBAAsB,aAAa,8BAA8B,oCAAoC,WAAW,yCAAyC,2CAA2C,sCAAsC,iCAAiC,4CAA4C,MAAM,sDAAsD,oDAAoD,kCAAkC,0CAA0C,4DAA4D,yBAAyB,gJAAgJ,8CAA8C,gBAAgB,uDAAuD,yBAAyB,sCAAsC,sBAAsB,iBAAiB,IAAI,uCAAuC,kGAAkG,SAAS,UAAU,GAAG,gEAAgE,iDAAiD,sBAAsB,iBAAiB,IAAI,uCAAuC,kGAAkG,SAAS,UAAU,0CAA0C,oEAAoE,WAAW,iCAAiC,uBAAuB,gBAAgB,sBAAsB,IAAI,cAAc,IAAI,YAAY,IAAI,EAAE,4GAA4G,mCAAmC,KAAK,YAAY,IAAI,KAAK,WAAW,+EAA+E,KAAK,QAAQ,+CAA+C,iBAAiB,kBAAkB,kBAAkB,IAAI,cAAc,cAAc,gCAAgC,oDAAoD,oIAAoI,yBAAyB,yCAAyC,qCAAqC,kCAAkC,qCAAqC,6CAA6C,uCAAuC,+CAA+C,kCAAkC,uCAAuC,0IAA0I,kCAAkC,oFAAoF,6JAA6J,0BAA0B,uFAAuF,8BAA8B,uBAAuB,8BAA8B,oBAAoB,kEAAkE,IAAI,qFAAqF,wFAAwF,mGAAmG,4hBAA4hB,sFAAsF,mCAAmC,gDAAgD,oBAAoB,gBAAgB,4BAA4B,mBAAmB,aAAa,4WAA4W,kDAAkD,gEAAgE,cAAc,oIAAoI,+LAA+L,6FAA6F,sEAAsE,4DAA4D,sFAAsF,4MAA4M,iFAAiF,gDAAgD,oBAAoB,gBAAgB,wvBAAwvB,2CAA2C,yFAAyF,gEAAgE,gCAAgC,yBAAyB,iCAAiC,6BAA6B,8BAA8B,uBAAuB,uCAAuC,oBAAoB,qGAAqG,oCAAoC,qDAAqD,IAAI,gCAAgC,uFAAuF,8BAA8B,wBAAwB,8BAA8B,oBAAoB,kEAAkE,IAAI,mDAAmD,iCAAiC,yBAAyB,6BAA6B,gCAAgC,0BAA0B,iCAAiC,6BAA6B,wBAAwB,8BAA8B,wBAAwB,uCAAuC,oBAAoB,aAAa,yCAAyC,8DAA8D,8DAA8D,2DAA2D,uEAAuE,oCAAoC,sBAAsB,IAAI,mCAAmC,oGAAoG,oEAAoE,myBAAmyB,+CAA+C,yFAAyF,2BAA2B,0FAA0F,8BAA8B,uBAAuB,8BAA8B,oBAAoB,yFAAyF,IAAI,mDAAmD,gCAAgC,kCAAkC,iCAAiC,6BAA6B,8BAA8B,oBAAoB,+DAA+D,4BAA4B,qGAAqG,oCAAoC,IAAI,eAAe,2FAA2F,oEAAoE,8hBAA8hB,4CAA4C,wFAAwF,+BAA+B,0FAA0F,uBAAuB,oBAAoB,4BAA4B,IAAI,mDAAmD,yBAAyB,kCAAkC,iCAAiC,6BAA6B,uBAAuB,uBAAuB,qBAAqB,uBAAuB,oBAAoB,+DAA+D,4BAA4B,iHAAiH,kDAAkD,IAAI,eAAe,uGAAuG,oEAAoE,6gBAA6gB,gDAAgD,yFAAyF,sCAAsC,0FAA0F,uBAAuB,oBAAoB,4BAA4B,IAAI,mDAAmD,kCAAkC,iCAAiC,6BAA6B,qBAAqB,uBAAuB,sBAAsB,uBAAuB,uBAAuB,oBAAoB,+DAA+D,4BAA4B,iHAAiH,iDAAiD,IAAI,eAAe,4HAA4H,oEAAoE,ogBAAogB,uDAAuD,wFAAwF,6BAA6B,8CAA8C,yEAAyE,6CAA6C,6BAA6B,gBAAgB,ixBAAixB,8CAA8C,qBAAqB,sBAAsB,yBAAyB,aAAa,MAAM,iBAAiB,wBAAwB,gBAAgB,KAAK,gBAAgB,mDAAmD,wBAAwB,MAAM,kBAAkB,wBAAwB,KAAK,wBAAwB,6BAA6B,oOAAoO,kCAAkC,qCAAqC,6EAA6E,6EAA6E,kFAAkF,6PAA6P,cAAc,QAAQ,gBAAgB,oCAAoC,0CAA0C,MAAM,uRAAuR,8CAA8C,+CAA+C,WAAW,0GAA0G,oJAAoJ,gBAAgB,eAAe,kFAAkF,qDAAqD,+DAA+D,yTAAyT;;AAEjr+B,SAAQ,WAAW,sFAAsF,QAAQ,WAAW,gCAAgC,gBAAgB,eAAe,sDAAsD,4DAA4D,kBAAkB,UAAU,aAAa,sCAAsC,KAAK,wFAAwF,SAAS,2CAA2C,8BAA8B,wEAAwE,2BAA2B,WAAW,0GAA0G,kBAAkB,MAAM,4FAA4F,YAAY,gBAAgB,eAAe,oBAAoB,MAAM,uDAAuD,2CAA2C,yCAAyC,mBAAmB,iBAAiB,yBAAyB,WAAW,aAAa,wEAAwE,yBAAyB,uEAAuE,0CAA0C,2BAA2B,gMAAgM,4IAA4I,MAAM,wqBAAwqB,kMAAkM,IAAI,gBAAgB,aAAa,gDAAgD,uBAAuB,kBAAkB,gBAAgB,8DAA8D,8CAA8C,WAAW,6DAA6D,wBAAwB,iBAAiB,QAAQ,IAAI,eAAe,yCAAyC,eAAe,kBAAkB,mIAAmI,eAAe,qBAAqB,QAAQ,WAAW,sFAAsF,QAAQ,IAAI,oCAAoC,UAAU,qEAAqE,kKAAkK,gDAAgD,+BAA+B,iDAAiD,cAAc,uUAAuU,gEAAgE,oGAAoG,8BAA8B,opBAAopB,8KAA8K,uVAAuV,6eAA6e,wGAAwG,0HAA0H,sGAAsG,icAAic,8CAA8C,sBAAsB,0GAA0G,cAAc,kgBAAkgB,+DAA+D,+VAA+V,gDAAgD,iYAAiY,qDAAqD,gBAAgB,cAAc,m8BAAm8B,yDAAyD,uCAAuC,4DAA4D,mBAAmB,6BAA6B,oCAAoC,iBAAiB,oBAAoB,8CAA8C,mdAAmd,oDAAoD,cAAc,otCAAotC,kEAAkE,4BAA4B,gIAAgI,UAAU,4DAA4D,sCAAsC,wBAAwB,+CAA+C,uCAAuC,sDAAsD,aAAa,gCAAgC,iHAAiH,UAAU,qDAAqD,WAAW,kIAAkI,oDAAoD,cAAc,wDAAwD,iDAAiD,aAAa,kCAAkC,kDAAkD,wDAAwD,UAAU,6DAA6D,cAAc,uKAAuK,iBAAiB,w2BAAw2B,8DAA8D,wBAAwB,0CAA0C,+hCAA+hC,4DAA4D,cAAc,+FAA+F,KAAK,iBAAiB,q3BAAq3B,oDAAoD,oCAAoC,iCAAiC,8DAA8D,YAAY,iBAAiB,2BAA2B,cAAc,uHAAuH,4QAA4Q,uDAAuD,MAAM,QAAQ,8BAA8B,+BAA+B,QAAQ,WAAW,KAAK,WAAW,2BAA2B,cAAc,QAAQ,0BAA0B,oLAAoL,sDAAsD,gJAAgJ,mDAAmD,oNAAoN,+BAA+B,8BAA8B,gDAAgD,yLAAyL,gBAAgB,IAAI,8IAA8I,sNAAsN,8BAA8B,uBAAuB,8BAA8B,oBAAoB,kEAAkE,IAAI,IAAI,qDAAqD,0UAA0U,0BAA0B,0DAA0D,6CAA6C,gDAAgD,6FAA6F,6CAA6C,aAAa,iDAAiD,gBAAgB,uFAAuF,aAAa,MAAM,sCAAsC,WAAW,aAAa,oEAAoE,yFAAyF,uKAAuK,2aAA2a,aAAa,8HAA8H,6DAA6D,sBAAsB,yHAAyH,aAAa,qHAAqH,qQAAqQ,gFAAgF,qTAAqT,oTAAoT,+CAA+C,8BAA8B,gBAAgB,eAAe,kLAAkL,sBAAsB,oLAAoL,sFAAsF,KAAK,uEAAuE,oCAAoC,mIAAmI,IAAI,KAAK,+NAA+N,sMAAsM,oCAAoC,wCAAwC,gCAAgC,oCAAoC,IAAI,iDAAiD,0DAA0D,UAAU,cAAc,mMAAmM,8CAA8C,2BAA2B,+CAA+C,cAAc,iDAAiD,8JAA8J,oCAAoC,yDAAyD,iDAAiD,yIAAyI,gBAAgB,IAAI,8IAA8I,0KAA0K,6HAA6H,8SAA8S,sDAAsD,mIAAmI,iDAAiD,aAAa,qDAAqD,wBAAwB,mBAAmB,+LAA+L,uBAAuB,IAAI,4BAA4B,cAAc,2DAA2D,8IAA8I,oCAAoC,qFAAqF,qBAAqB,sGAAsG,6JAA6J,osBAAosB,mDAAmD,8BAA8B,cAAc,4QAA4Q,KAAK,sEAAsE,oCAAoC,+HAA+H,kDAAkD,aAAa,mDAAmD,cAAc,iIAAiI,oCAAoC,yGAAyG,sBAAsB,yYAAyY,iCAAiC,kDAAkD,uHAAuH,uDAAuD,oDAAoD,sEAAsE,oCAAoC,kDAAkD,uDAAuD,0EAA0E,iFAAiF,wBAAwB,4DAA4D,6BAA6B,+HAA+H,gCAAgC,6XAA6X,qDAAqD,wIAAwI,4BAA4B,ujBAAujB,iCAAiC,0LAA0L,YAAY,0BAA0B,KAAK,wBAAwB,4JAA4J,QAAQ,QAAQ,+CAA+C,8CAA8C,oCAAoC,qDAAqD,wDAAwD,KAAK,kDAAkD,kFAAkF,6CAA6C,oBAAoB,kyBAAkyB,kEAAkE,gCAAgC;AACln+B,wuBAAuuB,6DAA6D,cAAc,iwBAAiwB,mDAAmD,cAAc,oDAAoD,YAAY,0BAA0B,kCAAkC,wJAAwJ,mCAAmC,21BAA21B,kGAAkG,cAAc,kDAAkD,gDAAgD,oCAAoC,2BAA2B,cAAc,+NAA+N,8CAA8C,cAAc,4GAA4G,8BAA8B,2JAA2J,+FAA+F,0FAA0F,+CAA+C,gEAAgE,iCAAiC,oHAAoH,gBAAgB,SAAS,gDAAgD,uHAAuH,mDAAmD,oBAAoB,4BAA4B,+CAA+C,gBAAgB,+BAA+B,kDAAkD,8BAA8B,sCAAsC,8DAA8D,uEAAuE,gBAAgB,qCAAqC,iDAAiD,SAAS,iDAAiD,kCAAkC,+WAA+W,gDAAgD,kCAAkC,2RAA2R,iDAAiD,kCAAkC,oJAAoJ,gGAAgG,WAAW,mCAAmC,sBAAsB,uCAAuC,8DAA8D,wGAAwG,sSAAsS,oGAAoG,8BAA8B,8ZAA8Z,uBAAuB,oLAAoL,oGAAoG,uiBAAuiB,uGAAuG,6oBAA6oB,gDAAgD,0KAA0K,iDAAiD,oPAAoP,8DAA8D,6HAA6H,qDAAqD,i4DAAi4D,8BAA8B,+CAA+C,mBAAmB,iDAAiD,YAAY,wBAAwB,KAAK,8DAA8D,qDAAqD,cAAc,eAAe,oBAAoB,YAAY,aAAa,8BAA8B,+SAA+S,wUAAwU,wTAAwT,kCAAkC,iDAAiD,cAAc,2DAA2D,uXAAuX,kCAAkC,oEAAoE,ufAAuf,mDAAmD,4BAA4B,UAAU,4HAA4H,YAAY,IAAI,KAAK,kCAAkC,6BAA6B,cAAc,eAAe,oBAAoB,YAAY,aAAa,8BAA8B,0DAA0D,8FAA8F,iGAAiG,kCAAkC,iDAAiD,cAAc,2DAA2D,gKAAgK,kCAAkC,sEAAsE,yQAAyQ,iDAAiD,iGAAiG,wBAAwB,KAAK,wDAAwD,yKAAyK,uBAAuB,oWAAoW,gLAAgL,eAAe,2BAA2B,iBAAiB,mHAAmH,iDAAiD,2FAA2F,2HAA2H,8HAA8H,YAAY,2CAA2C,iDAAiD,2CAA2C,kEAAkE,yDAAyD,kHAAkH,6CAA6C,+BAA+B,gDAAgD,KAAK,8EAA8E,0BAA0B,0DAA0D,kHAAkH,+FAA+F,KAAK,gGAAgG,0BAA0B,gDAAgD,oHAAoH,gHAAgH,qEAAqE,KAAK,gMAAgM,gCAAgC,0BAA0B,gDAAgD,6BAA6B,8CAA8C,kDAAkD,qBAAqB,wCAAwC,kDAAkD,sGAAsG,KAAK,KAAK,mDAAmD,qCAAqC,0BAA0B,8CAA8C,kQAAkQ,yCAAyC,iEAAiE,iDAAiD,qDAAqD,0DAA0D,8DAA8D,iDAAiD,gDAAgD,oDAAoD,mDAAmD,8CAA8C,2GAA2G,uCAAuC,mGAAmG,oDAAoD,OAAO,qGAAqG,wIAAwI,+CAA+C,wDAAwD,yRAAyR,uOAAuO,8CAA8C,wDAAwD,sCAAsC,oHAAoH,sBAAsB,mCAAmC,IAAI,qCAAqC,qBAAqB,+HAA+H,gDAAgD,wDAAwD,gRAAgR,sCAAsC,4LAA4L,mBAAmB,8FAA8F,mCAAmC,IAAI,sCAAsC,sCAAsC,4CAA4C,uCAAuC,kGAAkG,gPAAgP,6NAA6N,mDAAmD,kCAAkC,oDAAoD,2BAA2B,KAAK,kDAAkD,mJAAmJ,8HAA8H,6HAA6H,KAAK,WAAW,YAAY,WAAW,8EAA8E,qBAAqB,yBAAyB,iHAAiH,uDAAuD,4BAA4B,yEAAyE,KAAK,4EAA4E,qHAAqH,4QAA4Q,2DAA2D,uDAAuD,6LAA6L,qDAAqD,+DAA+D,4CAA4C,yGAAyG,oHAAoH,4HAA4H,wCAAwC,iKAAiK,sUAAsU,uWAAuW,sJAAsJ,8LAA8L,0CAA0C,WAAW,ijBAAijB,4CAA4C,mJAAmJ,o6CAAo6C,6CAA6C,sCAAsC,yNAAyN,0DAA0D,4CAA4C,aAAa,YAAY,MAAM,KAAK,UAAU,iDAAiD,sDAAsD,yDAAyD,aAAa,YAAY,IAAI,MAAM,mCAAmC,6CAA6C,mEAAmE,6LAA6L,yBAAyB,mJAAmJ,sJAAsJ,wFAAwF,kNAAkN,oEAAoE,+CAA+C,6CAA6C,2BAA2B,YAAY,MAAM,KAAK,8DAA8D,0CAA0C,6CAA6C,8CAA8C,oBAAoB,yCAAyC,oIAAoI,IAAI,MAAM,4CAA4C,wCAAwC,+CAA+C,mBAAmB,oEAAoE,oBAAoB,6BAA6B,sBAAsB,6NAA6N,2HAA2H,kBAAkB,kBAAkB,mDAAmD,uEAAuE,6BAA6B,IAAI,0JAA0J,6CAA6C,kBAAkB,kBAAkB,gBAAgB,SAAS,eAAe,iDAAiD,IAAI;AACny+B,qOAAoO,+DAA+D,yCAAyC,eAAe,gCAAgC,+OAA+O,wKAAwK,eAAe,mBAAmB,iBAAiB,eAAe,2DAA2D,eAAe,oBAAoB,iBAAiB,gBAAgB,kDAAkD,mFAAmF,mDAAmD,sCAAsC,QAAQ,mdAAmd,IAAI,qCAAqC,uIAAuI,oDAAoD,sCAAsC,gBAAgB,+EAA+E,6CAA6C,mGAAmG,6DAA6D,mFAAmF,2IAA2I,yCAAyC,6aAA6a,IAAI,uCAAuC,+CAA+C,6SAA6S,gKAAgK,mBAAmB,oEAAoE,sDAAsD,4DAA4D,uCAAuC,6HAA6H,wOAAwO,MAAM,ogBAAogB,4JAA4J,sIAAsI,6CAA6C,yLAAyL,OAAO,8KAA8K,yBAAyB,0BAA0B,uBAAuB,mGAAmG,0BAA0B,4BAA4B,uBAAuB,wDAAwD,gCAAgC,0BAA0B,+BAA+B,kCAAkC,wBAAwB,gEAAgE,mCAAmC,sNAAsN,kBAAkB,6bAA6b,KAAK,gDAAgD,iOAAiO,8DAA8D,0RAA0R,2BAA2B,gBAAgB,6JAA6J,0BAA0B,sFAAsF,8DAA8D,kBAAkB,kCAAkC,0BAA0B,kBAAkB,+EAA+E,sBAAsB,8CAA8C,mBAAmB,kGAAkG,gGAAgG,+BAA+B,+CAA+C,8BAA8B,oDAAoD,2BAA2B,gBAAgB,4CAA4C,uDAAuD,IAAI,gBAAgB,0GAA0G,QAAQ,8BAA8B,4EAA4E,6BAA6B,IAAI,iDAAiD,sCAAsC,2BAA2B,iBAAiB,+BAA+B,iBAAiB,8DAA8D,MAAM,wFAAwF,yCAAyC,4HAA4H,uBAAuB,6CAA6C,8BAA8B,iDAAiD,4BAA4B,iNAAiN,qHAAqH,uEAAuE,0BAA0B,qBAAqB,8FAA8F,8JAA8J,oBAAoB,gCAAgC,mBAAmB,8BAA8B,4BAA4B,6BAA6B,iCAAiC,0BAA0B,4BAA4B,kFAAkF,uCAAuC,8BAA8B,yBAAyB,6BAA6B,6CAA6C,wBAAwB,0BAA0B,yDAAyD,wCAAwC,IAAI,0BAA0B,2BAA2B,yDAAyD,wCAAwC,IAAI,2BAA2B,0CAA0C,mCAAmC,eAAe,iBAAiB,EAAE,8CAA8C,WAAW,yCAAyC,qBAAqB,eAAe,iBAAiB,EAAE,uCAAuC,WAAW,0CAA0C,yBAAyB,KAAK,wBAAwB,SAAS,sBAAsB,eAAe,qBAAqB,sBAAsB,oBAAoB,wBAAwB,oBAAoB,8BAA8B,wKAAwK,SAAS,yBAAyB,IAAI,mDAAmD,+BAA+B,gBAAgB,gCAAgC,kBAAkB,iBAAiB,IAAI,yBAAyB,IAAI,qBAAqB,QAAQ,mEAAmE,aAAa,4BAA4B,8BAA8B,kEAAkE,6BAA6B,qCAAqC,4BAA4B,0BAA0B,yCAAyC,2BAA2B,kBAAkB,cAAc,8BAA8B,qBAAqB,mDAAmD,MAAM,QAAQ,KAAK,OAAO,QAAQ,6BAA6B,2EAA2E,uCAAuC,mBAAmB,MAAM,QAAQ,KAAK,OAAO,QAAQ,yCAAyC,MAAM,QAAQ,KAAK,OAAO,QAAQ,kBAAkB,iCAAiC,kEAAkE,gCAAgC,qCAAqC,4BAA4B,4BAA4B,4DAA4D,2BAA2B,kBAAkB,cAAc,8BAA8B,yGAAyG,qFAAqF,mHAAmH,6BAA6B,kEAAkE,4BAA4B,qCAAqC,4BAA4B,4BAA4B,4DAA4D,2BAA2B,kBAAkB,cAAc,8BAA8B,uIAAuI,qFAAqF,qJAAqJ,6BAA6B,kEAAkE,4BAA4B,qCAAqC,4BAA4B,gCAAgC,kGAAkG,2BAA2B,kBAAkB,cAAc,YAAY,qBAAqB,iBAAiB,kCAAkC,KAAK,sGAAsG,2GAA2G,8BAA8B,8FAA8F,kCAAkC,sHAAsH,iCAAiC,qCAAqC,0BAA0B,0BAA0B,2CAA2C,2BAA2B,kBAAkB,oEAAoE,YAAY,mEAAmE,cAAc,8BAA8B,6FAA6F,6BAA6B,wEAAwE,4BAA4B,yBAAyB,0BAA0B,0BAA0B,kCAAkC,2BAA2B,MAAM,6BAA6B,iDAAiD,yBAAyB,cAAc,MAAM,cAAc,KAAK,iCAAiC,eAAe,eAAe,KAAK,sBAAsB,aAAa,oBAAoB,iCAAiC,gFAAgF,gCAAgC,yBAAyB,0BAA0B,0BAA0B,sCAAsC,2BAA2B,kBAAkB,cAAc,MAAM,+DAA+D,iDAAiD,4BAA4B,IAAI,gBAAgB,2BAA2B,kHAAkH,0BAA0B,kDAAkD,0BAA0B,0BAA0B,yCAAyC,2BAA2B,8BAA8B,kCAAkC,kBAAkB,cAAc,8DAA8D,mDAAmD,oBAAoB,mBAAmB,IAAI,wBAAwB,iBAAiB,IAAI,cAAc,KAAK,iEAAiE,iDAAiD,oBAAoB,mBAAmB,IAAI,KAAK,WAAW,4BAA4B,iBAAiB,IAAI,KAAK,WAAW,uBAAuB,oCAAoC,kEAAkE,mCAAmC,6CAA6C,4BAA4B,4BAA4B,4DAA4D,2BAA2B,kBAAkB,cAAc,8CAA8C,8FAA8F,6EAA6E,uCAAuC,qBAAqB,6CAA6C,6BAA6B,kEAAkE,4BAA4B,qCAAqC,4BAA4B,0BAA0B,6CAA6C,2BAA2B,kBAAkB,oEAAoE,YAAY,oEAAoE,mDAAmD,6BAA6B,kEAAkE,4BAA4B,qCAAqC,4BAA4B,0BAA0B,6CAA6C,2BAA2B,kBAAkB,oEAAoE,YAAY,oEAAoE,mDAAmD,2BAA2B,kGAAkG,2BAA2B,wFAAwF,oCAAoC,IAAI,gCAAgC,YAAY,2BAA2B,oCAAoC,IAAI,6BAA6B,SAAS,sBAAsB,oCAAoC,IAAI,mCAAmC,YAAY,2BAA2B,oCAAoC,IAAI,6BAA6B,SAAS,sBAAsB,oCAAoC,IAAI,gCAAgC,YAAY,uBAAuB,qCAAqC,IAAI,gCAAgC,YAAY,2BAA2B,yCAAyC,IAAI,gCAAgC,YAAY,8BAA8B,4CAA4C,IAAI,gCAAgC,aAAa,wBAAwB,0BAA0B,6BAA6B,IAAI,KAAK,uEAAuE,sCAAsC,gCAAgC,6BAA6B,IAAI,KAAK,6EAA6E,0CAA0C,sBAAsB,qCAAqC,IAAI,yEAAyE,qCAAqC,uBAAuB,kFAAkF,2DAA2D,yBAAyB,uBAAuB,IAAI,kBAAkB,KAAK,WAAW,gBAAgB,wBAAwB,yBAAyB,IAAI,KAAK,eAAe,GAAG,YAAY,IAAI,6DAA6D,EAAE,SAAS,4BAA4B,WAAW,cAAc,WAAW,WAAW,SAAS,eAAe,iCAAiC,oCAAoC,IAAI,KAAK,WAAW,wBAAwB,uCAAuC,EAAE,2CAA2C,IAAI,gCAAgC,cAAc,mCAAmC,2BAA2B,sDAAsD,gCAAgC,oCAAoC,IAAI,0BAA0B,4CAA4C,IAAI,KAAK,WAAW,uDAAuD,gCAAgC,oCAAoC,IAAI,2BAA2B,sBAAsB,wBAAwB,4CAA4C,sBAAsB,oCAAoC,IAAI,qCAAqC,YAAY,2BAA2B,oCAAoC,IAAI,kCAAkC,SAAS,sBAAsB,oCAAoC,IAAI,qCAAqC,YAAY,2BAA2B,oCAAoC,IAAI,kCAAkC,SAAS,2BAA2B,4BAA4B,gCAAgC,gBAAgB,qBAAqB,+CAA+C,yCAAyC,IAAI,KAAK,mCAAmC,MAAM,2BAA2B,uBAAuB,YAAY,uCAAuC,mEAAmE,wCAAwC,cAAc,mCAAmC,cAAc,2EAA2E,6BAA6B,oCAAoC,IAAI,KAAK,WAAW,mBAAmB,WAAW,iGAAiG,gCAAgC,0BAA0B,8BAA8B,4CAA4C,IAAI,qCAAqC,YAAY,oBAAoB,aAAa,2BAA2B,oCAAoC,IAAI,yBAAyB,yBAAyB,YAAY,wBAAwB,yCAAyC,qBAAqB,YAAY,oBAAoB,yCAAyC,mBAAmB,4CAA4C,gCAAgC,8EAA8E,+BAA+B,sQAAsQ,eAAe,sHAAsH,yBAAyB,2YAA2Y,wEAAwE,mCAAmC,wBAAwB,kDAAkD,yKAAyK,8BAA8B,YAAY,6BAA6B,gWAAgW,sFAAsF,gGAAgG,IAAI,qGAAqG,iBAAiB,IAAI,mGAAmG,wCAAwC,aAAa,wBAAwB,+DAA+D,yDAAyD,YAAY,IAAI,MAAM,oBAAoB,kCAAkC,qCAAqC,YAAY,oCAAoC,0XAA0X,sFAAsF,gGAAgG,IAAI,qGAAqG,iBAAiB,IAAI,mGAAmG,wCAAwC,iGAAiG,8DAA8D,IAAI,MAAM,uBAAuB,IAAI,6HAA6H,oBAAoB,UAAU,IAAI,MAAM,uBAAuB,IAAI,4GAA4G,sBAAsB,qCAAqC,6BAA6B,oCAAoC,yEAAyE,wBAAwB,uEAAuE,IAAI,MAAM,oBAAoB,kCAAkC,kCAAkC,+CAA+C,iCAAiC,0CAA0C,yCAAyC,qCAAqC,yCAAyC,qCAAqC,mBAAmB,wBAAwB,6CAA6C,sBAAsB,wBAAwB,6FAA6F,0BAA0B,yBAAyB,mLAAmL,8BAA8B,0CAA0C,6BAA6B,oFAAoF,kBAAkB,YAAY,qBAAqB,KAAK,qBAAqB,MAAM,qCAAqC,6BAA6B,gCAAgC,aAAa,mHAAmH,mBAAmB,mBAAmB,YAAY,qBAAqB,KAAK,qBAAqB,MAAM,qBAAqB,+CAA+C,eAAe,iBAAiB,MAAM,aAAa,yEAAyE,oCAAoC,4EAA4E,kHAAkH,iCAAiC,IAAI,KAAK,qBAAqB,0DAA0D,wBAAwB,sBAAsB,sEAAsE,oBAAoB,wBAAwB,iCAAiC,IAAI,uBAAuB,qBAAqB,wBAAwB,6BAA6B,qBAAqB,wEAAwE,4BAA4B,8CAA8C,KAAK,sBAAsB,wBAAwB,YAAY,0BAA0B,6BAA6B,MAAM,iBAAiB,kMAAkM,uEAAuE,oCAAoC,8CAA8C,qCAAqC,gCAAgC,8BAA8B,uBAAuB,0EAA0E,sCAAsC,8CAA8C,qCAAqC,kCAAkC,gCAAgC,uBAAuB,4CAA4C,6BAA6B,MAAM,KAAK,OAAO,UAAU,SAAS,sBAAsB,8EAA8E,wBAAwB,kDAAkD,4BAA4B,wBAAwB,2BAA2B,uCAAuC,yBAAyB,SAAS,iBAAiB,6EAA6E,iCAAiC,IAAI,KAAK,kBAAkB,iFAAiF;;AAE/v+B,uWAAsW,WAAW,4BAA4B,IAAI,KAAK,yEAAyE,IAAI,KAAK,uBAAuB,sCAAsC,gBAAgB,mFAAmF,qIAAqI,iCAAiC,IAAI,KAAK,gCAAgC,0CAA0C,yCAAyC,6LAA6L,cAAc,uCAAuC,2BAA2B,uCAAuC,gCAAgC,uCAAuC,oCAAoC,2BAA2B,qDAAqD,eAAe,uCAAuC,gCAAgC,gGAAgG,mBAAmB,iEAAiE,SAAS,gCAAgC,YAAY,kEAAkE,+BAA+B,uDAAuD,kBAAkB,8MAA8M,cAAc,uHAAuH,6BAA6B,qDAAqD,8YAA8Y,oCAAoC,4DAA4D,kBAAkB,SAAS,sGAAsG,IAAI,EAAE,eAAe,cAAc,gBAAgB,IAAI,oFAAoF,wUAAwU,oCAAoC,0FAA0F,IAAI,4BAA4B,SAAS,mCAAmC,+BAA+B,uBAAuB,uCAAuC,gCAAgC,uCAAuC,WAAW,eAAe,oCAAoC,cAAc,2BAA2B,IAAI,KAAK,qGAAqG,uDAAuD,wDAAwD,KAAK,0EAA0E,yCAAyC,cAAc,2BAA2B,IAAI,KAAK,WAAW,8BAA8B,wDAAwD,cAAc,uCAAuC,yBAAyB,mCAAmC,WAAW,uCAAuC,WAAW,gBAAgB,qCAAqC,cAAc,2BAA2B,IAAI,KAAK,WAAW,uDAAuD,wDAAwD,oCAAoC,UAAU,4GAA4G,2BAA2B,IAAI,KAAK,qCAAqC,mDAAmD,wDAAwD,KAAK,iFAAiF,iFAAiF,cAAc,uCAAuC,IAAI,KAAK,WAAW,kCAAkC,0DAA0D,WAAW,uCAAuC,0EAA0E,+CAA+C,2BAA2B,IAAI,KAAK,sGAAsG,mDAAmD,wDAAwD,YAAY,gBAAgB,2BAA2B,YAAY,gCAAgC,gBAAgB,gEAAgE,0CAA0C,6BAA6B,sCAAsC,2CAA2C,2BAA2B,IAAI,KAAK,aAAa,eAAe,sBAAsB,WAAW,6BAA6B,6BAA6B,IAAI,gBAAgB,iBAAiB,IAAI,2BAA2B,yCAAyC,IAAI,eAAe,sCAAsC,iDAAiD,4DAA4D,kBAAkB,yBAAyB,gFAAgF,IAAI,KAAK,kBAAkB,cAAc,gBAAgB,cAAc,KAAK,YAAY,sBAAsB,qBAAqB,iCAAiC,IAAI,KAAK,uCAAuC,yCAAyC,KAAK,MAAM,eAAe,qBAAqB,KAAK,KAAK,eAAe,cAAc,KAAK,8BAA8B,yBAAyB,sDAAsD,gBAAgB,OAAO,6DAA6D,IAAI,KAAK,qCAAqC,wCAAwC,uBAAuB,6NAA6N,sDAAsD,0CAA0C,2BAA2B,cAAc,yHAAyH,uBAAuB,uEAAuE,+CAA+C,+BAA+B,yDAAyD,aAAa,IAAI,cAAc,UAAU,IAAI,gBAAgB,SAAS,2BAA2B,4DAA4D,IAAI,gBAAgB,UAAU,uBAAuB,mDAAmD,gCAAgC,WAAW,gBAAgB,EAAE,mBAAmB,kBAAkB,8BAA8B,wBAAwB,gEAAgE,sCAAsC,eAAe,sCAAsC,uiBAAuiB,KAAK,2OAA2O,oBAAoB,8PAA8P,aAAa,oBAAoB,uBAAuB,sCAAsC,IAAI,gCAAgC,YAAY,oBAAoB,oCAAoC,IAAI,mDAAmD,uBAAuB,sCAAsC,IAAI,KAAK,WAAW,6KAA6K,iBAAiB,6EAA6E,wBAAwB,oHAAoH,sBAAsB,wCAAwC,yBAAyB,wBAAwB,+GAA+G,2BAA2B,0BAA0B,4JAA4J,2BAA2B,iCAAiC,0BAA0B,yBAAyB,kCAAkC,qBAAqB,mEAAmE,sBAAsB,uCAAuC,iCAAiC,mCAAmC,uBAAuB,uCAAuC,iCAAiC,kBAAkB,IAAI,KAAK,uBAAuB,eAAe,sCAAsC,2CAA2C,qCAAqC,aAAa,oCAAoC,oCAAoC,+BAA+B,yEAAyE,gCAAgC,iPAAiP,mCAAmC,+BAA+B,uEAAuE,8BAA8B,gSAAgS,0CAA0C,+BAA+B,+EAA+E,qCAAqC,gSAAgS,wCAAwC,uCAAuC,6BAA6B,2DAA2D,6BAA6B,iDAAiD,6FAA6F,WAAW,uBAAuB,IAAI,iBAAiB,WAAW,YAAY,IAAI,KAAK,0BAA0B,yCAAyC,UAAU,iBAAiB,+GAA+G,sBAAsB,wBAAwB,mHAAmH,IAAI,kCAAkC,IAAI,MAAM,oBAAoB,gEAAgE,gDAAgD,iCAAiC,8DAA8D,yCAAyC,oDAAoD,2DAA2D,8BAA8B,qBAAqB,iCAAiC,gBAAgB,gDAAgD,oCAAoC,8EAA8E,6BAA6B,uCAAuC,IAAI,wEAAwE,YAAY,qCAAqC,uCAAuC,IAAI,oEAAoE,YAAY,sCAAsC,kCAAkC,IAAI,MAAM,sBAAsB,yBAAyB,WAAW,iCAAiC,IAAI,SAAS,8CAA8C,+DAA+D,IAAI,MAAM,kEAAkE,uDAAuD,kBAAkB,+DAA+D,QAAQ,SAAS,wBAAwB,oCAAoC,kCAAkC,qBAAqB,2BAA2B,sBAAsB,4BAA4B,+BAA+B,oCAAoC,gFAAgF,uGAAuG,+GAA+G,WAAW,uEAAuE,kCAAkC,mCAAmC,EAAE,GAAG,mDAAmD,cAAc,qBAAqB,oLAAoL,iNAAiN,yCAAyC,IAAI,KAAK,2EAA2E,iFAAiF,qDAAqD,sDAAsD,KAAK,6CAA6C,2BAA2B,wDAAwD,mBAAmB,iKAAiK,eAAe,oEAAoE,iBAAiB,iHAAiH,uCAAuC,0FAA0F,uEAAuE,IAAI,+CAA+C,mBAAmB,IAAI,KAAK,mDAAmD,MAAM,aAAa,gCAAgC,2EAA2E,4BAA4B,iFAAiF,+CAA+C,KAAK,6BAA6B,cAAc,mDAAmD,aAAa,8NAA8N,KAAK,qCAAqC,aAAa,SAAS,mDAAmD,aAAa,2EAA2E,6CAA6C,KAAK,2BAA2B,cAAc,8CAA8C,qFAAqF,yBAAyB,mBAAmB,kDAAkD,wCAAwC,sCAAsC,sGAAsG,8CAA8C,6LAA6L,qLAAqL,uBAAuB,4CAA4C,mFAAmF,iLAAiL,sBAAsB,sBAAsB,6DAA6D,yOAAyO,yOAAyO,KAAK,WAAW,8BAA8B,yIAAyI,wBAAwB,EAAE,gCAAgC,iBAAiB,uBAAuB,GAAG,sCAAsC,2IAA2I,mRAAmR,uDAAuD,yDAAyD,0CAA0C,YAAY,0BAA0B,sBAAsB,kDAAkD,aAAa,oCAAoC,KAAK,KAAK,4CAA4C,yBAAyB,uCAAuC,yCAAyC,4BAA4B,mDAAmD,gBAAgB,kJAAkJ,SAAS,wCAAwC,6DAA6D,oCAAoC,uEAAuE,kBAAkB,gBAAgB,yDAAyD,maAAma,uIAAuI,uBAAuB,6JAA6J,2BAA2B,EAAE,yCAAyC,4CAA4C,0CAA0C,+UAA+U,4PAA4P,2CAA2C,wCAAwC,mEAAmE,kMAAkM,qCAAqC,wBAAwB,kFAAkF,iCAAiC,wBAAwB,kFAAkF,SAAS,oCAAoC,oCAAoC,wBAAwB,2CAA2C,oBAAoB,8CAA8C,wBAAwB,+DAA+D,yBAAyB,gFAAgF,6FAA6F,4sBAA4sB,uBAAuB,mRAAmR,mLAAmL,gCAAgC,qKAAqK,8cAA8c,4CAA4C,8KAA8K,uDAAuD,eAAe,uBAAuB,4FAA4F,oCAAoC,IAAI,2BAA2B,uBAAuB,gUAAgU,wDAAwD,eAAe,uBAAuB,2CAA2C,oCAAoC,IAAI,2BAA2B,8BAA8B,4DAA4D,4GAA4G,+CAA+C,gBAAgB,gCAAgC,gDAAgD,oCAAoC,gDAAgD,0CAA0C,sGAAsG,qJAAqJ,gEAAgE,4DAA4D,iCAAiC,sEAAsE,4DAA4D,+cAA+c,yJAAyJ,+EAA+E,iDAAiD,qFAAqF,gDAAgD,mBAAmB,+CAA+C,wTAAwT,2BAA2B,KAAK,6CAA6C,+NAA+N,mDAAmD,4DAA4D,oCAAoC,wEAAwE,+CAA+C,+CAA+C,wBAAwB,sCAAsC,sCAAsC,2EAA2E,6BAA6B,wDAAwD,oMAAoM,iJAAiJ,kDAAkD,UAAU,yCAAyC,sBAAsB,2BAA2B,MAAM,gFAAgF,YAAY,yCAAyC,cAAc,gCAAgC,WAAW,qCAAqC,YAAY,wBAAwB,KAAK,+CAA+C,2DAA2D,4BAA4B,wDAAwD,gCAAgC,2BAA2B,mDAAmD,yCAAyC,8FAA8F,+EAA+E,aAAa,sCAAsC,4BAA4B;AACju+B,gBAAe,oIAAoI,6PAA6P,iTAAiT,uDAAuD,+HAA+H,gDAAgD,6DAA6D,+GAA+G,2BAA2B,4CAA4C,+DAA+D,yFAAyF,gBAAgB,iBAAiB,MAAM,0DAA0D,iBAAiB,8CAA8C,mCAAmC,qDAAqD,SAAS,iEAAiE,KAAK,0GAA0G,0BAA0B,6DAA6D,qNAAqN,uIAAuI,gDAAgD,eAAe,UAAU,qBAAqB,4CAA4C,mCAAmC,2BAA2B,EAAE,2CAA2C,oBAAoB,0BAA0B,EAAE,6BAA6B,kFAAkF,8HAA8H,mQAAmQ,kDAAkD,gHAAgH,YAAY,MAAM,SAAS,YAAY,2GAA2G,QAAQ,WAAW,4EAA4E,oGAAoG,OAAO,oEAAoE,oBAAoB,KAAK,sBAAsB,yEAAyE,8EAA8E,iBAAiB,OAAO,uDAAuD,uEAAuE,IAAI,6EAA6E,uBAAuB,+BAA+B,KAAK,mEAAmE,wDAAwD,YAAY,iBAAiB,wEAAwE,iCAAiC,mHAAmH,8BAA8B,qBAAqB,kCAAkC,wCAAwC,qBAAqB,oBAAoB,6CAA6C,6IAA6I,aAAa,GAAG,4CAA4C,mBAAmB,aAAa,EAAE,mCAAmC,oGAAoG,gKAAgK,yDAAyD,0BAA0B,wCAAwC,WAAW,mDAAmD,oBAAoB,aAAa,EAAE,6BAA6B,qDAAqD,wIAAwI,kHAAkH,6CAA6C,oBAAoB,aAAa,EAAE,+DAA+D,eAAe,uFAAuF,IAAI,gBAAgB,IAAI,SAAS,8CAA8C,6BAA6B,EAAE,mDAAmD,YAAY,kCAAkC,qFAAqF,4JAA4J,gQAAgQ,qDAAqD,oHAAoH,mCAAmC,yGAAyG,oBAAoB,8DAA8D,KAAK,oCAAoC,8CAA8C,kHAAkH,mCAAmC,QAAQ,2EAA2E,2IAA2I,6CAA6C,WAAW,KAAK,uNAAuN,YAAY,kKAAkK,0DAA0D,wCAAwC,QAAQ,WAAW,KAAK,oIAAoI,wBAAwB,6FAA6F,kDAAkD,oBAAoB,aAAa,EAAE,6BAA6B,6CAA6C,wIAAwI,yDAAyD,0BAA0B,wCAAwC,WAAW,6CAA6C,mCAAmC,aAAa,EAAE,gCAAgC,mFAAmF,wBAAwB,4GAA4G,kCAAkC,IAAI,6BAA6B,+BAA+B,yFAAyF,MAAM,yBAAyB,gBAAgB,iBAAiB,YAAY,aAAa,4BAA4B,4PAA4P,8BAA8B,uBAAuB,0BAA0B,8BAA8B,uBAAuB,2BAA2B,8BAA8B,oBAAoB,uCAAuC,2DAA2D,yBAAyB,wBAAwB,gDAAgD,0DAA0D,qDAAqD,4BAA4B,+BAA+B,IAAI,GAAG,wLAAwL,mNAAmN,0DAA0D,eAAe,gCAAgC,iBAAiB,4BAA4B,iCAAiC,8DAA8D,QAAQ,qDAAqD,4CAA4C,8BAA8B,uBAAuB,wBAAwB,uBAAuB,8BAA8B,oBAAoB,iEAAiE,IAAI,GAAG,qMAAqM,eAAe,kCAAkC,iBAAiB,8BAA8B,0BAA0B,8DAA8D,MAAM,mBAAmB,4CAA4C,8BAA8B,uBAAuB,8BAA8B,sBAAsB,oBAAoB,wDAAwD,kIAAkI,IAAI,GAAG,uKAAuK,eAAe,gCAAgC,iBAAiB,4BAA4B,mCAAmC,yFAAyF,iBAAiB,yBAAyB,QAAQ,iBAAiB,WAAW,SAAS,iBAAiB,SAAS,gBAAgB,iBAAiB,YAAY,aAAa,4BAA4B,8QAA8Q,8BAA8B,uBAAuB,qCAAqC,8BAA8B,sBAAsB,uBAAuB,2BAA2B,8BAA8B,oBAAoB,uCAAuC,2DAA2D,yBAAyB,wBAAwB,+DAA+D,uBAAuB,yBAAyB,iCAAiC,6GAA6G,uEAAuE,gCAAgC,IAAI,GAAG,oMAAoM,oPAAoP,6DAA6D,eAAe,2CAA2C,iBAAiB,uCAAuC,gEAAgE,eAAe,iCAAiC,iBAAiB,6BAA6B,iEAAiE,eAAe,kCAAkC,iBAAiB,8BAA8B,8BAA8B,8DAA8D,QAAQ,kBAAkB,aAAa,qDAAqD,YAAY,iBAAiB,YAAY,4CAA4C,8BAA8B,uBAAuB,wBAAwB,2BAA2B,0BAA0B,8BAA8B,oBAAoB,iCAAiC,0CAA0C,4FAA4F,gDAAgD,IAAI,GAAG,uLAAuL,eAAe,qCAAqC,iBAAiB,+CAA+C,2BAA2B,8DAA8D,MAAM,uBAAuB,4CAA4C,8BAA8B,uBAAuB,sBAAsB,8BAA8B,oBAAoB,2BAA2B,2FAA2F,2FAA2F,2FAA2F,uFAAuF,gFAAgF,uFAAuF,2FAA2F,2FAA2F,2FAA2F,yBAAyB,IAAI,GAAG,2KAA2K,eAAe,wCAAwC,iBAAiB,gDAAgD,2BAA2B,8DAA8D,MAAM,uBAAuB,4CAA4C,8BAA8B,uBAAuB,sBAAsB,8BAA8B,oBAAoB,2BAA2B,2FAA2F,2FAA2F,2FAA2F,uFAAuF,gFAAgF,uFAAuF,2FAA2F,2FAA2F,2FAA2F,yBAAyB,IAAI,GAAG,2KAA2K,eAAe,wCAAwC,iBAAiB,kCAAkC,0BAA0B,sHAAsH,uKAAuK,eAAe,6BAA6B,iBAAiB,+CAA+C,wDAAwD,eAAe,6BAA6B,iBAAiB,yBAAyB,wDAAwD,eAAe,6BAA6B,iBAAiB,yBAAyB,4BAA4B,8DAA8D,QAAQ,mBAAmB,4CAA4C,8BAA8B,uBAAuB,wBAAwB,8BAA8B,oBAAoB,wDAAwD,2GAA2G,IAAI,GAAG,iLAAiL,eAAe,kCAAkC,iBAAiB,8BAA8B,2BAA2B,8DAA8D,OAAO,mBAAmB,4CAA4C,8BAA8B,uBAAuB,uBAAuB,8BAA8B,yGAAyG,oBAAoB,wDAAwD,uFAAuF,IAAI,GAAG,4KAA4K,eAAe,iCAAiC,iBAAiB,6BAA6B,2BAA2B,8DAA8D,QAAQ,mBAAmB,QAAQ,kBAAkB,SAAS,iBAAiB,YAAY,4CAA4C,8BAA8B,uBAAuB,2BAA2B,8BAA8B,wBAAwB,uBAAuB,uBAAuB,oBAAoB,0CAA0C,qCAAqC,8BAA8B,qDAAqD,iDAAiD,kCAAkC,kCAAkC,6EAA6E,OAAO,uDAAuD,IAAI,GAAG,6KAA6K,eAAe,kCAAkC,iBAAiB,4CAA4C,0DAA0D,eAAe,kCAAkC,iBAAiB,4CAA4C,yDAAyD,eAAe,iCAAiC,iBAAiB,2CAA2C,+BAA+B,8DAA8D,MAAM,mBAAmB,4CAA4C,8BAA8B,uBAAuB,8BAA8B,sBAAsB,oBAAoB,sDAAsD,yCAAyC,2BAA2B,IAAI,GAAG,2LAA2L,eAAe,gCAAgC,iBAAiB,4BAA4B,+BAA+B,8DAA8D,OAAO,kBAAkB,QAAQ,kBAAkB,aAAa,4BAA4B,4CAA4C,8BAA8B,uBAAuB,2BAA2B,8BAA8B,uBAAuB,uBAAuB,oBAAoB,2CAA2C,+CAA+C,uGAAuG,iDAAiD,IAAI,gBAAgB,sDAAsD,0DAA0D,2EAA2E,IAAI,GAAG,4LAA4L,eAAe,iCAAiC,iBAAiB,2CAA2C,6DAA6D,eAAe,iCAAiC,iBAAiB,2CAA2C,gCAAgC,8DAA8D,MAAM,uBAAuB,4CAA4C,8BAA8B,uBAAuB,sBAAsB,8BAA8B,oBAAoB,qEAAqE,+CAA+C,wBAAwB,mEAAmE,uDAAuD,YAAY,QAAQ,wBAAwB,mEAAmE,uDAAuD,YAAY,QAAQ,wBAAwB,yEAAyE,uDAAuD,YAAY,QAAQ,uBAAuB,yEAAyE,uDAAuD,YAAY,QAAQ,IAAI,GAAG,+LAA+L,eAAe,wCAAwC,iBAAiB,kCAAkC,8BAA8B,8DAA8D,KAAK,iBAAiB,WAAW,QAAQ,iBAAiB,YAAY,OAAO,iBAAiB,YAAY,aAAa,4BAA4B,4CAA4C,8BAA8B,uBAAuB,oBAAoB,sBAAsB,qBAAqB,2BAA2B,8BAA8B,oBAAoB,gFAAgF,kFAAkF,iFAAiF,4DAA4D,IAAI,GAAG,sLAAsL,eAAe,+BAA+B,iBAAiB,2BAA2B,4DAA4D,eAAe,iCAAiC,iBAAiB,6BAA6B,2DAA2D,eAAe,gCAAgC,iBAAiB,4BAA4B,yJAAgL,a;;;;;;ACnBx30B;AACA;;AAEA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,YAAW,SAAS;AACpB,YAAW,EAAE;AACb,cAAa,EAAE;AACf;AACA;AACA;AACA,OAAM,mBAAmB;AACzB,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrDA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,gCAA+B,OAAO;AACtC;AACA,gCAA+B,OAAO;AACtC;AACA,gCAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,kCAAiC,OAAO;AACxC;AACA,kCAAiC,OAAO;AACxC;AACA,kCAAiC,OAAO;AACxC;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,kCAAiC,OAAO;AACxC;AACA,kCAAiC,OAAO;AACxC;AACA,kCAAiC,OAAO;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,0BAAyB,sCAAsC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,8BAA6B,sCAAsC;AACnE,eAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB,UAAU;AAC1B;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB,iBAAgB,mBAAmB;AACnmEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAA+C;;AAE/C;AACA,wBAAuB;AACvB,uBAAsB;;AAEtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAuB;AACvB;;AAEA;AACA;;;;;;;;AC/ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;;;;;;AC/HA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,EAAE;AACb,YAAW,OAAO;AAClB,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY,EAAE;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,sEAAqE;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,eAAe;AAC1B,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gCAA+B,SAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,+BAA8B,SAAS;AACvC;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtMA;;AAEA;;AAEA;AACA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,iBAAiB;AAC5B,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO,OAAO;AACd,QAAO,OAAO;AACd,yBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,OAAO;AAC/B,8CAA6C,OAAO,YAAY,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA,QAAO,SAAS;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,uBAAsB;AACtB,mBAAkB;AAClB,sBAAqB;AACrB,wBAAuB;AACvB,uBAAsB,kBAAkB,EAAE;AAC1C,uBAAsB,gCAAgC,EAAE;AACxD,uBAAsB,wBAAwB,EAAE;AAChD;AACA,YAAW,OAAO;AAClB,YAAW,2BAA2B;AACtC,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;;AAEX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,8BAA8B;AAC1C;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClQA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2CAA0C,sCAAsC;AAChF,2CAA0C,uCAAuC;AACjF,2CAA0C,qCAAqC;AAC/E,2CAA0C,uCAAuC,EAAE;;AAEnF;AACA,+CAA8C,eAAe;AAC7D,+CAA8C,8BAA8B;AAC5E,+CAA8C,8BAA8B;AAC5E,+CAA8C,oDAAoD;AAClG,+CAA8C,oDAAoD;AAClG,+CAA8C,eAAe;AAC7D,+CAA8C,mCAAmC;AACjF,+CAA8C,+BAA+B;AAC7E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8EAA6E;;AAE7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;ACzDA;;AAEA;;AAEA;;;;;;;ACJA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACPA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC,iBAAgB;AAChB,qBAAoB;AACpB,wCAAuC;AACvC,8BAA6B;AAC7B,+BAA8B;AAC9B;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACplB,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,uBAAuB;AACjD;AACA,YAAW,EAAE;AACb,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,wBAAwB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,2BAA2B;AACtC;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uCAAsC;AACtC,uCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,wBAAuB,sCAAsC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,2BAA0B;AAC1B;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;;AAEA;AACA;;;;;;;ACxdA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,gCAA+B;AAC/B,oBAAmB;AACnB,qCAAoC;AACpC,oBAAmB;AACnB;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,mBAAmB;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,mBAAmB;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,2BAA2B;AACtC;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,wBAAuB,mDAAmD;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,2BAA0B,mDAAmD;AAC7E,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACpSA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAwC,QAAQ;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAuC;AACvC;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,uBAAuB;AAClC,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA;;AAEA,4CAA2C,QAAQ;AACnD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA;;AAEA,4CAA2C,QAAQ;AACnD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA;;AAEA,4CAA2C,QAAQ;AACnD;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,4CAA2C,QAAQ;AACnD;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA,4CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;;AAEA,4CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,wBAAuB,+BAA+B,6CAA6C,OAAO;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,0BAAyB,+BAA+B,6CAA6C,OAAO;AAC5G,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AClSA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,EAAE;AACf,eAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,mBAAmB;AAChC,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,EAAE;AACf,cAAa,EAAE;AACf;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,EAAE;AACf;AACA;AACA,cAAa,QAAQ;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA,cAAa,QAAQ;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,2BAA2B;AACxC;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,G;;;;;;ACvQA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,oCAAmC;AACnC,+CAA8C;AAC9C;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;;AAEA;AACA,0BAAyB;AACzlB,aAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,KAAK;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,uBAAuB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,KAAK;AAChB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,KAAK;AAChB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,cAAc;AACzB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,cAAc;AACzB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,wBAAuB,+DAA+D;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,4BAA2B,+DAA+D;AAC1F,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;AACA;AACA,YAAW,2BAA2B;AACtC;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT,IAAG;AACH;AACA,UAAS,qCAAqC;;AAE9C,YAAW,0CAA0C;AACrD,WAAU,yCAAyC;AACnD,WAAU,wCAAwC;AAClD,WAAU,wCAAwC;AAClD,WAAU,wCAAwC;AAClD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;;AAEnD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU;AACV,IAAG;AACH;AACA,UAAS,qCAAqC;;AAE9C,cAAa,4CAA4C;AACzD,eAAc,6CAA6C;AAC3D,cAAa,2CAA2C;AACxD,cAAa,2CAA2C;AACxD,cAAa,2CAA2C;AACxD,cAAa,4CAA4C;AACzD,cAAa,4CAA4C;AACzD,aAAY,2CAA2C;AACvD,eAAc,6CAA6C;AAC3D,eAAc,6CAA6C;;AAE3D,cAAa,6CAA6C;AAC1D,eAAc,8CAA8C;AAC5D,eAAc,6CAA6C;AAC3D,eAAc,6CAA6C;AAC3D,cAAa,4CAA4C;AACzD,cAAa,6CAA6C;AAC1D,eAAc,8CAA8C;AAC5D,cAAa,6CAA6C;AAC1D,eAAc,8CAA8C;AAC5D,eAAc;AACd,IAAG;AACH;AACA,UAAS,qCAAqC;;AAE9C,YAAW,0CAA0C;AACrD,WAAU,yCAAyC;AACnD,WAAU,wCAAwC;AAClD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;;AAEnD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,yCAAyC;AACnD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU;AACV,IAAG;AACH;AACA,UAAS,qCAAqC;;AAE9C,YAAW,0CAA0C;AACrD,WAAU,yCAAyC;AACnD,WAAU,wCAAwC;AAClD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;;AAEnD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,yCAAyC;AACnD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU,0CAA0C;AACpD,WAAU;AACV,IAAG;AACH;AACA,UAAS,qCAAqC;AAC9C,WAAU,wCAAwC;AAClD,WAAU,wCAAwC;AAClD,WAAU,wCAAwC;AAClD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;AACnD,WAAU,yCAAyC;;AAEnD,YAAW,0CAA0C;AACrD,YAAW,uDAAuD;AAClE,YAAW,uDAAuD;AAClE,YAAW,uDAAuD;AAClE,YAAW,uDAAuD;AAClE,YAAW,uDAAuD;AAClE,YAAW,uDAAuD;AAClE,YAAW;AACX,IAAG;AACH;AACA,UAAS,qCAAqC;AAC9C,cAAa,2CAA2C;AACxD,cAAa,2CAA2C;AACxD,cAAa,2CAA2C;AACxD,cAAa,4CAA4C;AACzD,cAAa,4CAA4C;AACzD,cAAa,2CAA2C;AACxD,eAAc,6CAA6C;AAC3D,eAAc,6CAA6C;;AAE3D,cAAa,4CAA4C;AACzD,cAAa,yDAAyD;AACtE,cAAa,yDAAyD;AACtE,cAAa,yDAAyD;AACtE,cAAa,yDAAyD;AACtE,cAAa,wDAAwD;AACrE,cAAa,yDAAyD;AACtE,cAAa;AACb;AACA;;AAEA,oBAAmB;;AAEnB;AACA,WAAU;;AAEV,aAAY;AACZ,WAAU;AACV,WAAU;AACV,cAAa;AACb,kBAAiB;AACjB,yBAAwB;AACxB,0BAAyB;;AAEzB,YAAW;AACX,cAAa;AACb,aAAY;AACZ,YAAW;AACX,UAAS;AACT;;AAEA;;AAEA,kBAAiB;;AAEjB;AACA;AACA,WAAU,qFAAqF;AAC/F,UAAS,yFAAyF;AAClG,UAAS,yFAAyF;AAClG,UAAS,yFAAyF;AAClG,UAAS,2FAA2F;AACpG,UAAS,2FAA2F;AACpG,SAAQ,0FAA0F;AAClG,WAAU,2FAA2F;AACrG,cAAa,4FAA4F;;AAEzG,OAAM,kFAAkF;AACxF,UAAS,uFAAuF;AAChG,QAAO,uFAAuF;AAC9F,QAAO,uFAAuF;AAC9F,QAAO,yFAAyF;AAChG,QAAO,yFAAyF;AAChG,QAAO,yFAAyF;AAChG,QAAO,wFAAwF;AAC/F,SAAQ,2FAA2F;;AAEnG;AACA,QAAO,sFAAsF;AAC7F,UAAS,8FAA8F;AACvG,UAAS,8FAA8F;AACvG,UAAS,8FAA8F;AACvG,UAAS,kGAAkG;AAC3G,UAAS,4FAA4F;AACrG,UAAS,4FAA4F;AACrG,WAAU,+FAA+F;;AAEzG;AACA,QAAO,mFAAmF;AAC1F,OAAM,sFAAsF;AAC5F,OAAM,sFAAsF;AAC5F,WAAU,yFAAyF;AACnG,UAAS,+FAA+F;AACxG,UAAS,iGAAiG;AAC1G,UAAS,iGAAiG;AAC1G,cAAa,+FAA+F;AAC5G,gBAAe,iGAAiG;AAChH,MAAK,0FAA0F;AAC/F,UAAS,uFAAuF;AAChG,SAAQ,sFAAsF;;AAE9F;AACA,WAAU,oGAAoG;AAC9G,eAAc,uGAAuG;AACrH,gBAAe,sGAAsG;AACrH,UAAS,+FAA+F;AACxG,QAAO,qFAAqF;AAC5F,SAAQ,8FAA8F;AACtG,UAAS,+FAA+F;AACxG,WAAU,gGAAgG;AAC1G,YAAW,gGAAgG;AAC3G,gBAAe,kGAAkG;AACjH,eAAc,iGAAiG;AAC/G,cAAa,gGAAgG;;AAE7G,MAAK,kGAAkG;AACvG,UAAS,kGAAkG;AAC3G,UAAS,gGAAgG;AACzG,QAAO,6FAA6F;AACpG,QAAO,6FAA6F;AACpG,QAAO,6FAA6F;AACpG,QAAO,6FAA6F;AACpG,SAAQ,6FAA6F;AACrG,SAAQ,2FAA2F;AACnG,SAAQ,2FAA2F;AACnG,MAAK,gGAAgG;;AAErG;AACA,OAAM,oFAAoF;AAC1F,UAAS,sFAAsF;;AAE/F,SAAQ,0FAA0F;AAClG,WAAU,uFAAuF;;AAEjG,WAAU,6FAA6F;AACvG,UAAS,mGAAmG;AAC5G,WAAU,iGAAiG;AAC3G,eAAc,kGAAkG;AAChH,mBAAkB,mGAAmG;AACrH,WAAU,wFAAwF;AAClG,WAAU,sFAAsF;;AAEhG,QAAO,0FAA0F;AACjG,QAAO,iGAAiG;AACxG,QAAO,8FAA8F;AACrG,SAAQ,4FAA4F;AACpG,SAAQ,yFAAyF;;AAEjG;AACA,OAAM,gFAAgF;AACtF,SAAQ,kFAAkF;AAC1F,OAAM,kFAAkF;AACxF,YAAW,oFAAoF;AAC/F,SAAQ,iFAAiF;AACzF,YAAW,qFAAqF;AAChG,UAAS,qFAAqF;AAC9F,SAAQ,qFAAqF;;AAE7F;AACA,SAAQ,kFAAkF;AAC1F;AACA,SAAQ,oHAAoH;AAC5H;AACA,UAAS,qHAAqH;AAC9H;AACA,WAAU,oHAAoH;;AAE9H;AACA,OAAM,mFAAmF;AACzF,YAAW,uFAAuF;;AAElG;AACA;AACA;AACA;AACA,OAAM,sFAAsF;AAC5F,UAAS,8FAA8F;AACvG,UAAS,kGAAkG;AAC3G,UAAS,6FAA6F;AACtG,YAAW,2FAA2F;AACtG,aAAY,iGAAiG;AAC7G,gBAAe,wGAAwG;AACvH,aAAY,gGAAgG;;AAE5G;AACA,SAAQ,gGAAgG;AACxG,UAAS,iGAAiG;;AAE1G;AACA,QAAO,8FAA8F;AACrG,aAAY,mGAAmG;AAC/G;AACA,MAAK,qFAAqF;AAC1F,MAAK,4FAA4F;;AAEjG;AACA,OAAM,iFAAiF;AACvF,YAAW,qFAAqF;AAChG,SAAQ,gGAAgG;AACxG,gBAAe,uGAAuG;;AAEtH;AACA,OAAM,sFAAsF;AAC5F,UAAS,wFAAwF;AACjG,OAAM,sFAAsF;AAC5F,WAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;;AAGA;AACA;;;;;;;AC53BA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,0BAAyB,OAAO;AAChC,0BAAyB,OAAO;AAChC,0BAAyB,OAAO;AAChC,0BAAyB,SAAS;AAClC,0BAAyB,SAAS;AAClC,0BAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,yBAAyB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,cAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC9HA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,wBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,4BAA2B,wCAAwC;AACnE,aAAY;AACZ;AACA;AACA;AACA;;AAEA;;;;;;;ACrDA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,2BAA2B;AACxC,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,cAAa,EAAE;AACf,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,SAAS;AACtB;AACA;AACA,cAAa,QAAQ;AACrB;AACA,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,wBAAwB;AACrC,cAAa,wBAAwB;AACrC,cAAa,SAAS;AACtB;AACA;AACA,eAAc,eAAe;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB,cAAc;AACpC;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,uBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,mBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,KAAK;AAClB;AACA,gBAAe,KAAK;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAsC,QAAQ;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,G;;;;;;AC5QA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,a;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,oBAAoB;AACjC,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA6C,QAAQ;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+B;;AAEA;AACA;AACA;;AAEA;AACA,sBAAqB,OAAO;AAC5B;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,EAAE;AACf,cAAa,EAAE;AACf;AACA;AACA,eAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,EAAE;AACf;AACA;AACA,cAAa,QAAQ;AACrB;AACA,eAAc,OAAO;AACrB;AACA,qE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA,U;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA,cAAa,QAAQ;AACrB;AACA,eAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA,0BAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,UAAU;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,UAAU;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,2BAA2B;AACxC;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,cAAa,mBAAmB;AAChC;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAwB,kCAAkC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,8BAA6B,wEAAwE;AACrG;AACA,gBAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,cAAc;AAC3B,cAAa,mBAAmB;AAChC;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,Q;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,aAAa;AAChC;AACA;AACA;AACA,0B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA,2BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uF;AACA;;AAEA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,4B;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,sBAAqB,aAAa,O;AAClC;AACA;AACA;AACA;AACA,yBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA,U;AACA;AACA;AACA,sBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,G;;;;;;ACzrCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,oBAAoB;AACjC,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA6C,QAAQ;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+B;;AAEA;AACA;AACA;;AAEA;AACA,sBAAqB,OAAO;AAC5B;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,EAAE;AACf,cAAa,EAAE;AACf;AACA;AACA,eAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,EAAE;AACf;AACA;AACA,cAAa,QAAQ;AACrB;AACA,eAAc,OAAO;AACrB;AACA,qE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA,U;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA,cAAa,QAAQ;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA,0BAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,aAAa;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,aAAa;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,2BAA2B;AACxC;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,cAAa,mBAAmB;AAChC;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB,+BAA+B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,QAAQ;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,8BAA6B,wEAAwE;AACrG;AACA,gBAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,cAAc;AAC3B,cAAa,mBAAmB;AAChC;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,Q;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA,2BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uF;AACA;;AAEA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,4B;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA,yBAAwB,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,U;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,G;;;;;;AC5qCA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,wBAAwB;AACrC,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,kBAAkB;AACrC;;AAEA;AACA,uCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,EAAE;AACf,cAAa,EAAE;AACf;AACA;AACA,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,uCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,YAAY;AACzB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDAA+C,QAAQ;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,MAAM;AACnB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,cAAa,YAAY;AACzB,cAAa,MAAM;AACnB,cAAa,wBAAwB;AACrC,cAAa,EAAE;AACf;AACA,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,MAAM;AACnB,cAAa,MAAM;AACnB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,EAAE;AACf;AACA;AACA,cAAa,QAAQ;AACrB;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,YAAY;AACzB,cAAa,SAAS;AACtB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA;AACA,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,2BAA2B;AACxC;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,aAAa;AACtC;AACA;AACA;AACA,4BAA2B,UAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,mBAAmB;AAChC;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,cAAc;AAC3B,cAAa,mBAAmB;AAChC,cAAa,OAAO;AACpB;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,Q;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA,2F;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,8BAA6B,4CAA4C;AACzE;AACA,gBAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,4B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,4B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,MAAM;AACpB;AACA;AACA,sCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;AC/hCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA,uBAAsB;AACtB,oCAAmC;AACnC;AACA,2BAA0B;AAC1B;AACA,2BAA0B;AAC1B;AACA;AACA,wCAAuC;AACvC;AACA,cAAa,2BAA2B;AACxC,eAAc,6BAA6B;AAC3C;AACA,eAAc,cAAc;AAC5B,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB;AACvB,uBAAsB;AACtB,iBAAgB;AAChB,cAAa;AACb,kBAAiB;AACjB,mCAAkC;AAClC,yBAAwB;AACxB,gCAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,OAAO;AACrcAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,0CAAyC;AACzC;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAoC;AACpC;AACA;;AAEA;AACA,wCAAuC;AACvC;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,uCAAsC;AACtC;;AAEA,+BAA8B;AAC9B;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,0CAAyC;;AAEzC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+DAA8D;AAC9D;AACA,aAAY;AACZ;AACA,oDAAmD;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAoC;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,0BAA0B;AACxC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,KAAK;AAClB;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wDAAuD;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB;AACvB;AACA;AACA;;AAEA;AACA,6BAA4B;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,UAAU;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAA+B;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,G;;;;;;ACn2CA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC,sCAAqC;AACrC,iCAAgC;AAChC,6BAA4B;AAC5B;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC,iCAAgC;AAChC,qCAAoC;AACpC,oCAAmC;AACnC;AACA;AACA,kCAAiC;AACjC,8BAA6B;AAC7B,+CAA8C;AAC9C,gCAA+B;AAC/B;AACA;AACA,iCAAgC;AAChC,iCAAgC;AAChC,yBAAwB;AACxB;AACA,sCAAqC;AACrC;AACA;AACA,UAAS;AACT,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,KAAK;AACnB,eAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,gBAAgB;AAC/B,eAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,EAAE;AAChB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,G;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;AACA;;;;;;;AC9KA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,EAAE;AACf,gBAAe,EAAE;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,G;;;;;;ACrBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACzCA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;AC/DA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC7CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,2CAA0C,QAAQ;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC9CA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sDAAqD;AACrD,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC9CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC5CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC5CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC5CA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB;AACtB;;AAEA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC5BA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;AC1BA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC9FA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,mDAAkD;AAClD;AACA;AACA,iBAAgB;AAChB,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,cAAa,kDAAkD;AAC/D;AACA,gBAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC9DA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,0BAAyB;AACzB,8BAA6B;AAC7B,+BAA8B;AAC9B,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,cAAa,kDAAkD;AAC/D,eAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACvFA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,uBAAuB;AAC9C;AACA,wBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA,qCAAoC;AACpC,kBAAiB;AACjB,sBAAqB;AACrB,wCAAuC;AACvC,gCAA+B;AAC/B,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,cAAa,mBAAmB;AAChC;AACA,eAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,U;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC9HA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA,oCAAmC;AACnC,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,cAAa,KAAK;AAClB,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;;;;;;ACnEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACjFA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,4BAA2B;AAC3B,2BAA0B;AAC1B,gDAA+C;AAC/C,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,cAAa,yDAAyD;AACtE,cAAa,cAAc;AAC3B,eAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AC1FA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD;AAChD,0CAAyC;AACzC,8CAA6C;AAC7C,6CAA4C;AAC5C;AACA;AACA,mCAAkC;AAClC,+BAA8B;AAC9B,gDAA+C;AAC/C,iCAAgC;AAChC;AACA;AACA,kCAAiC;AACjC,kCAAiC;AACjC,0BAAyB;AACzB;AACA,uCAAsC;AACtC;AACA;AACA,WAAU;AACV,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;;;;;;ACnDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa,EAAE;AACf,eAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACxDA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,wCAAuC;AACvC;AACA;AACA,gCAA+B;AAC/B;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,cAAa,0BAA0B;AACvC,eAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC5DA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC,oCAAmC;AACnC,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,cAAa,mBAAmB;AAChC,eAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAuC;AACvC;;AAEA,mCAAkC;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AChFA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,uBAAsB;AACtB,2CAA0C;AAC1C,2BAA0B;AAC1B;AACA,2BAA0B;AAC1B;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,cAAa,2BAA2B;AACxC;AACA,gBAAe,eAAe,WAAW,eAAe,EAAE;AAC1D;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,uCAAsC;AACtC,gCAA+B;AAC/B,2CAA0C;AAC1C;AACA,uBAAsB;AACtB,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,cAAa,2BAA2B;AACxC,cAAa,OAAO;AACpB,eAAc,EAAE;AAChB,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,2BAA2B;AACxC;AACA,eAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;AClEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA,uBAAsB;AACtB,oCAAmC;AACnC;AACA,2BAA0B;AAC1B;AACA,2BAA0B;AAC1B;AACA;AACA,wCAAuC;AACvC;AACA,cAAa,2BAA2B;AACxC,eAAc,6BAA6B;AAC3C;AACA,eAAc,cAAc;AAC5B,eAAc;AACd;AACA;AACA;AACA;;AAEA;;;;;;;ACzCA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,wBAAuB;AACvB;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,eAAc,+DAA+D;AAC7E;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACjFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA,wBAAuB;AACvB;AACA,gCAA+B;AAC/B;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,eAAc,+EAA+E;AAC7F,eAAc,+EAA+E;AAC7F,eAAc,8DAA8D;AAC5E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC1JA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,wBAAuB;AACvB,yBAAwB;AACxB,yBAAwB;AACxB;AACA;AACA,sBAAqB;AACrB;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,eAAc,+DAA+D;AAC7E,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACzEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,wBAAuB;AACvB,sBAAqB;AACrB,mBAAkB;AAClB;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,eAAc,+DAA+D;AAC7E,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACjEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,qDAAqD;AACnE,eAAc,8CAA8C;AAC5D,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9HA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF,eAAc,+DAA+D;AAC7E,eAAc,qDAAqD;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AChEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF,eAAc,sEAAsE;AACpF,eAAc,qDAAqD;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC3CA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA,gCAA+B;AAC/B,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF,eAAc,sEAAsE;AACpF,eAAc,qDAAqD;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC5CA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA,2BAA0B;AAC1B,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF,eAAc,sEAAsE;AACpF,eAAc,qDAAqD;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACzCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,6BAA4B;AAC5B,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,+DAA+D;AAC5E,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC1EA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,uBAAsB;AACtB,wBAAuB;AACvB,wBAAuB;AACvB;AACA;AACA,qBAAoB;AACpB;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,cAAa,+DAA+D;AAC5E,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACxEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,0BAAyB;AACzB,0BAAyB;AACzB;AACA;AACA,uBAAsB;AACtB;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,eAAc,+DAA+D;AAC7E,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACxEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,+BAA8B;AAC9B;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,cAAa,yDAAyD;AACtE,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA,WAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa,UAAU;AACvB,cAAa,UAAU;AACvB,gBAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5IA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,yBAAwB;AACxB,4BAA2B;AAC3B;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,cAAa,yDAAyD;AACtE,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa,UAAU;AACvB,cAAa,UAAU;AACvB,gBAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3JA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,iCAAgC;AAChC;AACA,yBAAwB;AACxB,6BAA4B;AAC5B,wCAAuC;AACvC;AACA,2BAA0B;AAC1B,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,cAAa,+DAA+D;AAC5E;AACA,cAAa,8CAA8C;AAC3D;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,2BAA0B;AAC1B,wCAAuC;AACvC,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,cAAa,+DAA+D;AAC5E;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACjFA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,eAAc,qDAAqD;AACnE,eAAc,qDAAqD;AACnE,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;;;;;;;ACpIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF,eAAc,sEAAsE;AACpF,eAAc,qDAAqD;AACncAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvPA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,yBAAwB;AACxB;AACA,wCAAuC;AACvC;AACA,yCAAwC;AACxC,0CAAyC;AACzC;AACA,8BAA6B;AAC7B;AACA;AACA,4CAA2C;AAC3C,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,eAAc,+DAA+D;AAC7E;AACA,eAAc,gBAAgB;AAC9B;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpLA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,uBAAsB;AACtB,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,cAAa,qDAAqD;AAClE;AACA,cAAa,oCAAoC;AACjD,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,UAAU;AACvB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AChMA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,eAAc,+DAA+D;AAC7E,eAAc,8CAA8C;AAC5D,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChLA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,0BAAyB;AACzB,0BAAyB;AACzB,gCAA+B;AAC/B,kCAAiC;AACjC;AACA;AACA,uBAAsB;AACtB;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,eAAc,+DAA+D;AAC7E,eAAc,4CAA4C;AAC1D,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;;;;;;ACrIA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,yBAAwB;AACxB,sBAAqB;AACrB;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,eAAc,+DAA+D;AAC7E;AACA,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC1EA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,wBAAuB;AACvB,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,cAAa,+DAA+D;AAC5E;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,wBAAuB;AACvB,wBAAuB;AACvB,6BAA4B;AAC5B;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,eAAc,+DAA+D;AAC7E;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,6BAA4B;AAC5B;AACA,qCAAoC;AACpC;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF;AACA,eAAc,sEAAsE;AACpF;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACzJA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,eAAc,+EAA+E;AAC7F,eAAc,qDAAqD;AACnE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACnFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAc,+EAA+E;AAC7F;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC1EA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,yBAAwB;AACxB,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,cAAa,6BAA6B;AAC1C,cAAa,6BAA6B;AAC1C,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,UAAU;AACvB,cAAa,UAAU;AACvB,eAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/KA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,eAAc,qDAAqD;AACnE,eAAc,qDAAqD;AACnE,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC5FA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,eAAc,qDAAqD;AACnE,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,eAAc,qDAAqD;AACnE,eAAc,qDAAqD;AACnE,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC7FA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,eAAc,qDAAqD;AACnE,eAAc,qDAAqD;AACnE,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC5FA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,eAAc,qDAAqD;AACnE,eAAc,oCAAoC;AAClD,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACnHA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,eAAc,qDAAqD;AACnE,eAAc,oCAAoC;AAClD,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACrHA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,eAAc,yCAAyC;AACvD,eAAc,wBAAwB;AACtC,eAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC/DA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,qBAAoB;AACpB,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,cAAa,mDAAmD;AAChE;AACA,eAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACtEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,2CAA0C;AAC1C,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,cAAa,+DAA+D;AAC5E;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACpEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB,oBAAmB;AACnB;AACA,wCAAuC;AACvC,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,cAAa,+DAA+D;AAC5E;AACA,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACtEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB,oBAAmB;AACnB;AACA,wCAAuC;AACvC,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,cAAa,+DAA+D;AAC5E;AACA,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACrEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF,eAAc,sEAAsE;AACpF,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACzGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,qBAAoB;AACpB,wBAAuB;AACvB;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF,eAAc,sEAAsE;AACpF,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACnGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF,eAAc,sEAAsE;AACpF,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACjFA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,cAAa,mBAAmB;AAChC,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;;AAEtB,gBAAe,SAAS;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,MAAM;AACnB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,2CAA0C;AAC1C,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,eAAc,eAAe;AAC7B,eAAc,eAAe;AAC7B,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,MAAM;AACnB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9EA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,QAAQ;AACrB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,mBAAmB;AACtC;AACA;;AAEA,oBAAmB,mBAAmB;AACtC;AACA;;AAEA,sBAAqB,OAAO;AAC5B,0BAAyB;AACzB;;AAEA,0BAAyB,mBAAmB;AAC5C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB,cAAc;AACnC;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;;;;;;AC1JA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,kCAAiC;AACjC,mCAAkC;AAClC;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,mBAAmB;AAChC;AACA,cAAa,OAAO;AACpB;AACA,gBAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACzKA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,eAAc,eAAe;AAC7B,eAAc,eAAe;AAC7B,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,MAAM;AACnB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2FAA0F;AAC1F;AACA;;AAEA;AACA,oBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;AACA;;;;;;;AC1EA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,wBAAuB;AACvB;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,cAAa,2BAA2B;AACxC,cAAa,OAAO;AACpB;AACA,eAAc,wBAAwB;AACtC;AACA;AACA;AACA,kD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,Q;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,a;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/HA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC9CA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC,sBAAqB;AACrB,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA,cAAa,kCAAkC;AAC/C,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,QAAQ;AACrB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,UAAU;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,aAAa;AACnC,uBAAsB,aAAa;AACnC;;AAEA;AACA;AACA;AACA,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAAyB,UAAU;AACnC;AACA;AACA,0BAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,UAAU;AACjC;AACA;AACA,wBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChMA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,yBAAwB;AACxB,kCAAiC;AACjC;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,cAAa,kBAAkB;AAC/B,cAAa,OAAO;AACpB;AACA,eAAc,wBAAwB;AACtC;AACA;AACA;AACA,kD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,Q;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9GA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B,gCAA+B;AAC/B,8BAA6B;AAC7B,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,UAAU;AACvB,cAAa,UAAU;AACvB,cAAa,UAAU;AACvB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,UAAU;AACvB,cAAa,UAAU;AACvB,cAAa,UAAU;AACvB,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC/TA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C,yCAAwC;AACxC,oCAAmC;AACnC,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,cAAa,mBAAmB;AAChC,cAAa,eAAe;AAC5B,cAAa,gBAAgB;AAC7B;AACA;AACA,eAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,mCAAkC;AAClC;AACA;AACA,uBAAsB;AACtB,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,cAAa,4DAA4D;AACzE,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,8BAA6B;AAC7B;AACA,mCAAkC;AAClC,0BAAyB;AACzB;AACA,mCAAkC;AAClC,0BAAyB;AACzB;AACA;AACA,sCAAqC;AACrC,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzDA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,gDAA+C;AAC/C;AACA;AACA;AACA,gEAA+D;AAC/D,yDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,cAAa,wBAAwB;AACrC,cAAa,MAAM;AACnB;AACA,cAAa,EAAE;AACf;AACA;AACA,cAAa,EAAE;AACf;AACA;AACA,eAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,wBAAwB;AACrC,cAAa,MAAM;AACnB;AACA,gBAAe,mBAAmB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B;AAC/B,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,MAAM;AACnB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA,cAAa,wBAAwB;AACrC,cAAa,MAAM;AACnB;AACA,cAAa,mBAAmB;AAChC,cAAa,EAAE;AACf;AACA;AACA,gBAAe,EAAE;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,MAAM;AACnB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,+CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACnNA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/FA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,UAAU;AACjC;AACA,0BAAyB,UAAU;AACnC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChFA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,0BAAyB;AACzB,gCAA+B;AAC/B;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,cAAa,kBAAkB;AAC/B,cAAa,OAAO;AACpB;AACA,eAAc,eAAe;AAC7B;AACA;AACA;AACA,kD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,Q;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5GA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,cAAa,qDAAqD;AAClE,eAAc,oCAAoC;AAClD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA,wCAAuC,qBAAqB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAsC,OAAO;AAC7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,UAAU;AACvB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvIA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,0BAAyB;AACzB,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,cAAa,yCAAyC;AACtD,eAAc,wBAAwB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAkB;AAClB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAwB;AACxB;;AAEA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,cAAc;AACnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,cAAc;AACnC,6BAA4B;AAC5B;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA2B;AAC3B;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;;AAEA,+BAA8B;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3LA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,2BAA0B;AAC1B,8BAA6B;AAC7B,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,wBAAwB;AACtC;AACA;AACA;;;;;;;ACpCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B,8BAA6B;AAC7B,iCAAgC;AAChC,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,wBAAwB;AACtC;AACA;AACA;;;;;;;ACpCA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,OAAO;AACrB;AACA;AACA;;;;;;;ACzBA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,cAAa,mBAAmB;AAChC,cAAa,mBAAmB;AAChC,eAAc,mBAAmB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAkC,UAAU;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,UAAU;AACvB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;;;;;;AC1GA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,cAAa,mBAAmB;AAChC,cAAa,mBAAmB;AAChC,eAAc,mBAAmB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,cAAc;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAmD,WAAW;AAC9D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,UAAU;AACvB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;;;;;;AC1FA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,4BAA2B;AAC3B,4BAA2B;AAC3B;AACA;AACA;AACA,4BAA2B;AAC3B;AACA,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,eAAc,qEAAqE;AACnF,eAAc,qEAAqE;AACnF,eAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC3HA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,eAAc,sEAAsE;AACpF,eAAc,sEAAsE;AACpF,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,UAAU;AACvB,cAAa,UAAU;AACvB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,SAAS;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9EA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,8BAA6B;AAC7B;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,0BAAyB;AACzB,8BAA6B;AAC7B;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,eAAc,2FAA2F;AACzG,eAAc,2FAA2F;AACzG,eAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC7JA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B,+BAA8B;AAC9B;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,eAAc,qEAAqE;AACnF,eAAc,qEAAqE;AACnF,eAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACxHA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,eAAc,qEAAqE;AACnF,eAAc,qEAAqE;AACnF,eAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACzHA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,gCAA+B;AAC/B;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAc,qEAAqE;AACnF,eAAc,qEAAqE;AACnF,eAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACxHA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,eAAc,qEAAqE;AACnF,eAAc,qEAAqE;AACnF,eAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACxHA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B,gCAA+B;AAC/B;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,8BAA6B;AAC7B;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA,eAAc,2FAA2F;AACzG,eAAc,2FAA2F;AACzG,eAAc,yBAAyB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC5JA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,iCAAgC;AAChC;AACA;AACA,gDAA+C;AAC/C,gDAA+C;AAC/C;AACA,6CAA4C;AAC5C,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACxFA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,iCAAgC;AAChC;AACA;AACA,gDAA+C;AAC/C,gDAA+C;AAC/C;AACA,6CAA4C;AAC5C,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACxFA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B,sCAAqC;AACrC;AACA,iDAAgD;AAChD,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACjGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AC3GA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB;AACzB,6BAA4B;AAC5B,+BAA8B;AAC9B,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC9EA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,iCAAgC;AAChC,gDAA+C;AAC/C,2CAA0C;AAC1C;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B;AACA,cAAa,OAAO;AACpB;AACA;AACA,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACrDA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,iCAAgC;AAChC,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,eAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC5EA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,iCAAgC;AAChC,gDAA+C;AAC/C,2CAA0C;AAC1C;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B;AACA,cAAa,OAAO;AACpB;AACA;AACA,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,eAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzIA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,kCAAiC;AACjC;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,cAAa,6DAA6D;AAC1E,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACvFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACtFA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,kCAAiC;AACjC;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,cAAa,mDAAmD;AAChE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACjFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACvFA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,kCAAiC;AACjC;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,cAAa,mDAAmD;AAChE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACpFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACtFA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,kCAAiC;AACjC;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,cAAa,mDAAmD;AAChE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC7FA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,kCAAiC;AACjC;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,cAAa,+DAA+D;AAC5E,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACtFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClFA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,kCAAiC;AACjC;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,cAAa,+DAA+D;AAC5E,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC1FA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA,0CAAyC;AACzC;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,cAAa,mDAAmD;AAChE,cAAa,mDAAmD;AAChE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;AC9FA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC7FA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,+BAA8B;AAC9B,yCAAwC;AACxC,wCAAuC;AACvC;AACA;AACA,qEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA,cAAa,sEAAsE;AACnF,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,cAAa,sEAAsE;AACnF,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC3EA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC/EA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACnFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AChFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACpFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AChFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,kCAAkC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AChFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB,+BAA8B;AAC9B,wCAAuC;AACvC,wCAAuC;AACvC;AACA;AACA,qEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA,cAAa,sEAAsE;AACnF,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,cAAa,sEAAsE;AACnF,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AClFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB,uCAAsC;AACtC,+BAA8B;AAC9B,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,cAAa,sEAAsE;AACnF,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACnFA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,yCAAwC;AACxC,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,cAAa,sEAAsE;AACnF,eAAc,8CAA8C;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACrFA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C,6DAA4D;AAC5D,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA,cAAa,sBAAsB;AACnC,cAAa,sBAAsB;AACnC;AACA,eAAc,sBAAsB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;ACvDA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,2CAA0C;AAC1C,0CAAyC;AACzC,sCAAqC;AACrC,mCAAkC;AAClC;AACA,cAAa,EAAE;AACf,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC/BA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD;AACnD;AACA,kEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,kBAAkB;AAC/B;AACA;AACA;AACA,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,MAAM;AACnB,cAAa,kBAAkB;AAC/B,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,G;;;;;;AC1EA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,OAAO,YAAY,OAAO;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,8BAA6B;AAC7B,0BAAyB;AACzB,6BAA4B;AAC5B,+BAA8B;AAC9B,8BAA6B,kBAAkB,EAAE;AACjD,8BAA6B,gCAAgC,EAAE;AAC/D,8BAA6B,wBAAwB,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,cAAa,2BAA2B;AACxC,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC9EA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,0BAAyB;AACzB,4BAA2B;AAC3B;AACA;AACA;AACA,iCAAgC,WAAW;AAC3C;AACA,2BAA0B;AAC1B;AACA,cAAa,gBAAgB;AAC7B,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,EAAE;AACf,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzJA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,EAAE;AACX;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,SAAS;AACtB;AACA;AACA,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC3DA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,OAAO;AACtD;AACA;AACA,gDAA+C,YAAY;AAC3D;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,cAAa,OAAO;AACpB;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC7EA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,yCAAwC;AACxC;AACA;AACA;AACA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,0BAA0B;AACvC;AACA;AACA;AACA,eAAc,eAAe;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;AC1EA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA6D,WAAW;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,6CAA4C;AAC5C,0CAAyC;AACzC,oCAAmC;AACnC;AACA,cAAa,EAAE;AACf,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;AC3EA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACxDA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,SAAS;AACpB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrBA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,SAAS;AACzB;;AAEA,QAAO,uCAAuC,EAAE;AAChD;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;AChBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9DA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACfA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,0BAAyB,kBAAkB,EAAE;AAC7C;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,EAAE;AACf;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;;AAEA;AACA;AACA,YAAW,gBAAgB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,gCAA+B;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,sDAAsD;AAClE;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;;;;;;;AC9MA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,UAAU;AACvB;AACA;AACA,oCAAmC,qBAAqB;;AAExD;AACA,EAAC;;AAED;AACA;AACA,YAAW,OAAO;AAClB,cAAa,UAAU;AACvB;AACA;AACA,oCAAmC,qBAAqB;;AAExD;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,UAAU;AACvB;AACA;AACA;AACA,oCAAmC,yBAAyB;AAC5D;AACA;;AAEA,eAAc,qBAAqB;;AAEnC;AACA;AACA,EAAC;;AAED;AACA;AACA,YAAW,OAAO;AAClB,cAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;;AAEA,oCAAmC,qBAAqB;;AAExD;AACA,EAAC;;;AAGD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,UAAU;AACrB,aAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,eAAe;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,UAAU;AACrB,aAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,UAAU;AACrB,aAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAoB,eAAe;;AAEnC;AACA;;AAEA,qBAAoB,oBAAoB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,UAAU;AACrB,aAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,eAAe;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,UAAU;AACrB,aAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,UAAU;AACrB,aAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,eAAe;AACvD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,eAAe;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,oBAAoB;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,cAAc;AAC/B;AACA,+BAA8B,KAAK;AACnC;AACA;;AAEA;AACA;;AAEA;AACA,yBAAwB,oBAAoB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,MAAM;AAC5B,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,gBAAgB;AACjC,gCAA+B,QAAQ;;AAEvC,oCAAmC;AACnC,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,eAAe;AAC1B,YAAW,QAAQ;AACnB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,eAAc,yBAAyB;;AAEvC;AACA;AACA;;AAEA;AACA;;AAEA,eAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,eAAe;AAC1B,YAAW,QAAQ;AACnB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAgB,yBAAyB;AACzC,wB;AACA,iBAAgB,qBAAqB;;AAErC;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAgB,yBAAyB;;AAEzC;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA,iBAAgB,yBAAyB;;AAEzC;AACA;AACA;;AAEA,iBAAgB,qBAAqB;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,eAAe;AAC1B,YAAW,QAAQ;AACnB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAc,yBAAyB;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB,qBAAqB;AACrC;AACA;;AAEA;AACA;;AAEA,eAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,UAAU;AACrB,YAAW,eAAe;AAC1B,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAc,yBAAyB;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,eAAe;AAC1B,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,eAAc,yBAAyB;;AAEvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,eAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,eAAe;AAC1B,YAAW,QAAQ;AACnB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAc,yBAAyB;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,eAAe;AAC1B,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAc,+BAA+B;;AAE7C,oDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAgB,qBAAqB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAgB,yDAAyD;;AAEzE;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,iBAAgB,wDAAwD;;AAExE;AACA,WAAU,WAAW;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,eAAe;AAC1B,YAAW,QAAQ;AACnB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAc,yBAAyB;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA,eAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,eAAe;AAC1B,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc,yBAAyB;;AAEvC;AACA;;AAEA;AACA;AACA;;AAEA,eAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,eAAe;AAC1B,YAAW,QAAQ;AACnB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAc,yBAAyB;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,eAAe;AAC1B,cAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc,0BAA0B;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAgB,0BAA0B;AAC1C,IAAG;;AAEH;AACA;AACA;AACA;;AAEA,eAAc,wBAAwB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,OAAO;AAClB,cAAa,UAAU;AACvB;AACA;AACA;AACA,eAAc,mDAAmD;;AAEjE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2B;AACA,kBAAiB,kBAAkB;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAc,qBAAqB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,kBAAkB;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,OAAO;AAClB,cAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB,kBAAkB;AACtC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA,eAAc,yBAAyB;;AAEvC;;AAEA,eAAc,qBAAqB;AACnC;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO,OAAO;AACd,QAAO,OAAO;AACd,yBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,OAAO;AAC/B,8CAA6C,OAAO,YAAY,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA,QAAO,SAAS;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,uBAAsB;AACtB,mBAAkB;AAClB,sBAAqB;AACrB,wBAAuB;AACvB,uBAAsB,kBAAkB,EAAE;AAC1C,uBAAsB,gCAAgC,EAAE;AACxD,uBAAsB,wBAAwB,EAAE;AAChD;AACA,YAAW,UAAU;AACrB,YAAW,2BAA2B;AACtC,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,OAAO;AAClB;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/3CA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB,aAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,eAAe;AAC1B,YAAW,EAAE;AACb;AACA;AACA,aAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,SAAS;AACpB,YAAW,OAAO;AAClB,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA,qBAAoB,YAAY;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa,UAAU;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA,sBAAqB,UAAU;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,MAAM;AACjB,aAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,UAAU;AACrB,cAAa,MAAM;AACnB;AACA;AACA;AACA,qCAAoC,SAAS;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA,2B;;;;;;ACxXA;AACA;AACA;;;;;;;ACFA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AChCA;;AAEA;AACA;AACA;AACA,YAAW,kBAAkB;AAC7B,YAAW,kBAAkB;AAC7B,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACjCA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AC5CA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACpCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,gCAA+B;AAC/B,uCAAsC;AACtC,6BAA4B;AAC5B;AACA,YAAW,EAAE;AACb,YAAW,2BAA2B;AACtC;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,2BAA2B;AACtC;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5GA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,wDAAwD;AACnE,cAAa,UAAU;AACvB;AACA;AACA;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,gBAAgB;AAC3B,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA,oBAAmB,uBAAuB;;AAE1C;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH,eAAc,uBAAuB;AACrC;AACA;;AAEA;;;;;;;ACvHA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW,OAAO;AAClB,YAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,wDAAwD;AACnE,cAAa,eAAe;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,gBAAgB;AAC3B,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC1GA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA,YAAW,QAAQ,WAAW,IAAI,6BAA6B,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA,qBAAoB;AACpB;AACA,IAAG;;AAEH,yBAAwB;AACxB,yBAAwB;AACxB;AACA,sCAAqC;AACrC,SAAQ;AACR;;AAEA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,wDAAwD;AACnE,cAAa,UAAU;AACvB;AACA;AACA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,IAAG;AACH;;AAEA;AACA;AACA,YAAW,gBAAgB;AAC3B,aAAY,OAAO;AACnB;AACA;AACA;AACA,kEAAiE;AACjE,IAAG;AACH;;AAEA;;;;;;;ACrIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,wDAAwD;AACnE,cAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,gBAAgB;AAC3B,aAAY,OAAO;AACnB;AACA;AACA,oBAAmB,QAAQ,OAAO,KAAK;AACvC,0CAAyC,UAAU,OAAO,GAAG,GAAG;AAChE;AACA,SAAQ,KAAK;AACb,SAAQ,UAAU,OAAO,WAAW,MAAM,MAAM;AAChD;;AAEA;;;;;;;ACpKA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,6CAA6C;AACxD;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,yDAAyD;AACpE,cAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,gBAAgB;AAC3B,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,cAAc;;AAEnC;AACA;AACA;AACA,uDAAsD;AACtD,4CAA2C;AAC3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACrLA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA,aAAY,OAAO;AACnB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B;AAC9B,0CAAyC;AACzC;AACA;AACA;AACA;AACA,kBAAiB;AACjB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B;AAC9B,0CAAyC;AACzC,oDAAmD;AACnD,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,2BAA0B;AAC1B,yDAAwD;AACxD,gDAA+C;AAC/C;AACA;AACA;AACA;AACA,cAAa;AACb,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,wBAAwB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,wDAAwD;AACnE,cAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA,kBAAiB,wBAAwB;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,gBAAgB;AAC3B,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,IAAG;AACH,4CAA2C,wCAAwC;AACnF;;AAEA;;;;;;;AC/NA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,wBAAuB;AACvB,gFAA+E;AAC/E,mEAAkE;AAClE;AACA;AACA,0KAAyK;AACzK,eAAc;AACd;AACA,cAAa;AACb,4EAA2E;AAC3E,sBAAqB;AACrB,WAAU,IAAI;AACd;;AAEA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,wDAAwD;AACnE,cAAa,uBAAuB;AACpC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,gBAAgB;AAC3B,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACjIA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA,kBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,wDAAwD;AACnE,cAAa,aAAa;AAC1B;AACA;AACA;AACA,kBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,gBAAgB;AAC3B,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;;;;;;;AClIA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;;AAEA;AACA,yDAAwD;AACxD,IAAG;;AAEH;AACA;AACA,oBAAmB;AACnB,wCAAuC;AACvC,iDAAgD;AAChD,oCAAmC;AACnC,oCAAmC;AACnC,eAAc;AACd,cAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,wDAAwD;AACnE,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,KAAK;AAChB,cAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,iDAAiD;AAC5D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,YAAW,wDAAwD;AACnE;AACA;AACA;AACA,aAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,YAAW,wDAAwD;AACnE;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,gBAAgB;AAC3B,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;AC/UA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA,kBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,wDAAwD;AACnE,cAAa,aAAa;AAC1B;AACA;AACA;AACA,kBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,aAAa;AACxB,YAAW,OAAO;AAClB,YAAW;AACX,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA8B;AAC9B;AACA;AACA,mCAAkC;AAClC;AACA;;AAEA;AACA;;AAEA;AACA,oCAAmC;AACnC,oCAAmC;AACnC,uBAAsB;AACtB;AACA;AACA,uBAAsB;AACtB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,gBAAgB;AAC3B,aAAY,OAAO;AACnB;AACA;AACA,uB;AACA;AACA;AACA,gDAA+C;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA6B;AAC7B;AACA;AACA,kCAAiC;AACjC;AACA;;AAEA;AACA;;AAEA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;;AAEA,wBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,eAAe,MAAM,eAAe;AAC3D;AACA,qBAAoB,eAAe;AACnC,qBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAsB,gBAAgB;AACtC;AACA;AACA,eAAc;AACd;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;;;;;;;ACpWA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,cAAa;AACb;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB;AACrB,oBAAmB;AACnB,6BAA4B;AAC5B;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,wDAAwD;AACnE,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAY,gBAAgB;AAC5B,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACxIA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,yDAAyD;AACpE,cAAa,WAAW;AACxB;AACA;AACA;AACA;;AAEA;AACA,uCAAsC,KAAK;AAC3C,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,gBAAgB;AAC3B,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxHA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA,YAAW,UAAU;AACrB,YAAW,KAAK;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,YAAW,kDAAkD;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,wDAAwD;AACnE,cAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,gBAAgB;AAC3B,aAAY;AACZ;AACA;AACA;AACA;;AAEA;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbkCAAiC,uDAAuD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACdA;;AAEA;AACA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf,oBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf,gBAAe;AACf,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,uBAAuB;AAC1D;AACA;AACA;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,mBAAmB;AAC1D;AACA;AACA;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACdA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA4C,YAAY;AACxD;AACA,UAAS;AACT,6CAA4C,YAAY;AACxD;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC9MA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;AC1BA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB,YAAW,OAAO,WAAW;AAC7B,cAAa,OAAO;AACpB;AACA;AACA,yBAAwB;;AAExB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtBA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;;;;;;;AClBA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACrDA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,cAAa,OAAO;AACpB;AACA;;AAEA;;;;;;;AChBA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,EAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,YAAY;AACvB,cAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;ACXA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA;AACA,EAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;;AAEd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,wBAAuB,aAAa;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,sBAAsB;AACrC,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAwB,KAAK;AAC7B;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA,6BAA4B,OAAO;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,KAAK;AACxB;;AAEA;AACA,2CAA0C,OAAO;;AAEjD;;AAEA,6BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,cAAc;;AAE7B;AACA,gBAAe,YAAY;;AAE3B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,gCAA+B,SAAS;AACxC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B,KAAK;AACnC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8CAA6C,GAAG;AAChD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA4B,cAAc;;AAE1C;;AAEA;;AAEA;AACA,gCAA+B,SAAS;AACxC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,aAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sEAAqE,EAAE;AACvE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA,gBAAe,EAAE;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA,yDAAwD,IAAI,OAAO,IAAI;AACvE;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAgC,KAAK;;AAErC;AACA,yBAAwB,QAAQ;AAChC;;AAEA,6BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA,4BAA2B,SAAS;AACpC;;AAEA;AACA,+BAA8B,SAAS;AACvC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA,kCAAiC,GAAG;AACpC,oCAAmC,GAAG;AACtC,+CAA8C,GAAG;AACjD,6CAA4C,GAAG;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,6CAA4C,GAAG;AAC/C,2CAA0C,GAAG;AAC7C,wDAAuD,GAAG;AAC1D,sDAAqD,GAAG;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,uCAAsC,GAAG;AACzC,qCAAoC,GAAG;AACvC,kDAAiD,GAAG;AACpD,gDAA+C,GAAG;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,sDAAqD,WAAW;AAChE;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sEAAqE,KAAK;AAC1E,oEAAmE,KAAK;AACxE;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAe,EAAE;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,sBAAsB;AAChC,cAAa,OAAO;AACpB;AACA,oDAAmD,GAAG;AACtD,kDAAiD,GAAG;AACpD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,GAAG,SAAS,GAAG;AAC/B;AACA;AACA;AACA;AACA,WAAU,sBAAsB;AAChC,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAiB;;AAEjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,2CAA0C,GAAG;AAC7C,yCAAwC,GAAG;AAC3C,sDAAqD,GAAG;AACxD,oDAAmD,GAAG;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB,cAAa,OAAO;AACpB;AACA,sCAAqC,EAAE;AACvC,wCAAuC,EAAE;AACzC,+CAA8C,GAAG;AACjD,6CAA4C,GAAG;AAC/C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA,UAAS;AACT;;AAEA;AACA;;AAEA;AACA,wBAAuB,MAAM;AAC7B;;AAEA;AACA,cAAa;;AAEb;;AAEA;AACA,sCAAqC,OAAO;;AAE5C,kBAAiB;AACjB;AACA;;AAEA;AACA,cAAa;AACb;;AAEA;AACA;;AAEA;AACA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAiB;;AAEjB,0DAAyD,EAAE;AAC3D,wDAAuD,EAAE;AACzD;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,OAAO;AACtB;;AAEA,0CAAyC,KAAK;AAC9C;AACA;;AAEA;AACA;;AAEA;AACA,4BAA2B,0BAA0B;;AAErD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,SAAS;;AAEvC;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,UAAU;AAC7B,yCAAwC,QAAQ;AAChD;;AAEA,wBAAuB,gBAAgB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAmB,cAAc;;AAEjC;;AAEA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iCAAgC,sBAAsB;AACtD;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA,iCAAgC,UAAU;;AAE1C;AACA,mCAAkC,QAAQ;;AAE1C;AACA;;AAEA;AACA,wBAAuB,KAAK;;AAE5B;;AAEA;AACA,cAAa;AACb;;AAEA;;AAEA;AACA,kCAAiC,MAAM;;AAEvC,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAgC,KAAK;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb,mCAAkC,QAAQ;;AAE1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAmB,MAAM;AACzB;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,uBAAuB;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB,yBAAyB;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,wBAAwB;AACnD;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA2B,WAAW;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,0BAAyB;AACzB;AACA;AACA,0BAAyB;;AAEzB;AACA;;AAEA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;;AAEA,sBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA,wCAAuC,SAAS;AAChD;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAe,EAAE;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;;AAErB;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oBAAmB,cAAc;;AAEjC;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA,wBAAuB,KAAK;AAC5B;;AAEA;AACA,cAAa;;AAEb;AACA;;AAEA;AACA,kCAAiC,MAAM;;AAEvC;AACA;AACA;;AAEA,kBAAiB;AACjB;;AAEA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAuB,KAAK;AAC5B;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAmB,aAAa;;AAEhC;AACA,4BAA2B,SAAS;AACpC;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,gCAA+B,EAAE;;AAEjC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,EAAE;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB;;AAErB;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAwC,SAAS;;AAEjD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;;AAEA;;AAEA;;AAEA;AACA,gCAA+B,kBAAkB;;AAEjD;AACA;AACA;AACA;AACA,sBAAqB;;AAErB;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA,sCAAqC,SAAS;;AAE9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAuB,EAAE;;AAEzB;AACA;;AAEA;AACA,gDAA+C,SAAS;;AAExD;;AAEA,qCAAoC,SAAS;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC,eAAe;AAC/C;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,eAAc;AACd;AACA,0BAAyB;AACzB;;;AAGA;AACA;AACA;AACA,eAAc;AACd;AACA,2BAA0B;AAC1B;;;AAGA;AACA;AACA;AACA,eAAc;AACd;AACA,2BAA0B;AAC1B;;;AAGA;AACA;AACA;AACA,eAAc;AACd;AACA,2BAA0B;AAC1B;;;AAGA;AACA;AACA;AACA;AACA,eAAc,sBAAsB;AACpC,eAAc,sBAAsB;AACpC;AACA,iCAAgC;AAChC;;;AAGA;AACA;AACA;AACA,eAAc;AACd;AACA,2BAA0B;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,0BAAyB;AACzB,0BAAyB;AACzB,0BAAyB;AACzB,0BAAyB;AACzB,0BAAyB;AACzB,0BAAyB;AACzB,0BAAyB;AACzB,0BAAyB;AACzB;AACA,0BAAyB,OAAO;AAChC,yCAAwC;AACxC,yCAAwC;AACxC,yCAAwC;AACxC,yCAAwC;AACxC,yCAAwC;AACxC,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,8BAA6B,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA6C,IAAI;AACjD;;AAEA;AACA;;AAEA,2BAA0B,OAAO;AACjC;;AAEA;AACA;AACA,kBAAiB;;AAEjB,6DAA4D,EAAE;AAC9D,2DAA0D,EAAE;AAC5D;AACA;AACA;;AAEA,0BAAyB,OAAO;AAChC;;AAEA;AACA;AACA,kBAAiB;;AAEjB,4DAA2D,EAAE;AAC7D,0DAAyD,EAAE;AAC3D;AACA;AACA;;AAEA,0BAAyB,OAAO;AAChC;;AAEA;AACA;AACA,kBAAiB;;AAEjB,4DAA2D,EAAE;AAC7D,0DAAyD,EAAE;AAC3D;AACA;AACA;;AAEA,0BAAyB,OAAO;AAChC;;AAEA;AACA;AACA,kBAAiB;;AAEjB,4DAA2D,EAAE;AAC7D,0DAAyD,EAAE;AAC3D;AACA;AACA;;AAEA,uBAAsB,OAAO;AAC7B;;AAEA;AACA;AACA,kBAAiB;;AAEjB,wDAAuD,EAAE;AACzD,sDAAqD,EAAE;AACvD;AACA;AACA;;AAEA,sBAAqB,OAAO;AAC5B;;AAEA;AACA;AACA,kBAAiB;;AAEjB,wDAAuD,EAAE;AACzD,sDAAqD,EAAE;AACvD;AACA;AACA;;AAEA,wBAAuB,eAAe;AACtC;;AAEA;AACA;AACA;AACA,kBAAiB;;AAEjB,yEAAwE,EAAE;AAC1E;AACA;AACA;;AAEA,wBAAuB,eAAe;AACtC;;AAEA;AACA;AACA,kBAAiB;;AAEjB,yEAAwE,EAAE;AAC1E;AACA;AACA;;AAEA,wBAAuB,OAAO;AAC9B;;AAEA;AACA;AACA,kBAAiB;;AAEjB,0DAAyD,EAAE;AAC3D,wDAAuD,EAAE;AACzD;AACA;AACA;;AAEA,wBAAuB;AACvB;;AAEA;AACA;AACA,kBAAiB;;AAEjB,2DAA0D,IAAI;AAC9D;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,eAAc,sBAAsB;AACpC;AACA,0BAAyB;AACzB;;;AAGA;AACA;AACA;AACA,eAAc,sBAAsB;AACpC;AACA;AACA,0BAAyB,6BAA6B;;;AAGtD;AACA;AACA;AACA,eAAc;AACd;AACA,4BAA2B;AAC3B;;;AAGA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA,yBAAwB,4BAA4B;;;AAGpD;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,sBAAsB;AACpC,eAAc,sBAAsB;AACpC;AACA;AACA,+BAA8B,8BAA8B;;;AAG5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,oBAAmB,mBAAmB;AACtC;;AAEA;AACA;;AAEA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA,yBAAwB,0CAA0C;;;AAGlE;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA,yBAAwB,0CAA0C;;;AAGlE;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,uCAAuC;;AAEtE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,8CAA6C,OAAO,mDAAmD,EAAE;AACzG;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA6B;;AAE7B,sCAAqC,OAAO,aAAa,EAAE,UAAU,EAAE;AACvE;AACA;AACA;AACA,0BAAyB;;AAEzB,kCAAiC,OAAO,uBAAuB,EAAE;AACjE,kCAAiC,OAAO,qBAAqB,EAAE;AAC/D;;AAEA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,sCAAqC,OAAO,gBAAgB,EAAE;AAC9D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;;AAEjB;AACA;AACA;;AAEA;AACA,6BAA4B,wBAAwB;;AAEpD;AACA,oCAAmC,0BAA0B;;AAE7D;;AAEA;AACA;;AAEA;AACA;;AAEA,8BAA6B,OAAO,mDAAmD,EAAE;AACzF;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,4CAA2C,OAAO;AAClD;AACA;;AAEA;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA,4BAA2B,KAAK;;AAEhC;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0BAAyB;;AAEzB;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;;;AAGT;AACA;AACA;AACA,eAAc,sBAAsB;AACpC,eAAc,sBAAsB;AACpC;AACA;AACA,+BAA8B,8BAA8B;;;AAG5D;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,4BAA2B,OAAO;AAClC;;AAEA;AACA;AACA;;AAEA;AACA,0BAAyB;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB;;AAEjB;AACA;;AAEA,4BAA2B,OAAO;;AAElC;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA,wBAAuB,OAAO;AAC9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,YAAY;AAC/B;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA,wBAAuB,YAAY;AACnC;AACA;AACA;;AAEA;AACA,uCAAsC,SAAS;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,eAAc,sBAAsB;AACpC;AACA,0BAAyB;AACzB;;;AAGA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA,2BAA0B,8BAA8B;;;AAGxD;AACA;AACA;AACA,eAAc,sBAAsB;AACpC;AACA,0BAAyB;AACzB;;;AAGA;AACA;AACA;AACA,eAAc;AACd;AACA,4BAA2B;AAC3B;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB,sBAAsB;AACxC,qBAAoB,OAAO;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB;;AAErB;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAmC,gBAAgB;AACnD;AACA,uCAAsC;;AAEtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAoC;;AAEpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAkC;;AAElC;AACA;AACA,sCAAqC;;AAErC;AACA;AACA,sCAAqC;;AAErC;AACA;AACA,0CAAyC;;AAEzC;AACA;AACA,yCAAwC;;AAExC;AACA,sCAAqC;;AAErC;AACA,uCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;;AAGL;;;AAGA;AACA;;AAEA;AACA;AACA,UAAS;;AAET;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA,cAAa;AACb;;AAEA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAC;;;;;;;AC39HD;;AAEA;AACA;AACA;AACA;;;;;;;ACLA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,yBAAwB;AACxB;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA;;AAEA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,aAAY;AACZ;AACA;AACA;AACA,kBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,aAAY;AACZ,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,KAAK;AAChB,YAAW,KAAK;AAChB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,qCAAqC;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACvSA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,KAAK;AACzB,sBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,EAAE;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA,iCAAgC,OAAO;;AAEvC;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,KAAK,IAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,GAAG;AACtB;AACA;AACA,gBAAe,IAAI;AACnB,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,2BAA0B,IAAI;AAC9B,8DAA6D,IAAI;AACjE;AACA;AACA;AACA,IAAG;AACH;AACA,mBAAkB,IAAI;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iBAAgB,QAAQ,MAAM,QAAQ;AACtC;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,GAAG;AACxB;AACA;;AAEA;AACA,4BAA2B,KAAK,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,IAAI;;AAEvB;AACA,qBAAoB,GAAG;AACvB,mBAAkB,GAAG;AACrB,qBAAoB,GAAG;AACvB,mBAAkB,GAAG;AACrB,sBAAqB,KAAK,EAAE,GAAG;AAC/B,mBAAkB,GAAG;AACrB,sBAAqB,KAAK,EAAE,GAAG;AAC/B,mBAAkB,GAAG;AACrB,qBAAoB,GAAG;AACvB,mBAAkB,GAAG;AACrB,sBAAqB,MAAM;AAC3B,qBAAoB,GAAG;AACvB,mBAAkB,GAAG;AACrB;AACA;AACA;AACA;AACA,qBAAoB,KAAK;AACzB;AACA,qBAAoB,KAAK;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D;AAC3D,yDAAwD;AACxD;AACA,oBAAmB,aAAa;AAChC;;AAEA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnWA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,SAAS;AACtB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtBA;;AAEA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzCA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;;AAEA;AACA;AACA,oCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/BA;;AAEA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,cAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACfA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,cAAa,QAAQ;AACrB;AACA;AACA,8BAA6B,kBAAkB,EAAE;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,YAAW,OAAO;AAClB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB,YAAY,EAAE;AACvC,iBAAgB,sBAAsB;AACtC;;AAEA,qBAAoB;AACpB,8BAA6B,iBAAiB;;AAE9C;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA,oDAAmD,aAAa,EAAE;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bb22cc1d85e3a9b423ed\n **/","import * as Master from './master/index';\r\n\r\nMaster.render(document.getElementById('container'));\r\n\r\nrequire('style!css!autoprefixer!./style.css');\n\n\n/** WEBPACK FOOTER **\n ** d:/Projects/titan-2d/examples/index.js\n **/","import {Engine, World, Events, Bodies, RenderPixi, Composites, Constraint, Common, Composite, Sleeping} from 'matter';\r\nimport math from 'mathjs';\r\nimport pixi from 'pixi';\r\nwindow.PIXI = pixi;\r\nimport cloneDeep from 'lodash/lang/cloneDeep';\r\n\r\nexport function render(renderTo) {\r\n\r\n  const FPS = 60;\r\n  const FRAME = 1000 / FPS;\r\n\r\n  var renderOptions = {};\r\n  renderOptions.wireframes = true;\r\n  renderOptions.hasBounds = false;\r\n  renderOptions.showDebug = true;\r\n  renderOptions.showBroadphase = false;\r\n  renderOptions.showBounds = false;\r\n  renderOptions.showVelocity = false;\r\n  renderOptions.showCollisions = false;\r\n  renderOptions.showAxes = false;\r\n  renderOptions.showPositions = false;\r\n  renderOptions.showAngleIndicator = false;\r\n  renderOptions.showIds = false;\r\n  renderOptions.showShadows = false;\r\n  renderOptions.width = window.innerWidth,\r\n  renderOptions.height = window.innerHeight;\r\n\r\n  var futureEngine;\r\n\r\n  var worldOptions = {\r\n    bounds: { \r\n      min: { x: 0, y: 0 }, \r\n      max: { x: window.innerWidth, y: window.innerHeight } \r\n    },\r\n    gravity: {x: 0, y: 1}\r\n  };\r\n\r\n  // create a Matter.js engine\r\n  var engine = Engine.create({\r\n    render: {\r\n      element: renderTo,\r\n      options: renderOptions\r\n    },\r\n    world: worldOptions,\r\n    enableSleeping: true,\r\n    timing: {\r\n      timeScale: 1\r\n    }\r\n  });\r\n\r\n  engine.metrics.extended = true;\r\n\r\n  var offset = 5;\r\n  var wallSize = 10;\r\n  World.add(engine.world, [\r\n      Bodies.rectangle (window.innerWidth * 0.5, window.innerHeight - wallSize - 50, window.innerWidth - 100, wallSize, { isStatic: true })\r\n  ]);  \r\n\r\n  var rows = 10;\r\n\r\n  var stack = Composites.stack(window.innerWidth * 0.5, -200, 5, 10, 0, 0, function(x, y, column, row) {\r\n      return Bodies.rectangle(x, y, 20, 20, { friction: 0.9, restitution: 1 });\r\n  });\r\n\r\n  World.add(engine.world, stack);\r\n\r\n  var ball = Bodies.circle(window.innerWidth * 0.5 + 400, 400, 50, { density: 0.5, frictionAir: 0.001});\r\n\r\n  World.add(engine.world, ball);\r\n  World.add(engine.world, Constraint.create({\r\n      pointA: {x: window.innerWidth * 0.5, y: 10},\r\n      bodyB: ball,\r\n      stiffness: 1\r\n  }));\r\n\r\n  var balls = Composites.stack(0, 50, 500, 1, 10, 10, function(x, y, column, row) {\r\n      return Bodies.rectangle(x, y, 10, 10, { restitution: 1, friction: 0.1 });\r\n      return Bodies.circle(x, y, Common.random(5, 10), { restitution: 1, friction: 0.1 });\r\n  });\r\n\r\n  World.add(engine.world, balls);\r\n\r\n  Engine.run(engine);\r\n\r\n  setTimeout(function() {\r\n    engine.timing.timeScale = 0.1\r\n  }, 1300);\r\n\r\n  setTimeout(function() {\r\n    engine.timing.timeScale = 1;\r\n    var balls = Composites.stack(0, 50, 500, 1, 10, 10, function(x, y, column, row) {\r\n      return Bodies.rectangle(x, y, 10, 10, { restitution: 1, friction: 0.1 });\r\n      return Bodies.circle(x, y, Common.random(5, 10), { restitution: 1, friction: 0.1 });\r\n    });\r\n\r\n    World.add(engine.world, balls);\r\n  }, 3500);\r\n\r\n  setTimeout(function() {\r\n    engine.timing.timeScale = 0.1\r\n  }, 4800);\r\n\r\n  setTimeout(function() {\r\n    engine.timing.timeScale = 1;\r\n    var stack = Composites.stack(window.innerWidth * 0.5, -200, 5, 10, 0, 0, function(x, y, column, row) {\r\n        return Bodies.rectangle(x, y, 20, 20, { friction: 0.9, restitution: 1 });\r\n    });\r\n\r\n    World.add(engine.world, stack);\r\n  }, 6500);\r\n\r\n  setTimeout(function() {\r\n    engine.timing.timeScale = 0.1\r\n  }, 8000);\r\n\r\n  Events.on(engine, 'afterUpdate', function() {\r\n    \r\n  });\r\n\r\n  function cloneEngine(engine) {\r\n    return cloneDeep(engine);\r\n  }\r\n\r\n  function mergeWorlds(engineA, engineB) {\r\n    if (engineB.world) {\r\n        engineA.world = engineB.world;\r\n\r\n        Engine.clear(engineA);\r\n\r\n        var bodies = Composite.allBodies(engineA.world);\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n            Sleeping.set(body, false);\r\n            body.id = Common.nextId();\r\n        }\r\n    }\r\n  }\r\n\r\n  window.advanceFuture = function(frames = FPS) {\r\n    for (var i = 0; i < frames; ++i) {\r\n      Engine.update(futureEngine, FRAME);\r\n    }\r\n    Engine.render(futureEngine);\r\n  }\r\n\r\n\r\n  window.pauseSim = function() {\r\n    engine.enabled = false;\r\n\r\n    futureEngine = Engine.create({\r\n      render: {\r\n        element: document.getElementById('future'),\r\n        options: cloneDeep(renderOptions)\r\n      },\r\n      world: cloneDeep(worldOptions),\r\n      enableSleeping: true\r\n    });\r\n\r\n    mergeWorlds(futureEngine, cloneEngine(engine));\r\n\r\n    window.futureEngine = futureEngine;\r\n  };\r\n\r\n\r\n  window.engine = engine;\r\n  window.math = math;\r\n\r\n}\r\n\r\nexport function cleanup(cleanFrom) {\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** d:/Projects/titan-2d/examples/master/index.js\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./style.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./../node_modules/autoprefixer-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader!./~/css-loader!./~/autoprefixer-loader!./examples/style.css\n ** module id = 2\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\nexports.push([module.id, \"* {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  font-family: \\\"Helvetica Neue\\\", Arial, sans-serif;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\ncanvas {\\r\\n  position: absolute;\\r\\n}\", \"\"]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/autoprefixer-loader!./examples/style.css\n ** module id = 3\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0;\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction createStyleElement() {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tvar head = getHeadElement();\r\n\tstyleElement.type = \"text/css\";\r\n\thead.appendChild(styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement() {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tvar head = getHeadElement();\r\n\tlinkElement.rel = \"stylesheet\";\r\n\thead.appendChild(linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement());\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement();\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement();\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(JSON.stringify(sourceMap)) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require('./lib/math.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/index.js\n ** module id = 5\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\r\n* matter.js 0.8.0-edge 2015-01-21\r\n* http://brm.io/matter-js/\r\n* License: MIT\r\n*/\r\n\r\n/**\r\n * The MIT License (MIT)\r\n * \r\n * Copyright (c) 2014 Liam Brummitt\r\n * \r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n * \r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\r\n\r\n(function() {\r\n\r\nvar Matter = {};\r\n\r\n// Begin Matter namespace closure\r\n\r\n// All Matter modules are included below during build\r\n// Outro.js then closes at the end of the file\r\n\r\n\r\n// Begin src/body/Body.js\r\n\r\n/**\r\n* The `Matter.Body` module contains methods for creating and manipulating body models.\r\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\r\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\r\n*\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n\r\n* @class Body\r\n*/\r\n\r\nvar Body = {};\r\n\r\n(function() {\r\n\r\n    Body._inertiaScale = 4;\r\n\r\n    var _nextCollidingGroupId = 1,\r\n        _nextNonCollidingGroupId = -1,\r\n        _nextCategory = 0x0001;\r\n\r\n    /**\r\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * See the properites section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {} options\r\n     * @return {body} body\r\n     */\r\n    Body.create = function(options) {\r\n        var defaults = {\r\n            id: Common.nextId(),\r\n            type: 'body',\r\n            label: 'Body',\r\n            angle: 0,\r\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\r\n            position: { x: 0, y: 0 },\r\n            force: { x: 0, y: 0 },\r\n            torque: 0,\r\n            positionImpulse: { x: 0, y: 0 },\r\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\r\n            speed: 0,\r\n            angularSpeed: 0,\r\n            velocity: { x: 0, y: 0 },\r\n            angularVelocity: 0,\r\n            isStatic: false,\r\n            isSleeping: false,\r\n            motion: 0,\r\n            sleepThreshold: 60,\r\n            density: 0.001,\r\n            restitution: 0,\r\n            friction: 0.1,\r\n            frictionAir: 0.01,\r\n            collisionFilter: {\r\n                category: 0x0001,\r\n                mask: 0xFFFFFFFF,\r\n                group: 0\r\n            },\r\n            slop: 0.05,\r\n            timeScale: 1,\r\n            render: {\r\n                visible: true,\r\n                sprite: {\r\n                    xScale: 1,\r\n                    yScale: 1\r\n                },\r\n                lineWidth: 1.5\r\n            }\r\n        };\r\n\r\n        var body = Common.extend(defaults, options);\r\n\r\n        _initProperties(body, options);\r\n\r\n        return body;\r\n    };\r\n\r\n    /**\r\n     * Returns the next unique group index for which bodies will collide.\r\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\r\n     * See `body.collisionFilter` for more information.\r\n     * @method nextGroup\r\n     * @param {bool} [isNonColliding=false]\r\n     * @return {Number} Unique group index\r\n     */\r\n    Body.nextGroup = function(isNonColliding) {\r\n        if (isNonColliding)\r\n            return _nextNonCollidingGroupId--;\r\n\r\n        return _nextCollidingGroupId++;\r\n    };\r\n\r\n    /**\r\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\r\n     * There are 32 available. See `body.collisionFilter` for more information.\r\n     * @method nextCategory\r\n     * @return {Number} Unique category bitfield\r\n     */\r\n    Body.nextCategory = function() {\r\n        _nextCategory = _nextCategory << 1;\r\n        return _nextCategory;\r\n    };\r\n\r\n    /**\r\n     * Initialises body properties.\r\n     * @method _initProperties\r\n     * @private\r\n     * @param {body} body\r\n     * @param {} options\r\n     */\r\n    var _initProperties = function(body, options) {\r\n        // init required properties\r\n        Body.set(body, {\r\n            bounds: body.bounds || Bounds.create(body.vertices),\r\n            positionPrev: body.positionPrev || Vector.clone(body.position),\r\n            anglePrev: body.anglePrev || body.angle,\r\n            vertices: body.vertices,\r\n            isStatic: body.isStatic,\r\n            isSleeping: body.isSleeping\r\n        });\r\n\r\n        Vertices.rotate(body.vertices, body.angle, body.position);\r\n        Axes.rotate(body.axes, body.angle);\r\n        Bounds.update(body.bounds, body.vertices, body.velocity);\r\n\r\n        // allow options to override the automatically calculated properties\r\n        Body.set(body, {\r\n            axes: options.axes || body.axes,\r\n            area: options.area || body.area,\r\n            mass: options.mass || body.mass,\r\n            inertia: options.inertia || body.inertia\r\n        });\r\n\r\n        // render properties\r\n        var defaultFillStyle = (body.isStatic ? '#eeeeee' : Common.choose(['#556270', '#4ECDC4', '#C7F464', '#FF6B6B', '#C44D58'])),\r\n            defaultStrokeStyle = Common.shadeColor(defaultFillStyle, -20);\r\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\r\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\r\n    };\r\n\r\n    /**\r\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\r\n     * Prefer to use the actual setter functions in performance critical situations.\r\n     * @method set\r\n     * @param {body} body\r\n     * @param {} settings A property name (or map of properties and values) to set on the body.\r\n     * @param {} value The value to set if `settings` is a single property name.\r\n     */\r\n    Body.set = function(body, settings, value) {\r\n        var property;\r\n\r\n        if (typeof settings === 'string') {\r\n            property = settings;\r\n            settings = {};\r\n            settings[property] = value;\r\n        }\r\n\r\n        for (property in settings) {\r\n            value = settings[property];\r\n\r\n            if (!settings.hasOwnProperty(property))\r\n                continue;\r\n\r\n            switch (property) {\r\n\r\n            case 'isStatic':\r\n                Body.setStatic(body, value);\r\n                break;\r\n            case 'isSleeping':\r\n                Sleeping.set(body, value);\r\n                break;\r\n            case 'mass':\r\n                Body.setMass(body, value);\r\n                break;\r\n            case 'density':\r\n                Body.setDensity(body, value);\r\n                break;\r\n            case 'inertia':\r\n                Body.setInertia(body, value);\r\n                break;\r\n            case 'vertices':\r\n                Body.setVertices(body, value);\r\n                break;\r\n            case 'position':\r\n                Body.setPosition(body, value);\r\n                break;\r\n            case 'angle':\r\n                Body.setAngle(body, value);\r\n                break;\r\n            case 'velocity':\r\n                Body.setVelocity(body, value);\r\n                break;\r\n            case 'angularVelocity':\r\n                Body.setAngularVelocity(body, value);\r\n                break;\r\n            default:\r\n                body[property] = value;\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\r\n     * @method setStatic\r\n     * @param {body} body\r\n     * @param {bool} isStatic\r\n     */\r\n    Body.setStatic = function(body, isStatic) {\r\n        body.isStatic = isStatic;\r\n\r\n        if (isStatic) {\r\n            body.restitution = 0;\r\n            body.friction = 1;\r\n            body.mass = body.inertia = body.density = Infinity;\r\n            body.inverseMass = body.inverseInertia = 0;\r\n\r\n            body.positionPrev.x = body.position.x;\r\n            body.positionPrev.y = body.position.y;\r\n            body.anglePrev = body.angle;\r\n            body.angularVelocity = 0;\r\n            body.speed = 0;\r\n            body.angularSpeed = 0;\r\n            body.motion = 0;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Sets the mass of the body. Inverse mass and density are automatically updated to reflect the change.\r\n     * @method setMass\r\n     * @param {body} body\r\n     * @param {number} mass\r\n     */\r\n    Body.setMass = function(body, mass) {\r\n        body.mass = mass;\r\n        body.inverseMass = 1 / body.mass;\r\n        body.density = body.mass / body.area;\r\n    };\r\n\r\n    /**\r\n     * Sets the density of the body. Mass is automatically updated to reflect the change.\r\n     * @method setDensity\r\n     * @param {body} body\r\n     * @param {number} density\r\n     */\r\n    Body.setDensity = function(body, density) {\r\n        Body.setMass(body, density * body.area);\r\n        body.density = density;\r\n    };\r\n\r\n    /**\r\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \r\n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\r\n     * @method setInertia\r\n     * @param {body} body\r\n     * @param {number} inertia\r\n     */\r\n    Body.setInertia = function(body, inertia) {\r\n        body.inertia = inertia;\r\n        body.inverseInertia = 1 / body.inertia;\r\n    };\r\n\r\n    /**\r\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\r\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\r\n     * They are then automatically translated to world space based on `body.position`.\r\n     *\r\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\r\n     * Vertices must form a convex hull, concave hulls are not supported.\r\n     *\r\n     * @method setVertices\r\n     * @param {body} body\r\n     * @param {vector[]} vertices\r\n     */\r\n    Body.setVertices = function(body, vertices) {\r\n        // change vertices\r\n        if (vertices[0].body === body) {\r\n            body.vertices = vertices;\r\n        } else {\r\n            body.vertices = Vertices.create(vertices, body);\r\n        }\r\n\r\n        // update properties\r\n        body.axes = Axes.fromVertices(body.vertices);\r\n        body.area = Vertices.area(body.vertices);\r\n        Body.setMass(body, body.density * body.area);\r\n\r\n        // orient vertices around the centre of mass at origin (0, 0)\r\n        var centre = Vertices.centre(body.vertices);\r\n        Vertices.translate(body.vertices, centre, -1);\r\n\r\n        // update inertia while vertices are at origin (0, 0)\r\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\r\n\r\n        // update geometry\r\n        Vertices.translate(body.vertices, body.position);\r\n        Bounds.update(body.bounds, body.vertices, body.velocity);\r\n    };\r\n\r\n    /**\r\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\r\n     * @method setPosition\r\n     * @param {body} body\r\n     * @param {vector} position\r\n     */\r\n    Body.setPosition = function(body, position) {\r\n        var delta = Vector.sub(position, body.position);\r\n\r\n        body.position.x = position.x;\r\n        body.position.y = position.y;\r\n        body.positionPrev.x += delta.x;\r\n        body.positionPrev.y += delta.y;\r\n\r\n        Vertices.translate(body.vertices, delta);\r\n        Bounds.update(body.bounds, body.vertices, body.velocity);\r\n    };\r\n\r\n    /**\r\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\r\n     * @method setAngle\r\n     * @param {body} body\r\n     * @param {number} angle\r\n     */\r\n    Body.setAngle = function(body, angle) {\r\n        var delta = angle - body.angle;\r\n\r\n        body.angle = angle;\r\n        body.anglePrev += delta;\r\n\r\n        Vertices.rotate(body.vertices, delta, body.position);\r\n        Axes.rotate(body.axes, delta);\r\n        Bounds.update(body.bounds, body.vertices, body.velocity);\r\n    };\r\n\r\n    /**\r\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\r\n     * @method setVelocity\r\n     * @param {body} body\r\n     * @param {vector} velocity\r\n     */\r\n    Body.setVelocity = function(body, velocity) {\r\n        body.positionPrev.x = body.position.x - velocity.x;\r\n        body.positionPrev.y = body.position.y - velocity.y;\r\n        body.velocity.x = velocity.x;\r\n        body.velocity.y = velocity.y;\r\n        body.speed = Vector.magnitude(body.velocity);\r\n    };\r\n\r\n    /**\r\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\r\n     * @method setAngularVelocity\r\n     * @param {body} body\r\n     * @param {number} velocity\r\n     */\r\n    Body.setAngularVelocity = function(body, velocity) {\r\n        body.anglePrev = body.angle - velocity;\r\n        body.angularVelocity = velocity;\r\n        body.angularSpeed = Math.abs(body.angularVelocity);\r\n    };\r\n\r\n    /**\r\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\r\n     * @method translate\r\n     * @param {body} body\r\n     * @param {vector} translation\r\n     */\r\n    Body.translate = function(body, translation) {\r\n        Body.setPosition(body, Vector.add(body.position, translation));\r\n    };\r\n\r\n    /**\r\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\r\n     * @method rotate\r\n     * @param {body} body\r\n     * @param {number} rotation\r\n     */\r\n    Body.rotate = function(body, rotation) {\r\n        Body.setAngle(body, body.angle + rotation);\r\n    };\r\n\r\n    /**\r\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\r\n     * @method scale\r\n     * @param {body} body\r\n     * @param {number} scaleX\r\n     * @param {number} scaleY\r\n     * @param {vector} [point]\r\n     */\r\n    Body.scale = function(body, scaleX, scaleY, point) {\r\n        // scale vertices\r\n        Vertices.scale(body.vertices, scaleX, scaleY, point);\r\n\r\n        // update properties\r\n        body.axes = Axes.fromVertices(body.vertices);\r\n        body.area = Vertices.area(body.vertices);\r\n        Body.setMass(body, body.density * body.area);\r\n\r\n        // update inertia (requires vertices to be at origin)\r\n        Vertices.translate(body.vertices, { x: -body.position.x, y: -body.position.y });\r\n        Body.setInertia(body, Vertices.inertia(body.vertices, body.mass));\r\n        Vertices.translate(body.vertices, { x: body.position.x, y: body.position.y });\r\n\r\n        // update bounds\r\n        Bounds.update(body.bounds, body.vertices, body.velocity);\r\n    };\r\n\r\n    /**\r\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\r\n     * @method update\r\n     * @param {body} body\r\n     * @param {number} deltaTime\r\n     * @param {number} timeScale\r\n     * @param {number} correction\r\n     */\r\n    Body.update = function(body, deltaTime, timeScale, correction) {\r\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\r\n\r\n        // from the previous step\r\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\r\n            velocityPrevX = body.position.x - body.positionPrev.x,\r\n            velocityPrevY = body.position.y - body.positionPrev.y;\r\n\r\n        // update velocity with verlet integration\r\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\r\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\r\n\r\n        body.positionPrev.x = body.position.x;\r\n        body.positionPrev.y = body.position.y;\r\n        body.position.x += body.velocity.x;\r\n        body.position.y += body.velocity.y;\r\n\r\n        // update angular velocity with verlet integration\r\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\r\n        body.anglePrev = body.angle;\r\n        body.angle += body.angularVelocity;\r\n\r\n        // track speed and acceleration\r\n        body.speed = Vector.magnitude(body.velocity);\r\n        body.angularSpeed = Math.abs(body.angularVelocity);\r\n\r\n        // transform the body geometry\r\n        Vertices.translate(body.vertices, body.velocity);\r\n        if (body.angularVelocity !== 0) {\r\n            Vertices.rotate(body.vertices, body.angularVelocity, body.position);\r\n            Axes.rotate(body.axes, body.angularVelocity);\r\n        }\r\n        Bounds.update(body.bounds, body.vertices, body.velocity);\r\n    };\r\n\r\n    /**\r\n     * Applies a force to a body from a given world-space position, including resulting torque.\r\n     * @method applyForce\r\n     * @param {body} body\r\n     * @param {vector} position\r\n     * @param {vector} force\r\n     */\r\n    Body.applyForce = function(body, position, force) {\r\n        body.force.x += force.x;\r\n        body.force.y += force.y;\r\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\r\n        body.torque += (offset.x * force.y - offset.y * force.x) * body.inverseInertia;\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\r\n     *\r\n     * @property id\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `String` denoting the type of object.\r\n     *\r\n     * @property type\r\n     * @type string\r\n     * @default \"body\"\r\n     */\r\n\r\n    /**\r\n     * An arbitrary `String` name to help the user identify and manage bodies.\r\n     *\r\n     * @property label\r\n     * @type string\r\n     * @default \"Body\"\r\n     */\r\n\r\n    /**\r\n     * A `Number` specifying the angle of the body, in radians.\r\n     *\r\n     * @property angle\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\r\n     * These should be provided about the origin `(0, 0)`. E.g.\r\n     *\r\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\r\n     *\r\n     * When passed via `Body.create`, the verticies are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\r\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \r\n     *\r\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\r\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\r\n     *\r\n     * @property vertices\r\n     * @type vector[]\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that specifies the current world-space position of the body.\r\n     *\r\n     * @property position\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\r\n     *\r\n     * @property force\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\r\n     *\r\n     * @property torque\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\r\n     *\r\n     * @readOnly\r\n     * @property speed\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\r\n     *\r\n     * @readOnly\r\n     * @property angularSpeed\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \r\n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\r\n     *\r\n     * @readOnly\r\n     * @property velocity\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \r\n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\r\n     *\r\n     * @readOnly\r\n     * @property angularVelocity\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\r\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\r\n     *\r\n     * @property isStatic\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\r\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\r\n     *\r\n     * @property isSleeping\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\r\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\r\n     *\r\n     * @readOnly\r\n     * @property motion\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\r\n     *\r\n     * @property sleepThreshold\r\n     * @type number\r\n     * @default 60\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the density of the body, that is its mass per unit area.\r\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\r\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\r\n     *\r\n     * @property density\r\n     * @type number\r\n     * @default 0.001\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\r\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\r\n     *\r\n     * @property mass\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\r\n     * If you modify this value, you must also modify the `body.mass` property.\r\n     *\r\n     * @property inverseMass\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\r\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\r\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\r\n     *\r\n     * @property inertia\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\r\n     * If you modify this value, you must also modify the `body.inertia` property.\r\n     *\r\n     * @property inverseInertia\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\r\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \r\n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\r\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\r\n     *\r\n     *     Math.max(bodyA.restitution, bodyB.restitution)\r\n     *\r\n     * @property restitution\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\r\n     * A value of `0` means that the body may slide indefinitely.\r\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\r\n     *\r\n     * The effects of the value may be non-linear. \r\n     * High values may be unstable depending on the body.\r\n     * The engine uses a Coulomb friction model including static and kinetic friction.\r\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\r\n     *\r\n     *     Math.min(bodyA.friction, bodyB.friction)\r\n     *\r\n     * @property friction\r\n     * @type number\r\n     * @default 0.1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the air friction of the body (air resistance). \r\n     * A value of `0` means the body will never slow as it moves through space.\r\n     * The higher the value, the faster a body slows when moving through space.\r\n     * The effects of the value are non-linear. \r\n     *\r\n     * @property frictionAir\r\n     * @type number\r\n     * @default 0.01\r\n     */\r\n\r\n    /**\r\n     * An `Object` that specifies the collision filtering properties of this body.\r\n     *\r\n     * Collisions between two bodies will obey the following rules:\r\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\r\n     *   they will always collide if the value is positive, and they will never collide\r\n     *   if the value is negative.\r\n     * - If the two bodies have different values of `collisionFilter.group` or if one\r\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\r\n     *\r\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\r\n     * value is used as a bit field and the category should have only one bit set, meaning that\r\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\r\n     * different collision categories available.\r\n     *\r\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\r\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\r\n     *\r\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\r\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\r\n     * are both true.\r\n     *\r\n     * @property collisionFilter\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * An Integer `Number`, that specifies the collision group this body belongs to.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter.group\r\n     * @type object\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A bit field that specifies the collision category this body belongs to.\r\n     * The category value should have only one bit set, for example `0x0001`.\r\n     * This means there are up to 32 unique collision categories available.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter.category\r\n     * @type object\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A bit mask that specifies the collision categories this body may collide with.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter.mask\r\n     * @type object\r\n     * @default -1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\r\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\r\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\r\n     *\r\n     * @property slop\r\n     * @type number\r\n     * @default 0.05\r\n     */\r\n\r\n    /**\r\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\r\n     *\r\n     * @property timeScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\r\n     *\r\n     * @property render\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates if the body should be rendered.\r\n     *\r\n     * @property render.visible\r\n     * @type boolean\r\n     * @default true\r\n     */\r\n\r\n    /**\r\n     * An `Object` that defines the sprite properties to use when rendering, if any.\r\n     *\r\n     * @property render.sprite\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\r\n     *\r\n     * @property render.sprite.texture\r\n     * @type string\r\n     */\r\n     \r\n    /**\r\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\r\n     *\r\n     * @property render.sprite.xScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\r\n     *\r\n     * @property render.sprite.yScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\r\n     * A value of `0` means no outline will be rendered.\r\n     *\r\n     * @property render.lineWidth\r\n     * @type number\r\n     * @default 1.5\r\n     */\r\n\r\n    /**\r\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\r\n     * It is the same as when using a canvas, so it accepts CSS style property values.\r\n     *\r\n     * @property render.fillStyle\r\n     * @type string\r\n     * @default a random colour\r\n     */\r\n\r\n    /**\r\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\r\n     * It is the same as when using a canvas, so it accepts CSS style property values.\r\n     *\r\n     * @property render.strokeStyle\r\n     * @type string\r\n     * @default a random colour\r\n     */\r\n\r\n    /**\r\n     * An array of unique axis vectors (edge normals) used for collision detection.\r\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\r\n     * They are constantly updated by `Body.update` during the simulation.\r\n     *\r\n     * @property axes\r\n     * @type vector[]\r\n     */\r\n     \r\n    /**\r\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\r\n     *\r\n     * @property area\r\n     * @type string\r\n     * @default \r\n     */\r\n\r\n    /**\r\n     * A `Bounds` object that defines the AABB region for the body.\r\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\r\n     *\r\n     * @property bounds\r\n     * @type bounds\r\n     */\r\n\r\n})();\r\n\r\n\r\n;   // End src/body/Body.js\r\n\r\n\r\n// Begin src/body/Composite.js\r\n\r\n/**\r\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\r\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\r\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\r\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\r\n*\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class Composite\r\n*/\r\n\r\nvar Composite = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * See the properites section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {} [options]\r\n     * @return {composite} A new composite\r\n     */\r\n    Composite.create = function(options) {\r\n        return Common.extend({ \r\n            id: Common.nextId(),\r\n            type: 'composite',\r\n            parent: null,\r\n            isModified: false,\r\n            bodies: [], \r\n            constraints: [], \r\n            composites: [],\r\n            label: 'Composite'\r\n        }, options);\r\n    };\r\n\r\n    /**\r\n     * Sets the composite's `isModified` flag. \r\n     * If `updateParents` is true, all parents will be set (default: false).\r\n     * If `updateChildren` is true, all children will be set (default: false).\r\n     * @method setModified\r\n     * @param {composite} composite\r\n     * @param {boolean} isModified\r\n     * @param {boolean} [updateParents=false]\r\n     * @param {boolean} [updateChildren=false]\r\n     */\r\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\r\n        composite.isModified = isModified;\r\n\r\n        if (updateParents && composite.parent) {\r\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\r\n        }\r\n\r\n        if (updateChildren) {\r\n            for(var i = 0; i < composite.composites.length; i++) {\r\n                var childComposite = composite.composites[i];\r\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\r\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\r\n     * @method add\r\n     * @param {composite} composite\r\n     * @param {} object\r\n     * @return {composite} The original composite with the objects added\r\n     */\r\n    Composite.add = function(composite, object) {\r\n        var objects = [].concat(object);\r\n\r\n        Events.trigger(composite, 'beforeAdd', { object: object });\r\n\r\n        for (var i = 0; i < objects.length; i++) {\r\n            var obj = objects[i];\r\n\r\n            switch (obj.type) {\r\n\r\n            case 'body':\r\n                Composite.addBody(composite, obj);\r\n                break;\r\n            case 'constraint':\r\n                Composite.addConstraint(composite, obj);\r\n                break;\r\n            case 'composite':\r\n                Composite.addComposite(composite, obj);\r\n                break;\r\n            case 'mouseConstraint':\r\n                Composite.addConstraint(composite, obj.constraint);\r\n                break;\r\n\r\n            }\r\n        }\r\n\r\n        Events.trigger(composite, 'afterAdd', { object: object });\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\r\n     * Optionally searching its children recursively.\r\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\r\n     * @method remove\r\n     * @param {composite} composite\r\n     * @param {} object\r\n     * @param {boolean} [deep=false]\r\n     * @return {composite} The original composite with the objects removed\r\n     */\r\n    Composite.remove = function(composite, object, deep) {\r\n        var objects = [].concat(object);\r\n\r\n        Events.trigger(composite, 'beforeRemove', { object: object });\r\n\r\n        for (var i = 0; i < objects.length; i++) {\r\n            var obj = objects[i];\r\n\r\n            switch (obj.type) {\r\n\r\n            case 'body':\r\n                Composite.removeBody(composite, obj, deep);\r\n                break;\r\n            case 'constraint':\r\n                Composite.removeConstraint(composite, obj, deep);\r\n                break;\r\n            case 'composite':\r\n                Composite.removeComposite(composite, obj, deep);\r\n                break;\r\n            case 'mouseConstraint':\r\n                Composite.removeConstraint(composite, obj.constraint);\r\n                break;\r\n\r\n            }\r\n        }\r\n\r\n        Events.trigger(composite, 'afterRemove', { object: object });\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Adds a composite to the given composite\r\n     * @private\r\n     * @method addComposite\r\n     * @param {composite} compositeA\r\n     * @param {composite} compositeB\r\n     * @return {composite} The original compositeA with the objects from compositeB added\r\n     */\r\n    Composite.addComposite = function(compositeA, compositeB) {\r\n        compositeA.composites.push(compositeB);\r\n        compositeB.parent = compositeA;\r\n        Composite.setModified(compositeA, true, true, false);\r\n        return compositeA;\r\n    };\r\n\r\n    /**\r\n     * Removes a composite from the given composite, and optionally searching its children recursively\r\n     * @private\r\n     * @method removeComposite\r\n     * @param {composite} compositeA\r\n     * @param {composite} compositeB\r\n     * @param {boolean} [deep=false]\r\n     * @return {composite} The original compositeA with the composite removed\r\n     */\r\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\r\n        var position = Common.indexOf(compositeA.composites, compositeB);\r\n        if (position !== -1) {\r\n            Composite.removeCompositeAt(compositeA, position);\r\n            Composite.setModified(compositeA, true, true, false);\r\n        }\r\n\r\n        if (deep) {\r\n            for (var i = 0; i < compositeA.composites.length; i++){\r\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\r\n            }\r\n        }\r\n\r\n        return compositeA;\r\n    };\r\n\r\n    /**\r\n     * Removes a composite from the given composite\r\n     * @private\r\n     * @method removeCompositeAt\r\n     * @param {composite} composite\r\n     * @param {number} position\r\n     * @return {composite} The original composite with the composite removed\r\n     */\r\n    Composite.removeCompositeAt = function(composite, position) {\r\n        composite.composites.splice(position, 1);\r\n        Composite.setModified(composite, true, true, false);\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Adds a body to the given composite\r\n     * @private\r\n     * @method addBody\r\n     * @param {composite} composite\r\n     * @param {body} body\r\n     * @return {composite} The original composite with the body added\r\n     */\r\n    Composite.addBody = function(composite, body) {\r\n        composite.bodies.push(body);\r\n        Composite.setModified(composite, true, true, false);\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Removes a body from the given composite, and optionally searching its children recursively\r\n     * @private\r\n     * @method removeBody\r\n     * @param {composite} composite\r\n     * @param {body} body\r\n     * @param {boolean} [deep=false]\r\n     * @return {composite} The original composite with the body removed\r\n     */\r\n    Composite.removeBody = function(composite, body, deep) {\r\n        var position = Common.indexOf(composite.bodies, body);\r\n        if (position !== -1) {\r\n            Composite.removeBodyAt(composite, position);\r\n            Composite.setModified(composite, true, true, false);\r\n        }\r\n\r\n        if (deep) {\r\n            for (var i = 0; i < composite.composites.length; i++){\r\n                Composite.removeBody(composite.composites[i], body, true);\r\n            }\r\n        }\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Removes a body from the given composite\r\n     * @private\r\n     * @method removeBodyAt\r\n     * @param {composite} composite\r\n     * @param {number} position\r\n     * @return {composite} The original composite with the body removed\r\n     */\r\n    Composite.removeBodyAt = function(composite, position) {\r\n        composite.bodies.splice(position, 1);\r\n        Composite.setModified(composite, true, true, false);\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Adds a constraint to the given composite\r\n     * @private\r\n     * @method addConstraint\r\n     * @param {composite} composite\r\n     * @param {constraint} constraint\r\n     * @return {composite} The original composite with the constraint added\r\n     */\r\n    Composite.addConstraint = function(composite, constraint) {\r\n        composite.constraints.push(constraint);\r\n        Composite.setModified(composite, true, true, false);\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Removes a constraint from the given composite, and optionally searching its children recursively\r\n     * @private\r\n     * @method removeConstraint\r\n     * @param {composite} composite\r\n     * @param {constraint} constraint\r\n     * @param {boolean} [deep=false]\r\n     * @return {composite} The original composite with the constraint removed\r\n     */\r\n    Composite.removeConstraint = function(composite, constraint, deep) {\r\n        var position = Common.indexOf(composite.constraints, constraint);\r\n        if (position !== -1) {\r\n            Composite.removeConstraintAt(composite, position);\r\n        }\r\n\r\n        if (deep) {\r\n            for (var i = 0; i < composite.composites.length; i++){\r\n                Composite.removeConstraint(composite.composites[i], constraint, true);\r\n            }\r\n        }\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Removes a body from the given composite\r\n     * @private\r\n     * @method removeConstraintAt\r\n     * @param {composite} composite\r\n     * @param {number} position\r\n     * @return {composite} The original composite with the constraint removed\r\n     */\r\n    Composite.removeConstraintAt = function(composite, position) {\r\n        composite.constraints.splice(position, 1);\r\n        Composite.setModified(composite, true, true, false);\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Removes all bodies, constraints and composites from the given composite\r\n     * Optionally clearing its children recursively\r\n     * @method clear\r\n     * @param {world} world\r\n     * @param {boolean} keepStatic\r\n     * @param {boolean} [deep=false]\r\n     */\r\n    Composite.clear = function(composite, keepStatic, deep) {\r\n        if (deep) {\r\n            for (var i = 0; i < composite.composites.length; i++){\r\n                Composite.clear(composite.composites[i], keepStatic, true);\r\n            }\r\n        }\r\n        \r\n        if (keepStatic) {\r\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\r\n        } else {\r\n            composite.bodies.length = 0;\r\n        }\r\n\r\n        composite.constraints.length = 0;\r\n        composite.composites.length = 0;\r\n        Composite.setModified(composite, true, true, false);\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Returns all bodies in the given composite, including all bodies in its children, recursively\r\n     * @method allBodies\r\n     * @param {composite} composite\r\n     * @return {body[]} All the bodies\r\n     */\r\n    Composite.allBodies = function(composite) {\r\n        var bodies = [].concat(composite.bodies);\r\n\r\n        for (var i = 0; i < composite.composites.length; i++)\r\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\r\n\r\n        return bodies;\r\n    };\r\n\r\n    /**\r\n     * Returns all constraints in the given composite, including all constraints in its children, recursively\r\n     * @method allConstraints\r\n     * @param {composite} composite\r\n     * @return {constraint[]} All the constraints\r\n     */\r\n    Composite.allConstraints = function(composite) {\r\n        var constraints = [].concat(composite.constraints);\r\n\r\n        for (var i = 0; i < composite.composites.length; i++)\r\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\r\n\r\n        return constraints;\r\n    };\r\n\r\n    /**\r\n     * Returns all composites in the given composite, including all composites in its children, recursively\r\n     * @method allComposites\r\n     * @param {composite} composite\r\n     * @return {composite[]} All the composites\r\n     */\r\n    Composite.allComposites = function(composite) {\r\n        var composites = [].concat(composite.composites);\r\n\r\n        for (var i = 0; i < composite.composites.length; i++)\r\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\r\n\r\n        return composites;\r\n    };\r\n\r\n    /**\r\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found\r\n     * @method get\r\n     * @param {composite} composite\r\n     * @param {number} id\r\n     * @param {string} type\r\n     * @return {object} The requested object, if found\r\n     */\r\n    Composite.get = function(composite, id, type) {\r\n        var objects,\r\n            object;\r\n\r\n        switch (type) {\r\n        case 'body':\r\n            objects = Composite.allBodies(composite);\r\n            break;\r\n        case 'constraint':\r\n            objects = Composite.allConstraints(composite);\r\n            break;\r\n        case 'composite':\r\n            objects = Composite.allComposites(composite).concat(composite);\r\n            break;\r\n        }\r\n\r\n        if (!objects)\r\n            return null;\r\n\r\n        object = objects.filter(function(object) { \r\n            return object.id.toString() === id.toString(); \r\n        });\r\n\r\n        return object.length === 0 ? null : object[0];\r\n    };\r\n\r\n    /**\r\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add)\r\n     * @method move\r\n     * @param {compositeA} compositeA\r\n     * @param {object[]} objects\r\n     * @param {compositeB} compositeB\r\n     * @return {composite} Returns compositeA\r\n     */\r\n    Composite.move = function(compositeA, objects, compositeB) {\r\n        Composite.remove(compositeA, objects);\r\n        Composite.add(compositeB, objects);\r\n        return compositeA;\r\n    };\r\n\r\n    /**\r\n     * Assigns new ids for all objects in the composite, recursively\r\n     * @method rebase\r\n     * @param {composite} composite\r\n     * @return {composite} Returns composite\r\n     */\r\n    Composite.rebase = function(composite) {\r\n        var objects = Composite.allBodies(composite)\r\n                        .concat(Composite.allConstraints(composite))\r\n                        .concat(Composite.allComposites(composite));\r\n\r\n        for (var i = 0; i < objects.length; i++) {\r\n            objects[i].id = Common.nextId();\r\n        }\r\n\r\n        Composite.setModified(composite, true, true, false);\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Translates all children in the composite by a given vector relative to their current positions, \r\n     * without imparting any velocity.\r\n     * @method translate\r\n     * @param {composite} composite\r\n     * @param {vector} translation\r\n     * @param {bool} [recursive=true]\r\n     */\r\n    Composite.translate = function(composite, translation, recursive) {\r\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            Body.translate(bodies[i], translation);\r\n        }\r\n\r\n        Composite.setModified(composite, true, true, false);\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\r\n     * @method rotate\r\n     * @param {composite} composite\r\n     * @param {number} rotation\r\n     * @param {vector} point\r\n     * @param {bool} [recursive=true]\r\n     */\r\n    Composite.rotate = function(composite, rotation, point, recursive) {\r\n        var cos = Math.cos(rotation),\r\n            sin = Math.sin(rotation),\r\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i],\r\n                dx = body.position.x - point.x,\r\n                dy = body.position.y - point.y;\r\n                \r\n            Body.setPosition(body, {\r\n                x: point.x + (dx * cos - dy * sin),\r\n                y: point.y + (dx * sin + dy * cos)\r\n            });\r\n\r\n            Body.rotate(body, rotation);\r\n        }\r\n\r\n        Composite.setModified(composite, true, true, false);\r\n\r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\r\n     * @method scale\r\n     * @param {composite} composite\r\n     * @param {number} scaleX\r\n     * @param {number} scaleY\r\n     * @param {vector} point\r\n     * @param {bool} [recursive=true]\r\n     */\r\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\r\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i],\r\n                dx = body.position.x - point.x,\r\n                dy = body.position.y - point.y;\r\n                \r\n            Body.setPosition(body, {\r\n                x: point.x + dx * scaleX,\r\n                y: point.y + dy * scaleY\r\n            });\r\n\r\n            Body.scale(body, scaleX, scaleY);\r\n        }\r\n\r\n        Composite.setModified(composite, true, true, false);\r\n\r\n        return composite;\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Events Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n    * Fired when a call to `Composite.add` is made, before objects have been added.\r\n    *\r\n    * @event beforeAdd\r\n    * @param {} event An event object\r\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when a call to `Composite.add` is made, after objects have been added.\r\n    *\r\n    * @event afterAdd\r\n    * @param {} event An event object\r\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\r\n    *\r\n    * @event beforeRemove\r\n    * @param {} event An event object\r\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\r\n    *\r\n    * @event afterRemove\r\n    * @param {} event An event object\r\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\r\n     *\r\n     * @property id\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `String` denoting the type of object.\r\n     *\r\n     * @property type\r\n     * @type string\r\n     * @default \"composite\"\r\n     */\r\n\r\n    /**\r\n     * An arbitrary `String` name to help the user identify and manage composites.\r\n     *\r\n     * @property label\r\n     * @type string\r\n     * @default \"Composite\"\r\n     */\r\n\r\n    /**\r\n     * A flag that specifies whether the composite has been modified during the current step.\r\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\r\n     * If you need to change it manually, you should use the `Composite.setModified` method.\r\n     *\r\n     * @property isModified\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\r\n     *\r\n     * @property parent\r\n     * @type composite\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * An array of `Body` that are _direct_ children of this composite.\r\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\r\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\r\n     *\r\n     * @property bodies\r\n     * @type body[]\r\n     * @default []\r\n     */\r\n\r\n    /**\r\n     * An array of `Constraint` that are _direct_ children of this composite.\r\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\r\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\r\n     *\r\n     * @property constraints\r\n     * @type constraint[]\r\n     * @default []\r\n     */\r\n\r\n    /**\r\n     * An array of `Composite` that are _direct_ children of this composite.\r\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\r\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\r\n     *\r\n     * @property composites\r\n     * @type composite[]\r\n     * @default []\r\n     */\r\n\r\n})();\r\n\r\n;   // End src/body/Composite.js\r\n\r\n\r\n// Begin src/body/World.js\r\n\r\n/**\r\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\r\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\r\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\r\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\r\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\r\n*\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class World\r\n*/\r\n\r\nvar World = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * See the properites section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @constructor\r\n     * @param {} options\r\n     * @return {world} A new world\r\n     */\r\n    World.create = function(options) {\r\n        var composite = Composite.create();\r\n\r\n        var defaults = {\r\n            label: 'World',\r\n            gravity: { x: 0, y: 1 },\r\n            bounds: { \r\n                min: { x: 0, y: 0 }, \r\n                max: { x: 800, y: 600 } \r\n            }\r\n        };\r\n        \r\n        return Common.extend(composite, defaults, options);\r\n    };\r\n\r\n    // World is a Composite body\r\n    // see src/module/Outro.js for these aliases:\r\n    \r\n    /**\r\n     * An alias for Composite.clear since World is also a Composite\r\n     * @method clear\r\n     * @param {world} world\r\n     * @param {boolean} keepStatic\r\n     */\r\n\r\n    /**\r\n     * An alias for Composite.add since World is also a Composite\r\n     * @method addComposite\r\n     * @param {world} world\r\n     * @param {composite} composite\r\n     * @return {world} The original world with the objects from composite added\r\n     */\r\n    \r\n     /**\r\n      * An alias for Composite.addBody since World is also a Composite\r\n      * @method addBody\r\n      * @param {world} world\r\n      * @param {body} body\r\n      * @return {world} The original world with the body added\r\n      */\r\n\r\n     /**\r\n      * An alias for Composite.addConstraint since World is also a Composite\r\n      * @method addConstraint\r\n      * @param {world} world\r\n      * @param {constraint} constraint\r\n      * @return {world} The original world with the constraint added\r\n      */\r\n\r\n})();\r\n\r\n;   // End src/body/World.js\r\n\r\n\r\n// Begin src/collision/Contact.js\r\n\r\n/**\r\n* _Internal Class_, not generally used outside of the engine's internals.\r\n*\r\n* @class Contact\r\n*/\r\n\r\nvar Contact = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Description\r\n     * @method create\r\n     * @param {vertex} vertex\r\n     * @return {contact} A new contact\r\n     */\r\n    Contact.create = function(vertex) {\r\n        return {\r\n            id: Contact.id(vertex),\r\n            vertex: vertex,\r\n            normalImpulse: 0,\r\n            tangentImpulse: 0\r\n        };\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @method id\r\n     * @param {vertex} vertex\r\n     * @return {string} Unique contactID\r\n     */\r\n    Contact.id = function(vertex) {\r\n        return vertex.body.id + '_' + vertex.index;\r\n    };\r\n\r\n})();\r\n\r\n\r\n;   // End src/collision/Contact.js\r\n\r\n\r\n// Begin src/collision/Detector.js\r\n\r\n/**\r\n* _Internal Class_, not generally used outside of the engine's internals.\r\n*\r\n* @class Detector\r\n*/\r\n\r\n// TODO: speculative contacts\r\n\r\nvar Detector = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Description\r\n     * @method collisions\r\n     * @param {pair[]} broadphasePairs\r\n     * @param {engine} engine\r\n     * @return {array} collisions\r\n     */\r\n    Detector.collisions = function(broadphasePairs, engine) {\r\n        var collisions = [],\r\n            metrics = engine.metrics,\r\n            pairsTable = engine.pairs.table;\r\n\r\n        for (var i = 0; i < broadphasePairs.length; i++) {\r\n            var bodyA = broadphasePairs[i][0], \r\n                bodyB = broadphasePairs[i][1];\r\n\r\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\r\n                continue;\r\n            \r\n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\r\n                continue;\r\n\r\n            metrics.midphaseTests += 1;\r\n\r\n            // mid phase\r\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\r\n\r\n                // find a previous collision we could reuse\r\n                var pairId = Pair.id(bodyA, bodyB),\r\n                    pair = pairsTable[pairId],\r\n                    previousCollision;\r\n\r\n                if (pair && pair.isActive) {\r\n                    previousCollision = pair.collision;\r\n                } else {\r\n                    previousCollision = null;\r\n                }\r\n\r\n                // narrow phase\r\n                var collision = SAT.collides(bodyA, bodyB, previousCollision);\r\n\r\n                metrics.narrowphaseTests += 1;\r\n\r\n                if (collision.reused)\r\n                    metrics.narrowReuseCount += 1;\r\n\r\n                if (collision.collided) {\r\n                    collisions.push(collision);\r\n                    metrics.narrowDetections += 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisions;\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method bruteForce\r\n     * @param {body[]} bodies\r\n     * @param {engine} engine\r\n     * @return {array} collisions\r\n     */\r\n    Detector.bruteForce = function(bodies, engine) {\r\n        var collisions = [],\r\n            metrics = engine.metrics,\r\n            pairsTable = engine.pairs.table;\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            for (var j = i + 1; j < bodies.length; j++) {\r\n                var bodyA = bodies[i], \r\n                    bodyB = bodies[j];\r\n\r\n                // NOTE: could share a function for the below, but may drop performance?\r\n\r\n                if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\r\n                    continue;\r\n                \r\n                if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\r\n                    continue;\r\n\r\n                metrics.midphaseTests += 1;\r\n\r\n                // mid phase\r\n                if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\r\n\r\n                    // find a previous collision we could reuse\r\n                    var pairId = Pair.id(bodyA, bodyB),\r\n                        pair = pairsTable[pairId],\r\n                        previousCollision;\r\n\r\n                    if (pair && pair.isActive) {\r\n                        previousCollision = pair.collision;\r\n                    } else {\r\n                        previousCollision = null;\r\n                    }\r\n\r\n                    // narrow phase\r\n                    var collision = SAT.collides(bodyA, bodyB, previousCollision);\r\n\r\n                    metrics.narrowphaseTests += 1;\r\n\r\n                    if (collision.reused)\r\n                        metrics.narrowReuseCount += 1;\r\n\r\n                    if (collision.collided) {\r\n                        collisions.push(collision);\r\n                        metrics.narrowDetections += 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisions;\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\r\n     * See `body.collisionFilter` for more information.\r\n     * @method canCollide\r\n     * @param {} filterA\r\n     * @param {} filterB\r\n     * @return {bool} `true` if collision can occur\r\n     */\r\n    Detector.canCollide = function(filterA, filterB) {\r\n        if (filterA.group === filterB.group && filterA.group !== 0)\r\n            return filterA.group > 0;\r\n\r\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\r\n    };\r\n\r\n})();\r\n\r\n\r\n;   // End src/collision/Detector.js\r\n\r\n\r\n// Begin src/collision/Grid.js\r\n\r\n/**\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class Grid\r\n*/\r\n\r\nvar Grid = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Description\r\n     * @method create\r\n     * @param {} options\r\n     * @return {grid} A new grid\r\n     */\r\n    Grid.create = function(options) {\r\n        var defaults = {\r\n            controller: Grid,\r\n            detector: Detector.collisions,\r\n            buckets: {},\r\n            pairs: {},\r\n            pairsList: [],\r\n            bucketWidth: 48,\r\n            bucketHeight: 48\r\n        };\r\n\r\n        return Common.extend(defaults, options);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method update\r\n     * @param {grid} grid\r\n     * @param {body[]} bodies\r\n     * @param {engine} engine\r\n     * @param {boolean} forceUpdate\r\n     */\r\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\r\n        var i, col, row,\r\n            world = engine.world,\r\n            buckets = grid.buckets,\r\n            bucket,\r\n            bucketId,\r\n            metrics = engine.metrics,\r\n            gridChanged = false;\r\n\r\n        metrics.broadphaseTests = 0;\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (body.isSleeping && !forceUpdate)\r\n                continue;\r\n\r\n            // don't update out of world bodies\r\n            if (body.bounds.max.x < 0 || body.bounds.min.x > world.bounds.width\r\n                || body.bounds.max.y < 0 || body.bounds.min.y > world.bounds.height)\r\n                continue;\r\n\r\n            var newRegion = _getRegion(grid, body);\r\n\r\n            // if the body has changed grid region\r\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\r\n\r\n                metrics.broadphaseTests += 1;\r\n\r\n                if (!body.region || forceUpdate)\r\n                    body.region = newRegion;\r\n\r\n                var union = _regionUnion(newRegion, body.region);\r\n\r\n                // update grid buckets affected by region change\r\n                // iterate over the union of both regions\r\n                for (col = union.startCol; col <= union.endCol; col++) {\r\n                    for (row = union.startRow; row <= union.endRow; row++) {\r\n                        bucketId = _getBucketId(col, row);\r\n                        bucket = buckets[bucketId];\r\n\r\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\r\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\r\n\r\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\r\n                                                && row >= body.region.startRow && row <= body.region.endRow);\r\n\r\n                        // remove from old region buckets\r\n                        if (!isInsideNewRegion && isInsideOldRegion) {\r\n                            if (isInsideOldRegion) {\r\n                                if (bucket)\r\n                                    _bucketRemoveBody(grid, bucket, body);\r\n                            }\r\n                        }\r\n\r\n                        // add to new region buckets\r\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\r\n                            if (!bucket)\r\n                                bucket = _createBucket(buckets, bucketId);\r\n                            _bucketAddBody(grid, bucket, body);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // set the new region\r\n                body.region = newRegion;\r\n\r\n                // flag changes so we can update pairs\r\n                gridChanged = true;\r\n            }\r\n        }\r\n\r\n        // update pairs list only if pairs changed (i.e. a body changed region)\r\n        if (gridChanged)\r\n            grid.pairsList = _createActivePairsList(grid);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method clear\r\n     * @param {grid} grid\r\n     */\r\n    Grid.clear = function(grid) {\r\n        grid.buckets = {};\r\n        grid.pairs = {};\r\n        grid.pairsList = [];\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method _regionUnion\r\n     * @private\r\n     * @param {} regionA\r\n     * @param {} regionB\r\n     * @return CallExpression\r\n     */\r\n    var _regionUnion = function(regionA, regionB) {\r\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\r\n            endCol = Math.max(regionA.endCol, regionB.endCol),\r\n            startRow = Math.min(regionA.startRow, regionB.startRow),\r\n            endRow = Math.max(regionA.endRow, regionB.endRow);\r\n\r\n        return _createRegion(startCol, endCol, startRow, endRow);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method _getRegion\r\n     * @private\r\n     * @param {} grid\r\n     * @param {} body\r\n     * @return CallExpression\r\n     */\r\n    var _getRegion = function(grid, body) {\r\n        var bounds = body.bounds,\r\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\r\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\r\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\r\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\r\n\r\n        return _createRegion(startCol, endCol, startRow, endRow);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method _createRegion\r\n     * @private\r\n     * @param {} startCol\r\n     * @param {} endCol\r\n     * @param {} startRow\r\n     * @param {} endRow\r\n     * @return ObjectExpression\r\n     */\r\n    var _createRegion = function(startCol, endCol, startRow, endRow) {\r\n        return { \r\n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\r\n            startCol: startCol, \r\n            endCol: endCol, \r\n            startRow: startRow, \r\n            endRow: endRow \r\n        };\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method _getBucketId\r\n     * @private\r\n     * @param {} column\r\n     * @param {} row\r\n     * @return BinaryExpression\r\n     */\r\n    var _getBucketId = function(column, row) {\r\n        return column + ',' + row;\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method _createBucket\r\n     * @private\r\n     * @param {} buckets\r\n     * @param {} bucketId\r\n     * @return bucket\r\n     */\r\n    var _createBucket = function(buckets, bucketId) {\r\n        var bucket = buckets[bucketId] = [];\r\n        return bucket;\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method _bucketAddBody\r\n     * @private\r\n     * @param {} grid\r\n     * @param {} bucket\r\n     * @param {} body\r\n     */\r\n    var _bucketAddBody = function(grid, bucket, body) {\r\n        // add new pairs\r\n        for (var i = 0; i < bucket.length; i++) {\r\n            var bodyB = bucket[i];\r\n\r\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\r\n                continue;\r\n\r\n            // keep track of the number of buckets the pair exists in\r\n            // important for Grid.update to work\r\n            var pairId = Pair.id(body, bodyB),\r\n                pair = grid.pairs[pairId];\r\n\r\n            if (pair) {\r\n                pair[2] += 1;\r\n            } else {\r\n                grid.pairs[pairId] = [body, bodyB, 1];\r\n            }\r\n        }\r\n\r\n        // add to bodies (after pairs, otherwise pairs with self)\r\n        bucket.push(body);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method _bucketRemoveBody\r\n     * @private\r\n     * @param {} grid\r\n     * @param {} bucket\r\n     * @param {} body\r\n     */\r\n    var _bucketRemoveBody = function(grid, bucket, body) {\r\n        // remove from bucket\r\n        bucket.splice(Common.indexOf(bucket, body), 1);\r\n\r\n        // update pair counts\r\n        for (var i = 0; i < bucket.length; i++) {\r\n            // keep track of the number of buckets the pair exists in\r\n            // important for _createActivePairsList to work\r\n            var bodyB = bucket[i],\r\n                pairId = Pair.id(body, bodyB),\r\n                pair = grid.pairs[pairId];\r\n\r\n            if (pair)\r\n                pair[2] -= 1;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method _createActivePairsList\r\n     * @private\r\n     * @param {} grid\r\n     * @return pairs\r\n     */\r\n    var _createActivePairsList = function(grid) {\r\n        var pairKeys,\r\n            pair,\r\n            pairs = [];\r\n\r\n        // grid.pairs is used as a hashmap\r\n        pairKeys = Common.keys(grid.pairs);\r\n\r\n        // iterate over grid.pairs\r\n        for (var k = 0; k < pairKeys.length; k++) {\r\n            pair = grid.pairs[pairKeys[k]];\r\n\r\n            // if pair exists in at least one bucket\r\n            // it is a pair that needs further collision testing so push it\r\n            if (pair[2] > 0) {\r\n                pairs.push(pair);\r\n            } else {\r\n                delete grid.pairs[pairKeys[k]];\r\n            }\r\n        }\r\n\r\n        return pairs;\r\n    };\r\n    \r\n})();\r\n\r\n;   // End src/collision/Grid.js\r\n\r\n\r\n// Begin src/collision/Pair.js\r\n\r\n/**\r\n* _Internal Class_, not generally used outside of the engine's internals.\r\n*\r\n* @class Pair\r\n*/\r\n\r\nvar Pair = {};\r\n\r\n(function() {\r\n    \r\n    /**\r\n     * Description\r\n     * @method create\r\n     * @param {collision} collision\r\n     * @return {pair} A new pair\r\n     */\r\n    Pair.create = function(collision, timestamp) {\r\n        var bodyA = collision.bodyA,\r\n            bodyB = collision.bodyB;\r\n\r\n        var pair = {\r\n            id: Pair.id(bodyA, bodyB),\r\n            bodyA: bodyA,\r\n            bodyB: bodyB,\r\n            contacts: {},\r\n            activeContacts: [],\r\n            separation: 0,\r\n            isActive: true,\r\n            timeCreated: timestamp,\r\n            timeUpdated: timestamp,\r\n            inverseMass: bodyA.inverseMass + bodyB.inverseMass,\r\n            friction: Math.min(bodyA.friction, bodyB.friction),\r\n            restitution: Math.max(bodyA.restitution, bodyB.restitution),\r\n            slop: Math.max(bodyA.slop, bodyB.slop)\r\n        };\r\n\r\n        Pair.update(pair, collision, timestamp);\r\n\r\n        return pair;\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method update\r\n     * @param {pair} pair\r\n     * @param {collision} collision\r\n     */\r\n    Pair.update = function(pair, collision, timestamp) {\r\n        var contacts = pair.contacts,\r\n            supports = collision.supports,\r\n            activeContacts = pair.activeContacts;\r\n        \r\n        pair.collision = collision;\r\n        pair.inverseMass = collision.bodyA.inverseMass + collision.bodyB.inverseMass;\r\n        pair.friction = Math.min(collision.bodyA.friction, collision.bodyB.friction);\r\n        pair.restitution = Math.max(collision.bodyA.restitution, collision.bodyB.restitution);\r\n        pair.slop = Math.max(collision.bodyA.slop, collision.bodyB.slop);\r\n        activeContacts.length = 0;\r\n        \r\n        if (collision.collided) {\r\n            for (var i = 0; i < supports.length; i++) {\r\n                var support = supports[i],\r\n                    contactId = Contact.id(support),\r\n                    contact = contacts[contactId];\r\n\r\n                if (contact) {\r\n                    activeContacts.push(contact);\r\n                } else {\r\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\r\n                }\r\n            }\r\n\r\n            pair.separation = collision.depth;\r\n            Pair.setActive(pair, true, timestamp);\r\n        } else {\r\n            if (pair.isActive === true)\r\n                Pair.setActive(pair, false, timestamp);\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @method setActive\r\n     * @param {pair} pair\r\n     * @param {bool} isActive\r\n     */\r\n    Pair.setActive = function(pair, isActive, timestamp) {\r\n        if (isActive) {\r\n            pair.isActive = true;\r\n            pair.timeUpdated = timestamp;\r\n        } else {\r\n            pair.isActive = false;\r\n            pair.activeContacts.length = 0;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method id\r\n     * @param {body} bodyA\r\n     * @param {body} bodyB\r\n     * @return {string} Unique pairId\r\n     */\r\n    Pair.id = function(bodyA, bodyB) {\r\n        if (bodyA.id < bodyB.id) {\r\n            return bodyA.id + '_' + bodyB.id;\r\n        } else {\r\n            return bodyB.id + '_' + bodyA.id;\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n\r\n;   // End src/collision/Pair.js\r\n\r\n\r\n// Begin src/collision/Pairs.js\r\n\r\n/**\r\n* _Internal Class_, not generally used outside of the engine's internals.\r\n*\r\n* @class Pairs\r\n*/\r\n\r\nvar Pairs = {};\r\n\r\n(function() {\r\n    \r\n    var _pairMaxIdleLife = 1000;\r\n\r\n    /**\r\n     * Creates a new pairs structure\r\n     * @method create\r\n     * @param {object} options\r\n     * @return {pairs} A new pairs structure\r\n     */\r\n    Pairs.create = function(options) {\r\n        return Common.extend({ \r\n            table: {},\r\n            list: [],\r\n            collisionStart: [],\r\n            collisionActive: [],\r\n            collisionEnd: []\r\n        }, options);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method update\r\n     * @param {object} pairs\r\n     * @param {collision[]} collisions\r\n     */\r\n    Pairs.update = function(pairs, collisions, timestamp) {\r\n        var pairsList = pairs.list,\r\n            pairsTable = pairs.table,\r\n            collisionStart = pairs.collisionStart,\r\n            collisionEnd = pairs.collisionEnd,\r\n            collisionActive = pairs.collisionActive,\r\n            activePairIds = [],\r\n            collision,\r\n            pairId,\r\n            pair,\r\n            i;\r\n\r\n        // clear collision state arrays, but maintain old reference\r\n        collisionStart.length = 0;\r\n        collisionEnd.length = 0;\r\n        collisionActive.length = 0;\r\n\r\n        for (i = 0; i < collisions.length; i++) {\r\n            collision = collisions[i];\r\n\r\n            if (collision.collided) {\r\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\r\n                activePairIds.push(pairId);\r\n\r\n                pair = pairsTable[pairId];\r\n                \r\n                if (pair) {\r\n                    // pair already exists (but may or may not be active)\r\n                    if (pair.isActive) {\r\n                        // pair exists and is active\r\n                        collisionActive.push(pair);\r\n                    } else {\r\n                        // pair exists but was inactive, so a collision has just started again\r\n                        collisionStart.push(pair);\r\n                    }\r\n\r\n                    // update the pair\r\n                    Pair.update(pair, collision, timestamp);\r\n                } else {\r\n                    // pair did not exist, create a new pair\r\n                    pair = Pair.create(collision, timestamp);\r\n                    pairsTable[pairId] = pair;\r\n\r\n                    // push the new pair\r\n                    collisionStart.push(pair);\r\n                    pairsList.push(pair);\r\n                }\r\n            }\r\n        }\r\n\r\n        // deactivate previously active pairs that are now inactive\r\n        for (i = 0; i < pairsList.length; i++) {\r\n            pair = pairsList[i];\r\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\r\n                Pair.setActive(pair, false, timestamp);\r\n                collisionEnd.push(pair);\r\n            }\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @method removeOld\r\n     * @param {object} pairs\r\n     */\r\n    Pairs.removeOld = function(pairs, timestamp) {\r\n        var pairsList = pairs.list,\r\n            pairsTable = pairs.table,\r\n            indexesToRemove = [],\r\n            pair,\r\n            collision,\r\n            pairIndex,\r\n            i;\r\n\r\n        for (i = 0; i < pairsList.length; i++) {\r\n            pair = pairsList[i];\r\n            collision = pair.collision;\r\n            \r\n            // never remove sleeping pairs\r\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\r\n                pair.timeUpdated = timestamp;\r\n                continue;\r\n            }\r\n\r\n            // if pair is inactive for too long, mark it to be removed\r\n            if (timestamp - pair.timeUpdated > _pairMaxIdleLife) {\r\n                indexesToRemove.push(i);\r\n            }\r\n        }\r\n\r\n        // remove marked pairs\r\n        for (i = 0; i < indexesToRemove.length; i++) {\r\n            pairIndex = indexesToRemove[i] - i;\r\n            pair = pairsList[pairIndex];\r\n            delete pairsTable[pair.id];\r\n            pairsList.splice(pairIndex, 1);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Clears the given pairs structure\r\n     * @method create\r\n     * @param {object} options\r\n     * @param {pairs} pairs\r\n     */\r\n    Pairs.clear = function(pairs) {\r\n        pairs.table = {};\r\n        pairs.list.length = 0;\r\n        pairs.collisionStart.length = 0;\r\n        pairs.collisionActive.length = 0;\r\n        pairs.collisionEnd.length = 0;\r\n        return pairs;\r\n    };\r\n\r\n})();\r\n\r\n;   // End src/collision/Pairs.js\r\n\r\n\r\n// Begin src/collision/Query.js\r\n\r\n/**\r\n* The `Matter.Query` module contains methods for performing collision queries.\r\n*\r\n* @class Query\r\n*/\r\n\r\nvar Query = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\r\n     * @method ray\r\n     * @param {body[]} bodies\r\n     * @param {vector} startPoint\r\n     * @param {vector} endPoint\r\n     * @param {number} [rayWidth]\r\n     * @return {object[]} Collisions\r\n     */\r\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\r\n        rayWidth = rayWidth || Number.MIN_VALUE;\r\n\r\n        var rayAngle = Vector.angle(startPoint, endPoint),\r\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\r\n            rayX = (endPoint.x + startPoint.x) * 0.5,\r\n            rayY = (endPoint.y + startPoint.y) * 0.5,\r\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\r\n            collisions = [];\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var bodyA = bodies[i];\r\n\r\n            if (Bounds.overlaps(bodyA.bounds, ray.bounds)) {\r\n                var collision = SAT.collides(bodyA, ray);\r\n                if (collision.collided) {\r\n                    collision.body = collision.bodyA = collision.bodyB = bodyA;\r\n                    collisions.push(collision);\r\n                }\r\n            }\r\n        }\r\n\r\n        return collisions;\r\n    };\r\n\r\n    /**\r\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\r\n     * @method region\r\n     * @param {body[]} bodies\r\n     * @param {bounds} bounds\r\n     * @param {bool} [outside=false]\r\n     * @return {body[]} The bodies matching the query\r\n     */\r\n    Query.region = function(bodies, bounds, outside) {\r\n        var result = [];\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i],\r\n                overlaps = Bounds.overlaps(body.bounds, bounds);\r\n            if ((overlaps && !outside) || (!overlaps && outside))\r\n                result.push(body);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n})();\r\n\r\n;   // End src/collision/Query.js\r\n\r\n\r\n// Begin src/collision/Resolver.js\r\n\r\n/**\r\n* _Internal Class_, not generally used outside of the engine's internals.\r\n*\r\n* @class Resolver\r\n*/\r\n\r\nvar Resolver = {};\r\n\r\n(function() {\r\n\r\n    var _restingThresh = 4,\r\n        _positionDampen = 0.2,\r\n        _positionWarming = 0.6;\r\n\r\n    /**\r\n     * Description\r\n     * @method solvePosition\r\n     * @param {pair[]} pairs\r\n     * @param {number} timeScale\r\n     */\r\n    Resolver.solvePosition = function(pairs, timeScale) {\r\n        var i,\r\n            pair,\r\n            collision,\r\n            bodyA,\r\n            bodyB,\r\n            vertex,\r\n            vertexCorrected,\r\n            normal,\r\n            bodyBtoA;\r\n\r\n        // find impulses required to resolve penetration\r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n            \r\n            if (!pair.isActive)\r\n                continue;\r\n            \r\n            collision = pair.collision;\r\n            bodyA = collision.bodyA;\r\n            bodyB = collision.bodyB;\r\n            vertex = collision.supports[0];\r\n            vertexCorrected = collision.supportCorrected;\r\n            normal = collision.normal;\r\n\r\n            // get current separation between body edges involved in collision\r\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, vertex), \r\n                                    Vector.add(bodyA.positionImpulse, vertexCorrected));\r\n\r\n            pair.separation = Vector.dot(normal, bodyBtoA);\r\n        }\r\n        \r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n            \r\n            if (!pair.isActive)\r\n                continue;\r\n            \r\n            collision = pair.collision;\r\n            bodyA = collision.bodyA;\r\n            bodyB = collision.bodyB;\r\n            normal = collision.normal;\r\n            positionImpulse = ((pair.separation * _positionDampen) - pair.slop) * timeScale;\r\n        \r\n            if (bodyA.isStatic || bodyB.isStatic)\r\n                positionImpulse *= 2;\r\n            \r\n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\r\n                bodyA.positionImpulse.x += normal.x * positionImpulse;\r\n                bodyA.positionImpulse.y += normal.y * positionImpulse;\r\n            }\r\n\r\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\r\n                bodyB.positionImpulse.x -= normal.x * positionImpulse;\r\n                bodyB.positionImpulse.y -= normal.y * positionImpulse;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method postSolvePosition\r\n     * @param {body[]} bodies\r\n     */\r\n    Resolver.postSolvePosition = function(bodies) {\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\r\n                // move the body without changing velocity\r\n                body.position.x += body.positionImpulse.x;\r\n                body.position.y += body.positionImpulse.y;\r\n                body.positionPrev.x += body.positionImpulse.x;\r\n                body.positionPrev.y += body.positionImpulse.y;\r\n\r\n                // update body geometry\r\n                Vertices.translate(body.vertices, body.positionImpulse);\r\n                Bounds.update(body.bounds, body.vertices, body.velocity);\r\n                \r\n                // dampen accumulator to warm the next step\r\n                body.positionImpulse.x *= _positionWarming;\r\n                body.positionImpulse.y *= _positionWarming;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method preSolveVelocity\r\n     * @param {pair[]} pairs\r\n     */\r\n    Resolver.preSolveVelocity = function(pairs) {\r\n        var impulse = {},\r\n            i,\r\n            j,\r\n            pair,\r\n            contacts,\r\n            collision,\r\n            bodyA,\r\n            bodyB,\r\n            normal,\r\n            tangent,\r\n            contact,\r\n            contactVertex,\r\n            normalImpulse,\r\n            tangentImpulse,\r\n            offset;\r\n        \r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n            \r\n            if (!pair.isActive)\r\n                continue;\r\n            \r\n            contacts = pair.activeContacts;\r\n            collision = pair.collision;\r\n            bodyA = collision.bodyA;\r\n            bodyB = collision.bodyB;\r\n            normal = collision.normal;\r\n            tangent = collision.tangent;\r\n                \r\n            // resolve each contact\r\n            for (j = 0; j < contacts.length; j++) {\r\n                contact = contacts[j];\r\n                contactVertex = contact.vertex;\r\n                normalImpulse = contact.normalImpulse;\r\n                tangentImpulse = contact.tangentImpulse;\r\n                \r\n                // total impulse from contact\r\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\r\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\r\n                \r\n                // apply impulse from contact\r\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\r\n                    offset = Vector.sub(contactVertex, bodyA.position);\r\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\r\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\r\n                    bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\r\n                }\r\n\r\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\r\n                    offset = Vector.sub(contactVertex, bodyB.position);\r\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\r\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\r\n                    bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method solveVelocity\r\n     * @param {pair[]} pairs\r\n     */\r\n    Resolver.solveVelocity = function(pairs, timeScale) {\r\n        var impulse = {},\r\n            timeScaleSquared = timeScale * timeScale;\r\n        \r\n        for (var i = 0; i < pairs.length; i++) {\r\n            var pair = pairs[i];\r\n            \r\n            if (!pair.isActive)\r\n                continue;\r\n            \r\n            var collision = pair.collision,\r\n                bodyA = collision.bodyA,\r\n                bodyB = collision.bodyB,\r\n                normal = collision.normal,\r\n                tangent = collision.tangent,\r\n                contacts = pair.activeContacts,\r\n                contactShare = 1 / contacts.length;\r\n\r\n            // update body velocities\r\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\r\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\r\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\r\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\r\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\r\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\r\n\r\n            // resolve each contact\r\n            for (var j = 0; j < contacts.length; j++) {\r\n                var contact = contacts[j],\r\n                    contactVertex = contact.vertex,\r\n                    offsetA = Vector.sub(contactVertex, bodyA.position),\r\n                    offsetB = Vector.sub(contactVertex, bodyB.position),\r\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity)),\r\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity)), \r\n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB),\r\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\r\n\r\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\r\n                    tangentSpeed = Math.abs(tangentVelocity),\r\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\r\n\r\n                // raw impulses\r\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\r\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1);\r\n\r\n                // coulomb friction\r\n                var tangentImpulse = tangentVelocity;\r\n                if (tangentSpeed > normalForce * pair.friction * timeScaleSquared)\r\n                    tangentImpulse = normalForce * pair.friction * timeScaleSquared * tangentVelocityDirection;\r\n\r\n                // modify impulses accounting for mass, inertia and offset\r\n                var oAcN = Vector.cross(offsetA, normal),\r\n                    oBcN = Vector.cross(offsetB, normal),\r\n                    share = contactShare / (pair.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\r\n                normalImpulse *= share;\r\n                tangentImpulse *= share;\r\n                \r\n                // handle high velocity and resting collisions separately\r\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > _restingThresh * timeScaleSquared) {\r\n                    // high velocity so clear cached contact impulse\r\n                    contact.normalImpulse = 0;\r\n                    contact.tangentImpulse = 0;\r\n                } else {\r\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\r\n\r\n                    // impulse constraint, tends to 0\r\n                    var contactNormalImpulse = contact.normalImpulse;\r\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\r\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\r\n                    \r\n                    // tangent impulse, tends to -maxFriction or maxFriction\r\n                    var contactTangentImpulse = contact.tangentImpulse;\r\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -tangentSpeed, tangentSpeed);\r\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\r\n                }\r\n                \r\n                // total impulse from contact\r\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\r\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\r\n                \r\n                // apply impulse from contact\r\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\r\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\r\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\r\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\r\n                }\r\n\r\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\r\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\r\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\r\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n;   // End src/collision/Resolver.js\r\n\r\n\r\n// Begin src/collision/SAT.js\r\n\r\n/**\r\n* _Internal Class_, not generally used outside of the engine's internals.\r\n*\r\n* @class SAT\r\n*/\r\n\r\n// TODO: true circles and curves\r\n\r\nvar SAT = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Description\r\n     * @method collides\r\n     * @param {body} bodyA\r\n     * @param {body} bodyB\r\n     * @param {collision} previousCollision\r\n     * @return {collision} collision\r\n     */\r\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\r\n        var overlapAB,\r\n            overlapBA, \r\n            minOverlap,\r\n            collision,\r\n            prevCol = previousCollision,\r\n            canReusePrevCol = false;\r\n\r\n        if (prevCol) {\r\n            // estimate total motion\r\n            var motion = bodyA.speed * bodyA.speed + bodyA.angularSpeed * bodyA.angularSpeed\r\n                       + bodyB.speed * bodyB.speed + bodyB.angularSpeed * bodyB.angularSpeed;\r\n\r\n            // we may be able to (partially) reuse collision result \r\n            // but only safe if collision was resting\r\n            canReusePrevCol = prevCol && prevCol.collided && motion < 0.2;\r\n\r\n            // reuse collision object\r\n            collision = prevCol;\r\n        } else {\r\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\r\n        }\r\n\r\n        if (prevCol && canReusePrevCol) {\r\n            // if we can reuse the collision result\r\n            // we only need to test the previously found axis\r\n            var axes = [prevCol.bodyA.axes[prevCol.axisNumber]];\r\n\r\n            minOverlap = _overlapAxes(prevCol.bodyA.vertices, prevCol.bodyB.vertices, axes);\r\n            collision.reused = true;\r\n\r\n            if (minOverlap.overlap <= 0) {\r\n                collision.collided = false;\r\n                return collision;\r\n            }\r\n        } else {\r\n            // if we can't reuse a result, perform a full SAT test\r\n\r\n            overlapAB = _overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\r\n\r\n            if (overlapAB.overlap <= 0) {\r\n                collision.collided = false;\r\n                return collision;\r\n            }\r\n\r\n            overlapBA = _overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\r\n\r\n            if (overlapBA.overlap <= 0) {\r\n                collision.collided = false;\r\n                return collision;\r\n            }\r\n\r\n            if (overlapAB.overlap < overlapBA.overlap) {\r\n                minOverlap = overlapAB;\r\n                collision.bodyA = bodyA;\r\n                collision.bodyB = bodyB;\r\n            } else {\r\n                minOverlap = overlapBA;\r\n                collision.bodyA = bodyB;\r\n                collision.bodyB = bodyA;\r\n            }\r\n\r\n            // important for reuse later\r\n            collision.axisNumber = minOverlap.axisNumber;\r\n        }\r\n\r\n        collision.collided = true;\r\n        collision.normal = minOverlap.axis;\r\n        collision.depth = minOverlap.overlap;\r\n        \r\n        bodyA = collision.bodyA;\r\n        bodyB = collision.bodyB;\r\n\r\n        // ensure normal is facing away from bodyA\r\n        if (Vector.dot(collision.normal, Vector.sub(bodyB.position, bodyA.position)) > 0) \r\n            collision.normal = Vector.neg(collision.normal);\r\n\r\n        collision.tangent = Vector.perp(collision.normal);\r\n\r\n        collision.penetration = { \r\n            x: collision.normal.x * collision.depth, \r\n            y: collision.normal.y * collision.depth \r\n        };\r\n\r\n        // find support points, there is always either exactly one or two\r\n        var verticesB = _findSupports(bodyA, bodyB, collision.normal),\r\n            supports = collision.supports || [];\r\n        supports.length = 0;\r\n\r\n        // find the supports from bodyB that are inside bodyA\r\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\r\n            supports.push(verticesB[0]);\r\n\r\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\r\n            supports.push(verticesB[1]);\r\n\r\n        // find the supports from bodyA that are inside bodyB\r\n        if (supports.length < 2) {\r\n            var verticesA = _findSupports(bodyB, bodyA, Vector.neg(collision.normal));\r\n                \r\n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\r\n                supports.push(verticesA[0]);\r\n\r\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\r\n                supports.push(verticesA[1]);\r\n        }\r\n\r\n        // account for the edge case of overlapping but no vertex containment\r\n        if (supports.length < 2)\r\n            supports = [verticesB[0]];\r\n        \r\n        collision.supports = supports;\r\n        collision.supportCorrected = Vector.sub(supports[0], collision.penetration);\r\n\r\n        return collision;\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method _overlapAxes\r\n     * @private\r\n     * @param {} verticesA\r\n     * @param {} verticesB\r\n     * @param {} axes\r\n     * @return result\r\n     */\r\n    var _overlapAxes = function(verticesA, verticesB, axes) {\r\n        var projectionA = {}, \r\n            projectionB = {},\r\n            result = { overlap: Number.MAX_VALUE },\r\n            overlap,\r\n            axis;\r\n\r\n        for (var i = 0; i < axes.length; i++) {\r\n            axis = axes[i];\r\n\r\n            _projectToAxis(projectionA, verticesA, axis);\r\n            _projectToAxis(projectionB, verticesB, axis);\r\n\r\n            overlap = projectionA.min < projectionB.min \r\n                        ? projectionA.max - projectionB.min \r\n                        : projectionB.max - projectionA.min;\r\n\r\n            if (overlap <= 0) {\r\n                result.overlap = overlap;\r\n                return result;\r\n            }\r\n\r\n            if (overlap < result.overlap) {\r\n                result.overlap = overlap;\r\n                result.axis = axis;\r\n                result.axisNumber = i;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method _projectToAxis\r\n     * @private\r\n     * @param {} projection\r\n     * @param {} vertices\r\n     * @param {} axis\r\n     */\r\n    var _projectToAxis = function(projection, vertices, axis) {\r\n        var min = Vector.dot(vertices[0], axis),\r\n            max = min;\r\n\r\n        for (var i = 1; i < vertices.length; i += 1) {\r\n            var dot = Vector.dot(vertices[i], axis);\r\n\r\n            if (dot > max) { \r\n                max = dot; \r\n            } else if (dot < min) { \r\n                min = dot; \r\n            }\r\n        }\r\n\r\n        projection.min = min;\r\n        projection.max = max;\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @method _findSupports\r\n     * @private\r\n     * @param {} bodyA\r\n     * @param {} bodyB\r\n     * @param {} normal\r\n     * @return ArrayExpression\r\n     */\r\n    var _findSupports = function(bodyA, bodyB, normal) {\r\n        var nearestDistance = Number.MAX_VALUE,\r\n            vertexToBody = { x: 0, y: 0 },\r\n            vertices = bodyB.vertices,\r\n            bodyAPosition = bodyA.position,\r\n            distance,\r\n            vertex,\r\n            vertexA = vertices[0],\r\n            vertexB = vertices[1];\r\n\r\n        // find closest vertex on bodyB\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            vertex = vertices[i];\r\n            vertexToBody.x = vertex.x - bodyAPosition.x;\r\n            vertexToBody.y = vertex.y - bodyAPosition.y;\r\n            distance = -Vector.dot(normal, vertexToBody);\r\n\r\n            if (distance < nearestDistance) {\r\n                nearestDistance = distance;\r\n                vertexA = vertex;\r\n            }\r\n        }\r\n\r\n        // find next closest vertex using the two connected to it\r\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\r\n        vertex = vertices[prevIndex];\r\n        vertexToBody.x = vertex.x - bodyAPosition.x;\r\n        vertexToBody.y = vertex.y - bodyAPosition.y;\r\n        nearestDistance = -Vector.dot(normal, vertexToBody);\r\n        vertexB = vertex;\r\n\r\n        var nextIndex = (vertexA.index + 1) % vertices.length;\r\n        vertex = vertices[nextIndex];\r\n        vertexToBody.x = vertex.x - bodyAPosition.x;\r\n        vertexToBody.y = vertex.y - bodyAPosition.y;\r\n        distance = -Vector.dot(normal, vertexToBody);\r\n        if (distance < nearestDistance) {\r\n            vertexB = vertex;\r\n        }\r\n\r\n        return [vertexA, vertexB];\r\n    };\r\n\r\n})();\r\n\r\n\r\n;   // End src/collision/SAT.js\r\n\r\n\r\n// Begin src/constraint/Constraint.js\r\n\r\n/**\r\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\r\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\r\n* The stiffness of constraints can be modified to create springs or elastic.\r\n*\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class Constraint\r\n*/\r\n\r\n// TODO: fix instabillity issues with torque\r\n// TODO: linked constraints\r\n// TODO: breakable constraints\r\n// TODO: collidable constraints\r\n// TODO: allow constrained bodies to sleep\r\n// TODO: handle 0 length constraints properly\r\n// TODO: impulse caching and warming\r\n\r\nvar Constraint = {};\r\n\r\n(function() {\r\n\r\n    var _minLength = 0.000001,\r\n        _minDifference = 0.001;\r\n\r\n    /**\r\n     * Creates a new constraint.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * See the properites section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {} options\r\n     * @return {constraint} constraint\r\n     */\r\n    Constraint.create = function(options) {\r\n        var constraint = options;\r\n\r\n        // if bodies defined but no points, use body centre\r\n        if (constraint.bodyA && !constraint.pointA)\r\n            constraint.pointA = { x: 0, y: 0 };\r\n        if (constraint.bodyB && !constraint.pointB)\r\n            constraint.pointB = { x: 0, y: 0 };\r\n\r\n        // calculate static length using initial world space points\r\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\r\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\r\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\r\n    \r\n        constraint.length = constraint.length || length || _minLength;\r\n\r\n        // render\r\n        var render = {\r\n            visible: true,\r\n            lineWidth: 2,\r\n            strokeStyle: '#666'\r\n        };\r\n        \r\n        constraint.render = Common.extend(render, constraint.render);\r\n\r\n        // option defaults\r\n        constraint.id = constraint.id || Common.nextId();\r\n        constraint.label = constraint.label || 'Constraint';\r\n        constraint.type = 'constraint';\r\n        constraint.stiffness = constraint.stiffness || 1;\r\n        constraint.angularStiffness = constraint.angularStiffness || 0;\r\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\r\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\r\n\r\n        return constraint;\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method solveAll\r\n     * @param {constraint[]} constraints\r\n     * @param {number} timeScale\r\n     */\r\n    Constraint.solveAll = function(constraints, timeScale) {\r\n        for (var i = 0; i < constraints.length; i++) {\r\n            Constraint.solve(constraints[i], timeScale);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method solve\r\n     * @param {constraint} constraint\r\n     * @param {number} timeScale\r\n     */\r\n    Constraint.solve = function(constraint, timeScale) {\r\n        var bodyA = constraint.bodyA,\r\n            bodyB = constraint.bodyB,\r\n            pointA = constraint.pointA,\r\n            pointB = constraint.pointB;\r\n\r\n        // update reference angle\r\n        if (bodyA && !bodyA.isStatic) {\r\n            constraint.pointA = Vector.rotate(pointA, bodyA.angle - constraint.angleA);\r\n            constraint.angleA = bodyA.angle;\r\n        }\r\n        \r\n        // update reference angle\r\n        if (bodyB && !bodyB.isStatic) {\r\n            constraint.pointB = Vector.rotate(pointB, bodyB.angle - constraint.angleB);\r\n            constraint.angleB = bodyB.angle;\r\n        }\r\n\r\n        var pointAWorld = pointA,\r\n            pointBWorld = pointB;\r\n\r\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\r\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\r\n\r\n        if (!pointAWorld || !pointBWorld)\r\n            return;\r\n\r\n        var delta = Vector.sub(pointAWorld, pointBWorld),\r\n            currentLength = Vector.magnitude(delta);\r\n\r\n        // prevent singularity\r\n        if (currentLength === 0)\r\n            currentLength = _minLength;\r\n\r\n        // solve distance constraint with Gauss-Siedel method\r\n        var difference = (currentLength - constraint.length) / currentLength,\r\n            normal = Vector.div(delta, currentLength),\r\n            force = Vector.mult(delta, difference * 0.5 * constraint.stiffness * timeScale * timeScale);\r\n        \r\n        // if difference is very small, we can skip\r\n        if (Math.abs(1 - (currentLength / constraint.length)) < _minDifference * timeScale)\r\n            return;\r\n\r\n        var velocityPointA,\r\n            velocityPointB,\r\n            offsetA,\r\n            offsetB,\r\n            oAn,\r\n            oBn,\r\n            bodyADenom,\r\n            bodyBDenom;\r\n    \r\n        if (bodyA && !bodyA.isStatic) {\r\n            // point body offset\r\n            offsetA = { \r\n                x: pointAWorld.x - bodyA.position.x + force.x, \r\n                y: pointAWorld.y - bodyA.position.y + force.y\r\n            };\r\n            \r\n            // update velocity\r\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\r\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\r\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\r\n            \r\n            // find point velocity and body mass\r\n            velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity));\r\n            oAn = Vector.dot(offsetA, normal);\r\n            bodyADenom = bodyA.inverseMass + bodyA.inverseInertia * oAn * oAn;\r\n        } else {\r\n            velocityPointA = { x: 0, y: 0 };\r\n            bodyADenom = bodyA ? bodyA.inverseMass : 0;\r\n        }\r\n            \r\n        if (bodyB && !bodyB.isStatic) {\r\n            // point body offset\r\n            offsetB = { \r\n                x: pointBWorld.x - bodyB.position.x - force.x, \r\n                y: pointBWorld.y - bodyB.position.y - force.y \r\n            };\r\n            \r\n            // update velocity\r\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\r\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\r\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\r\n\r\n            // find point velocity and body mass\r\n            velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity));\r\n            oBn = Vector.dot(offsetB, normal);\r\n            bodyBDenom = bodyB.inverseMass + bodyB.inverseInertia * oBn * oBn;\r\n        } else {\r\n            velocityPointB = { x: 0, y: 0 };\r\n            bodyBDenom = bodyB ? bodyB.inverseMass : 0;\r\n        }\r\n        \r\n        var relativeVelocity = Vector.sub(velocityPointB, velocityPointA),\r\n            normalImpulse = Vector.dot(normal, relativeVelocity) / (bodyADenom + bodyBDenom);\r\n    \r\n        if (normalImpulse > 0) normalImpulse = 0;\r\n    \r\n        var normalVelocity = {\r\n            x: normal.x * normalImpulse, \r\n            y: normal.y * normalImpulse\r\n        };\r\n\r\n        var torque;\r\n \r\n        if (bodyA && !bodyA.isStatic) {\r\n            torque = Vector.cross(offsetA, normalVelocity) * bodyA.inverseInertia * (1 - constraint.angularStiffness);\r\n\r\n            Sleeping.set(bodyA, false);\r\n            \r\n            // clamp to prevent instabillity\r\n            // TODO: solve this properlly\r\n            torque = Common.clamp(torque, -0.01, 0.01);\r\n\r\n            // keep track of applied impulses for post solving\r\n            bodyA.constraintImpulse.x -= force.x;\r\n            bodyA.constraintImpulse.y -= force.y;\r\n            bodyA.constraintImpulse.angle += torque;\r\n\r\n            // apply forces\r\n            bodyA.position.x -= force.x;\r\n            bodyA.position.y -= force.y;\r\n            bodyA.angle += torque;\r\n        }\r\n\r\n        if (bodyB && !bodyB.isStatic) {\r\n            torque = Vector.cross(offsetB, normalVelocity) * bodyB.inverseInertia * (1 - constraint.angularStiffness);\r\n\r\n            Sleeping.set(bodyB, false);\r\n            \r\n            // clamp to prevent instabillity\r\n            // TODO: solve this properlly\r\n            torque = Common.clamp(torque, -0.01, 0.01);\r\n\r\n            // keep track of applied impulses for post solving\r\n            bodyB.constraintImpulse.x += force.x;\r\n            bodyB.constraintImpulse.y += force.y;\r\n            bodyB.constraintImpulse.angle -= torque;\r\n            \r\n            // apply forces\r\n            bodyB.position.x += force.x;\r\n            bodyB.position.y += force.y;\r\n            bodyB.angle -= torque;\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Performs body updates required after solving constraints\r\n     * @private\r\n     * @method postSolveAll\r\n     * @param {body[]} bodies\r\n     */\r\n    Constraint.postSolveAll = function(bodies) {\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i],\r\n                impulse = body.constraintImpulse;\r\n\r\n            // update geometry and reset\r\n            Vertices.translate(body.vertices, impulse);\r\n\r\n            if (impulse.angle !== 0) {\r\n                Vertices.rotate(body.vertices, impulse.angle, body.position);\r\n                Axes.rotate(body.axes, impulse.angle);\r\n                impulse.angle = 0;\r\n            }\r\n\r\n            Bounds.update(body.bounds, body.vertices);\r\n\r\n            impulse.x = 0;\r\n            impulse.y = 0;\r\n        }\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\r\n     *\r\n     * @property id\r\n     * @type number\r\n     */\r\n\r\n    /**\r\n     * A `String` denoting the type of object.\r\n     *\r\n     * @property type\r\n     * @type string\r\n     * @default \"constraint\"\r\n     */\r\n\r\n    /**\r\n     * An arbitrary `String` name to help the user identify and manage bodies.\r\n     *\r\n     * @property label\r\n     * @type string\r\n     * @default \"Constraint\"\r\n     */\r\n\r\n    /**\r\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\r\n     *\r\n     * @property render\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * A flag that indicates if the constraint should be rendered.\r\n     *\r\n     * @property render.visible\r\n     * @type boolean\r\n     * @default true\r\n     */\r\n\r\n    /**\r\n     * A `Number` that defines the line width to use when rendering the constraint outline.\r\n     * A value of `0` means no outline will be rendered.\r\n     *\r\n     * @property render.lineWidth\r\n     * @type number\r\n     * @default 2\r\n     */\r\n\r\n    /**\r\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\r\n     * It is the same as when using a canvas, so it accepts CSS style property values.\r\n     *\r\n     * @property render.strokeStyle\r\n     * @type string\r\n     * @default a random colour\r\n     */\r\n\r\n    /**\r\n     * The first possible `Body` that this constraint is attached to.\r\n     *\r\n     * @property bodyA\r\n     * @type body\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * The second possible `Body` that this constraint is attached to.\r\n     *\r\n     * @property bodyB\r\n     * @type body\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\r\n     *\r\n     * @property pointA\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\r\n     *\r\n     * @property pointB\r\n     * @type vector\r\n     * @default { x: 0, y: 0 }\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\r\n     * A value of `1` means the constraint should be very stiff.\r\n     * A value of `0.2` means the constraint acts like a soft spring.\r\n     *\r\n     * @property stiffness\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the target resting length of the constraint. \r\n     * It is calculated automatically in `Constraint.create` from intial positions of the `constraint.bodyA` and `constraint.bodyB`.\r\n     *\r\n     * @property length\r\n     * @type number\r\n     */\r\n\r\n})();\r\n\r\n;   // End src/constraint/Constraint.js\r\n\r\n\r\n// Begin src/constraint/MouseConstraint.js\r\n\r\n/**\r\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\r\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\r\n*\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class MouseConstraint\r\n*/\r\n\r\nvar MouseConstraint = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new mouse constraint.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * See the properites section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {engine} engine\r\n     * @param {} options\r\n     * @return {MouseConstraint} A new MouseConstraint\r\n     */\r\n    MouseConstraint.create = function(engine, options) {\r\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\r\n\r\n        if (!mouse && engine && engine.render && engine.render.canvas) {\r\n            mouse = Mouse.create(engine.render.canvas);\r\n        } else {\r\n            mouse = Mouse.create();\r\n            Common.log('MouseConstraint.create: options.mouse was undefined, engine.render.canvas was undefined, may not function as expected', 'warn');\r\n        }\r\n\r\n        var constraint = Constraint.create({ \r\n            label: 'Mouse Constraint',\r\n            pointA: mouse.position,\r\n            pointB: { x: 0, y: 0 },\r\n            length: 0.01, \r\n            stiffness: 0.1,\r\n            angularStiffness: 1,\r\n            render: {\r\n                strokeStyle: '#90EE90',\r\n                lineWidth: 3\r\n            }\r\n        });\r\n\r\n        var defaults = {\r\n            type: 'mouseConstraint',\r\n            mouse: mouse,\r\n            body: null,\r\n            constraint: constraint,\r\n            collisionFilter: {\r\n                category: 0x0001,\r\n                mask: 0xFFFFFFFF,\r\n                group: 0\r\n            }\r\n        };\r\n\r\n        var mouseConstraint = Common.extend(defaults, options);\r\n\r\n        Events.on(engine, 'tick', function() {\r\n            var allBodies = Composite.allBodies(engine.world);\r\n            MouseConstraint.update(mouseConstraint, allBodies);\r\n            _triggerEvents(mouseConstraint);\r\n        });\r\n\r\n        return mouseConstraint;\r\n    };\r\n\r\n    /**\r\n     * Updates the given mouse constraint.\r\n     * @private\r\n     * @method update\r\n     * @param {MouseConstraint} mouseConstraint\r\n     * @param {body[]} bodies\r\n     */\r\n    MouseConstraint.update = function(mouseConstraint, bodies) {\r\n        var mouse = mouseConstraint.mouse,\r\n            constraint = mouseConstraint.constraint,\r\n            body = mouseConstraint.body;\r\n\r\n        if (mouse.button === 0) {\r\n            if (!constraint.bodyB) {\r\n                for (var i = 0; i < bodies.length; i++) {\r\n                    body = bodies[i];\r\n                    if (Bounds.contains(body.bounds, mouse.position) \r\n                            && Vertices.contains(body.vertices, mouse.position)\r\n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\r\n                       \r\n                        constraint.pointA = mouse.position;\r\n                        constraint.bodyB = mouseConstraint.body = body;\r\n                        constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\r\n                        constraint.angleB = body.angle;\r\n\r\n                        Sleeping.set(body, false);\r\n                        Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\r\n                    }\r\n                }\r\n            } else {\r\n                Sleeping.set(constraint.bodyB, false);\r\n                constraint.pointA = mouse.position;\r\n            }\r\n        } else {\r\n            constraint.bodyB = mouseConstraint.body = null;\r\n            constraint.pointB = null;\r\n\r\n            if (body)\r\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Triggers mouse constraint events\r\n     * @method _triggerEvents\r\n     * @private\r\n     * @param {mouse} mouse\r\n     */\r\n    var _triggerEvents = function(mouseConstraint) {\r\n        var mouse = mouseConstraint.mouse,\r\n            mouseEvents = mouse.sourceEvents;\r\n\r\n        if (mouseEvents.mousemove)\r\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\r\n\r\n        if (mouseEvents.mousedown)\r\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\r\n\r\n        if (mouseEvents.mouseup)\r\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\r\n\r\n        // reset the mouse state ready for the next step\r\n        Mouse.clearSourceEvents(mouse);\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Events Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n    * Fired when the mouse has moved (or a touch moves) during the last step\r\n    *\r\n    * @event mousemove\r\n    * @param {} event An event object\r\n    * @param {mouse} event.mouse The engine's mouse instance\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when the mouse is down (or a touch has started) during the last step\r\n    *\r\n    * @event mousedown\r\n    * @param {} event An event object\r\n    * @param {mouse} event.mouse The engine's mouse instance\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when the mouse is up (or a touch has ended) during the last step\r\n    *\r\n    * @event mouseup\r\n    * @param {} event An event object\r\n    * @param {mouse} event.mouse The engine's mouse instance\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when the user starts dragging a body\r\n    *\r\n    * @event startdrag\r\n    * @param {} event An event object\r\n    * @param {mouse} event.mouse The engine's mouse instance\r\n    * @param {body} event.body The body being dragged\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired when the user ends dragging a body\r\n    *\r\n    * @event enddrag\r\n    * @param {} event An event object\r\n    * @param {mouse} event.mouse The engine's mouse instance\r\n    * @param {body} event.body The body that has stopped being dragged\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * A `String` denoting the type of object.\r\n     *\r\n     * @property type\r\n     * @type string\r\n     * @default \"constraint\"\r\n     */\r\n\r\n    /**\r\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\r\n     *\r\n     * @property mouse\r\n     * @type mouse\r\n     * @default mouse\r\n     */\r\n\r\n    /**\r\n     * The `Body` that is currently being moved by the user, or `null` if no body.\r\n     *\r\n     * @property body\r\n     * @type body\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * The `Constraint` object that is used to move the body during interaction.\r\n     *\r\n     * @property constraint\r\n     * @type constraint\r\n     */\r\n\r\n    /**\r\n     * An `Object` that specifies the collision filter properties.\r\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\r\n     * See `body.collisionFilter` for more information.\r\n     *\r\n     * @property collisionFilter\r\n     * @type object\r\n     */\r\n\r\n})();\r\n\r\n\r\n;   // End src/constraint/MouseConstraint.js\r\n\r\n\r\n// Begin src/core/Common.js\r\n\r\n/**\r\n* _Internal Class_, not generally used outside of the engine's internals.\r\n*\r\n* @class Common\r\n*/\r\n\r\nvar Common = {};\r\n\r\n(function() {\r\n\r\n    Common._nextId = 0;\r\n    Common._seed = 0;\r\n\r\n    /**\r\n     * Description\r\n     * @method extend\r\n     * @param {} obj\r\n     * @param {boolean} deep\r\n     * @return {} obj extended\r\n     */\r\n    Common.extend = function(obj, deep) {\r\n        var argsStart,\r\n            args,\r\n            deepClone;\r\n\r\n        if (typeof deep === 'boolean') {\r\n            argsStart = 2;\r\n            deepClone = deep;\r\n        } else {\r\n            argsStart = 1;\r\n            deepClone = true;\r\n        }\r\n\r\n        args = Array.prototype.slice.call(arguments, argsStart);\r\n\r\n        for (var i = 0; i < args.length; i++) {\r\n            var source = args[i];\r\n\r\n            if (source) {\r\n                for (var prop in source) {\r\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\r\n                        if (!obj[prop] || obj[prop].constructor === Object) {\r\n                            obj[prop] = obj[prop] || {};\r\n                            Common.extend(obj[prop], deepClone, source[prop]);\r\n                        } else {\r\n                            obj[prop] = source[prop];\r\n                        }\r\n                    } else {\r\n                        obj[prop] = source[prop];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return obj;\r\n    };\r\n\r\n    /**\r\n     * Creates a new clone of the object, if deep is true references will also be cloned\r\n     * @method clone\r\n     * @param {} obj\r\n     * @param {bool} deep\r\n     * @return {} obj cloned\r\n     */\r\n    Common.clone = function(obj, deep) {\r\n        return Common.extend({}, deep, obj);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method keys\r\n     * @param {} obj\r\n     * @return {string[]} keys\r\n     */\r\n    Common.keys = function(obj) {\r\n        if (Object.keys)\r\n            return Object.keys(obj);\r\n\r\n        // avoid hasOwnProperty for performance\r\n        var keys = [];\r\n        for (var key in obj)\r\n            keys.push(key);\r\n        return keys;\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method values\r\n     * @param {} obj\r\n     * @return {array} Array of the objects property values\r\n     */\r\n    Common.values = function(obj) {\r\n        var values = [];\r\n        \r\n        if (Object.keys) {\r\n            var keys = Object.keys(obj);\r\n            for (var i = 0; i < keys.length; i++) {\r\n                values.push(obj[keys[i]]);\r\n            }\r\n            return values;\r\n        }\r\n        \r\n        // avoid hasOwnProperty for performance\r\n        for (var key in obj)\r\n            values.push(obj[key]);\r\n        return values;\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method shadeColor\r\n     * @param {string} color\r\n     * @param {number} percent\r\n     * @return {string} A hex colour string made by lightening or darkening color by percent\r\n     */\r\n    Common.shadeColor = function(color, percent) {   \r\n        // http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color\r\n        var colorInteger = parseInt(color.slice(1),16), \r\n            amount = Math.round(2.55 * percent), \r\n            R = (colorInteger >> 16) + amount, \r\n            B = (colorInteger >> 8 & 0x00FF) + amount, \r\n            G = (colorInteger & 0x0000FF) + amount;\r\n        return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R :255) * 0x10000 \r\n                + (B < 255 ? B < 1 ? 0 : B : 255) * 0x100 \r\n                + (G < 255 ? G < 1 ? 0 : G : 255)).toString(16).slice(1);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method shuffle\r\n     * @param {array} array\r\n     * @return {array} array shuffled randomly\r\n     */\r\n    Common.shuffle = function(array) {\r\n        for (var i = array.length - 1; i > 0; i--) {\r\n            var j = Math.floor(Common.random() * (i + 1));\r\n            var temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n        return array;\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method choose\r\n     * @param {array} choices\r\n     * @return {object} A random choice object from the array\r\n     */\r\n    Common.choose = function(choices) {\r\n        return choices[Math.floor(Common.random() * choices.length)];\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method isElement\r\n     * @param {object} obj\r\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\r\n     */\r\n    Common.isElement = function(obj) {\r\n        // http://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object\r\n        try {\r\n            return obj instanceof HTMLElement;\r\n        }\r\n        catch(e){\r\n            return (typeof obj===\"object\") &&\r\n              (obj.nodeType===1) && (typeof obj.style === \"object\") &&\r\n              (typeof obj.ownerDocument ===\"object\");\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @method clamp\r\n     * @param {number} value\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @return {number} The value clamped between min and max inclusive\r\n     */\r\n    Common.clamp = function(value, min, max) {\r\n        if (value < min)\r\n            return min;\r\n        if (value > max)\r\n            return max;\r\n        return value;\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @method sign\r\n     * @param {number} value\r\n     * @return {number} -1 if negative, +1 if 0 or positive\r\n     */\r\n    Common.sign = function(value) {\r\n        return value < 0 ? -1 : 1;\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @method now\r\n     * @return {number} the current timestamp (high-res if avaliable)\r\n     */\r\n    Common.now = function() {\r\n        // http://stackoverflow.com/questions/221294/how-do-you-get-a-timestamp-in-javascript\r\n        // https://gist.github.com/davidwaterston/2982531\r\n        \r\n        var perf = window.performance;\r\n\r\n        if (perf) {\r\n            perf.now = perf.now || perf.webkitNow || perf.msNow || perf.oNow || perf.mozNow;\r\n            return +(perf.now());\r\n        }\r\n        \r\n        return +(new Date());\r\n    };\r\n\r\n    \r\n    /**\r\n     * Description\r\n     * @method random\r\n     * @param {number} min\r\n     * @param {number} max\r\n     * @return {number} A random number between min and max inclusive\r\n     */\r\n    Common.random = function(min, max) {\r\n        min = (typeof min !== \"undefined\") ? min : 0;\r\n        max = (typeof max !== \"undefined\") ? max : 1;\r\n        return min + _seededRandom() * (max - min);\r\n    };\r\n\r\n    /**\r\n     * Converts a CSS hex colour string into an integer\r\n     * @method colorToNumber\r\n     * @param {string} colorString\r\n     * @return {number} An integer representing the CSS hex string\r\n     */\r\n    Common.colorToNumber = function(colorString) {\r\n        colorString = colorString.replace('#','');\r\n\r\n        if (colorString.length == 3) {\r\n            colorString = colorString.charAt(0) + colorString.charAt(0)\r\n                        + colorString.charAt(1) + colorString.charAt(1)\r\n                        + colorString.charAt(2) + colorString.charAt(2);\r\n        }\r\n\r\n        return parseInt(colorString, 16);\r\n    };\r\n\r\n    /**\r\n     * A wrapper for console.log, for providing errors and warnings\r\n     * @method log\r\n     * @param {string} message\r\n     * @param {string} type\r\n     */\r\n    Common.log = function(message, type) {\r\n        if (!console || !console.log || !console.warn)\r\n            return;\r\n\r\n        var style;\r\n\r\n        switch (type) {\r\n\r\n        case 'warn':\r\n            console.warn('Matter.js:', message);\r\n            break;\r\n        case 'error':\r\n            console.log('Matter.js:', message);\r\n            break;\r\n\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the next unique sequential ID\r\n     * @method nextId\r\n     * @return {Number} Unique sequential ID\r\n     */\r\n    Common.nextId = function() {\r\n        return Common._nextId++;\r\n    };\r\n\r\n    /**\r\n     * A cross browser compatible indexOf implementation\r\n     * @method indexOf\r\n     * @param {array} haystack\r\n     * @param {object} needle\r\n     */\r\n    Common.indexOf = function(haystack, needle) {\r\n        if (haystack.indexOf)\r\n            return haystack.indexOf(needle);\r\n\r\n        for (var i = 0; i < haystack.length; i++) {\r\n            if (haystack[i] === needle)\r\n                return i;\r\n        }\r\n\r\n        return -1;\r\n    };\r\n\r\n    var _seededRandom = function() {\r\n        // https://gist.github.com/ngryman/3830489\r\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\r\n        return Common._seed / 233280;\r\n    };\r\n\r\n})();\r\n\r\n;   // End src/core/Common.js\r\n\r\n\r\n// Begin src/core/Engine.js\r\n\r\n/**\r\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\r\n* An engine is a controller that manages updating and rendering the simulation of the world.\r\n* See `Matter.Runner` for an optional game loop utility.\r\n*\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class Engine\r\n*/\r\n\r\nvar Engine = {};\r\n\r\n(function() {\r\n\r\n    var _fps = 60,\r\n        _delta = 1000 / _fps;\r\n\r\n    /**\r\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * See the properites section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {HTMLElement} element\r\n     * @param {object} [options]\r\n     * @return {engine} engine\r\n     */\r\n    Engine.create = function(element, options) {\r\n\r\n        // options may be passed as the first (and only) argument\r\n        options = Common.isElement(element) ? options : element;\r\n        element = Common.isElement(element) ? element : null;\r\n\r\n        var defaults = {\r\n            enabled: true,\r\n            positionIterations: 6,\r\n            velocityIterations: 4,\r\n            constraintIterations: 2,\r\n            enableSleeping: false,\r\n            events: [],\r\n            timing: {\r\n                fps: _fps,\r\n                timestamp: 0,\r\n                delta: _delta,\r\n                correction: 1,\r\n                deltaMin: 1000 / _fps,\r\n                deltaMax: 1000 / (_fps * 0.5),\r\n                timeScale: 1,\r\n                isFixed: false,\r\n                frameRequestId: 0\r\n            },\r\n            render: {\r\n                element: element,\r\n                controller: Render\r\n            },\r\n            broadphase: {\r\n                controller: Grid\r\n            }\r\n        };\r\n        \r\n        var engine = Common.extend(defaults, options);\r\n\r\n        engine.render = engine.render.controller.create(engine.render);\r\n        engine.world = World.create(engine.world);\r\n        engine.pairs = Pairs.create();\r\n        engine.metrics = engine.metrics || Metrics.create();\r\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\r\n\r\n        return engine;\r\n    };\r\n\r\n    /**\r\n     * Moves the simulation forward in time by `delta` ms. \r\n     * Triggers `beforeUpdate` and `afterUpdate` events.\r\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\r\n     * @method update\r\n     * @param {engine} engine\r\n     * @param {number} delta\r\n     * @param {number} [correction]\r\n     */\r\n    Engine.update = function(engine, delta, correction) {\r\n        correction = (typeof correction !== 'undefined') ? correction : 1;\r\n\r\n        var world = engine.world,\r\n            timing = engine.timing,\r\n            broadphase = engine.broadphase,\r\n            broadphasePairs = [],\r\n            i;\r\n\r\n        // increment timestamp\r\n        timing.timestamp += delta * timing.timeScale;\r\n        timing.correction = correction;\r\n\r\n        // create an event object\r\n        var event = {\r\n            timestamp: engine.timing.timestamp\r\n        };\r\n\r\n        Events.trigger(engine, 'beforeUpdate', event);\r\n\r\n        // get lists of all bodies and constraints, no matter what composites they are in\r\n        var allBodies = Composite.allBodies(world),\r\n            allConstraints = Composite.allConstraints(world);\r\n\r\n        // reset metrics logging\r\n        Metrics.reset(engine.metrics);\r\n\r\n        // if sleeping enabled, call the sleeping controller\r\n        if (engine.enableSleeping)\r\n            Sleeping.update(allBodies, timing.timeScale);\r\n\r\n        // applies gravity to all bodies\r\n        _bodiesApplyGravity(allBodies, world.gravity);\r\n\r\n        // update all body position and rotation by integration\r\n        _bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\r\n\r\n        // update all constraints\r\n        for (i = 0; i < engine.constraintIterations; i++) {\r\n            Constraint.solveAll(allConstraints, timing.timeScale);\r\n        }\r\n        Constraint.postSolveAll(allBodies);\r\n\r\n        // broadphase pass: find potential collision pairs\r\n        if (broadphase.controller) {\r\n\r\n            // if world is dirty, we must flush the whole grid\r\n            if (world.isModified)\r\n                broadphase.controller.clear(broadphase);\r\n\r\n            // update the grid buckets based on current bodies\r\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\r\n            broadphasePairs = broadphase.pairsList;\r\n        } else {\r\n\r\n            // if no broadphase set, we just pass all bodies\r\n            broadphasePairs = allBodies;\r\n        }\r\n\r\n        // narrowphase pass: find actual collisions, then create or update collision pairs\r\n        var collisions = broadphase.detector(broadphasePairs, engine);\r\n\r\n        // update collision pairs\r\n        var pairs = engine.pairs,\r\n            timestamp = timing.timestamp;\r\n        Pairs.update(pairs, collisions, timestamp);\r\n        Pairs.removeOld(pairs, timestamp);\r\n\r\n        // wake up bodies involved in collisions\r\n        if (engine.enableSleeping)\r\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\r\n\r\n        // trigger collision events\r\n        if (pairs.collisionStart.length > 0)\r\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\r\n\r\n        // iteratively resolve velocity between collisions\r\n        Resolver.preSolveVelocity(pairs.list);\r\n        for (i = 0; i < engine.velocityIterations; i++) {\r\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\r\n        }\r\n        \r\n        // iteratively resolve position between collisions\r\n        for (i = 0; i < engine.positionIterations; i++) {\r\n            Resolver.solvePosition(pairs.list, timing.timeScale);\r\n        }\r\n        Resolver.postSolvePosition(allBodies);\r\n\r\n        // trigger collision events\r\n        if (pairs.collisionActive.length > 0)\r\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\r\n\r\n        if (pairs.collisionEnd.length > 0)\r\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\r\n\r\n        // update metrics log\r\n        Metrics.update(engine.metrics, engine);\r\n\r\n        // clear force buffers\r\n        _bodiesClearForces(allBodies);\r\n\r\n        // clear all composite modified flags\r\n        if (world.isModified)\r\n            Composite.setModified(world, false, false, true);\r\n\r\n        Events.trigger(engine, 'afterUpdate', event);\r\n\r\n        return engine;\r\n    };\r\n\r\n    /**\r\n     * Renders the world by calling its defined renderer `engine.render.controller`. Triggers `beforeRender` and `afterRender` events.\r\n     * @method render\r\n     * @param {engine} engineA\r\n     * @param {engine} engineB\r\n     */\r\n    Engine.render = function(engine) {\r\n        // create an event object\r\n        var event = {\r\n            timestamp: engine.timing.timestamp\r\n        };\r\n\r\n        Events.trigger(engine, 'beforeRender', event);\r\n        engine.render.controller.world(engine);\r\n        Events.trigger(engine, 'afterRender', event);\r\n    };\r\n    \r\n    /**\r\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\r\n     * @method merge\r\n     * @param {engine} engineA\r\n     * @param {engine} engineB\r\n     */\r\n    Engine.merge = function(engineA, engineB) {\r\n        Common.extend(engineA, engineB);\r\n        \r\n        if (engineB.world) {\r\n            engineA.world = engineB.world;\r\n\r\n            Engine.clear(engineA);\r\n\r\n            var bodies = Composite.allBodies(engineA.world);\r\n\r\n            for (var i = 0; i < bodies.length; i++) {\r\n                var body = bodies[i];\r\n                Sleeping.set(body, false);\r\n                body.id = Common.nextId();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Clears the engine including the world, pairs and broadphase.\r\n     * @method clear\r\n     * @param {engine} engine\r\n     */\r\n    Engine.clear = function(engine) {\r\n        var world = engine.world;\r\n        \r\n        Pairs.clear(engine.pairs);\r\n\r\n        var broadphase = engine.broadphase;\r\n        if (broadphase.controller) {\r\n            var bodies = Composite.allBodies(world);\r\n            broadphase.controller.clear(broadphase);\r\n            broadphase.controller.update(broadphase, bodies, engine, true);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Zeroes the `body.force` and `body.torque` force buffers.\r\n     * @method bodiesClearForces\r\n     * @private\r\n     * @param {body[]} bodies\r\n     */\r\n    var _bodiesClearForces = function(bodies) {\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            // reset force buffers\r\n            body.force.x = 0;\r\n            body.force.y = 0;\r\n            body.torque = 0;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Applys a mass dependant force to all given bodies.\r\n     * @method bodiesApplyGravity\r\n     * @private\r\n     * @param {body[]} bodies\r\n     * @param {vector} gravity\r\n     */\r\n    var _bodiesApplyGravity = function(bodies, gravity) {\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (body.isStatic || body.isSleeping)\r\n                continue;\r\n\r\n            // apply gravity\r\n            body.force.y += body.mass * gravity.y * 0.001;\r\n            body.force.x += body.mass * gravity.x * 0.001;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Applys `Body.update` to all given `bodies`.\r\n     * @method updateAll\r\n     * @private\r\n     * @param {body[]} bodies\r\n     * @param {number} deltaTime \r\n     * The amount of time elapsed between updates\r\n     * @param {number} timeScale\r\n     * @param {number} correction \r\n     * The Verlet correction factor (deltaTime / lastDeltaTime)\r\n     * @param {bounds} worldBounds\r\n     */\r\n    var _bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (body.isStatic || body.isSleeping)\r\n                continue;\r\n\r\n            // don't update out of world bodies\r\n            if (body.bounds.max.x < worldBounds.min.x || body.bounds.min.x > worldBounds.max.x\r\n                || body.bounds.max.y < worldBounds.min.y || body.bounds.min.y > worldBounds.max.y)\r\n                continue;\r\n\r\n            Body.update(body, deltaTime, timeScale, correction);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\r\n     * @method run\r\n     * @param {engine} engine\r\n     */\r\n\r\n    /*\r\n    *\r\n    *  Events Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n    * Fired at the start of a tick, before any updates to the engine or timing\r\n    *\r\n    * @event beforeTick\r\n    * @param {} event An event object\r\n    * @param {DOMHighResTimeStamp} event.timestamp The timestamp of the current tick\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after engine timing updated, but just before engine state updated\r\n    *\r\n    * @event tick\r\n    * @param {} event An event object\r\n    * @param {DOMHighResTimeStamp} event.timestamp The timestamp of the current tick\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired just before an update\r\n    *\r\n    * @event beforeUpdate\r\n    * @param {} event An event object\r\n    * @param {DOMHighResTimeStamp} event.timestamp The timestamp of the current tick\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after engine update and all collision events\r\n    *\r\n    * @event afterUpdate\r\n    * @param {} event An event object\r\n    * @param {DOMHighResTimeStamp} event.timestamp The timestamp of the current tick\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired just before rendering\r\n    *\r\n    * @event beforeRender\r\n    * @param {} event An event object\r\n    * @param {DOMHighResTimeStamp} event.timestamp The timestamp of the current tick\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after rendering\r\n    *\r\n    * @event afterRender\r\n    * @param {} event An event object\r\n    * @param {DOMHighResTimeStamp} event.timestamp The timestamp of the current tick\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after engine update and after rendering\r\n    *\r\n    * @event afterTick\r\n    * @param {} event An event object\r\n    * @param {DOMHighResTimeStamp} event.timestamp The timestamp of the current tick\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\r\n    *\r\n    * @event collisionStart\r\n    * @param {} event An event object\r\n    * @param {} event.pairs List of affected pairs\r\n    * @param {DOMHighResTimeStamp} event.timestamp The timestamp of the current tick\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\r\n    *\r\n    * @event collisionActive\r\n    * @param {} event An event object\r\n    * @param {} event.pairs List of affected pairs\r\n    * @param {DOMHighResTimeStamp} event.timestamp The timestamp of the current tick\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /**\r\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\r\n    *\r\n    * @event collisionEnd\r\n    * @param {} event An event object\r\n    * @param {} event.pairs List of affected pairs\r\n    * @param {DOMHighResTimeStamp} event.timestamp The timestamp of the current tick\r\n    * @param {} event.source The source object of the event\r\n    * @param {} event.name The name of the event\r\n    */\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * A flag that specifies whether the engine is running or not.\r\n     *\r\n     * @property enabled\r\n     * @type boolean\r\n     * @default true\r\n     */\r\n\r\n    /**\r\n     * An integer `Number` that specifies the number of position iterations to perform each update.\r\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\r\n     *\r\n     * @property positionIterations\r\n     * @type number\r\n     * @default 6\r\n     */\r\n\r\n    /**\r\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\r\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\r\n     *\r\n     * @property velocityIterations\r\n     * @type number\r\n     * @default 4\r\n     */\r\n\r\n    /**\r\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\r\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\r\n     * The default value of `2` is usually very adequate.\r\n     *\r\n     * @property constraintIterations\r\n     * @type number\r\n     * @default 2\r\n     */\r\n\r\n    /**\r\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\r\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\r\n     *\r\n     * @property enableSleeping\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * An `Object` containing properties regarding the timing systems of the engine. \r\n     *\r\n     * @property timing\r\n     * @type object\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the global scaling factor of time for all bodies.\r\n     * A value of `0` freezes the simulation.\r\n     * A value of `0.1` gives a slow-motion effect.\r\n     * A value of `1.2` gives a speed-up effect.\r\n     *\r\n     * @property timing.timeScale\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \r\n     * It is incremented on every `Engine.update` by the `timing.delta`. \r\n     *\r\n     * @property timing.timestamp\r\n     * @type number\r\n     * @default 0\r\n     */\r\n\r\n    /**\r\n     * A `Boolean` that specifies if the `Engine.run` game loop should use a fixed timestep (otherwise it is variable).\r\n     * If timing is fixed, then the apparant simulation speed will change depending on the frame rate (but behaviour will be deterministic).\r\n     * If the timing is variable, then the apparant simulation speed will be constant (approximately, but at the cost of determininism).\r\n     *\r\n     * @property timing.isFixed\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the time step between updates in milliseconds.\r\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\r\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparant simulation speed.\r\n     *\r\n     * @property timing.delta\r\n     * @type number\r\n     * @default 1000 / 60\r\n     */\r\n\r\n    /**\r\n     * A `Number` that specifies the time correction factor to apply to the current timestep.\r\n     * It is automatically handled when using `Engine.run`, but is also only optional even if you use your own game loop.\r\n     * The value is defined as `delta / lastDelta`, i.e. the percentage change of `delta` between steps.\r\n     * This value is always `1` (no correction) when frame rate is constant or `engine.timing.isFixed` is `true`.\r\n     * If the framerate and hence `delta` are changing, then correction should be applied to the current update to account for the change.\r\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\r\n     *\r\n     * @property timing.correction\r\n     * @type number\r\n     * @default 1\r\n     */\r\n\r\n    /**\r\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\r\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\r\n     *\r\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\r\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\r\n     *\r\n     * @property render\r\n     * @type render\r\n     * @default a Matter.Render instance\r\n     */\r\n\r\n    /**\r\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\r\n     *\r\n     * @property broadphase\r\n     * @type grid\r\n     * @default a Matter.Grid instance\r\n     */\r\n\r\n    /**\r\n     * A `World` composite object that will contain all simulated bodies and constraints.\r\n     *\r\n     * @property world\r\n     * @type world\r\n     * @default a Matter.World instance\r\n     */\r\n\r\n})();\r\n\r\n;   // End src/core/Engine.js\r\n\r\n\r\n// Begin src/core/Events.js\r\n\r\n/**\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class Events\r\n*/\r\n\r\nvar Events = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Subscribes a callback function to the given object's `eventName`.\r\n     * @method on\r\n     * @param {} object\r\n     * @param {string} eventNames\r\n     * @param {function} callback\r\n     */\r\n    Events.on = function(object, eventNames, callback) {\r\n        var names = eventNames.split(' '),\r\n            name;\r\n\r\n        for (var i = 0; i < names.length; i++) {\r\n            name = names[i];\r\n            object.events = object.events || {};\r\n            object.events[name] = object.events[name] || [];\r\n            object.events[name].push(callback);\r\n        }\r\n\r\n        return callback;\r\n    };\r\n\r\n    /**\r\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\r\n     * @method off\r\n     * @param {} object\r\n     * @param {string} eventNames\r\n     * @param {function} callback\r\n     */\r\n    Events.off = function(object, eventNames, callback) {\r\n        if (!eventNames) {\r\n            object.events = {};\r\n            return;\r\n        }\r\n\r\n        // handle Events.off(object, callback)\r\n        if (typeof eventNames === 'function') {\r\n            callback = eventNames;\r\n            eventNames = Common.keys(object.events).join(' ');\r\n        }\r\n\r\n        var names = eventNames.split(' ');\r\n\r\n        for (var i = 0; i < names.length; i++) {\r\n            var callbacks = object.events[names[i]],\r\n                newCallbacks = [];\r\n\r\n            if (callback) {\r\n                for (var j = 0; j < callbacks.length; j++) {\r\n                    if (callbacks[j] !== callback)\r\n                        newCallbacks.push(callbacks[j]);\r\n                }\r\n            }\r\n\r\n            object.events[names[i]] = newCallbacks;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\r\n     * @method trigger\r\n     * @param {} object\r\n     * @param {string} eventNames\r\n     * @param {} event\r\n     */\r\n    Events.trigger = function(object, eventNames, event) {\r\n        var names,\r\n            name,\r\n            callbacks,\r\n            eventClone;\r\n\r\n        if (object.events) {\r\n            if (!event)\r\n                event = {};\r\n\r\n            names = eventNames.split(' ');\r\n\r\n            for (var i = 0; i < names.length; i++) {\r\n                name = names[i];\r\n                callbacks = object.events[name];\r\n\r\n                if (callbacks) {\r\n                    eventClone = Common.clone(event, false);\r\n                    eventClone.name = name;\r\n                    eventClone.source = object;\r\n\r\n                    for (var j = 0; j < callbacks.length; j++) {\r\n                        callbacks[j].apply(object, [eventClone]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n;   // End src/core/Events.js\r\n\r\n\r\n// Begin src/core/Metrics.js\r\n\r\n/**\r\n* _Internal Class_, not generally used outside of the engine's internals.\r\n*\r\n* @class Metrics\r\n*/\r\n\r\nvar Metrics = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Description\r\n     * @method create\r\n     * @return {metrics} A new metrics\r\n     */\r\n    Metrics.create = function() {\r\n        return {\r\n            extended: false,\r\n            narrowDetections: 0,\r\n            narrowphaseTests: 0,\r\n            narrowReuse: 0,\r\n            narrowReuseCount: 0,\r\n            midphaseTests: 0,\r\n            broadphaseTests: 0,\r\n            narrowEff: 0.0001,\r\n            midEff: 0.0001,\r\n            broadEff: 0.0001,\r\n            collisions: 0,\r\n            buckets: 0,\r\n            bodies: 0,\r\n            pairs: 0\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method reset\r\n     * @param {metrics} metrics\r\n     */\r\n    Metrics.reset = function(metrics) {\r\n        if (metrics.extended) {\r\n            metrics.narrowDetections = 0;\r\n            metrics.narrowphaseTests = 0;\r\n            metrics.narrowReuse = 0;\r\n            metrics.narrowReuseCount = 0;\r\n            metrics.midphaseTests = 0;\r\n            metrics.broadphaseTests = 0;\r\n            metrics.narrowEff = 0;\r\n            metrics.midEff = 0;\r\n            metrics.broadEff = 0;\r\n            metrics.collisions = 0;\r\n            metrics.buckets = 0;\r\n            metrics.pairs = 0;\r\n            metrics.bodies = 0;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method update\r\n     * @param {metrics} metrics\r\n     * @param {engine} engine\r\n     */\r\n    Metrics.update = function(metrics, engine) {\r\n        if (metrics.extended) {\r\n            var world = engine.world,\r\n                bodies = Composite.allBodies(world);\r\n\r\n            metrics.collisions = metrics.narrowDetections;\r\n            metrics.pairs = engine.pairs.list.length;\r\n            metrics.bodies = bodies.length;\r\n            metrics.midEff = (metrics.narrowDetections / (metrics.midphaseTests || 1)).toFixed(2);\r\n            metrics.narrowEff = (metrics.narrowDetections / (metrics.narrowphaseTests || 1)).toFixed(2);\r\n            metrics.broadEff = (1 - (metrics.broadphaseTests / (bodies.length || 1))).toFixed(2);\r\n            metrics.narrowReuse = (metrics.narrowReuseCount / (metrics.narrowphaseTests || 1)).toFixed(2);\r\n            //var broadphase = engine.broadphase[engine.broadphase.current];\r\n            //if (broadphase.instance)\r\n            //    metrics.buckets = Common.keys(broadphase.instance.buckets).length;\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n\r\n;   // End src/core/Metrics.js\r\n\r\n\r\n// Begin src/core/Mouse.js\r\n\r\n/**\r\n* _Internal Class_, not generally used outside of the engine's internals.\r\n*\r\n* @class Mouse\r\n*/\r\n\r\nvar Mouse = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Description\r\n     * @method create\r\n     * @param {HTMLElement} element\r\n     * @return {mouse} A new mouse\r\n     */\r\n    Mouse.create = function(element) {\r\n        var mouse = {};\r\n\r\n        if (!element) {\r\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\r\n        }\r\n        \r\n        mouse.element = element || document.body;\r\n        mouse.absolute = { x: 0, y: 0 };\r\n        mouse.position = { x: 0, y: 0 };\r\n        mouse.mousedownPosition = { x: 0, y: 0 };\r\n        mouse.mouseupPosition = { x: 0, y: 0 };\r\n        mouse.offset = { x: 0, y: 0 };\r\n        mouse.scale = { x: 1, y: 1 };\r\n        mouse.wheelDelta = 0;\r\n        mouse.button = -1;\r\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\r\n\r\n        mouse.sourceEvents = {\r\n            mousemove: null,\r\n            mousedown: null,\r\n            mouseup: null,\r\n            mousewheel: null\r\n        };\r\n        \r\n        mouse.mousemove = function(event) { \r\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\r\n                touches = event.changedTouches;\r\n\r\n            if (touches) {\r\n                mouse.button = 0;\r\n                event.preventDefault();\r\n            }\r\n\r\n            mouse.absolute.x = position.x;\r\n            mouse.absolute.y = position.y;\r\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\r\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\r\n            mouse.sourceEvents.mousemove = event;\r\n        };\r\n        \r\n        mouse.mousedown = function(event) {\r\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\r\n                touches = event.changedTouches;\r\n\r\n            if (touches) {\r\n                mouse.button = 0;\r\n                event.preventDefault();\r\n            } else {\r\n                mouse.button = event.button;\r\n            }\r\n\r\n            mouse.absolute.x = position.x;\r\n            mouse.absolute.y = position.y;\r\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\r\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\r\n            mouse.mousedownPosition.x = mouse.position.x;\r\n            mouse.mousedownPosition.y = mouse.position.y;\r\n            mouse.sourceEvents.mousedown = event;\r\n        };\r\n        \r\n        mouse.mouseup = function(event) {\r\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\r\n                touches = event.changedTouches;\r\n\r\n            if (touches) {\r\n                event.preventDefault();\r\n            }\r\n            \r\n            mouse.button = -1;\r\n            mouse.absolute.x = position.x;\r\n            mouse.absolute.y = position.y;\r\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\r\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\r\n            mouse.mouseupPosition.x = mouse.position.x;\r\n            mouse.mouseupPosition.y = mouse.position.y;\r\n            mouse.sourceEvents.mouseup = event;\r\n        };\r\n\r\n        mouse.mousewheel = function(event) {\r\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\r\n            event.preventDefault();\r\n        };\r\n\r\n        Mouse.setElement(mouse, mouse.element);\r\n\r\n        return mouse;\r\n    };\r\n\r\n    /**\r\n     * Sets the element the mouse is bound to (and relative to)\r\n     * @method setElement\r\n     * @param {mouse} mouse\r\n     * @param {HTMLElement} element\r\n     */\r\n    Mouse.setElement = function(mouse, element) {\r\n        mouse.element = element;\r\n\r\n        element.addEventListener('mousemove', mouse.mousemove);\r\n        element.addEventListener('mousedown', mouse.mousedown);\r\n        element.addEventListener('mouseup', mouse.mouseup);\r\n        \r\n        element.addEventListener(\"mousewheel\", mouse.mousewheel);\r\n        element.addEventListener(\"DOMMouseScroll\", mouse.mousewheel);\r\n\r\n        element.addEventListener('touchmove', mouse.mousemove);\r\n        element.addEventListener('touchstart', mouse.mousedown);\r\n        element.addEventListener('touchend', mouse.mouseup);\r\n    };\r\n\r\n    /**\r\n     * Clears all captured source events\r\n     * @method clearSourceEvents\r\n     * @param {mouse} mouse\r\n     */\r\n    Mouse.clearSourceEvents = function(mouse) {\r\n        mouse.sourceEvents.mousemove = null;\r\n        mouse.sourceEvents.mousedown = null;\r\n        mouse.sourceEvents.mouseup = null;\r\n        mouse.sourceEvents.mousewheel = null;\r\n        mouse.wheelDelta = 0;\r\n    };\r\n\r\n    /**\r\n     * Sets the offset\r\n     * @method setOffset\r\n     * @param {mouse} mouse\r\n     */\r\n    Mouse.setOffset = function(mouse, offset) {\r\n        mouse.offset.x = offset.x;\r\n        mouse.offset.y = offset.y;\r\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\r\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\r\n    };\r\n\r\n    /**\r\n     * Sets the scale\r\n     * @method setScale\r\n     * @param {mouse} mouse\r\n     */\r\n    Mouse.setScale = function(mouse, scale) {\r\n        mouse.scale.x = scale.x;\r\n        mouse.scale.y = scale.y;\r\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\r\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @method _getRelativeMousePosition\r\n     * @private\r\n     * @param {} event\r\n     * @param {} element\r\n     * @param {number} pixelRatio\r\n     * @return {}\r\n     */\r\n    var _getRelativeMousePosition = function(event, element, pixelRatio) {\r\n        var elementBounds = element.getBoundingClientRect(),\r\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\r\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\r\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\r\n            touches = event.changedTouches,\r\n            x, y;\r\n        \r\n        if (touches) {\r\n            x = touches[0].pageX - elementBounds.left - scrollX;\r\n            y = touches[0].pageY - elementBounds.top - scrollY;\r\n        } else {\r\n            x = event.pageX - elementBounds.left - scrollX;\r\n            y = event.pageY - elementBounds.top - scrollY;\r\n        }\r\n\r\n        return { \r\n            x: x / (element.clientWidth / element.width * pixelRatio),\r\n            y: y / (element.clientHeight / element.height * pixelRatio)\r\n        };\r\n    };\r\n\r\n})();\r\n\r\n\r\n;   // End src/core/Mouse.js\r\n\r\n\r\n// Begin src/core/Runner.js\r\n\r\n/**\r\n* The `Matter.Runner` module is an optional utility which provides a game loop, \r\n* that handles updating and rendering a `Matter.Engine` for you within a browser.\r\n* Note that the method `Engine.run` is an alias for `Runner.run`.\r\n*\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class Runner\r\n*/\r\n\r\nvar Runner = {};\r\n\r\n(function() {\r\n\r\n    var _fps = 60,\r\n        _deltaSampleSize = _fps,\r\n        _delta = 1000 / _fps;\r\n\r\n    var _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\r\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \r\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, _delta); };\r\n   \r\n    var _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \r\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\r\n\r\n    /**\r\n     * Provides a basic game loop that handles updating the engine for you.\r\n     * Calls `Engine.update` and `Engine.render` on the `requestAnimationFrame` event automatically.\r\n     * Handles time correction and non-fixed dynamic timing (if enabled). \r\n     * Triggers `beforeTick`, `tick` and `afterTick` events.\r\n     * @method run\r\n     * @param {engine} engine\r\n     */\r\n    Runner.run = function(engine) {\r\n        var counterTimestamp = 0,\r\n            frameCounter = 0,\r\n            deltaHistory = [],\r\n            timePrev,\r\n            timeScalePrev = 1;\r\n\r\n        (function render(time){\r\n            var timing = engine.timing,\r\n                delta,\r\n                correction = 1;\r\n\r\n            timing.frameRequestId = _requestAnimationFrame(render);\r\n\r\n            if (!engine.enabled)\r\n                return;\r\n\r\n            // create an event object\r\n            var event = {\r\n                timestamp: time\r\n            };\r\n\r\n            Events.trigger(engine, 'beforeTick', event);\r\n\r\n            if (timing.isFixed) {\r\n                // fixed timestep\r\n                delta = timing.delta;\r\n            } else {\r\n                // dynamic timestep based on wall clock between calls\r\n                delta = (time - timePrev) || timing.delta;\r\n                timePrev = time;\r\n\r\n                // optimistically filter delta over a few frames, to improve stability\r\n                deltaHistory.push(delta);\r\n                deltaHistory = deltaHistory.slice(-_deltaSampleSize);\r\n                delta = Math.min.apply(null, deltaHistory);\r\n                \r\n                // limit delta\r\n                delta = delta < timing.deltaMin ? timing.deltaMin : delta;\r\n                delta = delta > timing.deltaMax ? timing.deltaMax : delta;\r\n\r\n                // time correction for delta\r\n                correction = delta / timing.delta;\r\n\r\n                // update engine timing object\r\n                timing.delta = delta;\r\n            }\r\n\r\n            // time correction for time scaling\r\n            if (timeScalePrev !== 0)\r\n                correction *= timing.timeScale / timeScalePrev;\r\n\r\n            if (timing.timeScale === 0)\r\n                correction = 0;\r\n\r\n            timeScalePrev = timing.timeScale;\r\n            \r\n            // fps counter\r\n            frameCounter += 1;\r\n            if (time - counterTimestamp >= 1000) {\r\n                timing.fps = frameCounter * ((time - counterTimestamp) / 1000);\r\n                counterTimestamp = time;\r\n                frameCounter = 0;\r\n            }\r\n\r\n            Events.trigger(engine, 'tick', event);\r\n\r\n            // if world has been modified, clear the render scene graph\r\n            if (engine.world.isModified && engine.render.controller.clear)\r\n                engine.render.controller.clear(engine.render);\r\n\r\n            // update\r\n            Engine.update(engine, delta, correction);\r\n\r\n            // render\r\n            Engine.render(engine);\r\n\r\n            Events.trigger(engine, 'afterTick', event);\r\n        })();\r\n    };\r\n\r\n    /**\r\n     * Ends execution of `Runner.run` on the given `engine`, by canceling the animation frame request event loop.\r\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\r\n     * @method stop\r\n     * @param {engine} engine\r\n     */\r\n    Runner.stop = function(engine) {\r\n        _cancelAnimationFrame(engine.timing.frameRequestId);\r\n    };\r\n\r\n})();\r\n\r\n\r\n;   // End src/core/Runner.js\r\n\r\n\r\n// Begin src/core/Sleeping.js\r\n\r\n/**\r\n* _Internal Class_, not generally used outside of the engine's internals.\r\n*\r\n* @class Sleeping\r\n*/\r\n\r\nvar Sleeping = {};\r\n\r\n(function() {\r\n\r\n    Sleeping._motionWakeThreshold = 0.18;\r\n    Sleeping._motionSleepThreshold = 0.08;\r\n    Sleeping._minBias = 0.9;\r\n\r\n    /**\r\n     * Puts bodies to sleep or wakes them up depending on their motion.\r\n     * @method update\r\n     * @param {body[]} bodies\r\n     * @param {number} timeScale\r\n     */\r\n    Sleeping.update = function(bodies, timeScale) {\r\n        var timeFactor = timeScale * timeScale * timeScale;\r\n\r\n        // update bodies sleeping status\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i],\r\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\r\n\r\n            // wake up bodies if they have a force applied\r\n            if (body.force.x > 0 || body.force.y > 0) {\r\n                Sleeping.set(body, false);\r\n                continue;\r\n            }\r\n\r\n            var minMotion = Math.min(body.motion, motion),\r\n                maxMotion = Math.max(body.motion, motion);\r\n        \r\n            // biased average motion estimation between frames\r\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\r\n            \r\n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\r\n                body.sleepCounter += 1;\r\n                \r\n                if (body.sleepCounter >= body.sleepThreshold)\r\n                    Sleeping.set(body, true);\r\n            } else if (body.sleepCounter > 0) {\r\n                body.sleepCounter -= 1;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\r\n     * @method afterCollisions\r\n     * @param {pair[]} pairs\r\n     * @param {number} timeScale\r\n     */\r\n    Sleeping.afterCollisions = function(pairs, timeScale) {\r\n        var timeFactor = timeScale * timeScale * timeScale;\r\n\r\n        // wake up bodies involved in collisions\r\n        for (var i = 0; i < pairs.length; i++) {\r\n            var pair = pairs[i];\r\n            \r\n            // don't wake inactive pairs\r\n            if (!pair.isActive)\r\n                continue;\r\n\r\n            var collision = pair.collision,\r\n                bodyA = collision.bodyA, \r\n                bodyB = collision.bodyB;\r\n        \r\n            // don't wake if at least one body is static\r\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\r\n                continue;\r\n        \r\n            if (bodyA.isSleeping || bodyB.isSleeping) {\r\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\r\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\r\n\r\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\r\n                    Sleeping.set(sleepingBody, false);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method set\r\n     * @param {body} body\r\n     * @param {boolean} isSleeping\r\n     */\r\n    Sleeping.set = function(body, isSleeping) {\r\n        if (isSleeping) {\r\n            body.isSleeping = true;\r\n            body.sleepCounter = body.sleepThreshold;\r\n\r\n            body.positionImpulse.x = 0;\r\n            body.positionImpulse.y = 0;\r\n\r\n            body.positionPrev.x = body.position.x;\r\n            body.positionPrev.y = body.position.y;\r\n\r\n            body.anglePrev = body.angle;\r\n            body.speed = 0;\r\n            body.angularSpeed = 0;\r\n            body.motion = 0;\r\n        } else {\r\n            body.isSleeping = false;\r\n            body.sleepCounter = 0;\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n;   // End src/core/Sleeping.js\r\n\r\n\r\n// Begin src/factory/Bodies.js\r\n\r\n/**\r\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \r\n* with commonly used body configurations (such as rectangles, circles and other polygons).\r\n*\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class Bodies\r\n*/\r\n\r\n// TODO: true circle bodies\r\n\r\nvar Bodies = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new rigid body model with a rectangle hull. \r\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\r\n     * @method rectangle\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} width\r\n     * @param {number} height\r\n     * @param {object} [options]\r\n     * @return {body} A new rectangle body\r\n     */\r\n    Bodies.rectangle = function(x, y, width, height, options) {\r\n        options = options || {};\r\n\r\n        var rectangle = { \r\n            label: 'Rectangle Body',\r\n            position: { x: x, y: y },\r\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\r\n        };\r\n\r\n        if (options.chamfer) {\r\n            var chamfer = options.chamfer;\r\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \r\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\r\n            delete options.chamfer;\r\n        }\r\n\r\n        return Body.create(Common.extend({}, rectangle, options));\r\n    };\r\n    \r\n    /**\r\n     * Creates a new rigid body model with a trapezoid hull. \r\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\r\n     * @method trapezoid\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} width\r\n     * @param {number} height\r\n     * @param {number} slope\r\n     * @param {object} [options]\r\n     * @return {body} A new trapezoid body\r\n     */\r\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\r\n        options = options || {};\r\n\r\n        slope *= 0.5;\r\n        var roof = (1 - (slope * 2)) * width;\r\n        \r\n        var x1 = width * slope,\r\n            x2 = x1 + roof,\r\n            x3 = x2 + x1;\r\n\r\n        var trapezoid = { \r\n            label: 'Trapezoid Body',\r\n            position: { x: x, y: y },\r\n            vertices: Vertices.fromPath('L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0')\r\n        };\r\n\r\n        if (options.chamfer) {\r\n            var chamfer = options.chamfer;\r\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \r\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\r\n            delete options.chamfer;\r\n        }\r\n\r\n        return Body.create(Common.extend({}, trapezoid, options));\r\n    };\r\n\r\n    /**\r\n     * Creates a new rigid body model with a circle hull. \r\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\r\n     * @method circle\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} radius\r\n     * @param {object} [options]\r\n     * @param {number} maxSides\r\n     * @return {body} A new circle body\r\n     */\r\n    Bodies.circle = function(x, y, radius, options, maxSides) {\r\n        options = options || {};\r\n        options.label = 'Circle Body';\r\n        \r\n        // approximate circles with polygons until true circles implemented in SAT\r\n\r\n        maxSides = maxSides || 25;\r\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\r\n\r\n        // optimisation: always use even number of sides (half the number of unique axes)\r\n        if (sides % 2 === 1)\r\n            sides += 1;\r\n\r\n        // flag for better rendering\r\n        options.circleRadius = radius;\r\n\r\n        return Bodies.polygon(x, y, sides, radius, options);\r\n    };\r\n\r\n    /**\r\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \r\n     * The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\r\n     * @method polygon\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} sides\r\n     * @param {number} radius\r\n     * @param {object} [options]\r\n     * @return {body} A new regular polygon body\r\n     */\r\n    Bodies.polygon = function(x, y, sides, radius, options) {\r\n        options = options || {};\r\n\r\n        if (sides < 3)\r\n            return Bodies.circle(x, y, radius, options);\r\n\r\n        var theta = 2 * Math.PI / sides,\r\n            path = '',\r\n            offset = theta * 0.5;\r\n\r\n        for (var i = 0; i < sides; i += 1) {\r\n            var angle = offset + (i * theta),\r\n                xx = Math.cos(angle) * radius,\r\n                yy = Math.sin(angle) * radius;\r\n\r\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\r\n        }\r\n\r\n        var polygon = { \r\n            label: 'Polygon Body',\r\n            position: { x: x, y: y },\r\n            vertices: Vertices.fromPath(path)\r\n        };\r\n\r\n        if (options.chamfer) {\r\n            var chamfer = options.chamfer;\r\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \r\n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\r\n            delete options.chamfer;\r\n        }\r\n\r\n        return Body.create(Common.extend({}, polygon, options));\r\n    };\r\n\r\n})();\r\n\r\n\r\n;   // End src/factory/Bodies.js\r\n\r\n\r\n// Begin src/factory/Composites.js\r\n\r\n/**\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class Composites\r\n*/\r\n\r\nvar Composites = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Description\r\n     * @method stack\r\n     * @param {number} xx\r\n     * @param {number} yy\r\n     * @param {number} columns\r\n     * @param {number} rows\r\n     * @param {number} columnGap\r\n     * @param {number} rowGap\r\n     * @param {function} callback\r\n     * @return {composite} A new composite containing objects created in the callback\r\n     */\r\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\r\n        var stack = Composite.create({ label: 'Stack' }),\r\n            x = xx,\r\n            y = yy,\r\n            lastBody,\r\n            i = 0;\r\n\r\n        for (var row = 0; row < rows; row++) {\r\n            var maxHeight = 0;\r\n            \r\n            for (var column = 0; column < columns; column++) {\r\n                var body = callback(x, y, column, row, lastBody, i);\r\n                    \r\n                if (body) {\r\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\r\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \r\n\r\n                    if (bodyHeight > maxHeight)\r\n                        maxHeight = bodyHeight;\r\n                    \r\n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\r\n\r\n                    x = body.bounds.max.x + columnGap;\r\n\r\n                    Composite.addBody(stack, body);\r\n                    \r\n                    lastBody = body;\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            y += maxHeight + rowGap;\r\n            x = xx;\r\n        }\r\n\r\n        return stack;\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @method chain\r\n     * @param {composite} composite\r\n     * @param {number} xOffsetA\r\n     * @param {number} yOffsetA\r\n     * @param {number} xOffsetB\r\n     * @param {number} yOffsetB\r\n     * @param {object} options\r\n     * @return {composite} A new composite containing objects chained together with constraints\r\n     */\r\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\r\n        var bodies = composite.bodies;\r\n        \r\n        for (var i = 1; i < bodies.length; i++) {\r\n            var bodyA = bodies[i - 1],\r\n                bodyB = bodies[i],\r\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\r\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \r\n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\r\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\r\n        \r\n            var defaults = {\r\n                bodyA: bodyA,\r\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\r\n                bodyB: bodyB,\r\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\r\n            };\r\n            \r\n            var constraint = Common.extend(defaults, options);\r\n        \r\n            Composite.addConstraint(composite, Constraint.create(constraint));\r\n        }\r\n\r\n        composite.label += ' Chain';\r\n        \r\n        return composite;\r\n    };\r\n\r\n    /**\r\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces\r\n     * @method mesh\r\n     * @param {composite} composite\r\n     * @param {number} columns\r\n     * @param {number} rows\r\n     * @param {boolean} crossBrace\r\n     * @param {object} options\r\n     * @return {composite} The composite containing objects meshed together with constraints\r\n     */\r\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\r\n        var bodies = composite.bodies,\r\n            row,\r\n            col,\r\n            bodyA,\r\n            bodyB,\r\n            bodyC;\r\n        \r\n        for (row = 0; row < rows; row++) {\r\n            for (col = 0; col < columns; col++) {\r\n                if (col > 0) {\r\n                    bodyA = bodies[(col - 1) + (row * columns)];\r\n                    bodyB = bodies[col + (row * columns)];\r\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\r\n                }\r\n            }\r\n\r\n            for (col = 0; col < columns; col++) {\r\n                if (row > 0) {\r\n                    bodyA = bodies[col + ((row - 1) * columns)];\r\n                    bodyB = bodies[col + (row * columns)];\r\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\r\n\r\n                    if (crossBrace && col > 0) {\r\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\r\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\r\n                    }\r\n\r\n                    if (crossBrace && col < columns - 1) {\r\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\r\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        composite.label += ' Mesh';\r\n        \r\n        return composite;\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @method pyramid\r\n     * @param {number} xx\r\n     * @param {number} yy\r\n     * @param {number} columns\r\n     * @param {number} rows\r\n     * @param {number} columnGap\r\n     * @param {number} rowGap\r\n     * @param {function} callback\r\n     * @return {composite} A new composite containing objects created in the callback\r\n     */\r\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\r\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\r\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\r\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\r\n            \r\n            if (row > actualRows)\r\n                return;\r\n            \r\n            // reverse row order\r\n            row = actualRows - row;\r\n            \r\n            var start = row,\r\n                end = columns - 1 - row;\r\n\r\n            if (column < start || column > end)\r\n                return;\r\n            \r\n            // retroactively fix the first body's position, since width was unknown\r\n            if (i === 1) {\r\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\r\n            }\r\n\r\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\r\n            \r\n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method newtonsCradle\r\n     * @param {number} xx\r\n     * @param {number} yy\r\n     * @param {number} number\r\n     * @param {number} size\r\n     * @param {number} length\r\n     * @return {composite} A new composite newtonsCradle body\r\n     */\r\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\r\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\r\n\r\n        for (var i = 0; i < number; i++) {\r\n            var separation = 1.9,\r\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \r\n                            { inertia: 99999, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 0.01 }),\r\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\r\n\r\n            Composite.addBody(newtonsCradle, circle);\r\n            Composite.addConstraint(newtonsCradle, constraint);\r\n        }\r\n\r\n        return newtonsCradle;\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @method car\r\n     * @param {number} xx\r\n     * @param {number} yy\r\n     * @param {number} width\r\n     * @param {number} height\r\n     * @param {number} wheelSize\r\n     * @return {composite} A new composite car body\r\n     */\r\n    Composites.car = function(xx, yy, width, height, wheelSize) {\r\n        var group = Body.nextGroup(true),\r\n            wheelBase = -20,\r\n            wheelAOffset = -width * 0.5 + wheelBase,\r\n            wheelBOffset = width * 0.5 - wheelBase,\r\n            wheelYOffset = 0;\r\n    \r\n        var car = Composite.create({ label: 'Car' }),\r\n            body = Bodies.trapezoid(xx, yy, width, height, 0.3, { \r\n                collisionFilter: {\r\n                    group: group\r\n                },\r\n                friction: 0.01,\r\n                chamfer: {\r\n                    radius: 10\r\n                }\r\n            });\r\n    \r\n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \r\n            collisionFilter: {\r\n                group: group\r\n            },\r\n            restitution: 0.5, \r\n            friction: 0.9,\r\n            density: 0.01\r\n        });\r\n                    \r\n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \r\n            collisionFilter: {\r\n                group: group\r\n            },\r\n            restitution: 0.5, \r\n            friction: 0.9,\r\n            density: 0.01\r\n        });\r\n                    \r\n        var axelA = Constraint.create({\r\n            bodyA: body,\r\n            pointA: { x: wheelAOffset, y: wheelYOffset },\r\n            bodyB: wheelA,\r\n            stiffness: 0.5\r\n        });\r\n                        \r\n        var axelB = Constraint.create({\r\n            bodyA: body,\r\n            pointA: { x: wheelBOffset, y: wheelYOffset },\r\n            bodyB: wheelB,\r\n            stiffness: 0.5\r\n        });\r\n        \r\n        Composite.addBody(car, body);\r\n        Composite.addBody(car, wheelA);\r\n        Composite.addBody(car, wheelB);\r\n        Composite.addConstraint(car, axelA);\r\n        Composite.addConstraint(car, axelB);\r\n\r\n        return car;\r\n    };\r\n\r\n    /**\r\n     * Creates a simple soft body like object\r\n     * @method softBody\r\n     * @param {number} xx\r\n     * @param {number} yy\r\n     * @param {number} columns\r\n     * @param {number} rows\r\n     * @param {number} columnGap\r\n     * @param {number} rowGap\r\n     * @param {boolean} crossBrace\r\n     * @param {number} particleRadius\r\n     * @param {} particleOptions\r\n     * @param {} constraintOptions\r\n     * @return {composite} A new composite softBody\r\n     */\r\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\r\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\r\n        constraintOptions = Common.extend({ stiffness: 0.4 }, constraintOptions);\r\n\r\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\r\n            return Bodies.circle(x, y, particleRadius, particleOptions);\r\n        });\r\n\r\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\r\n\r\n        softBody.label = 'Soft Body';\r\n\r\n        return softBody;\r\n    };\r\n\r\n})();\r\n\r\n\r\n;   // End src/factory/Composites.js\r\n\r\n\r\n// Begin src/geometry/Axes.js\r\n\r\n/**\r\n* _Internal Class_, not generally used outside of the engine's internals.\r\n*\r\n* @class Axes\r\n*/\r\n\r\nvar Axes = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Description\r\n     * @method fromVertices\r\n     * @param {vertices} vertices\r\n     * @return {axes} A new axes from the given vertices\r\n     */\r\n    Axes.fromVertices = function(vertices) {\r\n        var axes = {};\r\n\r\n        // find the unique axes, using edge normal gradients\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var j = (i + 1) % vertices.length, \r\n                normal = Vector.normalise({ \r\n                    x: vertices[j].y - vertices[i].y, \r\n                    y: vertices[i].x - vertices[j].x\r\n                }),\r\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\r\n            \r\n            // limit precision\r\n            gradient = gradient.toFixed(3).toString();\r\n\r\n            axes[gradient] = normal;\r\n        }\r\n\r\n        return Common.values(axes);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method rotate\r\n     * @param {axes} axes\r\n     * @param {number} angle\r\n     */\r\n    Axes.rotate = function(axes, angle) {\r\n        if (angle === 0)\r\n            return;\r\n        \r\n        var cos = Math.cos(angle),\r\n            sin = Math.sin(angle);\r\n\r\n        for (var i = 0; i < axes.length; i++) {\r\n            var axis = axes[i],\r\n                xx;\r\n            xx = axis.x * cos - axis.y * sin;\r\n            axis.y = axis.x * sin + axis.y * cos;\r\n            axis.x = xx;\r\n        }\r\n    };\r\n\r\n})();\r\n\r\n;   // End src/geometry/Axes.js\r\n\r\n\r\n// Begin src/geometry/Bounds.js\r\n\r\n/**\r\n* _Internal Class_, not generally used outside of the engine's internals.\r\n*\r\n* @class Bounds\r\n*/\r\n\r\nvar Bounds = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Description\r\n     * @method create\r\n     * @param {vertices} vertices\r\n     * @return {bounds} A new bounds object\r\n     */\r\n    Bounds.create = function(vertices) {\r\n        var bounds = { \r\n            min: { x: 0, y: 0 }, \r\n            max: { x: 0, y: 0 }\r\n        };\r\n\r\n        if (vertices)\r\n            Bounds.update(bounds, vertices);\r\n        \r\n        return bounds;\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method update\r\n     * @param {bounds} bounds\r\n     * @param {vertices} vertices\r\n     * @param {vector} velocity\r\n     */\r\n    Bounds.update = function(bounds, vertices, velocity) {\r\n        bounds.min.x = Number.MAX_VALUE;\r\n        bounds.max.x = Number.MIN_VALUE;\r\n        bounds.min.y = Number.MAX_VALUE;\r\n        bounds.max.y = Number.MIN_VALUE;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertex = vertices[i];\r\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\r\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\r\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\r\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\r\n        }\r\n        \r\n        if (velocity) {\r\n            if (velocity.x > 0) {\r\n                bounds.max.x += velocity.x;\r\n            } else {\r\n                bounds.min.x += velocity.x;\r\n            }\r\n            \r\n            if (velocity.y > 0) {\r\n                bounds.max.y += velocity.y;\r\n            } else {\r\n                bounds.min.y += velocity.y;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method contains\r\n     * @param {bounds} bounds\r\n     * @param {vector} point\r\n     * @return {boolean} True if the bounds contain the point, otherwise false\r\n     */\r\n    Bounds.contains = function(bounds, point) {\r\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \r\n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method overlaps\r\n     * @param {bounds} boundsA\r\n     * @param {bounds} boundsB\r\n     * @return {boolean} True if the bounds overlap, otherwise false\r\n     */\r\n    Bounds.overlaps = function(boundsA, boundsB) {\r\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\r\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\r\n    };\r\n\r\n    /**\r\n     * Translates the bounds by the given vector\r\n     * @method translate\r\n     * @param {bounds} bounds\r\n     * @param {vector} vector\r\n     */\r\n    Bounds.translate = function(bounds, vector) {\r\n        bounds.min.x += vector.x;\r\n        bounds.max.x += vector.x;\r\n        bounds.min.y += vector.y;\r\n        bounds.max.y += vector.y;\r\n    };\r\n\r\n    /**\r\n     * Shifts the bounds to the given position\r\n     * @method shift\r\n     * @param {bounds} bounds\r\n     * @param {vector} position\r\n     */\r\n    Bounds.shift = function(bounds, position) {\r\n        var deltaX = bounds.max.x - bounds.min.x,\r\n            deltaY = bounds.max.y - bounds.min.y;\r\n            \r\n        bounds.min.x = position.x;\r\n        bounds.max.x = position.x + deltaX;\r\n        bounds.min.y = position.y;\r\n        bounds.max.y = position.y + deltaY;\r\n    };\r\n    \r\n})();\r\n\r\n;   // End src/geometry/Bounds.js\r\n\r\n\r\n// Begin src/geometry/Vector.js\r\n\r\n/**\r\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\r\n* Vectors are the basis of all the geometry related operations in the engine.\r\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\r\n*\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class Vector\r\n*/\r\n\r\n// TODO: consider params for reusing vector objects\r\n\r\nvar Vector = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\r\n     * @method clone\r\n     * @param {vector} vector\r\n     * @return {vector} A new cloned vector\r\n     */\r\n    Vector.clone = function(vector) {\r\n        return { x: vector.x, y: vector.y };\r\n    };\r\n\r\n    /**\r\n     * Returns the magnitude (length) of a vector.\r\n     * @method magnitude\r\n     * @param {vector} vector\r\n     * @return {number} The magnitude of the vector\r\n     */\r\n    Vector.magnitude = function(vector) {\r\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\r\n    };\r\n\r\n    /**\r\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\r\n     * @method magnitudeSquared\r\n     * @param {vector} vector\r\n     * @return {number} The squared magnitude of the vector\r\n     */\r\n    Vector.magnitudeSquared = function(vector) {\r\n        return (vector.x * vector.x) + (vector.y * vector.y);\r\n    };\r\n\r\n    /**\r\n     * Rotates the vector about (0, 0) by specified angle.\r\n     * @method rotate\r\n     * @param {vector} vector\r\n     * @param {number} angle\r\n     * @return {vector} A new vector rotated about (0, 0)\r\n     */\r\n    Vector.rotate = function(vector, angle) {\r\n        var cos = Math.cos(angle), sin = Math.sin(angle);\r\n        return {\r\n            x: vector.x * cos - vector.y * sin,\r\n            y: vector.x * sin + vector.y * cos\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Rotates the vector about a specified point by specified angle.\r\n     * @method rotateAbout\r\n     * @param {vector} vector\r\n     * @param {number} angle\r\n     * @param {vector} point\r\n     * @return {vector} A new vector rotated about the point\r\n     */\r\n    Vector.rotateAbout = function(vector, angle, point) {\r\n        var cos = Math.cos(angle), sin = Math.sin(angle);\r\n        return {\r\n            x: point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin),\r\n            y: point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos)\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Normalises a vector (such that its magnitude is `1`).\r\n     * @method normalise\r\n     * @param {vector} vector\r\n     * @return {vector} A new vector normalised\r\n     */\r\n    Vector.normalise = function(vector) {\r\n        var magnitude = Vector.magnitude(vector);\r\n        if (magnitude === 0)\r\n            return { x: 0, y: 0 };\r\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\r\n    };\r\n\r\n    /**\r\n     * Returns the dot-product of two vectors.\r\n     * @method dot\r\n     * @param {vector} vectorA\r\n     * @param {vector} vectorB\r\n     * @return {number} The dot product of the two vectors\r\n     */\r\n    Vector.dot = function(vectorA, vectorB) {\r\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\r\n    };\r\n\r\n    /**\r\n     * Returns the cross-product of two vectors.\r\n     * @method cross\r\n     * @param {vector} vectorA\r\n     * @param {vector} vectorB\r\n     * @return {number} The cross product of the two vectors\r\n     */\r\n    Vector.cross = function(vectorA, vectorB) {\r\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\r\n    };\r\n\r\n    /**\r\n     * Adds the two vectors.\r\n     * @method add\r\n     * @param {vector} vectorA\r\n     * @param {vector} vectorB\r\n     * @return {vector} A new vector of vectorA and vectorB added\r\n     */\r\n    Vector.add = function(vectorA, vectorB) {\r\n        return { x: vectorA.x + vectorB.x, y: vectorA.y + vectorB.y };\r\n    };\r\n\r\n    /**\r\n     * Subtracts the two vectors.\r\n     * @method sub\r\n     * @param {vector} vectorA\r\n     * @param {vector} vectorB\r\n     * @return {vector} A new vector of vectorA and vectorB subtracted\r\n     */\r\n    Vector.sub = function(vectorA, vectorB) {\r\n        return { x: vectorA.x - vectorB.x, y: vectorA.y - vectorB.y };\r\n    };\r\n\r\n    /**\r\n     * Multiplies a vector and a scalar.\r\n     * @method mult\r\n     * @param {vector} vector\r\n     * @param {number} scalar\r\n     * @return {vector} A new vector multiplied by scalar\r\n     */\r\n    Vector.mult = function(vector, scalar) {\r\n        return { x: vector.x * scalar, y: vector.y * scalar };\r\n    };\r\n\r\n    /**\r\n     * Divides a vector and a scalar.\r\n     * @method div\r\n     * @param {vector} vector\r\n     * @param {number} scalar\r\n     * @return {vector} A new vector divided by scalar\r\n     */\r\n    Vector.div = function(vector, scalar) {\r\n        return { x: vector.x / scalar, y: vector.y / scalar };\r\n    };\r\n\r\n    /**\r\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\r\n     * @method perp\r\n     * @param {vector} vector\r\n     * @param {bool} [negate=false]\r\n     * @return {vector} The perpendicular vector\r\n     */\r\n    Vector.perp = function(vector, negate) {\r\n        negate = negate === true ? -1 : 1;\r\n        return { x: negate * -vector.y, y: negate * vector.x };\r\n    };\r\n\r\n    /**\r\n     * Negates both components of a vector such that it points in the opposite direction.\r\n     * @method neg\r\n     * @param {vector} vector\r\n     * @return {vector} The negated vector\r\n     */\r\n    Vector.neg = function(vector) {\r\n        return { x: -vector.x, y: -vector.y };\r\n    };\r\n\r\n    /**\r\n     * Returns the angle in radians between the two vectors relative to the x-axis.\r\n     * @method angle\r\n     * @param {vector} vectorA\r\n     * @param {vector} vectorB\r\n     * @return {number} The angle in radians\r\n     */\r\n    Vector.angle = function(vectorA, vectorB) {\r\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\r\n    };\r\n\r\n})();\r\n\r\n;   // End src/geometry/Vector.js\r\n\r\n\r\n// Begin src/geometry/Vertices.js\r\n\r\n/**\r\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\r\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\r\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\r\n*\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class Vertices\r\n*/\r\n\r\n// TODO: convex decomposition - http://mnbayazit.com/406/bayazit\r\n\r\nvar Vertices = {};\r\n\r\n(function() {\r\n\r\n    /**\r\n     * Creates a new set of `Matter.Body` compatible vertices.\r\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\r\n     *\r\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\r\n     *\r\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\r\n     * but with some additional references required for efficient collision detection routines.\r\n     *\r\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\r\n     *\r\n     * @method create\r\n     * @param {vector[]} points\r\n     * @param {body} body\r\n     */\r\n    Vertices.create = function(points, body) {\r\n        var vertices = [];\r\n\r\n        for (var i = 0; i < points.length; i++) {\r\n            var point = points[i],\r\n                vertex = {};\r\n\r\n            vertex.x = point.x;\r\n            vertex.y = point.y;\r\n            vertex.index = i;\r\n            vertex.body = body;\r\n\r\n            vertices.push(vertex);\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Parses a _simple_ SVG-style path into a `Matter.Vertices` object for the given `Matter.Body`.\r\n     * @method fromPath\r\n     * @param {string} path\r\n     * @param {body} body\r\n     * @return {vertices} vertices\r\n     */\r\n    Vertices.fromPath = function(path, body) {\r\n        var pathPattern = /L\\s*([\\-\\d\\.]*)\\s*([\\-\\d\\.]*)/ig,\r\n            points = [];\r\n\r\n        path.replace(pathPattern, function(match, x, y) {\r\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\r\n        });\r\n\r\n        return Vertices.create(points, body);\r\n    };\r\n\r\n    /**\r\n     * Returns the centre (centroid) of the set of vertices.\r\n     * @method centre\r\n     * @param {vertices} vertices\r\n     * @return {vector} The centre point\r\n     */\r\n    Vertices.centre = function(vertices) {\r\n        var area = Vertices.area(vertices, true),\r\n            centre = { x: 0, y: 0 },\r\n            cross,\r\n            temp,\r\n            j;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            j = (i + 1) % vertices.length;\r\n            cross = Vector.cross(vertices[i], vertices[j]);\r\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\r\n            centre = Vector.add(centre, temp);\r\n        }\r\n\r\n        return Vector.div(centre, 6 * area);\r\n    };\r\n\r\n    /**\r\n     * Returns the area of the set of vertices.\r\n     * @method area\r\n     * @param {vertices} vertices\r\n     * @param {bool} signed\r\n     * @return {number} The area\r\n     */\r\n    Vertices.area = function(vertices, signed) {\r\n        var area = 0,\r\n            j = vertices.length - 1;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\r\n            j = i;\r\n        }\r\n\r\n        if (signed)\r\n            return area / 2;\r\n\r\n        return Math.abs(area) / 2;\r\n    };\r\n\r\n    /**\r\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\r\n     * @method inertia\r\n     * @param {vertices} vertices\r\n     * @param {number} mass\r\n     * @return {number} The polygon's moment of inertia\r\n     */\r\n    Vertices.inertia = function(vertices, mass) {\r\n        var numerator = 0,\r\n            denominator = 0,\r\n            v = vertices,\r\n            cross,\r\n            j;\r\n\r\n        // find the polygon's moment of inertia, using second moment of area\r\n        // http://www.physicsforums.com/showthread.php?t=25293\r\n        for (var n = 0; n < v.length; n++) {\r\n            j = (n + 1) % v.length;\r\n            cross = Math.abs(Vector.cross(v[j], v[n]));\r\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\r\n            denominator += cross;\r\n        }\r\n\r\n        return (mass / 6) * (numerator / denominator);\r\n    };\r\n\r\n    /**\r\n     * Translates the set of vertices in-place.\r\n     * @method translate\r\n     * @param {vertices} vertices\r\n     * @param {vector} vector\r\n     * @param {number} scalar\r\n     */\r\n    Vertices.translate = function(vertices, vector, scalar) {\r\n        var i;\r\n        if (scalar) {\r\n            for (i = 0; i < vertices.length; i++) {\r\n                vertices[i].x += vector.x * scalar;\r\n                vertices[i].y += vector.y * scalar;\r\n            }\r\n        } else {\r\n            for (i = 0; i < vertices.length; i++) {\r\n                vertices[i].x += vector.x;\r\n                vertices[i].y += vector.y;\r\n            }\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Rotates the set of vertices in-place.\r\n     * @method rotate\r\n     * @param {vertices} vertices\r\n     * @param {number} angle\r\n     * @param {vector} point\r\n     */\r\n    Vertices.rotate = function(vertices, angle, point) {\r\n        if (angle === 0)\r\n            return;\r\n\r\n        var cos = Math.cos(angle),\r\n            sin = Math.sin(angle);\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertice = vertices[i],\r\n                dx = vertice.x - point.x,\r\n                dy = vertice.y - point.y;\r\n                \r\n            vertice.x = point.x + (dx * cos - dy * sin);\r\n            vertice.y = point.y + (dx * sin + dy * cos);\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Returns `true` if the `point` is inside the set of `vertices`.\r\n     * @method contains\r\n     * @param {vertices} vertices\r\n     * @param {vector} point\r\n     * @return {boolean} True if the vertices contains point, otherwise false\r\n     */\r\n    Vertices.contains = function(vertices, point) {\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var vertice = vertices[i],\r\n                nextVertice = vertices[(i + 1) % vertices.length];\r\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    /**\r\n     * Scales the vertices from a point (default is centre) in-place.\r\n     * @method scale\r\n     * @param {vertices} vertices\r\n     * @param {number} scaleX\r\n     * @param {number} scaleY\r\n     * @param {vector} point\r\n     */\r\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\r\n        if (scaleX === 1 && scaleY === 1)\r\n            return vertices;\r\n\r\n        point = point || Vertices.centre(vertices);\r\n\r\n        var vertex,\r\n            delta;\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            vertex = vertices[i];\r\n            delta = Vector.sub(vertex, point);\r\n            vertices[i].x = point.x + delta.x * scaleX;\r\n            vertices[i].y = point.y + delta.y * scaleY;\r\n        }\r\n\r\n        return vertices;\r\n    };\r\n\r\n    /**\r\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\r\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\r\n     * @method chamfer\r\n     * @param {vertices} vertices\r\n     * @param {number[]} radius\r\n     * @param {number} quality\r\n     * @param {number} qualityMin\r\n     * @param {number} qualityMax\r\n     */\r\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\r\n        radius = radius || [8];\r\n\r\n        if (!radius.length)\r\n            radius = [radius];\r\n\r\n        // quality defaults to -1, which is auto\r\n        quality = (typeof quality !== 'undefined') ? quality : -1;\r\n        qualityMin = qualityMin || 2;\r\n        qualityMax = qualityMax || 14;\r\n\r\n        var newVertices = [];\r\n\r\n        for (var i = 0; i < vertices.length; i++) {\r\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\r\n                vertex = vertices[i],\r\n                nextVertex = vertices[(i + 1) % vertices.length],\r\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\r\n\r\n            if (currentRadius === 0) {\r\n                newVertices.push(vertex);\r\n                continue;\r\n            }\r\n\r\n            var prevNormal = Vector.normalise({ \r\n                x: vertex.y - prevVertex.y, \r\n                y: prevVertex.x - vertex.x\r\n            });\r\n\r\n            var nextNormal = Vector.normalise({ \r\n                x: nextVertex.y - vertex.y, \r\n                y: vertex.x - nextVertex.x\r\n            });\r\n\r\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\r\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\r\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\r\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\r\n\r\n            var precision = quality;\r\n\r\n            if (quality === -1) {\r\n                // automatically decide precision\r\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\r\n            }\r\n\r\n            precision = Common.clamp(precision, qualityMin, qualityMax);\r\n\r\n            // use an even value for precision, more likely to reduce axes by using symmetry\r\n            if (precision % 2 === 1)\r\n                precision += 1;\r\n\r\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\r\n                theta = alpha / precision;\r\n\r\n            for (var j = 0; j < precision; j++) {\r\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\r\n            }\r\n        }\r\n\r\n        return newVertices;\r\n    };\r\n\r\n})();\r\n\r\n\r\n;   // End src/geometry/Vertices.js\r\n\r\n\r\n// Begin src/render/Render.js\r\n\r\n/**\r\n* The `Matter.Render` module is the default `render.controller` used by a `Matter.Engine`.\r\n* This renderer is HTML5 canvas based and supports a number of drawing options including sprites and viewports.\r\n*\r\n* It is possible develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\r\n* A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\r\n*\r\n* See also `Matter.RenderPixi` for an alternate WebGL, scene-graph based renderer.\r\n*\r\n* @class Render\r\n*/\r\n\r\nvar Render = {};\r\n\r\n(function() {\r\n    \r\n    /**\r\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\r\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\r\n     * See the properites section below for detailed information on what you can pass via the `options` object.\r\n     * @method create\r\n     * @param {object} [options]\r\n     * @return {render} A new renderer\r\n     */\r\n    Render.create = function(options) {\r\n        var defaults = {\r\n            controller: Render,\r\n            element: null,\r\n            canvas: null,\r\n            options: {\r\n                width: 800,\r\n                height: 600,\r\n                pixelRatio: 1,\r\n                background: '#fafafa',\r\n                wireframeBackground: '#222',\r\n                hasBounds: false,\r\n                enabled: true,\r\n                wireframes: true,\r\n                showSleeping: true,\r\n                showDebug: false,\r\n                showBroadphase: false,\r\n                showBounds: false,\r\n                showVelocity: false,\r\n                showCollisions: false,\r\n                showAxes: false,\r\n                showPositions: false,\r\n                showAngleIndicator: false,\r\n                showIds: false,\r\n                showShadows: false\r\n            }\r\n        };\r\n\r\n        var render = Common.extend(defaults, options);\r\n\r\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\r\n        render.context = render.canvas.getContext('2d');\r\n        render.textures = {};\r\n\r\n        render.bounds = render.bounds || { \r\n            min: { \r\n                x: 0,\r\n                y: 0\r\n            }, \r\n            max: { \r\n                x: render.options.width,\r\n                y: render.options.height\r\n            }\r\n        };\r\n\r\n        if (render.options.pixelRatio !== 1) {\r\n            Render.setPixelRatio(render, render.options.pixelRatio);\r\n        }\r\n\r\n        if (Common.isElement(render.element)) {\r\n            render.element.appendChild(render.canvas);\r\n        } else {\r\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\r\n        }\r\n\r\n        return render;\r\n    };\r\n\r\n    /**\r\n     * Sets the pixel ratio of the renderer and updates the canvas.\r\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\r\n     * @method setPixelRatio\r\n     * @param {render} render\r\n     * @param {number} pixelRatio\r\n     */\r\n    Render.setPixelRatio = function(render, pixelRatio) {\r\n        var options = render.options,\r\n            canvas = render.canvas;\r\n\r\n        if (pixelRatio === 'auto') {\r\n            pixelRatio = _getPixelRatio(canvas);\r\n        }\r\n\r\n        options.pixelRatio = pixelRatio;\r\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\r\n        canvas.width = options.width * pixelRatio;\r\n        canvas.height = options.height * pixelRatio;\r\n        canvas.style.width = options.width + 'px';\r\n        canvas.style.height = options.height + 'px';\r\n        render.context.scale(pixelRatio, pixelRatio);\r\n    };\r\n\r\n    /**\r\n     * Renders the given `engine`'s `Matter.World` object.\r\n     * This is the entry point for all rendering and should be called every time the scene changes.\r\n     * @method world\r\n     * @param {engine} engine\r\n     */\r\n    Render.world = function(engine) {\r\n        var render = engine.render,\r\n            world = engine.world,\r\n            canvas = render.canvas,\r\n            context = render.context,\r\n            options = render.options,\r\n            allBodies = Composite.allBodies(world),\r\n            allConstraints = Composite.allConstraints(world),\r\n            background = options.wireframes ? options.wireframeBackground : options.background,\r\n            bodies = [],\r\n            constraints = [],\r\n            i;\r\n\r\n        // apply background if it has changed\r\n        if (render.currentBackground !== background)\r\n            _applyBackground(render, background);\r\n\r\n        // clear the canvas with a transparent fill, to allow the canvas background to show\r\n        context.globalCompositeOperation = 'source-in';\r\n        context.fillStyle = \"transparent\";\r\n        context.fillRect(0, 0, canvas.width, canvas.height);\r\n        context.globalCompositeOperation = 'source-over';\r\n\r\n        // handle bounds\r\n        if (options.hasBounds) {\r\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\r\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\r\n                boundsScaleX = boundsWidth / options.width,\r\n                boundsScaleY = boundsHeight / options.height;\r\n\r\n            // filter out bodies that are not in view\r\n            for (i = 0; i < allBodies.length; i++) {\r\n                var body = allBodies[i];\r\n                if (Bounds.overlaps(body.bounds, render.bounds))\r\n                    bodies.push(body);\r\n            }\r\n\r\n            // filter out constraints that are not in view\r\n            for (i = 0; i < allConstraints.length; i++) {\r\n                var constraint = allConstraints[i],\r\n                    bodyA = constraint.bodyA,\r\n                    bodyB = constraint.bodyB,\r\n                    pointAWorld = constraint.pointA,\r\n                    pointBWorld = constraint.pointB;\r\n\r\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\r\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\r\n\r\n                if (!pointAWorld || !pointBWorld)\r\n                    continue;\r\n\r\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\r\n                    constraints.push(constraint);\r\n            }\r\n\r\n            // transform the view\r\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\r\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\r\n        } else {\r\n            constraints = allConstraints;\r\n            bodies = allBodies;\r\n        }\r\n\r\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\r\n            // fully featured rendering of bodies\r\n            Render.bodies(engine, bodies, context);\r\n        } else {\r\n            // optimised method for wireframes only\r\n            Render.bodyWireframes(engine, bodies, context);\r\n        }\r\n\r\n        if (options.showBounds)\r\n            Render.bodyBounds(engine, bodies, context);\r\n\r\n        if (options.showAxes || options.showAngleIndicator)\r\n            Render.bodyAxes(engine, bodies, context);\r\n        \r\n        if (options.showPositions)\r\n            Render.bodyPositions(engine, bodies, context);\r\n\r\n        if (options.showVelocity)\r\n            Render.bodyVelocity(engine, bodies, context);\r\n\r\n        if (options.showIds)\r\n            Render.bodyIds(engine, bodies, context);\r\n\r\n        if (options.showCollisions)\r\n            Render.collisions(engine, engine.pairs.list, context);\r\n\r\n        Render.constraints(constraints, context);\r\n\r\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\r\n            Render.grid(engine, engine.broadphase, context);\r\n\r\n        if (options.showDebug)\r\n            Render.debug(engine, context);\r\n\r\n        if (options.hasBounds) {\r\n            // revert view transforms\r\n            context.setTransform(options.pixelRatio, 0, 0, options.pixelRatio, 0, 0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method debug\r\n     * @param {engine} engine\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.debug = function(engine, context) {\r\n        var c = context,\r\n            world = engine.world,\r\n            render = engine.render,\r\n            options = render.options,\r\n            bodies = Composite.allBodies(world),\r\n            space = \"    \";\r\n\r\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\r\n            var text = \"\";\r\n            text += \"fps: \" + Math.round(engine.timing.fps) + space;\r\n\r\n            if (engine.metrics.extended) {\r\n                text += \"delta: \" + engine.timing.delta.toFixed(3) + space;\r\n                text += \"correction: \" + engine.timing.correction.toFixed(3) + space;\r\n                text += \"bodies: \" + bodies.length + space;\r\n\r\n                if (engine.broadphase.controller === Grid)\r\n                    text += \"buckets: \" + engine.metrics.buckets + space;\r\n\r\n                text += \"\\n\";\r\n\r\n                text += \"collisions: \" + engine.metrics.collisions + space;\r\n                text += \"pairs: \" + engine.pairs.list.length + space;\r\n                text += \"broad: \" + engine.metrics.broadEff + space;\r\n                text += \"mid: \" + engine.metrics.midEff + space;\r\n                text += \"narrow: \" + engine.metrics.narrowEff + space;\r\n            }            \r\n\r\n            render.debugString = text;\r\n            render.debugTimestamp = engine.timing.timestamp;\r\n        }\r\n\r\n        if (render.debugString) {\r\n            c.font = \"12px Arial\";\r\n\r\n            if (options.wireframes) {\r\n                c.fillStyle = 'rgba(255,255,255,0.5)';\r\n            } else {\r\n                c.fillStyle = 'rgba(0,0,0,0.5)';\r\n            }\r\n\r\n            var split = render.debugString.split('\\n');\r\n\r\n            for (var i = 0; i < split.length; i++) {\r\n                c.fillText(split[i], 50, 50 + i * 18);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method constraints\r\n     * @param {constraint[]} constraints\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.constraints = function(constraints, context) {\r\n        var c = context;\r\n\r\n        for (var i = 0; i < constraints.length; i++) {\r\n            var constraint = constraints[i];\r\n\r\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\r\n                continue;\r\n\r\n            var bodyA = constraint.bodyA,\r\n                bodyB = constraint.bodyB;\r\n\r\n            if (bodyA) {\r\n                c.beginPath();\r\n                c.moveTo(bodyA.position.x + constraint.pointA.x, bodyA.position.y + constraint.pointA.y);\r\n            } else {\r\n                c.beginPath();\r\n                c.moveTo(constraint.pointA.x, constraint.pointA.y);\r\n            }\r\n\r\n            if (bodyB) {\r\n                c.lineTo(bodyB.position.x + constraint.pointB.x, bodyB.position.y + constraint.pointB.y);\r\n            } else {\r\n                c.lineTo(constraint.pointB.x, constraint.pointB.y);\r\n            }\r\n\r\n            c.lineWidth = constraint.render.lineWidth;\r\n            c.strokeStyle = constraint.render.strokeStyle;\r\n            c.stroke();\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method bodyShadows\r\n     * @param {engine} engine\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyShadows = function(engine, bodies, context) {\r\n        var c = context,\r\n            render = engine.render;\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            if (body.circleRadius) {\r\n                c.beginPath();\r\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\r\n                c.closePath();\r\n            } else {\r\n                c.beginPath();\r\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\r\n                for (var j = 1; j < body.vertices.length; j++) {\r\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\r\n                }\r\n                c.closePath();\r\n            }\r\n\r\n            var distanceX = body.position.x - render.options.width * 0.5,\r\n                distanceY = body.position.y - render.options.height * 0.2,\r\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\r\n\r\n            c.shadowColor = 'rgba(0,0,0,0.15)';\r\n            c.shadowOffsetX = 0.05 * distanceX;\r\n            c.shadowOffsetY = 0.05 * distanceY;\r\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\r\n\r\n            c.fill();\r\n\r\n            c.shadowColor = null;\r\n            c.shadowOffsetX = null;\r\n            c.shadowOffsetY = null;\r\n            c.shadowBlur = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method bodies\r\n     * @param {engine} engine\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodies = function(engine, bodies, context) {\r\n        var c = context,\r\n            render = engine.render,\r\n            options = render.options,\r\n            i;\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            if (body.render.sprite && body.render.sprite.texture && !options.wireframes) {\r\n                // body sprite\r\n                var sprite = body.render.sprite,\r\n                    texture = _getTexture(render, sprite.texture);\r\n\r\n                if (options.showSleeping && body.isSleeping) \r\n                    c.globalAlpha = 0.5;\r\n\r\n                c.translate(body.position.x, body.position.y); \r\n                c.rotate(body.angle);\r\n\r\n                c.drawImage(texture, texture.width * -0.5 * sprite.xScale, texture.height * -0.5 * sprite.yScale, \r\n                            texture.width * sprite.xScale, texture.height * sprite.yScale);\r\n\r\n                // revert translation, hopefully faster than save / restore\r\n                c.rotate(-body.angle);\r\n                c.translate(-body.position.x, -body.position.y); \r\n\r\n                if (options.showSleeping && body.isSleeping) \r\n                    c.globalAlpha = 1;\r\n            } else {\r\n                // body polygon\r\n                if (body.circleRadius) {\r\n                    c.beginPath();\r\n                    c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\r\n                } else {\r\n                    c.beginPath();\r\n                    c.moveTo(body.vertices[0].x, body.vertices[0].y);\r\n                    for (var j = 1; j < body.vertices.length; j++) {\r\n                        c.lineTo(body.vertices[j].x, body.vertices[j].y);\r\n                    }\r\n                    c.closePath();\r\n                }\r\n\r\n                if (!options.wireframes) {\r\n                    if (options.showSleeping && body.isSleeping) {\r\n                        c.fillStyle = Common.shadeColor(body.render.fillStyle, 50);\r\n                    } else {\r\n                        c.fillStyle = body.render.fillStyle;\r\n                    }\r\n\r\n                    c.lineWidth = body.render.lineWidth;\r\n                    c.strokeStyle = body.render.strokeStyle;\r\n                    c.fill();\r\n                    c.stroke();\r\n                } else {\r\n                    c.lineWidth = 1;\r\n                    c.strokeStyle = '#bbb';\r\n                    if (options.showSleeping && body.isSleeping)\r\n                        c.strokeStyle = 'rgba(255,255,255,0.2)';\r\n                    c.stroke();\r\n                }\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Optimised method for drawing body wireframes in one pass\r\n     * @private\r\n     * @method bodyWireframes\r\n     * @param {engine} engine\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyWireframes = function(engine, bodies, context) {\r\n        var c = context,\r\n            i,\r\n            j;\r\n\r\n        c.beginPath();\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\r\n\r\n            for (j = 1; j < body.vertices.length; j++) {\r\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\r\n            }\r\n            \r\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.strokeStyle = '#bbb';\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Draws body bounds\r\n     * @private\r\n     * @method bodyBounds\r\n     * @param {engine} engine\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyBounds = function(engine, bodies, context) {\r\n        var c = context,\r\n            render = engine.render,\r\n            options = render.options;\r\n\r\n        c.beginPath();\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (body.render.visible)\r\n                c.rect(body.bounds.min.x, body.bounds.min.y, body.bounds.max.x - body.bounds.min.x, body.bounds.max.y - body.bounds.min.y);\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\r\n        } else {\r\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Draws body angle indicators and axes\r\n     * @private\r\n     * @method bodyAxes\r\n     * @param {engine} engine\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyAxes = function(engine, bodies, context) {\r\n        var c = context,\r\n            render = engine.render,\r\n            options = render.options,\r\n            i,\r\n            j;\r\n\r\n        c.beginPath();\r\n\r\n        for (i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            if (options.showAxes) {\r\n                // render all axes\r\n                for (j = 0; j < body.axes.length; j++) {\r\n                    var axis = body.axes[j];\r\n                    c.moveTo(body.position.x, body.position.y);\r\n                    c.lineTo(body.position.x + axis.x * 20, body.position.y + axis.y * 20);\r\n                }\r\n            } else {\r\n                // render a single axis indicator\r\n                c.moveTo(body.position.x, body.position.y);\r\n                c.lineTo((body.vertices[0].x + body.vertices[body.vertices.length-1].x) / 2, \r\n                         (body.vertices[0].y + body.vertices[body.vertices.length-1].y) / 2);\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'indianred';\r\n        } else {\r\n            c.strokeStyle = 'rgba(0,0,0,0.3)';\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Draws body positions\r\n     * @private\r\n     * @method bodyPositions\r\n     * @param {engine} engine\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyPositions = function(engine, bodies, context) {\r\n        var c = context,\r\n            render = engine.render,\r\n            options = render.options,\r\n            body,\r\n            i;\r\n\r\n        c.beginPath();\r\n\r\n        // render current positions\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n            if (body.render.visible) {\r\n                c.arc(body.position.x, body.position.y, 3, 0, 2 * Math.PI, false);\r\n                c.closePath();\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.fillStyle = 'indianred';\r\n        } else {\r\n            c.fillStyle = 'rgba(0,0,0,0.5)';\r\n        }\r\n        c.fill();\r\n\r\n        c.beginPath();\r\n\r\n        // render previous positions\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n            if (body.render.visible) {\r\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\r\n                c.closePath();\r\n            }\r\n        }\r\n\r\n        c.fillStyle = 'rgba(255,165,0,0.8)';\r\n        c.fill();\r\n    };\r\n\r\n    /**\r\n     * Draws body velocity\r\n     * @private\r\n     * @method bodyVelocity\r\n     * @param {engine} engine\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyVelocity = function(engine, bodies, context) {\r\n        var c = context;\r\n\r\n        c.beginPath();\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            c.moveTo(body.position.x, body.position.y);\r\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\r\n        }\r\n\r\n        c.lineWidth = 3;\r\n        c.strokeStyle = 'cornflowerblue';\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Draws body ids\r\n     * @private\r\n     * @method bodyIds\r\n     * @param {engine} engine\r\n     * @param {body[]} bodies\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.bodyIds = function(engine, bodies, context) {\r\n        var c = context;\r\n\r\n        for (var i = 0; i < bodies.length; i++) {\r\n            var body = bodies[i];\r\n\r\n            if (!body.render.visible)\r\n                continue;\r\n\r\n            c.font = \"12px Arial\";\r\n            c.fillStyle = 'rgba(255,255,255,0.5)';\r\n            c.fillText(body.id, body.position.x + 10, body.position.y - 10);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method collisions\r\n     * @param {engine} engine\r\n     * @param {pair[]} pairs\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.collisions = function(engine, pairs, context) {\r\n        var c = context,\r\n            options = engine.render.options,\r\n            pair,\r\n            collision,\r\n            i,\r\n            j;\r\n\r\n        c.beginPath();\r\n\r\n        // render collision positions\r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n            collision = pair.collision;\r\n            for (j = 0; j < pair.activeContacts.length; j++) {\r\n                var contact = pair.activeContacts[j],\r\n                    vertex = contact.vertex;\r\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.fillStyle = 'rgba(255,255,255,0.7)';\r\n        } else {\r\n            c.fillStyle = 'orange';\r\n        }\r\n        c.fill();\r\n\r\n        c.beginPath();\r\n            \r\n        // render collision normals\r\n        for (i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n            collision = pair.collision;\r\n\r\n            if (pair.activeContacts.length > 0) {\r\n                var normalPosX = pair.activeContacts[0].vertex.x,\r\n                    normalPosY = pair.activeContacts[0].vertex.y;\r\n\r\n                if (pair.activeContacts.length === 2) {\r\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\r\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\r\n                }\r\n                \r\n                c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\r\n                c.lineTo(normalPosX, normalPosY);\r\n            }\r\n        }\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\r\n        } else {\r\n            c.strokeStyle = 'orange';\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method grid\r\n     * @param {engine} engine\r\n     * @param {grid} grid\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.grid = function(engine, grid, context) {\r\n        var c = context,\r\n            options = engine.render.options;\r\n\r\n        if (options.wireframes) {\r\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\r\n        } else {\r\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\r\n        }\r\n\r\n        c.beginPath();\r\n\r\n        var bucketKeys = Common.keys(grid.buckets);\r\n\r\n        for (var i = 0; i < bucketKeys.length; i++) {\r\n            var bucketId = bucketKeys[i];\r\n\r\n            if (grid.buckets[bucketId].length < 2)\r\n                continue;\r\n\r\n            var region = bucketId.split(',');\r\n            c.rect(0.5 + parseInt(region[0], 10) * grid.bucketWidth, \r\n                    0.5 + parseInt(region[1], 10) * grid.bucketHeight, \r\n                    grid.bucketWidth, \r\n                    grid.bucketHeight);\r\n        }\r\n\r\n        c.lineWidth = 1;\r\n        c.stroke();\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @private\r\n     * @method inspector\r\n     * @param {inspector} inspector\r\n     * @param {RenderingContext} context\r\n     */\r\n    Render.inspector = function(inspector, context) {\r\n        var engine = inspector.engine,\r\n            selected = inspector.selected,\r\n            render = engine.render,\r\n            options = render.options,\r\n            bounds;\r\n\r\n        if (options.hasBounds) {\r\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\r\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\r\n                boundsScaleX = boundsWidth / render.options.width,\r\n                boundsScaleY = boundsHeight / render.options.height;\r\n            \r\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\r\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\r\n        }\r\n\r\n        for (var i = 0; i < selected.length; i++) {\r\n            var item = selected[i].data;\r\n\r\n            context.translate(0.5, 0.5);\r\n            context.lineWidth = 1;\r\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\r\n            context.setLineDash([1,2]);\r\n\r\n            switch (item.type) {\r\n\r\n            case 'body':\r\n\r\n                // render body selections\r\n                bounds = item.bounds;\r\n                context.beginPath();\r\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3), \r\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\r\n                context.closePath();\r\n                context.stroke();\r\n\r\n                break;\r\n\r\n            case 'constraint':\r\n\r\n                // render constraint selections\r\n                var point = item.pointA;\r\n                if (item.bodyA)\r\n                    point = item.pointB;\r\n                context.beginPath();\r\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\r\n                context.closePath();\r\n                context.stroke();\r\n\r\n                break;\r\n\r\n            }\r\n\r\n            context.setLineDash([0]);\r\n            context.translate(-0.5, -0.5);\r\n        }\r\n\r\n        // render selection region\r\n        if (inspector.selectStart !== null) {\r\n            context.translate(0.5, 0.5);\r\n            context.lineWidth = 1;\r\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\r\n            context.fillStyle = 'rgba(255,165,0,0.1)';\r\n            bounds = inspector.selectBounds;\r\n            context.beginPath();\r\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y), \r\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\r\n            context.closePath();\r\n            context.stroke();\r\n            context.fill();\r\n            context.translate(-0.5, -0.5);\r\n        }\r\n\r\n        if (options.hasBounds)\r\n            context.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method _createCanvas\r\n     * @private\r\n     * @param {} width\r\n     * @param {} height\r\n     * @return canvas\r\n     */\r\n    var _createCanvas = function(width, height) {\r\n        var canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        canvas.oncontextmenu = function() { return false; };\r\n        canvas.onselectstart = function() { return false; };\r\n        return canvas;\r\n    };\r\n\r\n    /**\r\n     * Gets the pixel ratio of the canvas.\r\n     * @method _getPixelRatio\r\n     * @private\r\n     * @param {HTMLElement} canvas\r\n     * @return {Number} pixel ratio\r\n     */\r\n    var _getPixelRatio = function(canvas) {\r\n        var context = canvas.getContext('2d'),\r\n            devicePixelRatio = window.devicePixelRatio || 1,\r\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\r\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\r\n                                      || context.backingStorePixelRatio || 1;\r\n\r\n        return devicePixelRatio / backingStorePixelRatio;\r\n    };\r\n\r\n    /**\r\n     * Gets the requested texture (an Image) via its path\r\n     * @method _getTexture\r\n     * @private\r\n     * @param {render} render\r\n     * @param {string} imagePath\r\n     * @return {Image} texture\r\n     */\r\n    var _getTexture = function(render, imagePath) {\r\n        var image = render.textures[imagePath];\r\n\r\n        if (image)\r\n            return image;\r\n\r\n        image = render.textures[imagePath] = new Image();\r\n        image.src = imagePath;\r\n\r\n        return image;\r\n    };\r\n\r\n    /**\r\n     * Applies the background to the canvas using CSS.\r\n     * @method applyBackground\r\n     * @private\r\n     * @param {render} render\r\n     * @param {string} background\r\n     */\r\n    var _applyBackground = function(render, background) {\r\n        var cssBackground = background;\r\n\r\n        if (/(jpg|gif|png)$/.test(background))\r\n            cssBackground = 'url(' + background + ')';\r\n\r\n        render.canvas.style.background = cssBackground;\r\n        render.canvas.style.backgroundSize = \"contain\";\r\n        render.currentBackground = background;\r\n    };\r\n\r\n    /*\r\n    *\r\n    *  Properties Documentation\r\n    *\r\n    */\r\n\r\n    /**\r\n     * A back-reference to the `Matter.Render` module.\r\n     *\r\n     * @property controller\r\n     * @type render\r\n     */\r\n\r\n    /**\r\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\r\n     *\r\n     * @property element\r\n     * @type HTMLElement\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\r\n     *\r\n     * @property canvas\r\n     * @type HTMLCanvasElement\r\n     * @default null\r\n     */\r\n\r\n    /**\r\n     * The configuration options of the renderer.\r\n     *\r\n     * @property options\r\n     * @type {}\r\n     */\r\n\r\n    /**\r\n     * The target width in pixels of the `render.canvas` to be created.\r\n     *\r\n     * @property options.width\r\n     * @type number\r\n     * @default 800\r\n     */\r\n\r\n    /**\r\n     * The target height in pixels of the `render.canvas` to be created.\r\n     *\r\n     * @property options.height\r\n     * @type number\r\n     * @default 600\r\n     */\r\n\r\n    /**\r\n     * A flag that specifies if `render.bounds` should be used when rendering.\r\n     *\r\n     * @property options.hasBounds\r\n     * @type boolean\r\n     * @default false\r\n     */\r\n\r\n    /**\r\n     * A `Bounds` object that specifies the drawing view region. \r\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\r\n     * This allows for creating views that can pan or zoom around the scene.\r\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\r\n     *\r\n     * @property bounds\r\n     * @type bounds\r\n     */\r\n\r\n    /**\r\n     * The 2d rendering context from the `render.canvas` element.\r\n     *\r\n     * @property context\r\n     * @type CanvasRenderingContext2D\r\n     */\r\n\r\n    /**\r\n     * The sprite texture cache.\r\n     *\r\n     * @property textures\r\n     * @type {}\r\n     */\r\n\r\n})();\r\n\r\n\r\n;   // End src/render/Render.js\r\n\r\n\r\n// Begin src/render/RenderPixi.js\r\n\r\n/**\r\n* See [Demo.js](https://github.com/liabru/matter-js/blob/master/demo/js/Demo.js) \r\n* and [DemoMobile.js](https://github.com/liabru/matter-js/blob/master/demo/js/DemoMobile.js) for usage examples.\r\n*\r\n* @class RenderPixi\r\n*/\r\n\r\nvar RenderPixi = {};\r\n\r\n(function() {\r\n    \r\n    /**\r\n     * Creates a new Pixi.js WebGL renderer\r\n     * @method create\r\n     * @param {object} options\r\n     * @return {RenderPixi} A new renderer\r\n     */\r\n    RenderPixi.create = function(options) {\r\n        var defaults = {\r\n            controller: RenderPixi,\r\n            element: null,\r\n            canvas: null,\r\n            options: {\r\n                width: 800,\r\n                height: 600,\r\n                background: '#fafafa',\r\n                wireframeBackground: '#222',\r\n                hasBounds: false,\r\n                enabled: true,\r\n                wireframes: true,\r\n                showSleeping: true,\r\n                showDebug: false,\r\n                showBroadphase: false,\r\n                showBounds: false,\r\n                showVelocity: false,\r\n                showCollisions: false,\r\n                showAxes: false,\r\n                showPositions: false,\r\n                showAngleIndicator: false,\r\n                showIds: false,\r\n                showShadows: false\r\n            }\r\n        };\r\n\r\n        var render = Common.extend(defaults, options),\r\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\r\n\r\n        // init pixi\r\n        render.context = new PIXI.WebGLRenderer(render.options.width, render.options.height, render.canvas, transparent, true);\r\n        render.canvas = render.context.view;\r\n        render.container = new PIXI.DisplayObjectContainer();\r\n        render.stage = new PIXI.Stage();\r\n        render.stage.addChild(render.container);\r\n        render.bounds = render.bounds || { \r\n            min: { \r\n                x: 0,\r\n                y: 0\r\n            }, \r\n            max: { \r\n                x: render.options.width,\r\n                y: render.options.height\r\n            }\r\n        };\r\n\r\n        // caches\r\n        render.textures = {};\r\n        render.sprites = {};\r\n        render.primitives = {};\r\n\r\n        // use a sprite batch for performance\r\n        render.spriteBatch = new PIXI.SpriteBatch();\r\n        render.container.addChild(render.spriteBatch);\r\n\r\n        // insert canvas\r\n        if (Common.isElement(render.element)) {\r\n            render.element.appendChild(render.canvas);\r\n        } else {\r\n            Common.log('No \"render.element\" passed, \"render.canvas\" was not inserted into document.', 'warn');\r\n        }\r\n\r\n        // prevent menus on canvas\r\n        render.canvas.oncontextmenu = function() { return false; };\r\n        render.canvas.onselectstart = function() { return false; };\r\n\r\n        return render;\r\n    };\r\n\r\n    /**\r\n     * Clears the scene graph\r\n     * @method clear\r\n     * @param {RenderPixi} render\r\n     */\r\n    RenderPixi.clear = function(render) {\r\n        var container = render.container,\r\n            spriteBatch = render.spriteBatch;\r\n\r\n        // clear stage container\r\n        while (container.children[0]) { \r\n            container.removeChild(container.children[0]); \r\n        }\r\n\r\n        // clear sprite batch\r\n        while (spriteBatch.children[0]) { \r\n            spriteBatch.removeChild(spriteBatch.children[0]); \r\n        }\r\n\r\n        var bgSprite = render.sprites['bg-0'];\r\n\r\n        // clear caches\r\n        render.textures = {};\r\n        render.sprites = {};\r\n        render.primitives = {};\r\n\r\n        // set background sprite\r\n        render.sprites['bg-0'] = bgSprite;\r\n        if (bgSprite)\r\n            spriteBatch.addChildAt(bgSprite, 0);\r\n\r\n        // add sprite batch back into container\r\n        render.container.addChild(render.spriteBatch);\r\n\r\n        // reset background state\r\n        render.currentBackground = null;\r\n\r\n        // reset bounds transforms\r\n        container.scale.set(1, 1);\r\n        container.position.set(0, 0);\r\n    };\r\n\r\n    /**\r\n     * Sets the background of the canvas \r\n     * @method setBackground\r\n     * @param {RenderPixi} render\r\n     * @param {string} background\r\n     */\r\n    RenderPixi.setBackground = function(render, background) {\r\n        if (render.currentBackground !== background) {\r\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\r\n                bgSprite = render.sprites['bg-0'];\r\n\r\n            if (isColor) {\r\n                // if solid background color\r\n                var color = Common.colorToNumber(background);\r\n                render.stage.setBackgroundColor(color);\r\n\r\n                // remove background sprite if existing\r\n                if (bgSprite)\r\n                    render.spriteBatch.removeChild(bgSprite); \r\n            } else {\r\n                // initialise background sprite if needed\r\n                if (!bgSprite) {\r\n                    var texture = _getTexture(render, background);\r\n\r\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\r\n                    bgSprite.position.x = 0;\r\n                    bgSprite.position.y = 0;\r\n                    render.spriteBatch.addChildAt(bgSprite, 0);\r\n                }\r\n            }\r\n\r\n            render.currentBackground = background;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Description\r\n     * @method world\r\n     * @param {engine} engine\r\n     */\r\n    RenderPixi.world = function(engine) {\r\n        var render = engine.render,\r\n            world = engine.world,\r\n            context = render.context,\r\n            stage = render.stage,\r\n            container = render.container,\r\n            options = render.options,\r\n            bodies = Composite.allBodies(world),\r\n            allConstraints = Composite.allConstraints(world),\r\n            constraints = [],\r\n            i;\r\n\r\n        if (options.wireframes) {\r\n            RenderPixi.setBackground(render, options.wireframeBackground);\r\n        } else {\r\n            RenderPixi.setBackground(render, options.background);\r\n        }\r\n\r\n        // handle bounds\r\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\r\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\r\n            boundsScaleX = boundsWidth / render.options.width,\r\n            boundsScaleY = boundsHeight / render.options.height;\r\n\r\n        if (options.hasBounds) {\r\n            // Hide bodies that are not in view\r\n            for (i = 0; i < bodies.length; i++) {\r\n                var body = bodies[i];\r\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\r\n            }\r\n\r\n            // filter out constraints that are not in view\r\n            for (i = 0; i < allConstraints.length; i++) {\r\n                var constraint = allConstraints[i],\r\n                    bodyA = constraint.bodyA,\r\n                    bodyB = constraint.bodyB,\r\n                    pointAWorld = constraint.pointA,\r\n                    pointBWorld = constraint.pointB;\r\n\r\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\r\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\r\n\r\n                if (!pointAWorld || !pointBWorld)\r\n                    continue;\r\n\r\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\r\n                    constraints.push(constraint);\r\n            }\r\n\r\n            // transform the view\r\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\r\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\r\n        } else {\r\n            constraints = allConstraints;\r\n        }\r\n\r\n        for (i = 0; i < bodies.length; i++)\r\n            RenderPixi.body(engine, bodies[i]);\r\n\r\n        for (i = 0; i < constraints.length; i++)\r\n            RenderPixi.constraint(engine, constraints[i]);\r\n\r\n        context.render(stage);\r\n    };\r\n\r\n\r\n    /**\r\n     * Description\r\n     * @method constraint\r\n     * @param {engine} engine\r\n     * @param {constraint} constraint\r\n     */\r\n    RenderPixi.constraint = function(engine, constraint) {\r\n        var render = engine.render,\r\n            bodyA = constraint.bodyA,\r\n            bodyB = constraint.bodyB,\r\n            pointA = constraint.pointA,\r\n            pointB = constraint.pointB,\r\n            container = render.container,\r\n            constraintRender = constraint.render,\r\n            primitiveId = 'c-' + constraint.id,\r\n            primitive = render.primitives[primitiveId];\r\n\r\n        // initialise constraint primitive if not existing\r\n        if (!primitive)\r\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\r\n\r\n        // don't render if constraint does not have two end points\r\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\r\n            primitive.clear();\r\n            return;\r\n        }\r\n\r\n        // add to scene graph if not already there\r\n        if (Common.indexOf(container.children, primitive) === -1)\r\n            container.addChild(primitive);\r\n\r\n        // render the constraint on every update, since they can change dynamically\r\n        primitive.clear();\r\n        primitive.beginFill(0, 0);\r\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\r\n        \r\n        if (bodyA) {\r\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\r\n        } else {\r\n            primitive.moveTo(pointA.x, pointA.y);\r\n        }\r\n\r\n        if (bodyB) {\r\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\r\n        } else {\r\n            primitive.lineTo(pointB.x, pointB.y);\r\n        }\r\n\r\n        primitive.endFill();\r\n    };\r\n    \r\n    /**\r\n     * Description\r\n     * @method body\r\n     * @param {engine} engine\r\n     * @param {body} body\r\n     */\r\n    RenderPixi.body = function(engine, body) {\r\n        var render = engine.render,\r\n            bodyRender = body.render;\r\n\r\n        if (!bodyRender.visible)\r\n            return;\r\n\r\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\r\n            var spriteId = 'b-' + body.id,\r\n                sprite = render.sprites[spriteId],\r\n                spriteBatch = render.spriteBatch;\r\n\r\n            // initialise body sprite if not existing\r\n            if (!sprite)\r\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\r\n\r\n            // add to scene graph if not already there\r\n            if (Common.indexOf(spriteBatch.children, sprite) === -1)\r\n                spriteBatch.addChild(sprite);\r\n\r\n            // update body sprite\r\n            sprite.position.x = body.position.x;\r\n            sprite.position.y = body.position.y;\r\n            sprite.rotation = body.angle;\r\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\r\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\r\n        } else {\r\n            var primitiveId = 'b-' + body.id,\r\n                primitive = render.primitives[primitiveId],\r\n                container = render.container;\r\n\r\n            // initialise body primitive if not existing\r\n            if (!primitive) {\r\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\r\n                primitive.initialAngle = body.angle;\r\n            }\r\n\r\n            // add to scene graph if not already there\r\n            if (Common.indexOf(container.children, primitive) === -1)\r\n                container.addChild(primitive);\r\n\r\n            // update body primitive\r\n            primitive.position.x = body.position.x;\r\n            primitive.position.y = body.position.y;\r\n            primitive.rotation = body.angle - primitive.initialAngle;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Creates a body sprite\r\n     * @method _createBodySprite\r\n     * @private\r\n     * @param {RenderPixi} render\r\n     * @param {body} body\r\n     * @return {PIXI.Sprite} sprite\r\n     */\r\n    var _createBodySprite = function(render, body) {\r\n        var bodyRender = body.render,\r\n            texturePath = bodyRender.sprite.texture,\r\n            texture = _getTexture(render, texturePath),\r\n            sprite = new PIXI.Sprite(texture);\r\n\r\n        sprite.anchor.x = 0.5;\r\n        sprite.anchor.y = 0.5;\r\n\r\n        return sprite;\r\n    };\r\n\r\n    /**\r\n     * Creates a body primitive\r\n     * @method _createBodyPrimitive\r\n     * @private\r\n     * @param {RenderPixi} render\r\n     * @param {body} body\r\n     * @return {PIXI.Graphics} graphics\r\n     */\r\n    var _createBodyPrimitive = function(render, body) {\r\n        var bodyRender = body.render,\r\n            options = render.options,\r\n            primitive = new PIXI.Graphics();\r\n\r\n        primitive.clear();\r\n\r\n        if (!options.wireframes) {\r\n            primitive.beginFill(Common.colorToNumber(bodyRender.fillStyle), 1);\r\n            primitive.lineStyle(body.render.lineWidth, Common.colorToNumber(bodyRender.strokeStyle), 1);\r\n        } else {\r\n            primitive.beginFill(0, 0);\r\n            primitive.lineStyle(1, Common.colorToNumber('#bbb'), 1);\r\n        }\r\n\r\n        primitive.moveTo(body.vertices[0].x - body.position.x, body.vertices[0].y - body.position.y);\r\n\r\n        for (var j = 1; j < body.vertices.length; j++) {\r\n            primitive.lineTo(body.vertices[j].x - body.position.x, body.vertices[j].y - body.position.y);\r\n        }\r\n\r\n        primitive.lineTo(body.vertices[0].x - body.position.x, body.vertices[0].y - body.position.y);\r\n\r\n        primitive.endFill();\r\n\r\n        // angle indicator\r\n        if (options.showAngleIndicator || options.showAxes) {\r\n            primitive.beginFill(0, 0);\r\n\r\n            if (options.wireframes) {\r\n                primitive.lineStyle(1, Common.colorToNumber('#CD5C5C'), 1);\r\n            } else {\r\n                primitive.lineStyle(1, Common.colorToNumber(body.render.strokeStyle));\r\n            }\r\n\r\n            primitive.moveTo(0, 0);\r\n            primitive.lineTo(((body.vertices[0].x + body.vertices[body.vertices.length-1].x) / 2) - body.position.x, \r\n                             ((body.vertices[0].y + body.vertices[body.vertices.length-1].y) / 2) - body.position.y);\r\n\r\n            primitive.endFill();\r\n        }\r\n\r\n        return primitive;\r\n    };\r\n\r\n    /**\r\n     * Gets the requested texture (a PIXI.Texture) via its path\r\n     * @method _getTexture\r\n     * @private\r\n     * @param {RenderPixi} render\r\n     * @param {string} imagePath\r\n     * @return {PIXI.Texture} texture\r\n     */\r\n    var _getTexture = function(render, imagePath) {\r\n        var texture = render.textures[imagePath];\r\n\r\n        if (!texture)\r\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\r\n\r\n        return texture;\r\n    };\r\n\r\n})();\r\n\r\n\r\n;   // End src/render/RenderPixi.js\r\n\r\n\r\n// aliases\r\n\r\nWorld.add = Composite.add;\r\nWorld.remove = Composite.remove;\r\nWorld.addComposite = Composite.addComposite;\r\nWorld.addBody = Composite.addBody;\r\nWorld.addConstraint = Composite.addConstraint;\r\nWorld.clear = Composite.clear;\r\n\r\nEngine.run = Runner.run;\r\n\r\n// exports\r\n\r\nMatter.Body = Body;\r\nMatter.Composite = Composite;\r\nMatter.World = World;\r\nMatter.Contact = Contact;\r\nMatter.Detector = Detector;\r\nMatter.Grid = Grid;\r\nMatter.Pairs = Pairs;\r\nMatter.Pair = Pair;\r\nMatter.Resolver = Resolver;\r\nMatter.SAT = SAT;\r\nMatter.Constraint = Constraint;\r\nMatter.MouseConstraint = MouseConstraint;\r\nMatter.Common = Common;\r\nMatter.Engine = Engine;\r\nMatter.Metrics = Metrics;\r\nMatter.Mouse = Mouse;\r\nMatter.Sleeping = Sleeping;\r\nMatter.Bodies = Bodies;\r\nMatter.Composites = Composites;\r\nMatter.Axes = Axes;\r\nMatter.Bounds = Bounds;\r\nMatter.Vector = Vector;\r\nMatter.Vertices = Vertices;\r\nMatter.Render = Render;\r\nMatter.RenderPixi = RenderPixi;\r\nMatter.Events = Events;\r\nMatter.Query = Query;\r\nMatter.Runner = Runner;\r\n\r\n// CommonJS module\r\nif (typeof exports !== 'undefined') {\r\n    if (typeof module !== 'undefined' && module.exports) {\r\n        exports = module.exports = Matter;\r\n    }\r\n    exports.Matter = Matter;\r\n}\r\n\r\n// AMD module\r\nif (typeof define === 'function' && define.amd) {\r\n    define('Matter', [], function () {\r\n        return Matter;\r\n    });\r\n}\r\n\r\n// browser\r\nif (typeof window === 'object' && typeof window.document === 'object') {\r\n    window.Matter = Matter;\r\n}\r\n\r\n// End Matter namespace closure\r\n\r\n})();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/matter-js/build/matter.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\r\n * @license\r\n * pixi.js - v2.2.9\r\n * Copyright (c) 2012-2014, Mat Groves\r\n * http://goodboydigital.com/\r\n *\r\n * Compiled: 2015-04-08\r\n *\r\n * pixi.js is licensed under the MIT License.\r\n * http://www.opensource.org/licenses/mit-license.php\r\n */\r\n(function(){var a=this,b=b||{};b.WEBGL_RENDERER=0,b.CANVAS_RENDERER=1,b.VERSION=\"v2.2.9\",b.blendModes={NORMAL:0,ADD:1,MULTIPLY:2,SCREEN:3,OVERLAY:4,DARKEN:5,LIGHTEN:6,COLOR_DODGE:7,COLOR_BURN:8,HARD_LIGHT:9,SOFT_LIGHT:10,DIFFERENCE:11,EXCLUSION:12,HUE:13,SATURATION:14,COLOR:15,LUMINOSITY:16},b.scaleModes={DEFAULT:0,LINEAR:0,NEAREST:1},b._UID=0,\"undefined\"!=typeof Float32Array?(b.Float32Array=Float32Array,b.Uint16Array=Uint16Array,b.Uint32Array=Uint32Array,b.ArrayBuffer=ArrayBuffer):(b.Float32Array=Array,b.Uint16Array=Array),b.INTERACTION_FREQUENCY=30,b.AUTO_PREVENT_DEFAULT=!0,b.PI_2=2*Math.PI,b.RAD_TO_DEG=180/Math.PI,b.DEG_TO_RAD=Math.PI/180,b.RETINA_PREFIX=\"@2x\",b.dontSayHello=!1,b.defaultRenderOptions={view:null,transparent:!1,antialias:!1,preserveDrawingBuffer:!1,resolution:1,clearBeforeRender:!0,autoResize:!1},b.sayHello=function(a){if(!b.dontSayHello){if(navigator.userAgent.toLowerCase().indexOf(\"chrome\")>-1){var c=[\"%c %c %c Pixi.js \"+b.VERSION+\" - \"+a+\"  %c  %c  http://www.pixijs.com/  %c %c ♥%c♥%c♥ \",\"background: #ff66a5\",\"background: #ff66a5\",\"color: #ff66a5; background: #030307;\",\"background: #ff66a5\",\"background: #ffc3dc\",\"background: #ff66a5\",\"color: #ff2424; background: #fff\",\"color: #ff2424; background: #fff\",\"color: #ff2424; background: #fff\"];console.log.apply(console,c)}else window.console&&console.log(\"Pixi.js \"+b.VERSION+\" - http://www.pixijs.com/\");b.dontSayHello=!0}},b.Point=function(a,b){this.x=a||0,this.y=b||0},b.Point.prototype.clone=function(){return new b.Point(this.x,this.y)},b.Point.prototype.set=function(a,b){this.x=a||0,this.y=b||(0!==b?this.x:0)},b.Point.prototype.constructor=b.Point,b.Rectangle=function(a,b,c,d){this.x=a||0,this.y=b||0,this.width=c||0,this.height=d||0},b.Rectangle.prototype.clone=function(){return new b.Rectangle(this.x,this.y,this.width,this.height)},b.Rectangle.prototype.contains=function(a,b){if(this.width<=0||this.height<=0)return!1;var c=this.x;if(a>=c&&a<=c+this.width){var d=this.y;if(b>=d&&b<=d+this.height)return!0}return!1},b.Rectangle.prototype.constructor=b.Rectangle,b.EmptyRectangle=new b.Rectangle(0,0,0,0),b.Polygon=function(a){if(a instanceof Array||(a=Array.prototype.slice.call(arguments)),a[0]instanceof b.Point){for(var c=[],d=0,e=a.length;e>d;d++)c.push(a[d].x,a[d].y);a=c}this.closed=!0,this.points=a},b.Polygon.prototype.clone=function(){var a=this.points.slice();return new b.Polygon(a)},b.Polygon.prototype.contains=function(a,b){for(var c=!1,d=this.points.length/2,e=0,f=d-1;d>e;f=e++){var g=this.points[2*e],h=this.points[2*e+1],i=this.points[2*f],j=this.points[2*f+1],k=h>b!=j>b&&(i-g)*(b-h)/(j-h)+g>a;k&&(c=!c)}return c},b.Polygon.prototype.constructor=b.Polygon,b.Circle=function(a,b,c){this.x=a||0,this.y=b||0,this.radius=c||0},b.Circle.prototype.clone=function(){return new b.Circle(this.x,this.y,this.radius)},b.Circle.prototype.contains=function(a,b){if(this.radius<=0)return!1;var c=this.x-a,d=this.y-b,e=this.radius*this.radius;return c*=c,d*=d,e>=c+d},b.Circle.prototype.getBounds=function(){return new b.Rectangle(this.x-this.radius,this.y-this.radius,2*this.radius,2*this.radius)},b.Circle.prototype.constructor=b.Circle,b.Ellipse=function(a,b,c,d){this.x=a||0,this.y=b||0,this.width=c||0,this.height=d||0},b.Ellipse.prototype.clone=function(){return new b.Ellipse(this.x,this.y,this.width,this.height)},b.Ellipse.prototype.contains=function(a,b){if(this.width<=0||this.height<=0)return!1;var c=(a-this.x)/this.width,d=(b-this.y)/this.height;return c*=c,d*=d,1>=c+d},b.Ellipse.prototype.getBounds=function(){return new b.Rectangle(this.x-this.width,this.y-this.height,this.width,this.height)},b.Ellipse.prototype.constructor=b.Ellipse,b.RoundedRectangle=function(a,b,c,d,e){this.x=a||0,this.y=b||0,this.width=c||0,this.height=d||0,this.radius=e||20},b.RoundedRectangle.prototype.clone=function(){return new b.RoundedRectangle(this.x,this.y,this.width,this.height,this.radius)},b.RoundedRectangle.prototype.contains=function(a,b){if(this.width<=0||this.height<=0)return!1;var c=this.x;if(a>=c&&a<=c+this.width){var d=this.y;if(b>=d&&b<=d+this.height)return!0}return!1},b.RoundedRectangle.prototype.constructor=b.RoundedRectangle,b.Matrix=function(){this.a=1,this.b=0,this.c=0,this.d=1,this.tx=0,this.ty=0},b.Matrix.prototype.fromArray=function(a){this.a=a[0],this.b=a[1],this.c=a[3],this.d=a[4],this.tx=a[2],this.ty=a[5]},b.Matrix.prototype.toArray=function(a){this.array||(this.array=new b.Float32Array(9));var c=this.array;return a?(c[0]=this.a,c[1]=this.b,c[2]=0,c[3]=this.c,c[4]=this.d,c[5]=0,c[6]=this.tx,c[7]=this.ty,c[8]=1):(c[0]=this.a,c[1]=this.c,c[2]=this.tx,c[3]=this.b,c[4]=this.d,c[5]=this.ty,c[6]=0,c[7]=0,c[8]=1),c},b.Matrix.prototype.apply=function(a,c){return c=c||new b.Point,c.x=this.a*a.x+this.c*a.y+this.tx,c.y=this.b*a.x+this.d*a.y+this.ty,c},b.Matrix.prototype.applyInverse=function(a,c){c=c||new b.Point;var d=1/(this.a*this.d+this.c*-this.b);return c.x=this.d*d*a.x+-this.c*d*a.y+(this.ty*this.c-this.tx*this.d)*d,c.y=this.a*d*a.y+-this.b*d*a.x+(-this.ty*this.a+this.tx*this.b)*d,c},b.Matrix.prototype.translate=function(a,b){return this.tx+=a,this.ty+=b,this},b.Matrix.prototype.scale=function(a,b){return this.a*=a,this.d*=b,this.c*=a,this.b*=b,this.tx*=a,this.ty*=b,this},b.Matrix.prototype.rotate=function(a){var b=Math.cos(a),c=Math.sin(a),d=this.a,e=this.c,f=this.tx;return this.a=d*b-this.b*c,this.b=d*c+this.b*b,this.c=e*b-this.d*c,this.d=e*c+this.d*b,this.tx=f*b-this.ty*c,this.ty=f*c+this.ty*b,this},b.Matrix.prototype.append=function(a){var b=this.a,c=this.b,d=this.c,e=this.d;return this.a=a.a*b+a.b*d,this.b=a.a*c+a.b*e,this.c=a.c*b+a.d*d,this.d=a.c*c+a.d*e,this.tx=a.tx*b+a.ty*d+this.tx,this.ty=a.tx*c+a.ty*e+this.ty,this},b.Matrix.prototype.identity=function(){return this.a=1,this.b=0,this.c=0,this.d=1,this.tx=0,this.ty=0,this},b.identityMatrix=new b.Matrix,b.DisplayObject=function(){this.position=new b.Point,this.scale=new b.Point(1,1),this.pivot=new b.Point(0,0),this.rotation=0,this.alpha=1,this.visible=!0,this.hitArea=null,this.buttonMode=!1,this.renderable=!1,this.parent=null,this.stage=null,this.worldAlpha=1,this._interactive=!1,this.defaultCursor=\"pointer\",this.worldTransform=new b.Matrix,this._sr=0,this._cr=1,this.filterArea=null,this._bounds=new b.Rectangle(0,0,1,1),this._currentBounds=null,this._mask=null,this._cacheAsBitmap=!1,this._cacheIsDirty=!1},b.DisplayObject.prototype.constructor=b.DisplayObject,Object.defineProperty(b.DisplayObject.prototype,\"interactive\",{get:function(){return this._interactive},set:function(a){this._interactive=a,this.stage&&(this.stage.dirty=!0)}}),Object.defineProperty(b.DisplayObject.prototype,\"worldVisible\",{get:function(){var a=this;do{if(!a.visible)return!1;a=a.parent}while(a);return!0}}),Object.defineProperty(b.DisplayObject.prototype,\"mask\",{get:function(){return this._mask},set:function(a){this._mask&&(this._mask.isMask=!1),this._mask=a,this._mask&&(this._mask.isMask=!0)}}),Object.defineProperty(b.DisplayObject.prototype,\"filters\",{get:function(){return this._filters},set:function(a){if(a){for(var b=[],c=0;c<a.length;c++)for(var d=a[c].passes,e=0;e<d.length;e++)b.push(d[e]);this._filterBlock={target:this,filterPasses:b}}this._filters=a}}),Object.defineProperty(b.DisplayObject.prototype,\"cacheAsBitmap\",{get:function(){return this._cacheAsBitmap},set:function(a){this._cacheAsBitmap!==a&&(a?this._generateCachedSprite():this._destroyCachedSprite(),this._cacheAsBitmap=a)}}),b.DisplayObject.prototype.updateTransform=function(){var a,c,d,e,f,g,h=this.parent.worldTransform,i=this.worldTransform;this.rotation%b.PI_2?(this.rotation!==this.rotationCache&&(this.rotationCache=this.rotation,this._sr=Math.sin(this.rotation),this._cr=Math.cos(this.rotation)),a=this._cr*this.scale.x,c=this._sr*this.scale.x,d=-this._sr*this.scale.y,e=this._cr*this.scale.y,f=this.position.x,g=this.position.y,(this.pivot.x||this.pivot.y)&&(f-=this.pivot.x*a+this.pivot.y*d,g-=this.pivot.x*c+this.pivot.y*e),i.a=a*h.a+c*h.c,i.b=a*h.b+c*h.d,i.c=d*h.a+e*h.c,i.d=d*h.b+e*h.d,i.tx=f*h.a+g*h.c+h.tx,i.ty=f*h.b+g*h.d+h.ty):(a=this.scale.x,e=this.scale.y,f=this.position.x-this.pivot.x*a,g=this.position.y-this.pivot.y*e,i.a=a*h.a,i.b=a*h.b,i.c=e*h.c,i.d=e*h.d,i.tx=f*h.a+g*h.c+h.tx,i.ty=f*h.b+g*h.d+h.ty),this.worldAlpha=this.alpha*this.parent.worldAlpha},b.DisplayObject.prototype.displayObjectUpdateTransform=b.DisplayObject.prototype.updateTransform,b.DisplayObject.prototype.getBounds=function(a){return a=a,b.EmptyRectangle},b.DisplayObject.prototype.getLocalBounds=function(){return this.getBounds(b.identityMatrix)},b.DisplayObject.prototype.setStageReference=function(a){this.stage=a,this._interactive&&(this.stage.dirty=!0)},b.DisplayObject.prototype.generateTexture=function(a,c,d){var e=this.getLocalBounds(),f=new b.RenderTexture(0|e.width,0|e.height,d,c,a);return b.DisplayObject._tempMatrix.tx=-e.x,b.DisplayObject._tempMatrix.ty=-e.y,f.render(this,b.DisplayObject._tempMatrix),f},b.DisplayObject.prototype.updateCache=function(){this._generateCachedSprite()},b.DisplayObject.prototype.toGlobal=function(a){return this.displayObjectUpdateTransform(),this.worldTransform.apply(a)},b.DisplayObject.prototype.toLocal=function(a,b){return b&&(a=b.toGlobal(a)),this.displayObjectUpdateTransform(),this.worldTransform.applyInverse(a)},b.DisplayObject.prototype._renderCachedSprite=function(a){this._cachedSprite.worldAlpha=this.worldAlpha,a.gl?b.Sprite.prototype._renderWebGL.call(this._cachedSprite,a):b.Sprite.prototype._renderCanvas.call(this._cachedSprite,a)},b.DisplayObject.prototype._generateCachedSprite=function(){this._cacheAsBitmap=!1;var a=this.getLocalBounds();if(this._cachedSprite)this._cachedSprite.texture.resize(0|a.width,0|a.height);else{var c=new b.RenderTexture(0|a.width,0|a.height);this._cachedSprite=new b.Sprite(c),this._cachedSprite.worldTransform=this.worldTransform}var d=this._filters;this._filters=null,this._cachedSprite.filters=d,b.DisplayObject._tempMatrix.tx=-a.x,b.DisplayObject._tempMatrix.ty=-a.y,this._cachedSprite.texture.render(this,b.DisplayObject._tempMatrix,!0),this._cachedSprite.anchor.x=-(a.x/a.width),this._cachedSprite.anchor.y=-(a.y/a.height),this._filters=d,this._cacheAsBitmap=!0},b.DisplayObject.prototype._destroyCachedSprite=function(){this._cachedSprite&&(this._cachedSprite.texture.destroy(!0),this._cachedSprite=null)},b.DisplayObject.prototype._renderWebGL=function(a){a=a},b.DisplayObject.prototype._renderCanvas=function(a){a=a},b.DisplayObject._tempMatrix=new b.Matrix,Object.defineProperty(b.DisplayObject.prototype,\"x\",{get:function(){return this.position.x},set:function(a){this.position.x=a}}),Object.defineProperty(b.DisplayObject.prototype,\"y\",{get:function(){return this.position.y},set:function(a){this.position.y=a}}),b.DisplayObjectContainer=function(){b.DisplayObject.call(this),this.children=[]},b.DisplayObjectContainer.prototype=Object.create(b.DisplayObject.prototype),b.DisplayObjectContainer.prototype.constructor=b.DisplayObjectContainer,Object.defineProperty(b.DisplayObjectContainer.prototype,\"width\",{get:function(){return this.scale.x*this.getLocalBounds().width},set:function(a){var b=this.getLocalBounds().width;this.scale.x=0!==b?a/b:1,this._width=a}}),Object.defineProperty(b.DisplayObjectContainer.prototype,\"height\",{get:function(){return this.scale.y*this.getLocalBounds().height},set:function(a){var b=this.getLocalBounds().height;this.scale.y=0!==b?a/b:1,this._height=a}}),b.DisplayObjectContainer.prototype.addChild=function(a){return this.addChildAt(a,this.children.length)},b.DisplayObjectContainer.prototype.addChildAt=function(a,b){if(b>=0&&b<=this.children.length)return a.parent&&a.parent.removeChild(a),a.parent=this,this.children.splice(b,0,a),this.stage&&a.setStageReference(this.stage),a;throw new Error(a+\"addChildAt: The index \"+b+\" supplied is out of bounds \"+this.children.length)},b.DisplayObjectContainer.prototype.swapChildren=function(a,b){if(a!==b){var c=this.getChildIndex(a),d=this.getChildIndex(b);if(0>c||0>d)throw new Error(\"swapChildren: Both the supplied DisplayObjects must be a child of the caller.\");this.children[c]=b,this.children[d]=a}},b.DisplayObjectContainer.prototype.getChildIndex=function(a){var b=this.children.indexOf(a);if(-1===b)throw new Error(\"The supplied DisplayObject must be a child of the caller\");return b},b.DisplayObjectContainer.prototype.setChildIndex=function(a,b){if(0>b||b>=this.children.length)throw new Error(\"The supplied index is out of bounds\");var c=this.getChildIndex(a);this.children.splice(c,1),this.children.splice(b,0,a)},b.DisplayObjectContainer.prototype.getChildAt=function(a){if(0>a||a>=this.children.length)throw new Error(\"getChildAt: Supplied index \"+a+\" does not exist in the child list, or the supplied DisplayObject must be a child of the caller\");return this.children[a]},b.DisplayObjectContainer.prototype.removeChild=function(a){var b=this.children.indexOf(a);if(-1!==b)return this.removeChildAt(b)},b.DisplayObjectContainer.prototype.removeChildAt=function(a){var b=this.getChildAt(a);return this.stage&&b.removeStageReference(),b.parent=void 0,this.children.splice(a,1),b},b.DisplayObjectContainer.prototype.removeChildren=function(a,b){var c=a||0,d=\"number\"==typeof b?b:this.children.length,e=d-c;if(e>0&&d>=e){for(var f=this.children.splice(c,e),g=0;g<f.length;g++){var h=f[g];this.stage&&h.removeStageReference(),h.parent=void 0}return f}if(0===e&&0===this.children.length)return[];throw new Error(\"removeChildren: Range Error, numeric values are outside the acceptable range\")},b.DisplayObjectContainer.prototype.updateTransform=function(){if(this.visible&&(this.displayObjectUpdateTransform(),!this._cacheAsBitmap))for(var a=0,b=this.children.length;b>a;a++)this.children[a].updateTransform()},b.DisplayObjectContainer.prototype.displayObjectContainerUpdateTransform=b.DisplayObjectContainer.prototype.updateTransform,b.DisplayObjectContainer.prototype.getBounds=function(){if(0===this.children.length)return b.EmptyRectangle;for(var a,c,d,e=1/0,f=1/0,g=-(1/0),h=-(1/0),i=!1,j=0,k=this.children.length;k>j;j++){var l=this.children[j];l.visible&&(i=!0,a=this.children[j].getBounds(),e=e<a.x?e:a.x,f=f<a.y?f:a.y,c=a.width+a.x,d=a.height+a.y,g=g>c?g:c,h=h>d?h:d)}if(!i)return b.EmptyRectangle;var m=this._bounds;return m.x=e,m.y=f,m.width=g-e,m.height=h-f,m},b.DisplayObjectContainer.prototype.getLocalBounds=function(){var a=this.worldTransform;this.worldTransform=b.identityMatrix;for(var c=0,d=this.children.length;d>c;c++)this.children[c].updateTransform();var e=this.getBounds();return this.worldTransform=a,e},b.DisplayObjectContainer.prototype.setStageReference=function(a){this.stage=a,this._interactive&&(this.stage.dirty=!0);for(var b=0,c=this.children.length;c>b;b++){var d=this.children[b];d.setStageReference(a)}},b.DisplayObjectContainer.prototype.removeStageReference=function(){for(var a=0,b=this.children.length;b>a;a++){var c=this.children[a];c.removeStageReference()}this._interactive&&(this.stage.dirty=!0),this.stage=null},b.DisplayObjectContainer.prototype._renderWebGL=function(a){if(this.visible&&!(this.alpha<=0)){if(this._cacheAsBitmap)return void this._renderCachedSprite(a);var b,c;if(this._mask||this._filters){for(this._filters&&(a.spriteBatch.flush(),a.filterManager.pushFilter(this._filterBlock)),this._mask&&(a.spriteBatch.stop(),a.maskManager.pushMask(this.mask,a),a.spriteBatch.start()),b=0,c=this.children.length;c>b;b++)this.children[b]._renderWebGL(a);a.spriteBatch.stop(),this._mask&&a.maskManager.popMask(this._mask,a),this._filters&&a.filterManager.popFilter(),a.spriteBatch.start()}else for(b=0,c=this.children.length;c>b;b++)this.children[b]._renderWebGL(a)}},b.DisplayObjectContainer.prototype._renderCanvas=function(a){if(this.visible!==!1&&0!==this.alpha){if(this._cacheAsBitmap)return void this._renderCachedSprite(a);this._mask&&a.maskManager.pushMask(this._mask,a);for(var b=0,c=this.children.length;c>b;b++){var d=this.children[b];d._renderCanvas(a)}this._mask&&a.maskManager.popMask(a)}},b.Sprite=function(a){b.DisplayObjectContainer.call(this),this.anchor=new b.Point,this.texture=a||b.Texture.emptyTexture,this._width=0,this._height=0,this.tint=16777215,this.blendMode=b.blendModes.NORMAL,this.shader=null,this.texture.baseTexture.hasLoaded?this.onTextureUpdate():this.texture.on(\"update\",this.onTextureUpdate.bind(this)),this.renderable=!0},b.Sprite.prototype=Object.create(b.DisplayObjectContainer.prototype),b.Sprite.prototype.constructor=b.Sprite,Object.defineProperty(b.Sprite.prototype,\"width\",{get:function(){return this.scale.x*this.texture.frame.width},set:function(a){this.scale.x=a/this.texture.frame.width,this._width=a}}),Object.defineProperty(b.Sprite.prototype,\"height\",{get:function(){return this.scale.y*this.texture.frame.height},set:function(a){this.scale.y=a/this.texture.frame.height,this._height=a}}),b.Sprite.prototype.setTexture=function(a){this.texture=a,this.cachedTint=16777215},b.Sprite.prototype.onTextureUpdate=function(){this._width&&(this.scale.x=this._width/this.texture.frame.width),this._height&&(this.scale.y=this._height/this.texture.frame.height)},b.Sprite.prototype.getBounds=function(a){var b=this.texture.frame.width,c=this.texture.frame.height,d=b*(1-this.anchor.x),e=b*-this.anchor.x,f=c*(1-this.anchor.y),g=c*-this.anchor.y,h=a||this.worldTransform,i=h.a,j=h.b,k=h.c,l=h.d,m=h.tx,n=h.ty,o=-(1/0),p=-(1/0),q=1/0,r=1/0;if(0===j&&0===k)0>i&&(i*=-1),0>l&&(l*=-1),q=i*e+m,o=i*d+m,r=l*g+n,p=l*f+n;else{var s=i*e+k*g+m,t=l*g+j*e+n,u=i*d+k*g+m,v=l*g+j*d+n,w=i*d+k*f+m,x=l*f+j*d+n,y=i*e+k*f+m,z=l*f+j*e+n;q=q>s?s:q,q=q>u?u:q,q=q>w?w:q,q=q>y?y:q,r=r>t?t:r,r=r>v?v:r,r=r>x?x:r,r=r>z?z:r,o=s>o?s:o,o=u>o?u:o,o=w>o?w:o,o=y>o?y:o,p=t>p?t:p,p=v>p?v:p,p=x>p?x:p,p=z>p?z:p}var A=this._bounds;return A.x=q,A.width=o-q,A.y=r,A.height=p-r,this._currentBounds=A,A},b.Sprite.prototype._renderWebGL=function(a){if(this.visible&&!(this.alpha<=0)){var b,c;if(this._mask||this._filters){var d=a.spriteBatch;for(this._filters&&(d.flush(),a.filterManager.pushFilter(this._filterBlock)),this._mask&&(d.stop(),a.maskManager.pushMask(this.mask,a),d.start()),d.render(this),b=0,c=this.children.length;c>b;b++)this.children[b]._renderWebGL(a);d.stop(),this._mask&&a.maskManager.popMask(this._mask,a),this._filters&&a.filterManager.popFilter(),d.start()}else for(a.spriteBatch.render(this),b=0,c=this.children.length;c>b;b++)this.children[b]._renderWebGL(a)}},b.Sprite.prototype._renderCanvas=function(a){if(!(this.visible===!1||0===this.alpha||this.texture.crop.width<=0||this.texture.crop.height<=0)){if(this.blendMode!==a.currentBlendMode&&(a.currentBlendMode=this.blendMode,a.context.globalCompositeOperation=b.blendModesCanvas[a.currentBlendMode]),this._mask&&a.maskManager.pushMask(this._mask,a),this.texture.valid){var c=this.texture.baseTexture.resolution/a.resolution;a.context.globalAlpha=this.worldAlpha,a.smoothProperty&&a.scaleMode!==this.texture.baseTexture.scaleMode&&(a.scaleMode=this.texture.baseTexture.scaleMode,a.context[a.smoothProperty]=a.scaleMode===b.scaleModes.LINEAR);var d=this.texture.trim?this.texture.trim.x-this.anchor.x*this.texture.trim.width:this.anchor.x*-this.texture.frame.width,e=this.texture.trim?this.texture.trim.y-this.anchor.y*this.texture.trim.height:this.anchor.y*-this.texture.frame.height;a.roundPixels?(a.context.setTransform(this.worldTransform.a,this.worldTransform.b,this.worldTransform.c,this.worldTransform.d,this.worldTransform.tx*a.resolution|0,this.worldTransform.ty*a.resolution|0),d=0|d,e=0|e):a.context.setTransform(this.worldTransform.a,this.worldTransform.b,this.worldTransform.c,this.worldTransform.d,this.worldTransform.tx*a.resolution,this.worldTransform.ty*a.resolution),16777215!==this.tint?(this.cachedTint!==this.tint&&(this.cachedTint=this.tint,this.tintedTexture=b.CanvasTinter.getTintedTexture(this,this.tint)),a.context.drawImage(this.tintedTexture,0,0,this.texture.crop.width,this.texture.crop.height,d/c,e/c,this.texture.crop.width/c,this.texture.crop.height/c)):a.context.drawImage(this.texture.baseTexture.source,this.texture.crop.x,this.texture.crop.y,this.texture.crop.width,this.texture.crop.height,d/c,e/c,this.texture.crop.width/c,this.texture.crop.height/c)}for(var f=0,g=this.children.length;g>f;f++)this.children[f]._renderCanvas(a);this._mask&&a.maskManager.popMask(a)}},b.Sprite.fromFrame=function(a){var c=b.TextureCache[a];if(!c)throw new Error('The frameId \"'+a+'\" does not exist in the texture cache'+this);return new b.Sprite(c)},b.Sprite.fromImage=function(a,c,d){var e=b.Texture.fromImage(a,c,d);return new b.Sprite(e)},b.SpriteBatch=function(a){b.DisplayObjectContainer.call(this),this.textureThing=a,this.ready=!1},b.SpriteBatch.prototype=Object.create(b.DisplayObjectContainer.prototype),b.SpriteBatch.prototype.constructor=b.SpriteBatch,b.SpriteBatch.prototype.initWebGL=function(a){this.fastSpriteBatch=new b.WebGLFastSpriteBatch(a),this.ready=!0},b.SpriteBatch.prototype.updateTransform=function(){this.displayObjectUpdateTransform()},b.SpriteBatch.prototype._renderWebGL=function(a){!this.visible||this.alpha<=0||!this.children.length||(this.ready||this.initWebGL(a.gl),this.fastSpriteBatch.gl!==a.gl&&this.fastSpriteBatch.setContext(a.gl),a.spriteBatch.stop(),a.shaderManager.setShader(a.shaderManager.fastShader),this.fastSpriteBatch.begin(this,a),this.fastSpriteBatch.render(this),a.spriteBatch.start())},b.SpriteBatch.prototype._renderCanvas=function(a){if(this.visible&&!(this.alpha<=0)&&this.children.length){var b=a.context;b.globalAlpha=this.worldAlpha,this.displayObjectUpdateTransform();for(var c=this.worldTransform,d=!0,e=0;e<this.children.length;e++){var f=this.children[e];if(f.visible){var g=f.texture,h=g.frame;if(b.globalAlpha=this.worldAlpha*f.alpha,f.rotation%(2*Math.PI)===0)d&&(b.setTransform(c.a,c.b,c.c,c.d,c.tx,c.ty),d=!1),b.drawImage(g.baseTexture.source,h.x,h.y,h.width,h.height,f.anchor.x*-h.width*f.scale.x+f.position.x+.5|0,f.anchor.y*-h.height*f.scale.y+f.position.y+.5|0,h.width*f.scale.x,h.height*f.scale.y);else{d||(d=!0),f.displayObjectUpdateTransform();var i=f.worldTransform;a.roundPixels?b.setTransform(i.a,i.b,i.c,i.d,0|i.tx,0|i.ty):b.setTransform(i.a,i.b,i.c,i.d,i.tx,i.ty),b.drawImage(g.baseTexture.source,h.x,h.y,h.width,h.height,f.anchor.x*-h.width+.5|0,f.anchor.y*-h.height+.5|0,h.width,h.height)}}}}},b.MovieClip=function(a){b.Sprite.call(this,a[0]),this.textures=a,this.animationSpeed=1,this.loop=!0,this.onComplete=null,this.currentFrame=0,this.playing=!1},b.MovieClip.prototype=Object.create(b.Sprite.prototype),b.MovieClip.prototype.constructor=b.MovieClip,Object.defineProperty(b.MovieClip.prototype,\"totalFrames\",{get:function(){return this.textures.length}}),b.MovieClip.prototype.stop=function(){this.playing=!1},b.MovieClip.prototype.play=function(){this.playing=!0},b.MovieClip.prototype.gotoAndStop=function(a){this.playing=!1,this.currentFrame=a;var b=this.currentFrame+.5|0;this.setTexture(this.textures[b%this.textures.length])},b.MovieClip.prototype.gotoAndPlay=function(a){this.currentFrame=a,this.playing=!0},b.MovieClip.prototype.updateTransform=function(){if(this.displayObjectContainerUpdateTransform(),this.playing){this.currentFrame+=this.animationSpeed;var a=this.currentFrame+.5|0;this.currentFrame=this.currentFrame%this.textures.length,this.loop||a<this.textures.length?this.setTexture(this.textures[a%this.textures.length]):a>=this.textures.length&&(this.gotoAndStop(this.textures.length-1),this.onComplete&&this.onComplete())}},b.MovieClip.fromFrames=function(a){for(var c=[],d=0;d<a.length;d++)c.push(new b.Texture.fromFrame(a[d]));return new b.MovieClip(c)},b.MovieClip.fromImages=function(a){for(var c=[],d=0;d<a.length;d++)c.push(new b.Texture.fromImage(a[d]));return new b.MovieClip(c)},b.FilterBlock=function(){this.visible=!0,this.renderable=!0},b.FilterBlock.prototype.constructor=b.FilterBlock,b.Text=function(a,c){this.canvas=document.createElement(\"canvas\"),this.context=this.canvas.getContext(\"2d\"),this.resolution=1,b.Sprite.call(this,b.Texture.fromCanvas(this.canvas)),this.setText(a),this.setStyle(c)},b.Text.prototype=Object.create(b.Sprite.prototype),b.Text.prototype.constructor=b.Text,Object.defineProperty(b.Text.prototype,\"width\",{get:function(){return this.dirty&&(this.updateText(),this.dirty=!1),this.scale.x*this.texture.frame.width},set:function(a){this.scale.x=a/this.texture.frame.width,this._width=a}}),Object.defineProperty(b.Text.prototype,\"height\",{get:function(){return this.dirty&&(this.updateText(),this.dirty=!1),this.scale.y*this.texture.frame.height},set:function(a){this.scale.y=a/this.texture.frame.height,this._height=a}}),b.Text.prototype.setStyle=function(a){a=a||{},a.font=a.font||\"bold 20pt Arial\",a.fill=a.fill||\"black\",a.align=a.align||\"left\",a.stroke=a.stroke||\"black\",a.strokeThickness=a.strokeThickness||0,a.wordWrap=a.wordWrap||!1,a.wordWrapWidth=a.wordWrapWidth||100,a.dropShadow=a.dropShadow||!1,a.dropShadowAngle=a.dropShadowAngle||Math.PI/6,a.dropShadowDistance=a.dropShadowDistance||4,a.dropShadowColor=a.dropShadowColor||\"black\",a.lineJoin=a.lineJoin||\"miter\",a.lineHeight=a.lineHeight||!1,this.style=a,this.dirty=!0},b.Text.prototype.setText=function(a){this.text=a.toString()||\" \",this.dirty=!0},b.Text.prototype.updateText=function(){this.texture.baseTexture.resolution=this.resolution,this.context.font=this.style.font;var a=this.text;this.style.wordWrap&&(a=this.wordWrap(this.text));for(var b=a.split(/(?:\\r\\n|\\r|\\n)/),c=[],d=0,e=this.determineFontProperties(this.style.font),f=0;f<b.length;f++){var g=this.context.measureText(b[f]).width;c[f]=g,d=Math.max(d,g)}var h=d+this.style.strokeThickness;this.style.dropShadow&&(h+=this.style.dropShadowDistance),this.canvas.width=(h+this.context.lineWidth)*this.resolution;var i=this.style.lineHeight||e.fontSize+this.style.strokeThickness,j=i*b.length;this.style.dropShadow&&(j+=this.style.dropShadowDistance),this.canvas.height=j*this.resolution,this.context.scale(this.resolution,this.resolution),navigator.isCocoonJS&&this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.context.font=this.style.font,this.context.strokeStyle=this.style.stroke,this.context.lineWidth=this.style.strokeThickness,this.context.textBaseline=\"alphabetic\",this.context.lineJoin=this.style.lineJoin;var k,l;if(this.style.dropShadow){this.context.fillStyle=this.style.dropShadowColor;var m=Math.sin(this.style.dropShadowAngle)*this.style.dropShadowDistance,n=Math.cos(this.style.dropShadowAngle)*this.style.dropShadowDistance;for(f=0;f<b.length;f++)k=this.style.strokeThickness/2,l=this.style.strokeThickness/2+f*i+e.ascent,\"right\"===this.style.align?k+=d-c[f]:\"center\"===this.style.align&&(k+=(d-c[f])/2),this.style.fill&&this.context.fillText(b[f],k+m,l+n)}for(this.context.fillStyle=this.style.fill,f=0;f<b.length;f++)k=this.style.strokeThickness/2,l=this.style.strokeThickness/2+f*i+e.ascent,\"right\"===this.style.align?k+=d-c[f]:\"center\"===this.style.align&&(k+=(d-c[f])/2),this.style.stroke&&this.style.strokeThickness&&this.context.strokeText(b[f],k,l),this.style.fill&&this.context.fillText(b[f],k,l);this.updateTexture()},b.Text.prototype.updateTexture=function(){this.texture.baseTexture.width=this.canvas.width,this.texture.baseTexture.height=this.canvas.height,this.texture.crop.width=this.texture.frame.width=this.canvas.width,this.texture.crop.height=this.texture.frame.height=this.canvas.height,this._width=this.canvas.width,this._height=this.canvas.height,this.texture.baseTexture.dirty()},b.Text.prototype._renderWebGL=function(a){this.dirty&&(this.resolution=a.resolution,this.updateText(),this.dirty=!1),b.Sprite.prototype._renderWebGL.call(this,a)},b.Text.prototype._renderCanvas=function(a){this.dirty&&(this.resolution=a.resolution,this.updateText(),this.dirty=!1),b.Sprite.prototype._renderCanvas.call(this,a)},b.Text.prototype.determineFontProperties=function(a){var c=b.Text.fontPropertiesCache[a];if(!c){c={};var d=b.Text.fontPropertiesCanvas,e=b.Text.fontPropertiesContext;e.font=a;var f=Math.ceil(e.measureText(\"|Mq\").width),g=Math.ceil(e.measureText(\"M\").width),h=2*g;g=1.4*g|0,d.width=f,d.height=h,e.fillStyle=\"#f00\",e.fillRect(0,0,f,h),e.font=a,e.textBaseline=\"alphabetic\",e.fillStyle=\"#000\",e.fillText(\"|MÉq\",0,g);var i,j,k=e.getImageData(0,0,f,h).data,l=k.length,m=4*f,n=0,o=!1;for(i=0;g>i;i++){for(j=0;m>j;j+=4)if(255!==k[n+j]){o=!0;break}if(o)break;n+=m}for(c.ascent=g-i,n=l-m,o=!1,i=h;i>g;i--){for(j=0;m>j;j+=4)if(255!==k[n+j]){o=!0;break}if(o)break;n-=m}c.descent=i-g,c.descent+=6,c.fontSize=c.ascent+c.descent,b.Text.fontPropertiesCache[a]=c}return c},b.Text.prototype.wordWrap=function(a){for(var b=\"\",c=a.split(\"\\n\"),d=0;d<c.length;d++){for(var e=this.style.wordWrapWidth,f=c[d].split(\" \"),g=0;g<f.length;g++){var h=this.context.measureText(f[g]).width,i=h+this.context.measureText(\" \").width;0===g||i>e?(g>0&&(b+=\"\\n\"),b+=f[g],e=this.style.wordWrapWidth-h):(e-=i,b+=\" \"+f[g])}d<c.length-1&&(b+=\"\\n\")}return b},b.Text.prototype.getBounds=function(a){return this.dirty&&(this.updateText(),this.dirty=!1),b.Sprite.prototype.getBounds.call(this,a)},b.Text.prototype.destroy=function(a){this.context=null,this.canvas=null,this.texture.destroy(void 0===a?!0:a)},b.Text.fontPropertiesCache={},b.Text.fontPropertiesCanvas=document.createElement(\"canvas\"),b.Text.fontPropertiesContext=b.Text.fontPropertiesCanvas.getContext(\"2d\"),b.BitmapText=function(a,c){b.DisplayObjectContainer.call(this),this.textWidth=0,this.textHeight=0,this._pool=[],this.setText(a),this.setStyle(c),this.updateText(),this.dirty=!1},b.BitmapText.prototype=Object.create(b.DisplayObjectContainer.prototype),b.BitmapText.prototype.constructor=b.BitmapText,b.BitmapText.prototype.setText=function(a){this.text=a||\" \",this.dirty=!0},b.BitmapText.prototype.setStyle=function(a){a=a||{},a.align=a.align||\"left\",this.style=a;var c=a.font.split(\" \");this.fontName=c[c.length-1],this.fontSize=c.length>=2?parseInt(c[c.length-2],10):b.BitmapText.fonts[this.fontName].size,this.dirty=!0,this.tint=a.tint},b.BitmapText.prototype.updateText=function(){for(var a=b.BitmapText.fonts[this.fontName],c=new b.Point,d=null,e=[],f=0,g=[],h=0,i=this.fontSize/a.size,j=0;j<this.text.length;j++){var k=this.text.charCodeAt(j);if(/(?:\\r\\n|\\r|\\n)/.test(this.text.charAt(j)))g.push(c.x),f=Math.max(f,c.x),h++,c.x=0,c.y+=a.lineHeight,d=null;else{var l=a.chars[k];l&&(d&&l.kerning[d]&&(c.x+=l.kerning[d]),e.push({texture:l.texture,line:h,charCode:k,position:new b.Point(c.x+l.xOffset,c.y+l.yOffset)}),c.x+=l.xAdvance,d=k)}}g.push(c.x),f=Math.max(f,c.x);var m=[];for(j=0;h>=j;j++){var n=0;\"right\"===this.style.align?n=f-g[j]:\"center\"===this.style.align&&(n=(f-g[j])/2),m.push(n)}var o=this.children.length,p=e.length,q=this.tint||16777215;for(j=0;p>j;j++){var r=o>j?this.children[j]:this._pool.pop();r?r.setTexture(e[j].texture):r=new b.Sprite(e[j].texture),r.position.x=(e[j].position.x+m[e[j].line])*i,r.position.y=e[j].position.y*i,r.scale.x=r.scale.y=i,r.tint=q,r.parent||this.addChild(r)}for(;this.children.length>p;){var s=this.getChildAt(this.children.length-1);this._pool.push(s),this.removeChild(s)}this.textWidth=f*i,this.textHeight=(c.y+a.lineHeight)*i},b.BitmapText.prototype.updateTransform=function(){this.dirty&&(this.updateText(),this.dirty=!1),b.DisplayObjectContainer.prototype.updateTransform.call(this)},b.BitmapText.fonts={},b.InteractionData=function(){this.global=new b.Point,this.target=null,this.originalEvent=null},b.InteractionData.prototype.getLocalPosition=function(a,c,d){var e=a.worldTransform,f=d?d:this.global,g=e.a,h=e.c,i=e.tx,j=e.b,k=e.d,l=e.ty,m=1/(g*k+h*-j);return c=c||new b.Point,c.x=k*m*f.x+-h*m*f.y+(l*h-i*k)*m,c.y=g*m*f.y+-j*m*f.x+(-l*g+i*j)*m,c},b.InteractionData.prototype.constructor=b.InteractionData,b.InteractionManager=function(a){this.stage=a,this.mouse=new b.InteractionData,this.touches={},this.tempPoint=new b.Point,this.mouseoverEnabled=!0,this.pool=[],this.interactiveItems=[],this.interactionDOMElement=null,this.onMouseMove=this.onMouseMove.bind(this),this.onMouseDown=this.onMouseDown.bind(this),this.onMouseOut=this.onMouseOut.bind(this),this.onMouseUp=this.onMouseUp.bind(this),this.onTouchStart=this.onTouchStart.bind(this),this.onTouchEnd=this.onTouchEnd.bind(this),\nthis.onTouchCancel=this.onTouchCancel.bind(this),this.onTouchMove=this.onTouchMove.bind(this),this.last=0,this.currentCursorStyle=\"inherit\",this.mouseOut=!1,this.resolution=1,this._tempPoint=new b.Point},b.InteractionManager.prototype.constructor=b.InteractionManager,b.InteractionManager.prototype.collectInteractiveSprite=function(a,b){for(var c=a.children,d=c.length,e=d-1;e>=0;e--){var f=c[e];f._interactive?(b.interactiveChildren=!0,this.interactiveItems.push(f),f.children.length>0&&this.collectInteractiveSprite(f,f)):(f.__iParent=null,f.children.length>0&&this.collectInteractiveSprite(f,b))}},b.InteractionManager.prototype.setTarget=function(a){this.target=a,this.resolution=a.resolution,null===this.interactionDOMElement&&this.setTargetDomElement(a.view)},b.InteractionManager.prototype.setTargetDomElement=function(a){this.removeEvents(),window.navigator.msPointerEnabled&&(a.style[\"-ms-content-zooming\"]=\"none\",a.style[\"-ms-touch-action\"]=\"none\"),this.interactionDOMElement=a,a.addEventListener(\"mousemove\",this.onMouseMove,!0),a.addEventListener(\"mousedown\",this.onMouseDown,!0),a.addEventListener(\"mouseout\",this.onMouseOut,!0),a.addEventListener(\"touchstart\",this.onTouchStart,!0),a.addEventListener(\"touchend\",this.onTouchEnd,!0),a.addEventListener(\"touchleave\",this.onTouchCancel,!0),a.addEventListener(\"touchcancel\",this.onTouchCancel,!0),a.addEventListener(\"touchmove\",this.onTouchMove,!0),window.addEventListener(\"mouseup\",this.onMouseUp,!0)},b.InteractionManager.prototype.removeEvents=function(){this.interactionDOMElement&&(this.interactionDOMElement.style[\"-ms-content-zooming\"]=\"\",this.interactionDOMElement.style[\"-ms-touch-action\"]=\"\",this.interactionDOMElement.removeEventListener(\"mousemove\",this.onMouseMove,!0),this.interactionDOMElement.removeEventListener(\"mousedown\",this.onMouseDown,!0),this.interactionDOMElement.removeEventListener(\"mouseout\",this.onMouseOut,!0),this.interactionDOMElement.removeEventListener(\"touchstart\",this.onTouchStart,!0),this.interactionDOMElement.removeEventListener(\"touchend\",this.onTouchEnd,!0),this.interactionDOMElement.removeEventListener(\"touchleave\",this.onTouchCancel,!0),this.interactionDOMElement.removeEventListener(\"touchcancel\",this.onTouchCancel,!0),this.interactionDOMElement.removeEventListener(\"touchmove\",this.onTouchMove,!0),this.interactionDOMElement=null,window.removeEventListener(\"mouseup\",this.onMouseUp,!0))},b.InteractionManager.prototype.update=function(){if(this.target){var a=Date.now(),c=a-this.last;if(c=c*b.INTERACTION_FREQUENCY/1e3,!(1>c)){this.last=a;var d=0;this.dirty&&this.rebuildInteractiveGraph();var e=this.interactiveItems.length,f=\"inherit\",g=!1;for(d=0;e>d;d++){var h=this.interactiveItems[d];h.__hit=this.hitTest(h,this.mouse),this.mouse.target=h,h.__hit&&!g?(h.buttonMode&&(f=h.defaultCursor),h.interactiveChildren||(g=!0),h.__isOver||(h.mouseover&&h.mouseover(this.mouse),h.__isOver=!0)):h.__isOver&&(h.mouseout&&h.mouseout(this.mouse),h.__isOver=!1)}this.currentCursorStyle!==f&&(this.currentCursorStyle=f,this.interactionDOMElement.style.cursor=f)}}},b.InteractionManager.prototype.rebuildInteractiveGraph=function(){this.dirty=!1;for(var a=this.interactiveItems.length,b=0;a>b;b++)this.interactiveItems[b].interactiveChildren=!1;this.interactiveItems=[],this.stage.interactive&&this.interactiveItems.push(this.stage),this.collectInteractiveSprite(this.stage,this.stage)},b.InteractionManager.prototype.onMouseMove=function(a){this.dirty&&this.rebuildInteractiveGraph(),this.mouse.originalEvent=a;var b=this.interactionDOMElement.getBoundingClientRect();this.mouse.global.x=(a.clientX-b.left)*(this.target.width/b.width)/this.resolution,this.mouse.global.y=(a.clientY-b.top)*(this.target.height/b.height)/this.resolution;for(var c=this.interactiveItems.length,d=0;c>d;d++){var e=this.interactiveItems[d];e.mousemove&&e.mousemove(this.mouse)}},b.InteractionManager.prototype.onMouseDown=function(a){this.dirty&&this.rebuildInteractiveGraph(),this.mouse.originalEvent=a,b.AUTO_PREVENT_DEFAULT&&this.mouse.originalEvent.preventDefault();for(var c=this.interactiveItems.length,d=this.mouse.originalEvent,e=2===d.button||3===d.which,f=e?\"rightdown\":\"mousedown\",g=e?\"rightclick\":\"click\",h=e?\"__rightIsDown\":\"__mouseIsDown\",i=e?\"__isRightDown\":\"__isDown\",j=0;c>j;j++){var k=this.interactiveItems[j];if((k[f]||k[g])&&(k[h]=!0,k.__hit=this.hitTest(k,this.mouse),k.__hit&&(k[f]&&k[f](this.mouse),k[i]=!0,!k.interactiveChildren)))break}},b.InteractionManager.prototype.onMouseOut=function(a){this.dirty&&this.rebuildInteractiveGraph(),this.mouse.originalEvent=a;var b=this.interactiveItems.length;this.interactionDOMElement.style.cursor=\"inherit\";for(var c=0;b>c;c++){var d=this.interactiveItems[c];d.__isOver&&(this.mouse.target=d,d.mouseout&&d.mouseout(this.mouse),d.__isOver=!1)}this.mouseOut=!0,this.mouse.global.x=-1e4,this.mouse.global.y=-1e4},b.InteractionManager.prototype.onMouseUp=function(a){this.dirty&&this.rebuildInteractiveGraph(),this.mouse.originalEvent=a;for(var b=this.interactiveItems.length,c=!1,d=this.mouse.originalEvent,e=2===d.button||3===d.which,f=e?\"rightup\":\"mouseup\",g=e?\"rightclick\":\"click\",h=e?\"rightupoutside\":\"mouseupoutside\",i=e?\"__isRightDown\":\"__isDown\",j=0;b>j;j++){var k=this.interactiveItems[j];(k[g]||k[f]||k[h])&&(k.__hit=this.hitTest(k,this.mouse),k.__hit&&!c?(k[f]&&k[f](this.mouse),k[i]&&k[g]&&k[g](this.mouse),k.interactiveChildren||(c=!0)):k[i]&&k[h]&&k[h](this.mouse),k[i]=!1)}},b.InteractionManager.prototype.hitTest=function(a,c){var d=c.global;if(!a.worldVisible)return!1;a.worldTransform.applyInverse(d,this._tempPoint);var e,f=this._tempPoint.x,g=this._tempPoint.y;if(c.target=a,a.hitArea&&a.hitArea.contains)return a.hitArea.contains(f,g);if(a instanceof b.Sprite){var h,i=a.texture.frame.width,j=a.texture.frame.height,k=-i*a.anchor.x;if(f>k&&k+i>f&&(h=-j*a.anchor.y,g>h&&h+j>g))return!0}else if(a instanceof b.Graphics){var l=a.graphicsData;for(e=0;e<l.length;e++){var m=l[e];if(m.fill&&m.shape&&m.shape.contains(f,g))return!0}}var n=a.children.length;for(e=0;n>e;e++){var o=a.children[e],p=this.hitTest(o,c);if(p)return c.target=a,!0}return!1},b.InteractionManager.prototype.onTouchMove=function(a){this.dirty&&this.rebuildInteractiveGraph();for(var b,c,d=this.interactionDOMElement.getBoundingClientRect(),e=a.changedTouches,f=e.length,g=this.target.width/d.width,h=this.target.height/d.height,i=navigator.isCocoonJS&&!d.left&&!d.top&&!a.target.style.width&&!a.target.style.height,j=0;f>j;j++)c=e[j],i?(c.globalX=c.clientX,c.globalY=c.clientY):(c.globalX=(c.clientX-d.left)*g/this.resolution,c.globalY=(c.clientY-d.top)*h/this.resolution);for(var k=0;f>k;k++){c=e[k],b=this.touches[c.identifier],b.originalEvent=a,i?(b.global.x=c.clientX,b.global.y=c.clientY):(c.globalX=b.global.x=(c.clientX-d.left)*g/this.resolution,c.globalY=b.global.y=(c.clientY-d.top)*h/this.resolution);for(var l=0;l<this.interactiveItems.length;l++){var m=this.interactiveItems[l];m.touchmove&&m.__touchData&&m.__touchData[c.identifier]&&m.touchmove(b)}}},b.InteractionManager.prototype.onTouchStart=function(a){this.dirty&&this.rebuildInteractiveGraph();var c=this.interactionDOMElement.getBoundingClientRect();b.AUTO_PREVENT_DEFAULT&&a.preventDefault();for(var d,e=a.changedTouches,f=e.length,g=this.target.width/c.width,h=this.target.height/c.height,i=navigator.isCocoonJS&&!c.left&&!c.top&&!a.target.style.width&&!a.target.style.height,j=0;f>j;j++)d=e[j],i?(d.globalX=d.clientX,d.globalY=d.clientY):(d.globalX=(d.clientX-c.left)*g/this.resolution,d.globalY=(d.clientY-c.top)*h/this.resolution);for(var k=0;f>k;k++){d=e[k];var l=this.pool.pop();l||(l=new b.InteractionData),l.originalEvent=a,this.touches[d.identifier]=l,i?(l.global.x=d.clientX,l.global.y=d.clientY):(l.global.x=(d.clientX-c.left)*g/this.resolution,l.global.y=(d.clientY-c.top)*h/this.resolution);for(var m=this.interactiveItems.length,n=0;m>n;n++){var o=this.interactiveItems[n];if((o.touchstart||o.tap)&&(o.__hit=this.hitTest(o,l),o.__hit&&(o.touchstart&&o.touchstart(l),o.__isDown=!0,o.__touchData=o.__touchData||{},o.__touchData[d.identifier]=l,!o.interactiveChildren)))break}}},b.InteractionManager.prototype.onTouchEnd=function(a){this.dirty&&this.rebuildInteractiveGraph();for(var b,c=this.interactionDOMElement.getBoundingClientRect(),d=a.changedTouches,e=d.length,f=this.target.width/c.width,g=this.target.height/c.height,h=navigator.isCocoonJS&&!c.left&&!c.top&&!a.target.style.width&&!a.target.style.height,i=0;e>i;i++)b=d[i],h?(b.globalX=b.clientX,b.globalY=b.clientY):(b.globalX=(b.clientX-c.left)*f/this.resolution,b.globalY=(b.clientY-c.top)*g/this.resolution);for(var j=0;e>j;j++){b=d[j];var k=this.touches[b.identifier],l=!1;h?(k.global.x=b.clientX,k.global.y=b.clientY):(k.global.x=(b.clientX-c.left)*f/this.resolution,k.global.y=(b.clientY-c.top)*g/this.resolution);for(var m=this.interactiveItems.length,n=0;m>n;n++){var o=this.interactiveItems[n];o.__touchData&&o.__touchData[b.identifier]&&(o.__hit=this.hitTest(o,o.__touchData[b.identifier]),k.originalEvent=a,(o.touchend||o.tap)&&(o.__hit&&!l?(o.touchend&&o.touchend(k),o.__isDown&&o.tap&&o.tap(k),o.interactiveChildren||(l=!0)):o.__isDown&&o.touchendoutside&&o.touchendoutside(k),o.__isDown=!1),o.__touchData[b.identifier]=null)}this.pool.push(k),this.touches[b.identifier]=null}},b.InteractionManager.prototype.onTouchCancel=function(a){this.dirty&&this.rebuildInteractiveGraph();for(var b,c=this.interactionDOMElement.getBoundingClientRect(),d=a.changedTouches,e=d.length,f=this.target.width/c.width,g=this.target.height/c.height,h=navigator.isCocoonJS&&!c.left&&!c.top&&!a.target.style.width&&!a.target.style.height,i=0;e>i;i++)b=d[i],h?(b.globalX=b.clientX,b.globalY=b.clientY):(b.globalX=(b.clientX-c.left)*f/this.resolution,b.globalY=(b.clientY-c.top)*g/this.resolution);for(var j=0;e>j;j++){b=d[j];var k=this.touches[b.identifier],l=!1;h?(k.global.x=b.clientX,k.global.y=b.clientY):(k.global.x=(b.clientX-c.left)*f/this.resolution,k.global.y=(b.clientY-c.top)*g/this.resolution);for(var m=this.interactiveItems.length,n=0;m>n;n++){var o=this.interactiveItems[n];o.__touchData&&o.__touchData[b.identifier]&&(o.__hit=this.hitTest(o,o.__touchData[b.identifier]),k.originalEvent=a,o.touchcancel&&!l&&(o.touchcancel(k),o.interactiveChildren||(l=!0)),o.__isDown=!1,o.__touchData[b.identifier]=null)}this.pool.push(k),this.touches[b.identifier]=null}},b.Stage=function(a){b.DisplayObjectContainer.call(this),this.worldTransform=new b.Matrix,this.interactive=!0,this.interactionManager=new b.InteractionManager(this),this.dirty=!0,this.stage=this,this.stage.hitArea=new b.Rectangle(0,0,1e5,1e5),this.setBackgroundColor(a)},b.Stage.prototype=Object.create(b.DisplayObjectContainer.prototype),b.Stage.prototype.constructor=b.Stage,b.Stage.prototype.setInteractionDelegate=function(a){this.interactionManager.setTargetDomElement(a)},b.Stage.prototype.updateTransform=function(){this.worldAlpha=1;for(var a=0,b=this.children.length;b>a;a++)this.children[a].updateTransform();this.dirty&&(this.dirty=!1,this.interactionManager.dirty=!0),this.interactive&&this.interactionManager.update()},b.Stage.prototype.setBackgroundColor=function(a){this.backgroundColor=a||0,this.backgroundColorSplit=b.hex2rgb(this.backgroundColor);var c=this.backgroundColor.toString(16);c=\"000000\".substr(0,6-c.length)+c,this.backgroundColorString=\"#\"+c},b.Stage.prototype.getMousePosition=function(){return this.interactionManager.mouse.global},function(a){for(var b=0,c=[\"ms\",\"moz\",\"webkit\",\"o\"],d=0;d<c.length&&!a.requestAnimationFrame;++d)a.requestAnimationFrame=a[c[d]+\"RequestAnimationFrame\"],a.cancelAnimationFrame=a[c[d]+\"CancelAnimationFrame\"]||a[c[d]+\"CancelRequestAnimationFrame\"];a.requestAnimationFrame||(a.requestAnimationFrame=function(c){var d=(new Date).getTime(),e=Math.max(0,16-(d-b)),f=a.setTimeout(function(){c(d+e)},e);return b=d+e,f}),a.cancelAnimationFrame||(a.cancelAnimationFrame=function(a){clearTimeout(a)}),a.requestAnimFrame=a.requestAnimationFrame}(this),b.hex2rgb=function(a){return[(a>>16&255)/255,(a>>8&255)/255,(255&a)/255]},b.rgb2hex=function(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]},\"function\"!=typeof Function.prototype.bind&&(Function.prototype.bind=function(){return function(a){function b(){for(var d=arguments.length,f=new Array(d);d--;)f[d]=arguments[d];return f=e.concat(f),c.apply(this instanceof b?this:a,f)}var c=this,d=arguments.length-1,e=[];if(d>0)for(e.length=d;d--;)e[d]=arguments[d+1];if(\"function\"!=typeof c)throw new TypeError;return b.prototype=function f(a){return a&&(f.prototype=a),this instanceof f?void 0:new f}(c.prototype),b}}()),b.AjaxRequest=function(){var a=[\"Msxml2.XMLHTTP.6.0\",\"Msxml2.XMLHTTP.3.0\",\"Microsoft.XMLHTTP\"];if(!window.ActiveXObject)return window.XMLHttpRequest?new window.XMLHttpRequest:!1;for(var b=0;b<a.length;b++)try{return new window.ActiveXObject(a[b])}catch(c){}},b.canUseNewCanvasBlendModes=function(){if(\"undefined\"==typeof document)return!1;var a=document.createElement(\"canvas\");a.width=1,a.height=1;var b=a.getContext(\"2d\");return b.fillStyle=\"#000\",b.fillRect(0,0,1,1),b.globalCompositeOperation=\"multiply\",b.fillStyle=\"#fff\",b.fillRect(0,0,1,1),0===b.getImageData(0,0,1,1).data[0]},b.getNextPowerOfTwo=function(a){if(a>0&&0===(a&a-1))return a;for(var b=1;a>b;)b<<=1;return b},b.isPowerOfTwo=function(a,b){return a>0&&0===(a&a-1)&&b>0&&0===(b&b-1)},b.EventTarget={call:function(a){a&&(a=a.prototype||a,b.EventTarget.mixin(a))},mixin:function(a){a.listeners=function(a){return this._listeners=this._listeners||{},this._listeners[a]?this._listeners[a].slice():[]},a.emit=a.dispatchEvent=function(a,c){if(this._listeners=this._listeners||{},\"object\"==typeof a&&(c=a,a=a.type),c&&c.__isEventObject===!0||(c=new b.Event(this,a,c)),this._listeners&&this._listeners[a]){var d,e=this._listeners[a].slice(0),f=e.length,g=e[0];for(d=0;f>d;g=e[++d])if(g.call(this,c),c.stoppedImmediate)return this;if(c.stopped)return this}return this.parent&&this.parent.emit&&this.parent.emit.call(this.parent,a,c),this},a.on=a.addEventListener=function(a,b){return this._listeners=this._listeners||{},(this._listeners[a]=this._listeners[a]||[]).push(b),this},a.once=function(a,b){function c(){b.apply(d.off(a,c),arguments)}this._listeners=this._listeners||{};var d=this;return c._originalHandler=b,this.on(a,c)},a.off=a.removeEventListener=function(a,b){if(this._listeners=this._listeners||{},!this._listeners[a])return this;for(var c=this._listeners[a],d=b?c.length:0;d-->0;)(c[d]===b||c[d]._originalHandler===b)&&c.splice(d,1);return 0===c.length&&delete this._listeners[a],this},a.removeAllListeners=function(a){return this._listeners=this._listeners||{},this._listeners[a]?(delete this._listeners[a],this):this}}},b.Event=function(a,b,c){this.__isEventObject=!0,this.stopped=!1,this.stoppedImmediate=!1,this.target=a,this.type=b,this.data=c,this.content=c,this.timeStamp=Date.now()},b.Event.prototype.stopPropagation=function(){this.stopped=!0},b.Event.prototype.stopImmediatePropagation=function(){this.stoppedImmediate=!0},b.autoDetectRenderer=function(a,c,d){a||(a=800),c||(c=600);var e=function(){try{var a=document.createElement(\"canvas\");return!!window.WebGLRenderingContext&&(a.getContext(\"webgl\")||a.getContext(\"experimental-webgl\"))}catch(b){return!1}}();return e?new b.WebGLRenderer(a,c,d):new b.CanvasRenderer(a,c,d)},b.autoDetectRecommendedRenderer=function(a,c,d){a||(a=800),c||(c=600);var e=function(){try{var a=document.createElement(\"canvas\");return!!window.WebGLRenderingContext&&(a.getContext(\"webgl\")||a.getContext(\"experimental-webgl\"))}catch(b){return!1}}(),f=/Android/i.test(navigator.userAgent);return e&&!f?new b.WebGLRenderer(a,c,d):new b.CanvasRenderer(a,c,d)},b.PolyK={},b.PolyK.Triangulate=function(a){var c=!0,d=a.length>>1;if(3>d)return[];for(var e=[],f=[],g=0;d>g;g++)f.push(g);g=0;for(var h=d;h>3;){var i=f[(g+0)%h],j=f[(g+1)%h],k=f[(g+2)%h],l=a[2*i],m=a[2*i+1],n=a[2*j],o=a[2*j+1],p=a[2*k],q=a[2*k+1],r=!1;if(b.PolyK._convex(l,m,n,o,p,q,c)){r=!0;for(var s=0;h>s;s++){var t=f[s];if(t!==i&&t!==j&&t!==k&&b.PolyK._PointInTriangle(a[2*t],a[2*t+1],l,m,n,o,p,q)){r=!1;break}}}if(r)e.push(i,j,k),f.splice((g+1)%h,1),h--,g=0;else if(g++>3*h){if(!c)return null;for(e=[],f=[],g=0;d>g;g++)f.push(g);g=0,h=d,c=!1}}return e.push(f[0],f[1],f[2]),e},b.PolyK._PointInTriangle=function(a,b,c,d,e,f,g,h){var i=g-c,j=h-d,k=e-c,l=f-d,m=a-c,n=b-d,o=i*i+j*j,p=i*k+j*l,q=i*m+j*n,r=k*k+l*l,s=k*m+l*n,t=1/(o*r-p*p),u=(r*q-p*s)*t,v=(o*s-p*q)*t;return u>=0&&v>=0&&1>u+v},b.PolyK._convex=function(a,b,c,d,e,f,g){return(b-d)*(e-c)+(c-a)*(f-d)>=0===g},b.initDefaultShaders=function(){},b.CompileVertexShader=function(a,c){return b._CompileShader(a,c,a.VERTEX_SHADER)},b.CompileFragmentShader=function(a,c){return b._CompileShader(a,c,a.FRAGMENT_SHADER)},b._CompileShader=function(a,b,c){var d=b.join(\"\\n\"),e=a.createShader(c);return a.shaderSource(e,d),a.compileShader(e),a.getShaderParameter(e,a.COMPILE_STATUS)?e:(window.console.log(a.getShaderInfoLog(e)),null)},b.compileProgram=function(a,c,d){var e=b.CompileFragmentShader(a,d),f=b.CompileVertexShader(a,c),g=a.createProgram();return a.attachShader(g,f),a.attachShader(g,e),a.linkProgram(g),a.getProgramParameter(g,a.LINK_STATUS)||window.console.log(\"Could not initialise shaders\"),g},b.PixiShader=function(a){this._UID=b._UID++,this.gl=a,this.program=null,this.fragmentSrc=[\"precision lowp float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;\",\"}\"],this.textureCount=0,this.firstRun=!0,this.dirty=!0,this.attributes=[],this.init()},b.PixiShader.prototype.constructor=b.PixiShader,b.PixiShader.prototype.init=function(){var a=this.gl,c=b.compileProgram(a,this.vertexSrc||b.PixiShader.defaultVertexSrc,this.fragmentSrc);a.useProgram(c),this.uSampler=a.getUniformLocation(c,\"uSampler\"),this.projectionVector=a.getUniformLocation(c,\"projectionVector\"),this.offsetVector=a.getUniformLocation(c,\"offsetVector\"),this.dimensions=a.getUniformLocation(c,\"dimensions\"),this.aVertexPosition=a.getAttribLocation(c,\"aVertexPosition\"),this.aTextureCoord=a.getAttribLocation(c,\"aTextureCoord\"),this.colorAttribute=a.getAttribLocation(c,\"aColor\"),-1===this.colorAttribute&&(this.colorAttribute=2),this.attributes=[this.aVertexPosition,this.aTextureCoord,this.colorAttribute];for(var d in this.uniforms)this.uniforms[d].uniformLocation=a.getUniformLocation(c,d);this.initUniforms(),this.program=c},b.PixiShader.prototype.initUniforms=function(){this.textureCount=1;var a,b=this.gl;for(var c in this.uniforms){a=this.uniforms[c];var d=a.type;\"sampler2D\"===d?(a._init=!1,null!==a.value&&this.initSampler2D(a)):\"mat2\"===d||\"mat3\"===d||\"mat4\"===d?(a.glMatrix=!0,a.glValueLength=1,\"mat2\"===d?a.glFunc=b.uniformMatrix2fv:\"mat3\"===d?a.glFunc=b.uniformMatrix3fv:\"mat4\"===d&&(a.glFunc=b.uniformMatrix4fv)):(a.glFunc=b[\"uniform\"+d],a.glValueLength=\"2f\"===d||\"2i\"===d?2:\"3f\"===d||\"3i\"===d?3:\"4f\"===d||\"4i\"===d?4:1)}},b.PixiShader.prototype.initSampler2D=function(a){if(a.value&&a.value.baseTexture&&a.value.baseTexture.hasLoaded){var b=this.gl;if(b.activeTexture(b[\"TEXTURE\"+this.textureCount]),b.bindTexture(b.TEXTURE_2D,a.value.baseTexture._glTextures[b.id]),a.textureData){var c=a.textureData,d=c.magFilter?c.magFilter:b.LINEAR,e=c.minFilter?c.minFilter:b.LINEAR,f=c.wrapS?c.wrapS:b.CLAMP_TO_EDGE,g=c.wrapT?c.wrapT:b.CLAMP_TO_EDGE,h=c.luminance?b.LUMINANCE:b.RGBA;if(c.repeat&&(f=b.REPEAT,g=b.REPEAT),b.pixelStorei(b.UNPACK_FLIP_Y_WEBGL,!!c.flipY),c.width){var i=c.width?c.width:512,j=c.height?c.height:2,k=c.border?c.border:0;b.texImage2D(b.TEXTURE_2D,0,h,i,j,k,h,b.UNSIGNED_BYTE,null)}else b.texImage2D(b.TEXTURE_2D,0,h,b.RGBA,b.UNSIGNED_BYTE,a.value.baseTexture.source);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,d),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,e),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,f),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,g)}b.uniform1i(a.uniformLocation,this.textureCount),a._init=!0,this.textureCount++}},b.PixiShader.prototype.syncUniforms=function(){this.textureCount=1;var a,c=this.gl;for(var d in this.uniforms)a=this.uniforms[d],1===a.glValueLength?a.glMatrix===!0?a.glFunc.call(c,a.uniformLocation,a.transpose,a.value):a.glFunc.call(c,a.uniformLocation,a.value):2===a.glValueLength?a.glFunc.call(c,a.uniformLocation,a.value.x,a.value.y):3===a.glValueLength?a.glFunc.call(c,a.uniformLocation,a.value.x,a.value.y,a.value.z):4===a.glValueLength?a.glFunc.call(c,a.uniformLocation,a.value.x,a.value.y,a.value.z,a.value.w):\"sampler2D\"===a.type&&(a._init?(c.activeTexture(c[\"TEXTURE\"+this.textureCount]),a.value.baseTexture._dirty[c.id]?b.instances[c.id].updateTexture(a.value.baseTexture):c.bindTexture(c.TEXTURE_2D,a.value.baseTexture._glTextures[c.id]),c.uniform1i(a.uniformLocation,this.textureCount),this.textureCount++):this.initSampler2D(a))},b.PixiShader.prototype.destroy=function(){this.gl.deleteProgram(this.program),this.uniforms=null,this.gl=null,this.attributes=null},b.PixiShader.defaultVertexSrc=[\"attribute vec2 aVertexPosition;\",\"attribute vec2 aTextureCoord;\",\"attribute vec4 aColor;\",\"uniform vec2 projectionVector;\",\"uniform vec2 offsetVector;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"const vec2 center = vec2(-1.0, 1.0);\",\"void main(void) {\",\"   gl_Position = vec4( ((aVertexPosition + offsetVector) / projectionVector) + center , 0.0, 1.0);\",\"   vTextureCoord = aTextureCoord;\",\"   vColor = vec4(aColor.rgb * aColor.a, aColor.a);\",\"}\"],b.PixiFastShader=function(a){this._UID=b._UID++,this.gl=a,this.program=null,this.fragmentSrc=[\"precision lowp float;\",\"varying vec2 vTextureCoord;\",\"varying float vColor;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;\",\"}\"],this.vertexSrc=[\"attribute vec2 aVertexPosition;\",\"attribute vec2 aPositionCoord;\",\"attribute vec2 aScale;\",\"attribute float aRotation;\",\"attribute vec2 aTextureCoord;\",\"attribute float aColor;\",\"uniform vec2 projectionVector;\",\"uniform vec2 offsetVector;\",\"uniform mat3 uMatrix;\",\"varying vec2 vTextureCoord;\",\"varying float vColor;\",\"const vec2 center = vec2(-1.0, 1.0);\",\"void main(void) {\",\"   vec2 v;\",\"   vec2 sv = aVertexPosition * aScale;\",\"   v.x = (sv.x) * cos(aRotation) - (sv.y) * sin(aRotation);\",\"   v.y = (sv.x) * sin(aRotation) + (sv.y) * cos(aRotation);\",\"   v = ( uMatrix * vec3(v + aPositionCoord , 1.0) ).xy ;\",\"   gl_Position = vec4( ( v / projectionVector) + center , 0.0, 1.0);\",\"   vTextureCoord = aTextureCoord;\",\"   vColor = aColor;\",\"}\"],this.textureCount=0,this.init()},b.PixiFastShader.prototype.constructor=b.PixiFastShader,b.PixiFastShader.prototype.init=function(){var a=this.gl,c=b.compileProgram(a,this.vertexSrc,this.fragmentSrc);a.useProgram(c),this.uSampler=a.getUniformLocation(c,\"uSampler\"),this.projectionVector=a.getUniformLocation(c,\"projectionVector\"),this.offsetVector=a.getUniformLocation(c,\"offsetVector\"),this.dimensions=a.getUniformLocation(c,\"dimensions\"),this.uMatrix=a.getUniformLocation(c,\"uMatrix\"),this.aVertexPosition=a.getAttribLocation(c,\"aVertexPosition\"),this.aPositionCoord=a.getAttribLocation(c,\"aPositionCoord\"),this.aScale=a.getAttribLocation(c,\"aScale\"),this.aRotation=a.getAttribLocation(c,\"aRotation\"),this.aTextureCoord=a.getAttribLocation(c,\"aTextureCoord\"),this.colorAttribute=a.getAttribLocation(c,\"aColor\"),-1===this.colorAttribute&&(this.colorAttribute=2),this.attributes=[this.aVertexPosition,this.aPositionCoord,this.aScale,this.aRotation,this.aTextureCoord,this.colorAttribute],this.program=c},b.PixiFastShader.prototype.destroy=function(){this.gl.deleteProgram(this.program),this.uniforms=null,this.gl=null,this.attributes=null},b.StripShader=function(a){this._UID=b._UID++,this.gl=a,this.program=null,this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"uniform float alpha;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * alpha;\",\"}\"],this.vertexSrc=[\"attribute vec2 aVertexPosition;\",\"attribute vec2 aTextureCoord;\",\"uniform mat3 translationMatrix;\",\"uniform vec2 projectionVector;\",\"uniform vec2 offsetVector;\",\"varying vec2 vTextureCoord;\",\"void main(void) {\",\"   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);\",\"   v -= offsetVector.xyx;\",\"   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / -projectionVector.y + 1.0 , 0.0, 1.0);\",\"   vTextureCoord = aTextureCoord;\",\"}\"],this.init()},b.StripShader.prototype.constructor=b.StripShader,b.StripShader.prototype.init=function(){var a=this.gl,c=b.compileProgram(a,this.vertexSrc,this.fragmentSrc);a.useProgram(c),this.uSampler=a.getUniformLocation(c,\"uSampler\"),this.projectionVector=a.getUniformLocation(c,\"projectionVector\"),this.offsetVector=a.getUniformLocation(c,\"offsetVector\"),this.colorAttribute=a.getAttribLocation(c,\"aColor\"),this.aVertexPosition=a.getAttribLocation(c,\"aVertexPosition\"),this.aTextureCoord=a.getAttribLocation(c,\"aTextureCoord\"),this.attributes=[this.aVertexPosition,this.aTextureCoord],this.translationMatrix=a.getUniformLocation(c,\"translationMatrix\"),this.alpha=a.getUniformLocation(c,\"alpha\"),this.program=c},b.StripShader.prototype.destroy=function(){this.gl.deleteProgram(this.program),this.uniforms=null,this.gl=null,this.attribute=null},b.PrimitiveShader=function(a){this._UID=b._UID++,this.gl=a,this.program=null,this.fragmentSrc=[\"precision mediump float;\",\"varying vec4 vColor;\",\"void main(void) {\",\"   gl_FragColor = vColor;\",\"}\"],this.vertexSrc=[\"attribute vec2 aVertexPosition;\",\"attribute vec4 aColor;\",\"uniform mat3 translationMatrix;\",\"uniform vec2 projectionVector;\",\"uniform vec2 offsetVector;\",\"uniform float alpha;\",\"uniform float flipY;\",\"uniform vec3 tint;\",\"varying vec4 vColor;\",\"void main(void) {\",\"   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);\",\"   v -= offsetVector.xyx;\",\"   gl_Position = vec4( v.x / projectionVector.x -1.0, (v.y / projectionVector.y * -flipY) + flipY , 0.0, 1.0);\",\"   vColor = aColor * vec4(tint * alpha, alpha);\",\"}\"],this.init()},b.PrimitiveShader.prototype.constructor=b.PrimitiveShader,b.PrimitiveShader.prototype.init=function(){var a=this.gl,c=b.compileProgram(a,this.vertexSrc,this.fragmentSrc);a.useProgram(c),this.projectionVector=a.getUniformLocation(c,\"projectionVector\"),this.offsetVector=a.getUniformLocation(c,\"offsetVector\"),this.tintColor=a.getUniformLocation(c,\"tint\"),this.flipY=a.getUniformLocation(c,\"flipY\"),this.aVertexPosition=a.getAttribLocation(c,\"aVertexPosition\"),this.colorAttribute=a.getAttribLocation(c,\"aColor\"),this.attributes=[this.aVertexPosition,this.colorAttribute],this.translationMatrix=a.getUniformLocation(c,\"translationMatrix\"),this.alpha=a.getUniformLocation(c,\"alpha\"),this.program=c},b.PrimitiveShader.prototype.destroy=function(){this.gl.deleteProgram(this.program),this.uniforms=null,this.gl=null,this.attributes=null},b.ComplexPrimitiveShader=function(a){this._UID=b._UID++,this.gl=a,this.program=null,this.fragmentSrc=[\"precision mediump float;\",\"varying vec4 vColor;\",\"void main(void) {\",\"   gl_FragColor = vColor;\",\"}\"],this.vertexSrc=[\"attribute vec2 aVertexPosition;\",\"uniform mat3 translationMatrix;\",\"uniform vec2 projectionVector;\",\"uniform vec2 offsetVector;\",\"uniform vec3 tint;\",\"uniform float alpha;\",\"uniform vec3 color;\",\"uniform float flipY;\",\"varying vec4 vColor;\",\"void main(void) {\",\"   vec3 v = translationMatrix * vec3(aVertexPosition , 1.0);\",\"   v -= offsetVector.xyx;\",\"   gl_Position = vec4( v.x / projectionVector.x -1.0, (v.y / projectionVector.y * -flipY) + flipY , 0.0, 1.0);\",\"   vColor = vec4(color * alpha * tint, alpha);\",\"}\"],this.init()},b.ComplexPrimitiveShader.prototype.constructor=b.ComplexPrimitiveShader,b.ComplexPrimitiveShader.prototype.init=function(){var a=this.gl,c=b.compileProgram(a,this.vertexSrc,this.fragmentSrc);a.useProgram(c),this.projectionVector=a.getUniformLocation(c,\"projectionVector\"),this.offsetVector=a.getUniformLocation(c,\"offsetVector\"),this.tintColor=a.getUniformLocation(c,\"tint\"),this.color=a.getUniformLocation(c,\"color\"),this.flipY=a.getUniformLocation(c,\"flipY\"),this.aVertexPosition=a.getAttribLocation(c,\"aVertexPosition\"),this.attributes=[this.aVertexPosition,this.colorAttribute],this.translationMatrix=a.getUniformLocation(c,\"translationMatrix\"),this.alpha=a.getUniformLocation(c,\"alpha\"),this.program=c},b.ComplexPrimitiveShader.prototype.destroy=function(){this.gl.deleteProgram(this.program),this.uniforms=null,this.gl=null,this.attribute=null},b.WebGLGraphics=function(){},b.WebGLGraphics.renderGraphics=function(a,c){var d,e=c.gl,f=c.projection,g=c.offset,h=c.shaderManager.primitiveShader;a.dirty&&b.WebGLGraphics.updateGraphics(a,e);for(var i=a._webGL[e.id],j=0;j<i.data.length;j++)1===i.data[j].mode?(d=i.data[j],c.stencilManager.pushStencil(a,d,c),e.drawElements(e.TRIANGLE_FAN,4,e.UNSIGNED_SHORT,2*(d.indices.length-4)),c.stencilManager.popStencil(a,d,c)):(d=i.data[j],c.shaderManager.setShader(h),h=c.shaderManager.primitiveShader,e.uniformMatrix3fv(h.translationMatrix,!1,a.worldTransform.toArray(!0)),e.uniform1f(h.flipY,1),e.uniform2f(h.projectionVector,f.x,-f.y),e.uniform2f(h.offsetVector,-g.x,-g.y),e.uniform3fv(h.tintColor,b.hex2rgb(a.tint)),e.uniform1f(h.alpha,a.worldAlpha),e.bindBuffer(e.ARRAY_BUFFER,d.buffer),e.vertexAttribPointer(h.aVertexPosition,2,e.FLOAT,!1,24,0),e.vertexAttribPointer(h.colorAttribute,4,e.FLOAT,!1,24,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,d.indexBuffer),e.drawElements(e.TRIANGLE_STRIP,d.indices.length,e.UNSIGNED_SHORT,0))},b.WebGLGraphics.updateGraphics=function(a,c){var d=a._webGL[c.id];d||(d=a._webGL[c.id]={lastIndex:0,data:[],gl:c}),a.dirty=!1;var e;if(a.clearDirty){for(a.clearDirty=!1,e=0;e<d.data.length;e++){var f=d.data[e];f.reset(),b.WebGLGraphics.graphicsDataPool.push(f)}d.data=[],d.lastIndex=0}var g;for(e=d.lastIndex;e<a.graphicsData.length;e++){var h=a.graphicsData[e];if(h.type===b.Graphics.POLY){if(h.points=h.shape.points.slice(),h.shape.closed&&(h.points[0]!==h.points[h.points.length-2]||h.points[1]!==h.points[h.points.length-1])&&h.points.push(h.points[0],h.points[1]),h.fill&&h.points.length>=6)if(h.points.length<12){g=b.WebGLGraphics.switchMode(d,0);var i=b.WebGLGraphics.buildPoly(h,g);i||(g=b.WebGLGraphics.switchMode(d,1),b.WebGLGraphics.buildComplexPoly(h,g))}else g=b.WebGLGraphics.switchMode(d,1),b.WebGLGraphics.buildComplexPoly(h,g);h.lineWidth>0&&(g=b.WebGLGraphics.switchMode(d,0),b.WebGLGraphics.buildLine(h,g))}else g=b.WebGLGraphics.switchMode(d,0),h.type===b.Graphics.RECT?b.WebGLGraphics.buildRectangle(h,g):h.type===b.Graphics.CIRC||h.type===b.Graphics.ELIP?b.WebGLGraphics.buildCircle(h,g):h.type===b.Graphics.RREC&&b.WebGLGraphics.buildRoundedRectangle(h,g);d.lastIndex++}for(e=0;e<d.data.length;e++)g=d.data[e],g.dirty&&g.upload()},b.WebGLGraphics.switchMode=function(a,c){var d;return a.data.length?(d=a.data[a.data.length-1],(d.mode!==c||1===c)&&(d=b.WebGLGraphics.graphicsDataPool.pop()||new b.WebGLGraphicsData(a.gl),d.mode=c,a.data.push(d))):(d=b.WebGLGraphics.graphicsDataPool.pop()||new b.WebGLGraphicsData(a.gl),d.mode=c,a.data.push(d)),d.dirty=!0,d},b.WebGLGraphics.buildRectangle=function(a,c){var d=a.shape,e=d.x,f=d.y,g=d.width,h=d.height;if(a.fill){var i=b.hex2rgb(a.fillColor),j=a.fillAlpha,k=i[0]*j,l=i[1]*j,m=i[2]*j,n=c.points,o=c.indices,p=n.length/6;n.push(e,f),n.push(k,l,m,j),n.push(e+g,f),n.push(k,l,m,j),n.push(e,f+h),n.push(k,l,m,j),n.push(e+g,f+h),n.push(k,l,m,j),o.push(p,p,p+1,p+2,p+3,p+3)}if(a.lineWidth){var q=a.points;a.points=[e,f,e+g,f,e+g,f+h,e,f+h,e,f],b.WebGLGraphics.buildLine(a,c),a.points=q}},b.WebGLGraphics.buildRoundedRectangle=function(a,c){var d=a.shape,e=d.x,f=d.y,g=d.width,h=d.height,i=d.radius,j=[];if(j.push(e,f+i),j=j.concat(b.WebGLGraphics.quadraticBezierCurve(e,f+h-i,e,f+h,e+i,f+h)),j=j.concat(b.WebGLGraphics.quadraticBezierCurve(e+g-i,f+h,e+g,f+h,e+g,f+h-i)),j=j.concat(b.WebGLGraphics.quadraticBezierCurve(e+g,f+i,e+g,f,e+g-i,f)),j=j.concat(b.WebGLGraphics.quadraticBezierCurve(e+i,f,e,f,e,f+i)),a.fill){var k=b.hex2rgb(a.fillColor),l=a.fillAlpha,m=k[0]*l,n=k[1]*l,o=k[2]*l,p=c.points,q=c.indices,r=p.length/6,s=b.PolyK.Triangulate(j),t=0;\n\nfor(t=0;t<s.length;t+=3)q.push(s[t]+r),q.push(s[t]+r),q.push(s[t+1]+r),q.push(s[t+2]+r),q.push(s[t+2]+r);for(t=0;t<j.length;t++)p.push(j[t],j[++t],m,n,o,l)}if(a.lineWidth){var u=a.points;a.points=j,b.WebGLGraphics.buildLine(a,c),a.points=u}},b.WebGLGraphics.quadraticBezierCurve=function(a,b,c,d,e,f){function g(a,b,c){var d=b-a;return a+d*c}for(var h,i,j,k,l,m,n=20,o=[],p=0,q=0;n>=q;q++)p=q/n,h=g(a,c,p),i=g(b,d,p),j=g(c,e,p),k=g(d,f,p),l=g(h,j,p),m=g(i,k,p),o.push(l,m);return o},b.WebGLGraphics.buildCircle=function(a,c){var d,e,f=a.shape,g=f.x,h=f.y;a.type===b.Graphics.CIRC?(d=f.radius,e=f.radius):(d=f.width,e=f.height);var i=40,j=2*Math.PI/i,k=0;if(a.fill){var l=b.hex2rgb(a.fillColor),m=a.fillAlpha,n=l[0]*m,o=l[1]*m,p=l[2]*m,q=c.points,r=c.indices,s=q.length/6;for(r.push(s),k=0;i+1>k;k++)q.push(g,h,n,o,p,m),q.push(g+Math.sin(j*k)*d,h+Math.cos(j*k)*e,n,o,p,m),r.push(s++,s++);r.push(s-1)}if(a.lineWidth){var t=a.points;for(a.points=[],k=0;i+1>k;k++)a.points.push(g+Math.sin(j*k)*d,h+Math.cos(j*k)*e);b.WebGLGraphics.buildLine(a,c),a.points=t}},b.WebGLGraphics.buildLine=function(a,c){var d=0,e=a.points;if(0!==e.length){if(a.lineWidth%2)for(d=0;d<e.length;d++)e[d]+=.5;var f=new b.Point(e[0],e[1]),g=new b.Point(e[e.length-2],e[e.length-1]);if(f.x===g.x&&f.y===g.y){e=e.slice(),e.pop(),e.pop(),g=new b.Point(e[e.length-2],e[e.length-1]);var h=g.x+.5*(f.x-g.x),i=g.y+.5*(f.y-g.y);e.unshift(h,i),e.push(h,i)}var j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G=c.points,H=c.indices,I=e.length/2,J=e.length,K=G.length/6,L=a.lineWidth/2,M=b.hex2rgb(a.lineColor),N=a.lineAlpha,O=M[0]*N,P=M[1]*N,Q=M[2]*N;for(l=e[0],m=e[1],n=e[2],o=e[3],r=-(m-o),s=l-n,F=Math.sqrt(r*r+s*s),r/=F,s/=F,r*=L,s*=L,G.push(l-r,m-s,O,P,Q,N),G.push(l+r,m+s,O,P,Q,N),d=1;I-1>d;d++)l=e[2*(d-1)],m=e[2*(d-1)+1],n=e[2*d],o=e[2*d+1],p=e[2*(d+1)],q=e[2*(d+1)+1],r=-(m-o),s=l-n,F=Math.sqrt(r*r+s*s),r/=F,s/=F,r*=L,s*=L,t=-(o-q),u=n-p,F=Math.sqrt(t*t+u*u),t/=F,u/=F,t*=L,u*=L,x=-s+m-(-s+o),y=-r+n-(-r+l),z=(-r+l)*(-s+o)-(-r+n)*(-s+m),A=-u+q-(-u+o),B=-t+n-(-t+p),C=(-t+p)*(-u+o)-(-t+n)*(-u+q),D=x*B-A*y,Math.abs(D)<.1?(D+=10.1,G.push(n-r,o-s,O,P,Q,N),G.push(n+r,o+s,O,P,Q,N)):(j=(y*C-B*z)/D,k=(A*z-x*C)/D,E=(j-n)*(j-n)+(k-o)+(k-o),E>19600?(v=r-t,w=s-u,F=Math.sqrt(v*v+w*w),v/=F,w/=F,v*=L,w*=L,G.push(n-v,o-w),G.push(O,P,Q,N),G.push(n+v,o+w),G.push(O,P,Q,N),G.push(n-v,o-w),G.push(O,P,Q,N),J++):(G.push(j,k),G.push(O,P,Q,N),G.push(n-(j-n),o-(k-o)),G.push(O,P,Q,N)));for(l=e[2*(I-2)],m=e[2*(I-2)+1],n=e[2*(I-1)],o=e[2*(I-1)+1],r=-(m-o),s=l-n,F=Math.sqrt(r*r+s*s),r/=F,s/=F,r*=L,s*=L,G.push(n-r,o-s),G.push(O,P,Q,N),G.push(n+r,o+s),G.push(O,P,Q,N),H.push(K),d=0;J>d;d++)H.push(K++);H.push(K-1)}},b.WebGLGraphics.buildComplexPoly=function(a,c){var d=a.points.slice();if(!(d.length<6)){var e=c.indices;c.points=d,c.alpha=a.fillAlpha,c.color=b.hex2rgb(a.fillColor);for(var f,g,h=1/0,i=-(1/0),j=1/0,k=-(1/0),l=0;l<d.length;l+=2)f=d[l],g=d[l+1],h=h>f?f:h,i=f>i?f:i,j=j>g?g:j,k=g>k?g:k;d.push(h,j,i,j,i,k,h,k);var m=d.length/2;for(l=0;m>l;l++)e.push(l)}},b.WebGLGraphics.buildPoly=function(a,c){var d=a.points;if(!(d.length<6)){var e=c.points,f=c.indices,g=d.length/2,h=b.hex2rgb(a.fillColor),i=a.fillAlpha,j=h[0]*i,k=h[1]*i,l=h[2]*i,m=b.PolyK.Triangulate(d);if(!m)return!1;var n=e.length/6,o=0;for(o=0;o<m.length;o+=3)f.push(m[o]+n),f.push(m[o]+n),f.push(m[o+1]+n),f.push(m[o+2]+n),f.push(m[o+2]+n);for(o=0;g>o;o++)e.push(d[2*o],d[2*o+1],j,k,l,i);return!0}},b.WebGLGraphics.graphicsDataPool=[],b.WebGLGraphicsData=function(a){this.gl=a,this.color=[0,0,0],this.points=[],this.indices=[],this.buffer=a.createBuffer(),this.indexBuffer=a.createBuffer(),this.mode=1,this.alpha=1,this.dirty=!0},b.WebGLGraphicsData.prototype.reset=function(){this.points=[],this.indices=[]},b.WebGLGraphicsData.prototype.upload=function(){var a=this.gl;this.glPoints=new b.Float32Array(this.points),a.bindBuffer(a.ARRAY_BUFFER,this.buffer),a.bufferData(a.ARRAY_BUFFER,this.glPoints,a.STATIC_DRAW),this.glIndicies=new b.Uint16Array(this.indices),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this.indexBuffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,this.glIndicies,a.STATIC_DRAW),this.dirty=!1},b.glContexts=[],b.instances=[],b.WebGLRenderer=function(a,c,d){if(d)for(var e in b.defaultRenderOptions)\"undefined\"==typeof d[e]&&(d[e]=b.defaultRenderOptions[e]);else d=b.defaultRenderOptions;b.defaultRenderer||(b.sayHello(\"webGL\"),b.defaultRenderer=this),this.type=b.WEBGL_RENDERER,this.resolution=d.resolution,this.transparent=d.transparent,this.autoResize=d.autoResize||!1,this.preserveDrawingBuffer=d.preserveDrawingBuffer,this.clearBeforeRender=d.clearBeforeRender,this.width=a||800,this.height=c||600,this.view=d.view||document.createElement(\"canvas\"),this.contextLostBound=this.handleContextLost.bind(this),this.contextRestoredBound=this.handleContextRestored.bind(this),this.view.addEventListener(\"webglcontextlost\",this.contextLostBound,!1),this.view.addEventListener(\"webglcontextrestored\",this.contextRestoredBound,!1),this._contextOptions={alpha:this.transparent,antialias:d.antialias,premultipliedAlpha:this.transparent&&\"notMultiplied\"!==this.transparent,stencil:!0,preserveDrawingBuffer:d.preserveDrawingBuffer},this.projection=new b.Point,this.offset=new b.Point(0,0),this.shaderManager=new b.WebGLShaderManager,this.spriteBatch=new b.WebGLSpriteBatch,this.maskManager=new b.WebGLMaskManager,this.filterManager=new b.WebGLFilterManager,this.stencilManager=new b.WebGLStencilManager,this.blendModeManager=new b.WebGLBlendModeManager,this.renderSession={},this.renderSession.gl=this.gl,this.renderSession.drawCount=0,this.renderSession.shaderManager=this.shaderManager,this.renderSession.maskManager=this.maskManager,this.renderSession.filterManager=this.filterManager,this.renderSession.blendModeManager=this.blendModeManager,this.renderSession.spriteBatch=this.spriteBatch,this.renderSession.stencilManager=this.stencilManager,this.renderSession.renderer=this,this.renderSession.resolution=this.resolution,this.initContext(),this.mapBlendModes()},b.WebGLRenderer.prototype.constructor=b.WebGLRenderer,b.WebGLRenderer.prototype.initContext=function(){var a=this.view.getContext(\"webgl\",this._contextOptions)||this.view.getContext(\"experimental-webgl\",this._contextOptions);if(this.gl=a,!a)throw new Error(\"This browser does not support webGL. Try using the canvas renderer\");this.glContextId=a.id=b.WebGLRenderer.glContextId++,b.glContexts[this.glContextId]=a,b.instances[this.glContextId]=this,a.disable(a.DEPTH_TEST),a.disable(a.CULL_FACE),a.enable(a.BLEND),this.shaderManager.setContext(a),this.spriteBatch.setContext(a),this.maskManager.setContext(a),this.filterManager.setContext(a),this.blendModeManager.setContext(a),this.stencilManager.setContext(a),this.renderSession.gl=this.gl,this.resize(this.width,this.height)},b.WebGLRenderer.prototype.render=function(a){if(!this.contextLost){this.__stage!==a&&(a.interactive&&a.interactionManager.removeEvents(),this.__stage=a),a.updateTransform();var b=this.gl;a._interactive?a._interactiveEventsAdded||(a._interactiveEventsAdded=!0,a.interactionManager.setTarget(this)):a._interactiveEventsAdded&&(a._interactiveEventsAdded=!1,a.interactionManager.setTarget(this)),b.viewport(0,0,this.width,this.height),b.bindFramebuffer(b.FRAMEBUFFER,null),this.clearBeforeRender&&(this.transparent?b.clearColor(0,0,0,0):b.clearColor(a.backgroundColorSplit[0],a.backgroundColorSplit[1],a.backgroundColorSplit[2],1),b.clear(b.COLOR_BUFFER_BIT)),this.renderDisplayObject(a,this.projection)}},b.WebGLRenderer.prototype.renderDisplayObject=function(a,c,d){this.renderSession.blendModeManager.setBlendMode(b.blendModes.NORMAL),this.renderSession.drawCount=0,this.renderSession.flipY=d?-1:1,this.renderSession.projection=c,this.renderSession.offset=this.offset,this.spriteBatch.begin(this.renderSession),this.filterManager.begin(this.renderSession,d),a._renderWebGL(this.renderSession),this.spriteBatch.end()},b.WebGLRenderer.prototype.resize=function(a,b){this.width=a*this.resolution,this.height=b*this.resolution,this.view.width=this.width,this.view.height=this.height,this.autoResize&&(this.view.style.width=this.width/this.resolution+\"px\",this.view.style.height=this.height/this.resolution+\"px\"),this.gl.viewport(0,0,this.width,this.height),this.projection.x=this.width/2/this.resolution,this.projection.y=-this.height/2/this.resolution},b.WebGLRenderer.prototype.updateTexture=function(a){if(a.hasLoaded){var c=this.gl;return a._glTextures[c.id]||(a._glTextures[c.id]=c.createTexture()),c.bindTexture(c.TEXTURE_2D,a._glTextures[c.id]),c.pixelStorei(c.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultipliedAlpha),c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,a.source),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,a.scaleMode===b.scaleModes.LINEAR?c.LINEAR:c.NEAREST),a.mipmap&&b.isPowerOfTwo(a.width,a.height)?(c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,a.scaleMode===b.scaleModes.LINEAR?c.LINEAR_MIPMAP_LINEAR:c.NEAREST_MIPMAP_NEAREST),c.generateMipmap(c.TEXTURE_2D)):c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,a.scaleMode===b.scaleModes.LINEAR?c.LINEAR:c.NEAREST),a._powerOf2?(c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.REPEAT),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.REPEAT)):(c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE),c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE)),a._dirty[c.id]=!1,a._glTextures[c.id]}},b.WebGLRenderer.prototype.handleContextLost=function(a){a.preventDefault(),this.contextLost=!0},b.WebGLRenderer.prototype.handleContextRestored=function(){this.initContext();for(var a in b.TextureCache){var c=b.TextureCache[a].baseTexture;c._glTextures=[]}this.contextLost=!1},b.WebGLRenderer.prototype.destroy=function(){this.view.removeEventListener(\"webglcontextlost\",this.contextLostBound),this.view.removeEventListener(\"webglcontextrestored\",this.contextRestoredBound),b.glContexts[this.glContextId]=null,this.projection=null,this.offset=null,this.shaderManager.destroy(),this.spriteBatch.destroy(),this.maskManager.destroy(),this.filterManager.destroy(),this.shaderManager=null,this.spriteBatch=null,this.maskManager=null,this.filterManager=null,this.gl=null,this.renderSession=null},b.WebGLRenderer.prototype.mapBlendModes=function(){var a=this.gl;b.blendModesWebGL||(b.blendModesWebGL=[],b.blendModesWebGL[b.blendModes.NORMAL]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.ADD]=[a.SRC_ALPHA,a.DST_ALPHA],b.blendModesWebGL[b.blendModes.MULTIPLY]=[a.DST_COLOR,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.SCREEN]=[a.SRC_ALPHA,a.ONE],b.blendModesWebGL[b.blendModes.OVERLAY]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.DARKEN]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.LIGHTEN]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.COLOR_DODGE]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.COLOR_BURN]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.HARD_LIGHT]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.SOFT_LIGHT]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.DIFFERENCE]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.EXCLUSION]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.HUE]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.SATURATION]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.COLOR]=[a.ONE,a.ONE_MINUS_SRC_ALPHA],b.blendModesWebGL[b.blendModes.LUMINOSITY]=[a.ONE,a.ONE_MINUS_SRC_ALPHA])},b.WebGLRenderer.glContextId=0,b.WebGLBlendModeManager=function(){this.currentBlendMode=99999},b.WebGLBlendModeManager.prototype.constructor=b.WebGLBlendModeManager,b.WebGLBlendModeManager.prototype.setContext=function(a){this.gl=a},b.WebGLBlendModeManager.prototype.setBlendMode=function(a){if(this.currentBlendMode===a)return!1;this.currentBlendMode=a;var c=b.blendModesWebGL[this.currentBlendMode];return this.gl.blendFunc(c[0],c[1]),!0},b.WebGLBlendModeManager.prototype.destroy=function(){this.gl=null},b.WebGLMaskManager=function(){},b.WebGLMaskManager.prototype.constructor=b.WebGLMaskManager,b.WebGLMaskManager.prototype.setContext=function(a){this.gl=a},b.WebGLMaskManager.prototype.pushMask=function(a,c){var d=c.gl;a.dirty&&b.WebGLGraphics.updateGraphics(a,d),a._webGL[d.id].data.length&&c.stencilManager.pushStencil(a,a._webGL[d.id].data[0],c)},b.WebGLMaskManager.prototype.popMask=function(a,b){var c=this.gl;b.stencilManager.popStencil(a,a._webGL[c.id].data[0],b)},b.WebGLMaskManager.prototype.destroy=function(){this.gl=null},b.WebGLStencilManager=function(){this.stencilStack=[],this.reverse=!0,this.count=0},b.WebGLStencilManager.prototype.setContext=function(a){this.gl=a},b.WebGLStencilManager.prototype.pushStencil=function(a,b,c){var d=this.gl;this.bindGraphics(a,b,c),0===this.stencilStack.length&&(d.enable(d.STENCIL_TEST),d.clear(d.STENCIL_BUFFER_BIT),this.reverse=!0,this.count=0),this.stencilStack.push(b);var e=this.count;d.colorMask(!1,!1,!1,!1),d.stencilFunc(d.ALWAYS,0,255),d.stencilOp(d.KEEP,d.KEEP,d.INVERT),1===b.mode?(d.drawElements(d.TRIANGLE_FAN,b.indices.length-4,d.UNSIGNED_SHORT,0),this.reverse?(d.stencilFunc(d.EQUAL,255-e,255),d.stencilOp(d.KEEP,d.KEEP,d.DECR)):(d.stencilFunc(d.EQUAL,e,255),d.stencilOp(d.KEEP,d.KEEP,d.INCR)),d.drawElements(d.TRIANGLE_FAN,4,d.UNSIGNED_SHORT,2*(b.indices.length-4)),this.reverse?d.stencilFunc(d.EQUAL,255-(e+1),255):d.stencilFunc(d.EQUAL,e+1,255),this.reverse=!this.reverse):(this.reverse?(d.stencilFunc(d.EQUAL,e,255),d.stencilOp(d.KEEP,d.KEEP,d.INCR)):(d.stencilFunc(d.EQUAL,255-e,255),d.stencilOp(d.KEEP,d.KEEP,d.DECR)),d.drawElements(d.TRIANGLE_STRIP,b.indices.length,d.UNSIGNED_SHORT,0),this.reverse?d.stencilFunc(d.EQUAL,e+1,255):d.stencilFunc(d.EQUAL,255-(e+1),255)),d.colorMask(!0,!0,!0,!0),d.stencilOp(d.KEEP,d.KEEP,d.KEEP),this.count++},b.WebGLStencilManager.prototype.bindGraphics=function(a,c,d){this._currentGraphics=a;var e,f=this.gl,g=d.projection,h=d.offset;1===c.mode?(e=d.shaderManager.complexPrimitiveShader,d.shaderManager.setShader(e),f.uniform1f(e.flipY,d.flipY),f.uniformMatrix3fv(e.translationMatrix,!1,a.worldTransform.toArray(!0)),f.uniform2f(e.projectionVector,g.x,-g.y),f.uniform2f(e.offsetVector,-h.x,-h.y),f.uniform3fv(e.tintColor,b.hex2rgb(a.tint)),f.uniform3fv(e.color,c.color),f.uniform1f(e.alpha,a.worldAlpha*c.alpha),f.bindBuffer(f.ARRAY_BUFFER,c.buffer),f.vertexAttribPointer(e.aVertexPosition,2,f.FLOAT,!1,8,0),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,c.indexBuffer)):(e=d.shaderManager.primitiveShader,d.shaderManager.setShader(e),f.uniformMatrix3fv(e.translationMatrix,!1,a.worldTransform.toArray(!0)),f.uniform1f(e.flipY,d.flipY),f.uniform2f(e.projectionVector,g.x,-g.y),f.uniform2f(e.offsetVector,-h.x,-h.y),f.uniform3fv(e.tintColor,b.hex2rgb(a.tint)),f.uniform1f(e.alpha,a.worldAlpha),f.bindBuffer(f.ARRAY_BUFFER,c.buffer),f.vertexAttribPointer(e.aVertexPosition,2,f.FLOAT,!1,24,0),f.vertexAttribPointer(e.colorAttribute,4,f.FLOAT,!1,24,8),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,c.indexBuffer))},b.WebGLStencilManager.prototype.popStencil=function(a,b,c){var d=this.gl;if(this.stencilStack.pop(),this.count--,0===this.stencilStack.length)d.disable(d.STENCIL_TEST);else{var e=this.count;this.bindGraphics(a,b,c),d.colorMask(!1,!1,!1,!1),1===b.mode?(this.reverse=!this.reverse,this.reverse?(d.stencilFunc(d.EQUAL,255-(e+1),255),d.stencilOp(d.KEEP,d.KEEP,d.INCR)):(d.stencilFunc(d.EQUAL,e+1,255),d.stencilOp(d.KEEP,d.KEEP,d.DECR)),d.drawElements(d.TRIANGLE_FAN,4,d.UNSIGNED_SHORT,2*(b.indices.length-4)),d.stencilFunc(d.ALWAYS,0,255),d.stencilOp(d.KEEP,d.KEEP,d.INVERT),d.drawElements(d.TRIANGLE_FAN,b.indices.length-4,d.UNSIGNED_SHORT,0),this.reverse?d.stencilFunc(d.EQUAL,e,255):d.stencilFunc(d.EQUAL,255-e,255)):(this.reverse?(d.stencilFunc(d.EQUAL,e+1,255),d.stencilOp(d.KEEP,d.KEEP,d.DECR)):(d.stencilFunc(d.EQUAL,255-(e+1),255),d.stencilOp(d.KEEP,d.KEEP,d.INCR)),d.drawElements(d.TRIANGLE_STRIP,b.indices.length,d.UNSIGNED_SHORT,0),this.reverse?d.stencilFunc(d.EQUAL,e,255):d.stencilFunc(d.EQUAL,255-e,255)),d.colorMask(!0,!0,!0,!0),d.stencilOp(d.KEEP,d.KEEP,d.KEEP)}},b.WebGLStencilManager.prototype.destroy=function(){this.stencilStack=null,this.gl=null},b.WebGLShaderManager=function(){this.maxAttibs=10,this.attribState=[],this.tempAttribState=[];for(var a=0;a<this.maxAttibs;a++)this.attribState[a]=!1;this.stack=[]},b.WebGLShaderManager.prototype.constructor=b.WebGLShaderManager,b.WebGLShaderManager.prototype.setContext=function(a){this.gl=a,this.primitiveShader=new b.PrimitiveShader(a),this.complexPrimitiveShader=new b.ComplexPrimitiveShader(a),this.defaultShader=new b.PixiShader(a),this.fastShader=new b.PixiFastShader(a),this.stripShader=new b.StripShader(a),this.setShader(this.defaultShader)},b.WebGLShaderManager.prototype.setAttribs=function(a){var b;for(b=0;b<this.tempAttribState.length;b++)this.tempAttribState[b]=!1;for(b=0;b<a.length;b++){var c=a[b];this.tempAttribState[c]=!0}var d=this.gl;for(b=0;b<this.attribState.length;b++)this.attribState[b]!==this.tempAttribState[b]&&(this.attribState[b]=this.tempAttribState[b],this.tempAttribState[b]?d.enableVertexAttribArray(b):d.disableVertexAttribArray(b))},b.WebGLShaderManager.prototype.setShader=function(a){return this._currentId===a._UID?!1:(this._currentId=a._UID,this.currentShader=a,this.gl.useProgram(a.program),this.setAttribs(a.attributes),!0)},b.WebGLShaderManager.prototype.destroy=function(){this.attribState=null,this.tempAttribState=null,this.primitiveShader.destroy(),this.complexPrimitiveShader.destroy(),this.defaultShader.destroy(),this.fastShader.destroy(),this.stripShader.destroy(),this.gl=null},b.WebGLSpriteBatch=function(){this.vertSize=5,this.size=2e3;var a=4*this.size*4*this.vertSize,c=6*this.size;this.vertices=new b.ArrayBuffer(a),this.positions=new b.Float32Array(this.vertices),this.colors=new b.Uint32Array(this.vertices),this.indices=new b.Uint16Array(c),this.lastIndexCount=0;for(var d=0,e=0;c>d;d+=6,e+=4)this.indices[d+0]=e+0,this.indices[d+1]=e+1,this.indices[d+2]=e+2,this.indices[d+3]=e+0,this.indices[d+4]=e+2,this.indices[d+5]=e+3;this.drawing=!1,this.currentBatchSize=0,this.currentBaseTexture=null,this.dirty=!0,this.textures=[],this.blendModes=[],this.shaders=[],this.sprites=[],this.defaultShader=new b.AbstractFilter([\"precision lowp float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;\",\"}\"])},b.WebGLSpriteBatch.prototype.setContext=function(a){this.gl=a,this.vertexBuffer=a.createBuffer(),this.indexBuffer=a.createBuffer(),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this.indexBuffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,this.indices,a.STATIC_DRAW),a.bindBuffer(a.ARRAY_BUFFER,this.vertexBuffer),a.bufferData(a.ARRAY_BUFFER,this.vertices,a.DYNAMIC_DRAW),this.currentBlendMode=99999;var c=new b.PixiShader(a);c.fragmentSrc=this.defaultShader.fragmentSrc,c.uniforms={},c.init(),this.defaultShader.shaders[a.id]=c},b.WebGLSpriteBatch.prototype.begin=function(a){this.renderSession=a,this.shader=this.renderSession.shaderManager.defaultShader,this.start()},b.WebGLSpriteBatch.prototype.end=function(){this.flush()},b.WebGLSpriteBatch.prototype.render=function(a){var b=a.texture;this.currentBatchSize>=this.size&&(this.flush(),this.currentBaseTexture=b.baseTexture);var c=b._uvs;if(c){var d,e,f,g,h=a.anchor.x,i=a.anchor.y;if(b.trim){var j=b.trim;e=j.x-h*j.width,d=e+b.crop.width,g=j.y-i*j.height,f=g+b.crop.height}else d=b.frame.width*(1-h),e=b.frame.width*-h,f=b.frame.height*(1-i),g=b.frame.height*-i;var k=4*this.currentBatchSize*this.vertSize,l=b.baseTexture.resolution,m=a.worldTransform,n=m.a/l,o=m.b/l,p=m.c/l,q=m.d/l,r=m.tx,s=m.ty,t=this.colors,u=this.positions;this.renderSession.roundPixels?(u[k]=n*e+p*g+r|0,u[k+1]=q*g+o*e+s|0,u[k+5]=n*d+p*g+r|0,u[k+6]=q*g+o*d+s|0,u[k+10]=n*d+p*f+r|0,u[k+11]=q*f+o*d+s|0,u[k+15]=n*e+p*f+r|0,u[k+16]=q*f+o*e+s|0):(u[k]=n*e+p*g+r,u[k+1]=q*g+o*e+s,u[k+5]=n*d+p*g+r,u[k+6]=q*g+o*d+s,u[k+10]=n*d+p*f+r,u[k+11]=q*f+o*d+s,u[k+15]=n*e+p*f+r,u[k+16]=q*f+o*e+s),u[k+2]=c.x0,u[k+3]=c.y0,u[k+7]=c.x1,u[k+8]=c.y1,u[k+12]=c.x2,u[k+13]=c.y2,u[k+17]=c.x3,u[k+18]=c.y3;var v=a.tint;t[k+4]=t[k+9]=t[k+14]=t[k+19]=(v>>16)+(65280&v)+((255&v)<<16)+(255*a.worldAlpha<<24),this.sprites[this.currentBatchSize++]=a}},b.WebGLSpriteBatch.prototype.renderTilingSprite=function(a){var c=a.tilingTexture;this.currentBatchSize>=this.size&&(this.flush(),this.currentBaseTexture=c.baseTexture),a._uvs||(a._uvs=new b.TextureUvs);var d=a._uvs;a.tilePosition.x%=c.baseTexture.width*a.tileScaleOffset.x,a.tilePosition.y%=c.baseTexture.height*a.tileScaleOffset.y;var e=a.tilePosition.x/(c.baseTexture.width*a.tileScaleOffset.x),f=a.tilePosition.y/(c.baseTexture.height*a.tileScaleOffset.y),g=a.width/c.baseTexture.width/(a.tileScale.x*a.tileScaleOffset.x),h=a.height/c.baseTexture.height/(a.tileScale.y*a.tileScaleOffset.y);d.x0=0-e,d.y0=0-f,d.x1=1*g-e,d.y1=0-f,d.x2=1*g-e,d.y2=1*h-f,d.x3=0-e,d.y3=1*h-f;var i=a.tint,j=(i>>16)+(65280&i)+((255&i)<<16)+(255*a.alpha<<24),k=this.positions,l=this.colors,m=a.width,n=a.height,o=a.anchor.x,p=a.anchor.y,q=m*(1-o),r=m*-o,s=n*(1-p),t=n*-p,u=4*this.currentBatchSize*this.vertSize,v=c.baseTexture.resolution,w=a.worldTransform,x=w.a/v,y=w.b/v,z=w.c/v,A=w.d/v,B=w.tx,C=w.ty;k[u++]=x*r+z*t+B,k[u++]=A*t+y*r+C,k[u++]=d.x0,k[u++]=d.y0,l[u++]=j,k[u++]=x*q+z*t+B,k[u++]=A*t+y*q+C,k[u++]=d.x1,k[u++]=d.y1,l[u++]=j,k[u++]=x*q+z*s+B,k[u++]=A*s+y*q+C,k[u++]=d.x2,k[u++]=d.y2,l[u++]=j,k[u++]=x*r+z*s+B,k[u++]=A*s+y*r+C,k[u++]=d.x3,k[u++]=d.y3,l[u++]=j,this.sprites[this.currentBatchSize++]=a},b.WebGLSpriteBatch.prototype.flush=function(){if(0!==this.currentBatchSize){var a,c=this.gl;if(this.dirty){this.dirty=!1,c.activeTexture(c.TEXTURE0),c.bindBuffer(c.ARRAY_BUFFER,this.vertexBuffer),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,this.indexBuffer),a=this.defaultShader.shaders[c.id];var d=4*this.vertSize;c.vertexAttribPointer(a.aVertexPosition,2,c.FLOAT,!1,d,0),c.vertexAttribPointer(a.aTextureCoord,2,c.FLOAT,!1,d,8),c.vertexAttribPointer(a.colorAttribute,4,c.UNSIGNED_BYTE,!0,d,16)}if(this.currentBatchSize>.5*this.size)c.bufferSubData(c.ARRAY_BUFFER,0,this.vertices);else{var e=this.positions.subarray(0,4*this.currentBatchSize*this.vertSize);c.bufferSubData(c.ARRAY_BUFFER,0,e)}for(var f,g,h,i,j=0,k=0,l=null,m=this.renderSession.blendModeManager.currentBlendMode,n=null,o=!1,p=!1,q=0,r=this.currentBatchSize;r>q;q++){if(i=this.sprites[q],f=i.texture.baseTexture,g=i.blendMode,h=i.shader||this.defaultShader,o=m!==g,p=n!==h,(l!==f||o||p)&&(this.renderBatch(l,j,k),k=q,j=0,l=f,o&&(m=g,this.renderSession.blendModeManager.setBlendMode(m)),p)){n=h,a=n.shaders[c.id],a||(a=new b.PixiShader(c),a.fragmentSrc=n.fragmentSrc,a.uniforms=n.uniforms,a.init(),n.shaders[c.id]=a),this.renderSession.shaderManager.setShader(a),a.dirty&&a.syncUniforms();var s=this.renderSession.projection;c.uniform2f(a.projectionVector,s.x,s.y);var t=this.renderSession.offset;c.uniform2f(a.offsetVector,t.x,t.y)}j++}this.renderBatch(l,j,k),this.currentBatchSize=0}},b.WebGLSpriteBatch.prototype.renderBatch=function(a,b,c){if(0!==b){var d=this.gl;a._dirty[d.id]?this.renderSession.renderer.updateTexture(a):d.bindTexture(d.TEXTURE_2D,a._glTextures[d.id]),d.drawElements(d.TRIANGLES,6*b,d.UNSIGNED_SHORT,6*c*2),this.renderSession.drawCount++}},b.WebGLSpriteBatch.prototype.stop=function(){this.flush(),this.dirty=!0},b.WebGLSpriteBatch.prototype.start=function(){this.dirty=!0},b.WebGLSpriteBatch.prototype.destroy=function(){this.vertices=null,this.indices=null,this.gl.deleteBuffer(this.vertexBuffer),this.gl.deleteBuffer(this.indexBuffer),this.currentBaseTexture=null,this.gl=null},b.WebGLFastSpriteBatch=function(a){this.vertSize=10,this.maxSize=6e3,this.size=this.maxSize;var c=4*this.size*this.vertSize,d=6*this.maxSize;this.vertices=new b.Float32Array(c),this.indices=new b.Uint16Array(d),this.vertexBuffer=null,this.indexBuffer=null,this.lastIndexCount=0;for(var e=0,f=0;d>e;e+=6,f+=4)this.indices[e+0]=f+0,this.indices[e+1]=f+1,this.indices[e+2]=f+2,this.indices[e+3]=f+0,this.indices[e+4]=f+2,this.indices[e+5]=f+3;this.drawing=!1,this.currentBatchSize=0,this.currentBaseTexture=null,this.currentBlendMode=0,this.renderSession=null,this.shader=null,this.matrix=null,this.setContext(a)},b.WebGLFastSpriteBatch.prototype.constructor=b.WebGLFastSpriteBatch,b.WebGLFastSpriteBatch.prototype.setContext=function(a){this.gl=a,this.vertexBuffer=a.createBuffer(),this.indexBuffer=a.createBuffer(),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this.indexBuffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,this.indices,a.STATIC_DRAW),a.bindBuffer(a.ARRAY_BUFFER,this.vertexBuffer),a.bufferData(a.ARRAY_BUFFER,this.vertices,a.DYNAMIC_DRAW)},b.WebGLFastSpriteBatch.prototype.begin=function(a,b){this.renderSession=b,this.shader=this.renderSession.shaderManager.fastShader,this.matrix=a.worldTransform.toArray(!0),this.start()},b.WebGLFastSpriteBatch.prototype.end=function(){this.flush()},b.WebGLFastSpriteBatch.prototype.render=function(a){var b=a.children,c=b[0];if(c.texture._uvs){this.currentBaseTexture=c.texture.baseTexture,c.blendMode!==this.renderSession.blendModeManager.currentBlendMode&&(this.flush(),this.renderSession.blendModeManager.setBlendMode(c.blendMode));for(var d=0,e=b.length;e>d;d++)this.renderSprite(b[d]);this.flush()}},b.WebGLFastSpriteBatch.prototype.renderSprite=function(a){if(a.visible&&(a.texture.baseTexture===this.currentBaseTexture||(this.flush(),this.currentBaseTexture=a.texture.baseTexture,a.texture._uvs))){var b,c,d,e,f,g,h,i,j=this.vertices;if(b=a.texture._uvs,c=a.texture.frame.width,d=a.texture.frame.height,a.texture.trim){var k=a.texture.trim;f=k.x-a.anchor.x*k.width,e=f+a.texture.crop.width,h=k.y-a.anchor.y*k.height,g=h+a.texture.crop.height}else e=a.texture.frame.width*(1-a.anchor.x),f=a.texture.frame.width*-a.anchor.x,g=a.texture.frame.height*(1-a.anchor.y),h=a.texture.frame.height*-a.anchor.y;i=4*this.currentBatchSize*this.vertSize,j[i++]=f,j[i++]=h,j[i++]=a.position.x,j[i++]=a.position.y,j[i++]=a.scale.x,j[i++]=a.scale.y,j[i++]=a.rotation,j[i++]=b.x0,j[i++]=b.y1,j[i++]=a.alpha,j[i++]=e,j[i++]=h,j[i++]=a.position.x,j[i++]=a.position.y,j[i++]=a.scale.x,j[i++]=a.scale.y,j[i++]=a.rotation,j[i++]=b.x1,j[i++]=b.y1,j[i++]=a.alpha,j[i++]=e,j[i++]=g,j[i++]=a.position.x,j[i++]=a.position.y,j[i++]=a.scale.x,j[i++]=a.scale.y,j[i++]=a.rotation,j[i++]=b.x2,j[i++]=b.y2,j[i++]=a.alpha,j[i++]=f,j[i++]=g,j[i++]=a.position.x,j[i++]=a.position.y,j[i++]=a.scale.x,j[i++]=a.scale.y,j[i++]=a.rotation,j[i++]=b.x3,j[i++]=b.y3,j[i++]=a.alpha,this.currentBatchSize++,this.currentBatchSize>=this.size&&this.flush()}},b.WebGLFastSpriteBatch.prototype.flush=function(){if(0!==this.currentBatchSize){var a=this.gl;if(this.currentBaseTexture._glTextures[a.id]||this.renderSession.renderer.updateTexture(this.currentBaseTexture,a),a.bindTexture(a.TEXTURE_2D,this.currentBaseTexture._glTextures[a.id]),this.currentBatchSize>.5*this.size)a.bufferSubData(a.ARRAY_BUFFER,0,this.vertices);else{var b=this.vertices.subarray(0,4*this.currentBatchSize*this.vertSize);a.bufferSubData(a.ARRAY_BUFFER,0,b)}a.drawElements(a.TRIANGLES,6*this.currentBatchSize,a.UNSIGNED_SHORT,0),this.currentBatchSize=0,this.renderSession.drawCount++}},b.WebGLFastSpriteBatch.prototype.stop=function(){this.flush()},b.WebGLFastSpriteBatch.prototype.start=function(){var a=this.gl;a.activeTexture(a.TEXTURE0),a.bindBuffer(a.ARRAY_BUFFER,this.vertexBuffer),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this.indexBuffer);var b=this.renderSession.projection;a.uniform2f(this.shader.projectionVector,b.x,b.y),a.uniformMatrix3fv(this.shader.uMatrix,!1,this.matrix);var c=4*this.vertSize;a.vertexAttribPointer(this.shader.aVertexPosition,2,a.FLOAT,!1,c,0),a.vertexAttribPointer(this.shader.aPositionCoord,2,a.FLOAT,!1,c,8),a.vertexAttribPointer(this.shader.aScale,2,a.FLOAT,!1,c,16),a.vertexAttribPointer(this.shader.aRotation,1,a.FLOAT,!1,c,24),a.vertexAttribPointer(this.shader.aTextureCoord,2,a.FLOAT,!1,c,28),a.vertexAttribPointer(this.shader.colorAttribute,1,a.FLOAT,!1,c,36)},b.WebGLFilterManager=function(){this.filterStack=[],this.offsetX=0,this.offsetY=0},b.WebGLFilterManager.prototype.constructor=b.WebGLFilterManager,b.WebGLFilterManager.prototype.setContext=function(a){this.gl=a,this.texturePool=[],this.initShaderBuffers()},b.WebGLFilterManager.prototype.begin=function(a,b){this.renderSession=a,this.defaultShader=a.shaderManager.defaultShader;var c=this.renderSession.projection;this.width=2*c.x,this.height=2*-c.y,this.buffer=b},b.WebGLFilterManager.prototype.pushFilter=function(a){var c=this.gl,d=this.renderSession.projection,e=this.renderSession.offset;a._filterArea=a.target.filterArea||a.target.getBounds(),this.filterStack.push(a);var f=a.filterPasses[0];this.offsetX+=a._filterArea.x,this.offsetY+=a._filterArea.y;var g=this.texturePool.pop();g?g.resize(this.width,this.height):g=new b.FilterTexture(this.gl,this.width,this.height),c.bindTexture(c.TEXTURE_2D,g.texture);var h=a._filterArea,i=f.padding;h.x-=i,h.y-=i,h.width+=2*i,h.height+=2*i,h.x<0&&(h.x=0),h.width>this.width&&(h.width=this.width),h.y<0&&(h.y=0),h.height>this.height&&(h.height=this.height),c.bindFramebuffer(c.FRAMEBUFFER,g.frameBuffer),c.viewport(0,0,h.width,h.height),d.x=h.width/2,d.y=-h.height/2,e.x=-h.x,e.y=-h.y,c.colorMask(!0,!0,!0,!0),c.clearColor(0,0,0,0),c.clear(c.COLOR_BUFFER_BIT),a._glFilterTexture=g},b.WebGLFilterManager.prototype.popFilter=function(){var a=this.gl,c=this.filterStack.pop(),d=c._filterArea,e=c._glFilterTexture,f=this.renderSession.projection,g=this.renderSession.offset;if(c.filterPasses.length>1){a.viewport(0,0,d.width,d.height),a.bindBuffer(a.ARRAY_BUFFER,this.vertexBuffer),this.vertexArray[0]=0,this.vertexArray[1]=d.height,this.vertexArray[2]=d.width,this.vertexArray[3]=d.height,this.vertexArray[4]=0,this.vertexArray[5]=0,this.vertexArray[6]=d.width,this.vertexArray[7]=0,a.bufferSubData(a.ARRAY_BUFFER,0,this.vertexArray),a.bindBuffer(a.ARRAY_BUFFER,this.uvBuffer),this.uvArray[2]=d.width/this.width,this.uvArray[5]=d.height/this.height,this.uvArray[6]=d.width/this.width,this.uvArray[7]=d.height/this.height,a.bufferSubData(a.ARRAY_BUFFER,0,this.uvArray);var h=e,i=this.texturePool.pop();i||(i=new b.FilterTexture(this.gl,this.width,this.height)),i.resize(this.width,this.height),a.bindFramebuffer(a.FRAMEBUFFER,i.frameBuffer),a.clear(a.COLOR_BUFFER_BIT),a.disable(a.BLEND);for(var j=0;j<c.filterPasses.length-1;j++){var k=c.filterPasses[j];a.bindFramebuffer(a.FRAMEBUFFER,i.frameBuffer),a.activeTexture(a.TEXTURE0),a.bindTexture(a.TEXTURE_2D,h.texture),this.applyFilterPass(k,d,d.width,d.height);var l=h;h=i,i=l}a.enable(a.BLEND),e=h,this.texturePool.push(i)}var m=c.filterPasses[c.filterPasses.length-1];this.offsetX-=d.x,this.offsetY-=d.y;var n=this.width,o=this.height,p=0,q=0,r=this.buffer;if(0===this.filterStack.length)a.colorMask(!0,!0,!0,!0);else{var s=this.filterStack[this.filterStack.length-1];d=s._filterArea,n=d.width,o=d.height,p=d.x,q=d.y,r=s._glFilterTexture.frameBuffer}f.x=n/2,f.y=-o/2,g.x=p,g.y=q,d=c._filterArea;var t=d.x-p,u=d.y-q;a.bindBuffer(a.ARRAY_BUFFER,this.vertexBuffer),this.vertexArray[0]=t,this.vertexArray[1]=u+d.height,this.vertexArray[2]=t+d.width,this.vertexArray[3]=u+d.height,this.vertexArray[4]=t,this.vertexArray[5]=u,this.vertexArray[6]=t+d.width,this.vertexArray[7]=u,a.bufferSubData(a.ARRAY_BUFFER,0,this.vertexArray),a.bindBuffer(a.ARRAY_BUFFER,this.uvBuffer),this.uvArray[2]=d.width/this.width,this.uvArray[5]=d.height/this.height,this.uvArray[6]=d.width/this.width,this.uvArray[7]=d.height/this.height,a.bufferSubData(a.ARRAY_BUFFER,0,this.uvArray),a.viewport(0,0,n*this.renderSession.resolution,o*this.renderSession.resolution),a.bindFramebuffer(a.FRAMEBUFFER,r),a.activeTexture(a.TEXTURE0),a.bindTexture(a.TEXTURE_2D,e.texture),this.applyFilterPass(m,d,n,o),this.texturePool.push(e),c._glFilterTexture=null},b.WebGLFilterManager.prototype.applyFilterPass=function(a,c,d,e){var f=this.gl,g=a.shaders[f.id];g||(g=new b.PixiShader(f),g.fragmentSrc=a.fragmentSrc,g.uniforms=a.uniforms,g.init(),a.shaders[f.id]=g),this.renderSession.shaderManager.setShader(g),\nf.uniform2f(g.projectionVector,d/2,-e/2),f.uniform2f(g.offsetVector,0,0),a.uniforms.dimensions&&(a.uniforms.dimensions.value[0]=this.width,a.uniforms.dimensions.value[1]=this.height,a.uniforms.dimensions.value[2]=this.vertexArray[0],a.uniforms.dimensions.value[3]=this.vertexArray[5]),g.syncUniforms(),f.bindBuffer(f.ARRAY_BUFFER,this.vertexBuffer),f.vertexAttribPointer(g.aVertexPosition,2,f.FLOAT,!1,0,0),f.bindBuffer(f.ARRAY_BUFFER,this.uvBuffer),f.vertexAttribPointer(g.aTextureCoord,2,f.FLOAT,!1,0,0),f.bindBuffer(f.ARRAY_BUFFER,this.colorBuffer),f.vertexAttribPointer(g.colorAttribute,2,f.FLOAT,!1,0,0),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,this.indexBuffer),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0),this.renderSession.drawCount++},b.WebGLFilterManager.prototype.initShaderBuffers=function(){var a=this.gl;this.vertexBuffer=a.createBuffer(),this.uvBuffer=a.createBuffer(),this.colorBuffer=a.createBuffer(),this.indexBuffer=a.createBuffer(),this.vertexArray=new b.Float32Array([0,0,1,0,0,1,1,1]),a.bindBuffer(a.ARRAY_BUFFER,this.vertexBuffer),a.bufferData(a.ARRAY_BUFFER,this.vertexArray,a.STATIC_DRAW),this.uvArray=new b.Float32Array([0,0,1,0,0,1,1,1]),a.bindBuffer(a.ARRAY_BUFFER,this.uvBuffer),a.bufferData(a.ARRAY_BUFFER,this.uvArray,a.STATIC_DRAW),this.colorArray=new b.Float32Array([1,16777215,1,16777215,1,16777215,1,16777215]),a.bindBuffer(a.ARRAY_BUFFER,this.colorBuffer),a.bufferData(a.ARRAY_BUFFER,this.colorArray,a.STATIC_DRAW),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this.indexBuffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,1,3,2]),a.STATIC_DRAW)},b.WebGLFilterManager.prototype.destroy=function(){var a=this.gl;this.filterStack=null,this.offsetX=0,this.offsetY=0;for(var b=0;b<this.texturePool.length;b++)this.texturePool[b].destroy();this.texturePool=null,a.deleteBuffer(this.vertexBuffer),a.deleteBuffer(this.uvBuffer),a.deleteBuffer(this.colorBuffer),a.deleteBuffer(this.indexBuffer)},b.FilterTexture=function(a,c,d,e){this.gl=a,this.frameBuffer=a.createFramebuffer(),this.texture=a.createTexture(),e=e||b.scaleModes.DEFAULT,a.bindTexture(a.TEXTURE_2D,this.texture),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,e===b.scaleModes.LINEAR?a.LINEAR:a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,e===b.scaleModes.LINEAR?a.LINEAR:a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),a.bindFramebuffer(a.FRAMEBUFFER,this.frameBuffer),a.bindFramebuffer(a.FRAMEBUFFER,this.frameBuffer),a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,this.texture,0),this.renderBuffer=a.createRenderbuffer(),a.bindRenderbuffer(a.RENDERBUFFER,this.renderBuffer),a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_STENCIL_ATTACHMENT,a.RENDERBUFFER,this.renderBuffer),this.resize(c,d)},b.FilterTexture.prototype.constructor=b.FilterTexture,b.FilterTexture.prototype.clear=function(){var a=this.gl;a.clearColor(0,0,0,0),a.clear(a.COLOR_BUFFER_BIT)},b.FilterTexture.prototype.resize=function(a,b){if(this.width!==a||this.height!==b){this.width=a,this.height=b;var c=this.gl;c.bindTexture(c.TEXTURE_2D,this.texture),c.texImage2D(c.TEXTURE_2D,0,c.RGBA,a,b,0,c.RGBA,c.UNSIGNED_BYTE,null),c.bindRenderbuffer(c.RENDERBUFFER,this.renderBuffer),c.renderbufferStorage(c.RENDERBUFFER,c.DEPTH_STENCIL,a,b)}},b.FilterTexture.prototype.destroy=function(){var a=this.gl;a.deleteFramebuffer(this.frameBuffer),a.deleteTexture(this.texture),this.frameBuffer=null,this.texture=null},b.CanvasBuffer=function(a,b){this.width=a,this.height=b,this.canvas=document.createElement(\"canvas\"),this.context=this.canvas.getContext(\"2d\"),this.canvas.width=a,this.canvas.height=b},b.CanvasBuffer.prototype.constructor=b.CanvasBuffer,b.CanvasBuffer.prototype.clear=function(){this.context.setTransform(1,0,0,1,0,0),this.context.clearRect(0,0,this.width,this.height)},b.CanvasBuffer.prototype.resize=function(a,b){this.width=this.canvas.width=a,this.height=this.canvas.height=b},b.CanvasMaskManager=function(){},b.CanvasMaskManager.prototype.constructor=b.CanvasMaskManager,b.CanvasMaskManager.prototype.pushMask=function(a,c){var d=c.context;d.save();var e=a.alpha,f=a.worldTransform,g=c.resolution;d.setTransform(f.a*g,f.b*g,f.c*g,f.d*g,f.tx*g,f.ty*g),b.CanvasGraphics.renderGraphicsMask(a,d),d.clip(),a.worldAlpha=e},b.CanvasMaskManager.prototype.popMask=function(a){a.context.restore()},b.CanvasTinter=function(){},b.CanvasTinter.getTintedTexture=function(a,c){var d=a.texture;c=b.CanvasTinter.roundColor(c);var e=\"#\"+(\"00000\"+(0|c).toString(16)).substr(-6);if(d.tintCache=d.tintCache||{},d.tintCache[e])return d.tintCache[e];var f=b.CanvasTinter.canvas||document.createElement(\"canvas\");if(b.CanvasTinter.tintMethod(d,c,f),b.CanvasTinter.convertTintToImage){var g=new Image;g.src=f.toDataURL(),d.tintCache[e]=g}else d.tintCache[e]=f,b.CanvasTinter.canvas=null;return f},b.CanvasTinter.tintWithMultiply=function(a,b,c){var d=c.getContext(\"2d\"),e=a.crop;c.width=e.width,c.height=e.height,d.fillStyle=\"#\"+(\"00000\"+(0|b).toString(16)).substr(-6),d.fillRect(0,0,e.width,e.height),d.globalCompositeOperation=\"multiply\",d.drawImage(a.baseTexture.source,e.x,e.y,e.width,e.height,0,0,e.width,e.height),d.globalCompositeOperation=\"destination-atop\",d.drawImage(a.baseTexture.source,e.x,e.y,e.width,e.height,0,0,e.width,e.height)},b.CanvasTinter.tintWithOverlay=function(a,b,c){var d=c.getContext(\"2d\"),e=a.crop;c.width=e.width,c.height=e.height,d.globalCompositeOperation=\"copy\",d.fillStyle=\"#\"+(\"00000\"+(0|b).toString(16)).substr(-6),d.fillRect(0,0,e.width,e.height),d.globalCompositeOperation=\"destination-atop\",d.drawImage(a.baseTexture.source,e.x,e.y,e.width,e.height,0,0,e.width,e.height)},b.CanvasTinter.tintWithPerPixel=function(a,c,d){var e=d.getContext(\"2d\"),f=a.crop;d.width=f.width,d.height=f.height,e.globalCompositeOperation=\"copy\",e.drawImage(a.baseTexture.source,f.x,f.y,f.width,f.height,0,0,f.width,f.height);for(var g=b.hex2rgb(c),h=g[0],i=g[1],j=g[2],k=e.getImageData(0,0,f.width,f.height),l=k.data,m=0;m<l.length;m+=4)l[m+0]*=h,l[m+1]*=i,l[m+2]*=j;e.putImageData(k,0,0)},b.CanvasTinter.roundColor=function(a){var c=b.CanvasTinter.cacheStepsPerColorChannel,d=b.hex2rgb(a);return d[0]=Math.min(255,d[0]/c*c),d[1]=Math.min(255,d[1]/c*c),d[2]=Math.min(255,d[2]/c*c),b.rgb2hex(d)},b.CanvasTinter.cacheStepsPerColorChannel=8,b.CanvasTinter.convertTintToImage=!1,b.CanvasTinter.canUseMultiply=b.canUseNewCanvasBlendModes(),b.CanvasTinter.tintMethod=b.CanvasTinter.canUseMultiply?b.CanvasTinter.tintWithMultiply:b.CanvasTinter.tintWithPerPixel,b.CanvasRenderer=function(a,c,d){if(d)for(var e in b.defaultRenderOptions)\"undefined\"==typeof d[e]&&(d[e]=b.defaultRenderOptions[e]);else d=b.defaultRenderOptions;b.defaultRenderer||(b.sayHello(\"Canvas\"),b.defaultRenderer=this),this.type=b.CANVAS_RENDERER,this.resolution=d.resolution,this.clearBeforeRender=d.clearBeforeRender,this.transparent=d.transparent,this.autoResize=d.autoResize||!1,this.width=a||800,this.height=c||600,this.width*=this.resolution,this.height*=this.resolution,this.view=d.view||document.createElement(\"canvas\"),this.context=this.view.getContext(\"2d\",{alpha:this.transparent}),this.refresh=!0,this.view.width=this.width*this.resolution,this.view.height=this.height*this.resolution,this.count=0,this.maskManager=new b.CanvasMaskManager,this.renderSession={context:this.context,maskManager:this.maskManager,scaleMode:null,smoothProperty:null,roundPixels:!1},this.mapBlendModes(),this.resize(a,c),\"imageSmoothingEnabled\"in this.context?this.renderSession.smoothProperty=\"imageSmoothingEnabled\":\"webkitImageSmoothingEnabled\"in this.context?this.renderSession.smoothProperty=\"webkitImageSmoothingEnabled\":\"mozImageSmoothingEnabled\"in this.context?this.renderSession.smoothProperty=\"mozImageSmoothingEnabled\":\"oImageSmoothingEnabled\"in this.context?this.renderSession.smoothProperty=\"oImageSmoothingEnabled\":\"msImageSmoothingEnabled\"in this.context&&(this.renderSession.smoothProperty=\"msImageSmoothingEnabled\")},b.CanvasRenderer.prototype.constructor=b.CanvasRenderer,b.CanvasRenderer.prototype.render=function(a){a.updateTransform(),this.context.setTransform(1,0,0,1,0,0),this.context.globalAlpha=1,this.renderSession.currentBlendMode=b.blendModes.NORMAL,this.context.globalCompositeOperation=b.blendModesCanvas[b.blendModes.NORMAL],navigator.isCocoonJS&&this.view.screencanvas&&(this.context.fillStyle=\"black\",this.context.clear()),this.clearBeforeRender&&(this.transparent?this.context.clearRect(0,0,this.width,this.height):(this.context.fillStyle=a.backgroundColorString,this.context.fillRect(0,0,this.width,this.height))),this.renderDisplayObject(a),a.interactive&&(a._interactiveEventsAdded||(a._interactiveEventsAdded=!0,a.interactionManager.setTarget(this)))},b.CanvasRenderer.prototype.destroy=function(a){\"undefined\"==typeof a&&(a=!0),a&&this.view.parent&&this.view.parent.removeChild(this.view),this.view=null,this.context=null,this.maskManager=null,this.renderSession=null},b.CanvasRenderer.prototype.resize=function(a,b){this.width=a*this.resolution,this.height=b*this.resolution,this.view.width=this.width,this.view.height=this.height,this.autoResize&&(this.view.style.width=this.width/this.resolution+\"px\",this.view.style.height=this.height/this.resolution+\"px\")},b.CanvasRenderer.prototype.renderDisplayObject=function(a,b){this.renderSession.context=b||this.context,this.renderSession.resolution=this.resolution,a._renderCanvas(this.renderSession)},b.CanvasRenderer.prototype.mapBlendModes=function(){b.blendModesCanvas||(b.blendModesCanvas=[],b.canUseNewCanvasBlendModes()?(b.blendModesCanvas[b.blendModes.NORMAL]=\"source-over\",b.blendModesCanvas[b.blendModes.ADD]=\"lighter\",b.blendModesCanvas[b.blendModes.MULTIPLY]=\"multiply\",b.blendModesCanvas[b.blendModes.SCREEN]=\"screen\",b.blendModesCanvas[b.blendModes.OVERLAY]=\"overlay\",b.blendModesCanvas[b.blendModes.DARKEN]=\"darken\",b.blendModesCanvas[b.blendModes.LIGHTEN]=\"lighten\",b.blendModesCanvas[b.blendModes.COLOR_DODGE]=\"color-dodge\",b.blendModesCanvas[b.blendModes.COLOR_BURN]=\"color-burn\",b.blendModesCanvas[b.blendModes.HARD_LIGHT]=\"hard-light\",b.blendModesCanvas[b.blendModes.SOFT_LIGHT]=\"soft-light\",b.blendModesCanvas[b.blendModes.DIFFERENCE]=\"difference\",b.blendModesCanvas[b.blendModes.EXCLUSION]=\"exclusion\",b.blendModesCanvas[b.blendModes.HUE]=\"hue\",b.blendModesCanvas[b.blendModes.SATURATION]=\"saturation\",b.blendModesCanvas[b.blendModes.COLOR]=\"color\",b.blendModesCanvas[b.blendModes.LUMINOSITY]=\"luminosity\"):(b.blendModesCanvas[b.blendModes.NORMAL]=\"source-over\",b.blendModesCanvas[b.blendModes.ADD]=\"lighter\",b.blendModesCanvas[b.blendModes.MULTIPLY]=\"source-over\",b.blendModesCanvas[b.blendModes.SCREEN]=\"source-over\",b.blendModesCanvas[b.blendModes.OVERLAY]=\"source-over\",b.blendModesCanvas[b.blendModes.DARKEN]=\"source-over\",b.blendModesCanvas[b.blendModes.LIGHTEN]=\"source-over\",b.blendModesCanvas[b.blendModes.COLOR_DODGE]=\"source-over\",b.blendModesCanvas[b.blendModes.COLOR_BURN]=\"source-over\",b.blendModesCanvas[b.blendModes.HARD_LIGHT]=\"source-over\",b.blendModesCanvas[b.blendModes.SOFT_LIGHT]=\"source-over\",b.blendModesCanvas[b.blendModes.DIFFERENCE]=\"source-over\",b.blendModesCanvas[b.blendModes.EXCLUSION]=\"source-over\",b.blendModesCanvas[b.blendModes.HUE]=\"source-over\",b.blendModesCanvas[b.blendModes.SATURATION]=\"source-over\",b.blendModesCanvas[b.blendModes.COLOR]=\"source-over\",b.blendModesCanvas[b.blendModes.LUMINOSITY]=\"source-over\"))},b.CanvasGraphics=function(){},b.CanvasGraphics.renderGraphics=function(a,c){var d=a.worldAlpha;a.dirty&&(this.updateGraphicsTint(a),a.dirty=!1);for(var e=0;e<a.graphicsData.length;e++){var f=a.graphicsData[e],g=f.shape,h=f._fillTint,i=f._lineTint;if(c.lineWidth=f.lineWidth,f.type===b.Graphics.POLY){c.beginPath();var j=g.points;c.moveTo(j[0],j[1]);for(var k=1;k<j.length/2;k++)c.lineTo(j[2*k],j[2*k+1]);g.closed&&c.lineTo(j[0],j[1]),j[0]===j[j.length-2]&&j[1]===j[j.length-1]&&c.closePath(),f.fill&&(c.globalAlpha=f.fillAlpha*d,c.fillStyle=\"#\"+(\"00000\"+(0|h).toString(16)).substr(-6),c.fill()),f.lineWidth&&(c.globalAlpha=f.lineAlpha*d,c.strokeStyle=\"#\"+(\"00000\"+(0|i).toString(16)).substr(-6),c.stroke())}else if(f.type===b.Graphics.RECT)(f.fillColor||0===f.fillColor)&&(c.globalAlpha=f.fillAlpha*d,c.fillStyle=\"#\"+(\"00000\"+(0|h).toString(16)).substr(-6),c.fillRect(g.x,g.y,g.width,g.height)),f.lineWidth&&(c.globalAlpha=f.lineAlpha*d,c.strokeStyle=\"#\"+(\"00000\"+(0|i).toString(16)).substr(-6),c.strokeRect(g.x,g.y,g.width,g.height));else if(f.type===b.Graphics.CIRC)c.beginPath(),c.arc(g.x,g.y,g.radius,0,2*Math.PI),c.closePath(),f.fill&&(c.globalAlpha=f.fillAlpha*d,c.fillStyle=\"#\"+(\"00000\"+(0|h).toString(16)).substr(-6),c.fill()),f.lineWidth&&(c.globalAlpha=f.lineAlpha*d,c.strokeStyle=\"#\"+(\"00000\"+(0|i).toString(16)).substr(-6),c.stroke());else if(f.type===b.Graphics.ELIP){var l=2*g.width,m=2*g.height,n=g.x-l/2,o=g.y-m/2;c.beginPath();var p=.5522848,q=l/2*p,r=m/2*p,s=n+l,t=o+m,u=n+l/2,v=o+m/2;c.moveTo(n,v),c.bezierCurveTo(n,v-r,u-q,o,u,o),c.bezierCurveTo(u+q,o,s,v-r,s,v),c.bezierCurveTo(s,v+r,u+q,t,u,t),c.bezierCurveTo(u-q,t,n,v+r,n,v),c.closePath(),f.fill&&(c.globalAlpha=f.fillAlpha*d,c.fillStyle=\"#\"+(\"00000\"+(0|h).toString(16)).substr(-6),c.fill()),f.lineWidth&&(c.globalAlpha=f.lineAlpha*d,c.strokeStyle=\"#\"+(\"00000\"+(0|i).toString(16)).substr(-6),c.stroke())}else if(f.type===b.Graphics.RREC){var w=g.x,x=g.y,y=g.width,z=g.height,A=g.radius,B=Math.min(y,z)/2|0;A=A>B?B:A,c.beginPath(),c.moveTo(w,x+A),c.lineTo(w,x+z-A),c.quadraticCurveTo(w,x+z,w+A,x+z),c.lineTo(w+y-A,x+z),c.quadraticCurveTo(w+y,x+z,w+y,x+z-A),c.lineTo(w+y,x+A),c.quadraticCurveTo(w+y,x,w+y-A,x),c.lineTo(w+A,x),c.quadraticCurveTo(w,x,w,x+A),c.closePath(),(f.fillColor||0===f.fillColor)&&(c.globalAlpha=f.fillAlpha*d,c.fillStyle=\"#\"+(\"00000\"+(0|h).toString(16)).substr(-6),c.fill()),f.lineWidth&&(c.globalAlpha=f.lineAlpha*d,c.strokeStyle=\"#\"+(\"00000\"+(0|i).toString(16)).substr(-6),c.stroke())}}},b.CanvasGraphics.renderGraphicsMask=function(a,c){var d=a.graphicsData.length;if(0!==d){d>1&&(d=1,window.console.log(\"Pixi.js warning: masks in canvas can only mask using the first path in the graphics object\"));for(var e=0;1>e;e++){var f=a.graphicsData[e],g=f.shape;if(f.type===b.Graphics.POLY){c.beginPath();var h=g.points;c.moveTo(h[0],h[1]);for(var i=1;i<h.length/2;i++)c.lineTo(h[2*i],h[2*i+1]);h[0]===h[h.length-2]&&h[1]===h[h.length-1]&&c.closePath()}else if(f.type===b.Graphics.RECT)c.beginPath(),c.rect(g.x,g.y,g.width,g.height),c.closePath();else if(f.type===b.Graphics.CIRC)c.beginPath(),c.arc(g.x,g.y,g.radius,0,2*Math.PI),c.closePath();else if(f.type===b.Graphics.ELIP){var j=2*g.width,k=2*g.height,l=g.x-j/2,m=g.y-k/2;c.beginPath();var n=.5522848,o=j/2*n,p=k/2*n,q=l+j,r=m+k,s=l+j/2,t=m+k/2;c.moveTo(l,t),c.bezierCurveTo(l,t-p,s-o,m,s,m),c.bezierCurveTo(s+o,m,q,t-p,q,t),c.bezierCurveTo(q,t+p,s+o,r,s,r),c.bezierCurveTo(s-o,r,l,t+p,l,t),c.closePath()}else if(f.type===b.Graphics.RREC){var u=g.points,v=u[0],w=u[1],x=u[2],y=u[3],z=u[4],A=Math.min(x,y)/2|0;z=z>A?A:z,c.beginPath(),c.moveTo(v,w+z),c.lineTo(v,w+y-z),c.quadraticCurveTo(v,w+y,v+z,w+y),c.lineTo(v+x-z,w+y),c.quadraticCurveTo(v+x,w+y,v+x,w+y-z),c.lineTo(v+x,w+z),c.quadraticCurveTo(v+x,w,v+x-z,w),c.lineTo(v+z,w),c.quadraticCurveTo(v,w,v,w+z),c.closePath()}}}},b.CanvasGraphics.updateGraphicsTint=function(a){if(16777215!==a.tint)for(var b=(a.tint>>16&255)/255,c=(a.tint>>8&255)/255,d=(255&a.tint)/255,e=0;e<a.graphicsData.length;e++){var f=a.graphicsData[e],g=0|f.fillColor,h=0|f.lineColor;f._fillTint=((g>>16&255)/255*b*255<<16)+((g>>8&255)/255*c*255<<8)+(255&g)/255*d*255,f._lineTint=((h>>16&255)/255*b*255<<16)+((h>>8&255)/255*c*255<<8)+(255&h)/255*d*255}},b.Graphics=function(){b.DisplayObjectContainer.call(this),this.renderable=!0,this.fillAlpha=1,this.lineWidth=0,this.lineColor=0,this.graphicsData=[],this.tint=16777215,this.blendMode=b.blendModes.NORMAL,this.currentPath=null,this._webGL=[],this.isMask=!1,this.boundsPadding=0,this._localBounds=new b.Rectangle(0,0,1,1),this.dirty=!0,this.webGLDirty=!1,this.cachedSpriteDirty=!1},b.Graphics.prototype=Object.create(b.DisplayObjectContainer.prototype),b.Graphics.prototype.constructor=b.Graphics,Object.defineProperty(b.Graphics.prototype,\"cacheAsBitmap\",{get:function(){return this._cacheAsBitmap},set:function(a){this._cacheAsBitmap=a,this._cacheAsBitmap?this._generateCachedSprite():(this.destroyCachedSprite(),this.dirty=!0)}}),b.Graphics.prototype.lineStyle=function(a,c,d){if(this.lineWidth=a||0,this.lineColor=c||0,this.lineAlpha=void 0===d?1:d,this.currentPath){if(this.currentPath.shape.points.length)return this.drawShape(new b.Polygon(this.currentPath.shape.points.slice(-2))),this;this.currentPath.lineWidth=this.lineWidth,this.currentPath.lineColor=this.lineColor,this.currentPath.lineAlpha=this.lineAlpha}return this},b.Graphics.prototype.moveTo=function(a,c){return this.drawShape(new b.Polygon([a,c])),this},b.Graphics.prototype.lineTo=function(a,b){return this.currentPath.shape.points.push(a,b),this.dirty=!0,this},b.Graphics.prototype.quadraticCurveTo=function(a,b,c,d){this.currentPath?0===this.currentPath.shape.points.length&&(this.currentPath.shape.points=[0,0]):this.moveTo(0,0);var e,f,g=20,h=this.currentPath.shape.points;0===h.length&&this.moveTo(0,0);for(var i=h[h.length-2],j=h[h.length-1],k=0,l=1;g>=l;l++)k=l/g,e=i+(a-i)*k,f=j+(b-j)*k,h.push(e+(a+(c-a)*k-e)*k,f+(b+(d-b)*k-f)*k);return this.dirty=!0,this},b.Graphics.prototype.bezierCurveTo=function(a,b,c,d,e,f){this.currentPath?0===this.currentPath.shape.points.length&&(this.currentPath.shape.points=[0,0]):this.moveTo(0,0);for(var g,h,i,j,k,l=20,m=this.currentPath.shape.points,n=m[m.length-2],o=m[m.length-1],p=0,q=1;l>=q;q++)p=q/l,g=1-p,h=g*g,i=h*g,j=p*p,k=j*p,m.push(i*n+3*h*p*a+3*g*j*c+k*e,i*o+3*h*p*b+3*g*j*d+k*f);return this.dirty=!0,this},b.Graphics.prototype.arcTo=function(a,b,c,d,e){this.currentPath?0===this.currentPath.shape.points.length&&this.currentPath.shape.points.push(a,b):this.moveTo(a,b);var f=this.currentPath.shape.points,g=f[f.length-2],h=f[f.length-1],i=h-b,j=g-a,k=d-b,l=c-a,m=Math.abs(i*l-j*k);if(1e-8>m||0===e)(f[f.length-2]!==a||f[f.length-1]!==b)&&f.push(a,b);else{var n=i*i+j*j,o=k*k+l*l,p=i*k+j*l,q=e*Math.sqrt(n)/m,r=e*Math.sqrt(o)/m,s=q*p/n,t=r*p/o,u=q*l+r*j,v=q*k+r*i,w=j*(r+s),x=i*(r+s),y=l*(q+t),z=k*(q+t),A=Math.atan2(x-v,w-u),B=Math.atan2(z-v,y-u);this.arc(u+a,v+b,e,A,B,j*k>l*i)}return this.dirty=!0,this},b.Graphics.prototype.arc=function(a,b,c,d,e,f){if(f=f||!1,d===e)return this;!f&&d>=e?e+=2*Math.PI:f&&e>=d&&(d+=2*Math.PI);var g=f?-1*(d-e):e-d,h=Math.abs(g)/(2*Math.PI)*40;if(0===g)return this;var i=a+Math.cos(d)*c,j=b+Math.sin(d)*c;f&&this.filling?this.moveTo(a,b):this.moveTo(i,j);for(var k=this.currentPath.shape.points,l=g/(2*h),m=2*l,n=Math.cos(l),o=Math.sin(l),p=h-1,q=p%1/p,r=0;p>=r;r++){var s=r+q*r,t=l+d+m*s,u=Math.cos(t),v=-Math.sin(t);k.push((n*u+o*v)*c+a,(n*-v+o*u)*c+b)}return this.dirty=!0,this},b.Graphics.prototype.beginFill=function(a,b){return this.filling=!0,this.fillColor=a||0,this.fillAlpha=void 0===b?1:b,this.currentPath&&this.currentPath.shape.points.length<=2&&(this.currentPath.fill=this.filling,this.currentPath.fillColor=this.fillColor,this.currentPath.fillAlpha=this.fillAlpha),this},b.Graphics.prototype.endFill=function(){return this.filling=!1,this.fillColor=null,this.fillAlpha=1,this},b.Graphics.prototype.drawRect=function(a,c,d,e){return this.drawShape(new b.Rectangle(a,c,d,e)),this},b.Graphics.prototype.drawRoundedRect=function(a,c,d,e,f){return this.drawShape(new b.RoundedRectangle(a,c,d,e,f)),this},b.Graphics.prototype.drawCircle=function(a,c,d){return this.drawShape(new b.Circle(a,c,d)),this},b.Graphics.prototype.drawEllipse=function(a,c,d,e){return this.drawShape(new b.Ellipse(a,c,d,e)),this},b.Graphics.prototype.drawPolygon=function(a){return a instanceof Array||(a=Array.prototype.slice.call(arguments)),this.drawShape(new b.Polygon(a)),this},b.Graphics.prototype.clear=function(){return this.lineWidth=0,this.filling=!1,this.dirty=!0,this.clearDirty=!0,this.graphicsData=[],this},b.Graphics.prototype.generateTexture=function(a,c){a=a||1;var d=this.getBounds(),e=new b.CanvasBuffer(d.width*a,d.height*a),f=b.Texture.fromCanvas(e.canvas,c);return f.baseTexture.resolution=a,e.context.scale(a,a),e.context.translate(-d.x,-d.y),b.CanvasGraphics.renderGraphics(this,e.context),f},b.Graphics.prototype._renderWebGL=function(a){if(this.visible!==!1&&0!==this.alpha&&this.isMask!==!0){if(this._cacheAsBitmap)return(this.dirty||this.cachedSpriteDirty)&&(this._generateCachedSprite(),this.updateCachedSpriteTexture(),this.cachedSpriteDirty=!1,this.dirty=!1),this._cachedSprite.worldAlpha=this.worldAlpha,void b.Sprite.prototype._renderWebGL.call(this._cachedSprite,a);if(a.spriteBatch.stop(),a.blendModeManager.setBlendMode(this.blendMode),this._mask&&a.maskManager.pushMask(this._mask,a),this._filters&&a.filterManager.pushFilter(this._filterBlock),this.blendMode!==a.spriteBatch.currentBlendMode){a.spriteBatch.currentBlendMode=this.blendMode;var c=b.blendModesWebGL[a.spriteBatch.currentBlendMode];a.spriteBatch.gl.blendFunc(c[0],c[1])}if(this.webGLDirty&&(this.dirty=!0,this.webGLDirty=!1),b.WebGLGraphics.renderGraphics(this,a),this.children.length){a.spriteBatch.start();for(var d=0,e=this.children.length;e>d;d++)this.children[d]._renderWebGL(a);a.spriteBatch.stop()}this._filters&&a.filterManager.popFilter(),this._mask&&a.maskManager.popMask(this.mask,a),a.drawCount++,a.spriteBatch.start()}},b.Graphics.prototype._renderCanvas=function(a){if(this.visible!==!1&&0!==this.alpha&&this.isMask!==!0){if(this._cacheAsBitmap)return(this.dirty||this.cachedSpriteDirty)&&(this._generateCachedSprite(),this.updateCachedSpriteTexture(),this.cachedSpriteDirty=!1,this.dirty=!1),this._cachedSprite.alpha=this.alpha,void b.Sprite.prototype._renderCanvas.call(this._cachedSprite,a);var c=a.context,d=this.worldTransform;this.blendMode!==a.currentBlendMode&&(a.currentBlendMode=this.blendMode,c.globalCompositeOperation=b.blendModesCanvas[a.currentBlendMode]),this._mask&&a.maskManager.pushMask(this._mask,a);var e=a.resolution;c.setTransform(d.a*e,d.b*e,d.c*e,d.d*e,d.tx*e,d.ty*e),b.CanvasGraphics.renderGraphics(this,c);for(var f=0,g=this.children.length;g>f;f++)this.children[f]._renderCanvas(a);this._mask&&a.maskManager.popMask(a)}},b.Graphics.prototype.getBounds=function(a){if(this.isMask)return b.EmptyRectangle;this.dirty&&(this.updateLocalBounds(),this.webGLDirty=!0,this.cachedSpriteDirty=!0,this.dirty=!1);var c=this._localBounds,d=c.x,e=c.width+c.x,f=c.y,g=c.height+c.y,h=a||this.worldTransform,i=h.a,j=h.b,k=h.c,l=h.d,m=h.tx,n=h.ty,o=i*e+k*g+m,p=l*g+j*e+n,q=i*d+k*g+m,r=l*g+j*d+n,s=i*d+k*f+m,t=l*f+j*d+n,u=i*e+k*f+m,v=l*f+j*e+n,w=o,x=p,y=o,z=p;return y=y>q?q:y,y=y>s?s:y,y=y>u?u:y,z=z>r?r:z,z=z>t?t:z,z=z>v?v:z,w=q>w?q:w,w=s>w?s:w,w=u>w?u:w,x=r>x?r:x,x=t>x?t:x,x=v>x?v:x,this._bounds.x=y,this._bounds.width=w-y,this._bounds.y=z,this._bounds.height=x-z,this._bounds},b.Graphics.prototype.updateLocalBounds=function(){var a=1/0,c=-(1/0),d=1/0,e=-(1/0);if(this.graphicsData.length)for(var f,g,h,i,j,k,l=0;l<this.graphicsData.length;l++){var m=this.graphicsData[l],n=m.type,o=m.lineWidth;if(f=m.shape,n===b.Graphics.RECT||n===b.Graphics.RREC)h=f.x-o/2,i=f.y-o/2,j=f.width+o,k=f.height+o,a=a>h?h:a,c=h+j>c?h+j:c,d=d>i?i:d,e=i+k>e?i+k:e;else if(n===b.Graphics.CIRC)h=f.x,i=f.y,j=f.radius+o/2,k=f.radius+o/2,a=a>h-j?h-j:a,c=h+j>c?h+j:c,d=d>i-k?i-k:d,e=i+k>e?i+k:e;else if(n===b.Graphics.ELIP)h=f.x,i=f.y,j=f.width+o/2,k=f.height+o/2,a=a>h-j?h-j:a,c=h+j>c?h+j:c,d=d>i-k?i-k:d,e=i+k>e?i+k:e;else{g=f.points;for(var p=0;p<g.length;p+=2)h=g[p],i=g[p+1],a=a>h-o?h-o:a,c=h+o>c?h+o:c,d=d>i-o?i-o:d,e=i+o>e?i+o:e}}else a=0,c=0,d=0,e=0;var q=this.boundsPadding;this._localBounds.x=a-q,this._localBounds.width=c-a+2*q,this._localBounds.y=d-q,this._localBounds.height=e-d+2*q},b.Graphics.prototype._generateCachedSprite=function(){var a=this.getLocalBounds();if(this._cachedSprite)this._cachedSprite.buffer.resize(a.width,a.height);else{var c=new b.CanvasBuffer(a.width,a.height),d=b.Texture.fromCanvas(c.canvas);this._cachedSprite=new b.Sprite(d),this._cachedSprite.buffer=c,this._cachedSprite.worldTransform=this.worldTransform}this._cachedSprite.anchor.x=-(a.x/a.width),this._cachedSprite.anchor.y=-(a.y/a.height),this._cachedSprite.buffer.context.translate(-a.x,-a.y),this.worldAlpha=1,b.CanvasGraphics.renderGraphics(this,this._cachedSprite.buffer.context),this._cachedSprite.alpha=this.alpha},b.Graphics.prototype.updateCachedSpriteTexture=function(){var a=this._cachedSprite,b=a.texture,c=a.buffer.canvas;b.baseTexture.width=c.width,b.baseTexture.height=c.height,b.crop.width=b.frame.width=c.width,b.crop.height=b.frame.height=c.height,a._width=c.width,a._height=c.height,b.baseTexture.dirty()},b.Graphics.prototype.destroyCachedSprite=function(){this._cachedSprite.texture.destroy(!0),this._cachedSprite=null},b.Graphics.prototype.drawShape=function(a){this.currentPath&&this.currentPath.shape.points.length<=2&&this.graphicsData.pop(),this.currentPath=null;var c=new b.GraphicsData(this.lineWidth,this.lineColor,this.lineAlpha,this.fillColor,this.fillAlpha,this.filling,a);return this.graphicsData.push(c),c.type===b.Graphics.POLY&&(c.shape.closed=this.filling,this.currentPath=c),this.dirty=!0,c},b.GraphicsData=function(a,b,c,d,e,f,g){this.lineWidth=a,this.lineColor=b,this.lineAlpha=c,this._lineTint=b,this.fillColor=d,this.fillAlpha=e,this._fillTint=d,this.fill=f,this.shape=g,this.type=g.type},b.Graphics.POLY=0,b.Graphics.RECT=1,b.Graphics.CIRC=2,b.Graphics.ELIP=3,b.Graphics.RREC=4,b.Polygon.prototype.type=b.Graphics.POLY,b.Rectangle.prototype.type=b.Graphics.RECT,b.Circle.prototype.type=b.Graphics.CIRC,b.Ellipse.prototype.type=b.Graphics.ELIP,b.RoundedRectangle.prototype.type=b.Graphics.RREC,b.Strip=function(a){b.DisplayObjectContainer.call(this),this.texture=a,this.uvs=new b.Float32Array([0,1,1,1,1,0,0,1]),this.vertices=new b.Float32Array([0,0,100,0,100,100,0,100]),this.colors=new b.Float32Array([1,1,1,1]),this.indices=new b.Uint16Array([0,1,2,3]),this.dirty=!0,this.blendMode=b.blendModes.NORMAL,this.canvasPadding=0,this.drawMode=b.Strip.DrawModes.TRIANGLE_STRIP},b.Strip.prototype=Object.create(b.DisplayObjectContainer.prototype),b.Strip.prototype.constructor=b.Strip,b.Strip.prototype._renderWebGL=function(a){!this.visible||this.alpha<=0||(a.spriteBatch.stop(),this._vertexBuffer||this._initWebGL(a),a.shaderManager.setShader(a.shaderManager.stripShader),this._renderStrip(a),a.spriteBatch.start())},b.Strip.prototype._initWebGL=function(a){var b=a.gl;this._vertexBuffer=b.createBuffer(),this._indexBuffer=b.createBuffer(),this._uvBuffer=b.createBuffer(),this._colorBuffer=b.createBuffer(),b.bindBuffer(b.ARRAY_BUFFER,this._vertexBuffer),b.bufferData(b.ARRAY_BUFFER,this.vertices,b.DYNAMIC_DRAW),b.bindBuffer(b.ARRAY_BUFFER,this._uvBuffer),b.bufferData(b.ARRAY_BUFFER,this.uvs,b.STATIC_DRAW),b.bindBuffer(b.ARRAY_BUFFER,this._colorBuffer),b.bufferData(b.ARRAY_BUFFER,this.colors,b.STATIC_DRAW),b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,this._indexBuffer),b.bufferData(b.ELEMENT_ARRAY_BUFFER,this.indices,b.STATIC_DRAW)},b.Strip.prototype._renderStrip=function(a){var c=a.gl,d=a.projection,e=a.offset,f=a.shaderManager.stripShader,g=this.drawMode===b.Strip.DrawModes.TRIANGLE_STRIP?c.TRIANGLE_STRIP:c.TRIANGLES;a.blendModeManager.setBlendMode(this.blendMode),c.uniformMatrix3fv(f.translationMatrix,!1,this.worldTransform.toArray(!0)),c.uniform2f(f.projectionVector,d.x,-d.y),c.uniform2f(f.offsetVector,-e.x,-e.y),c.uniform1f(f.alpha,this.worldAlpha),this.dirty?(this.dirty=!1,c.bindBuffer(c.ARRAY_BUFFER,this._vertexBuffer),c.bufferData(c.ARRAY_BUFFER,this.vertices,c.STATIC_DRAW),c.vertexAttribPointer(f.aVertexPosition,2,c.FLOAT,!1,0,0),c.bindBuffer(c.ARRAY_BUFFER,this._uvBuffer),c.bufferData(c.ARRAY_BUFFER,this.uvs,c.STATIC_DRAW),c.vertexAttribPointer(f.aTextureCoord,2,c.FLOAT,!1,0,0),c.activeTexture(c.TEXTURE0),this.texture.baseTexture._dirty[c.id]?a.renderer.updateTexture(this.texture.baseTexture):c.bindTexture(c.TEXTURE_2D,this.texture.baseTexture._glTextures[c.id]),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,this._indexBuffer),c.bufferData(c.ELEMENT_ARRAY_BUFFER,this.indices,c.STATIC_DRAW)):(c.bindBuffer(c.ARRAY_BUFFER,this._vertexBuffer),c.bufferSubData(c.ARRAY_BUFFER,0,this.vertices),c.vertexAttribPointer(f.aVertexPosition,2,c.FLOAT,!1,0,0),c.bindBuffer(c.ARRAY_BUFFER,this._uvBuffer),c.vertexAttribPointer(f.aTextureCoord,2,c.FLOAT,!1,0,0),c.activeTexture(c.TEXTURE0),this.texture.baseTexture._dirty[c.id]?a.renderer.updateTexture(this.texture.baseTexture):c.bindTexture(c.TEXTURE_2D,this.texture.baseTexture._glTextures[c.id]),c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,this._indexBuffer)),c.drawElements(g,this.indices.length,c.UNSIGNED_SHORT,0)},b.Strip.prototype._renderCanvas=function(a){var c=a.context,d=this.worldTransform;a.roundPixels?c.setTransform(d.a,d.b,d.c,d.d,0|d.tx,0|d.ty):c.setTransform(d.a,d.b,d.c,d.d,d.tx,d.ty),this.drawMode===b.Strip.DrawModes.TRIANGLE_STRIP?this._renderCanvasTriangleStrip(c):this._renderCanvasTriangles(c)},b.Strip.prototype._renderCanvasTriangleStrip=function(a){var b=this.vertices,c=this.uvs,d=b.length/2;this.count++;for(var e=0;d-2>e;e++){var f=2*e;this._renderCanvasDrawTriangle(a,b,c,f,f+2,f+4)}},b.Strip.prototype._renderCanvasTriangles=function(a){var b=this.vertices,c=this.uvs,d=this.indices,e=d.length;this.count++;for(var f=0;e>f;f+=3){var g=2*d[f],h=2*d[f+1],i=2*d[f+2];this._renderCanvasDrawTriangle(a,b,c,g,h,i)}},b.Strip.prototype._renderCanvasDrawTriangle=function(a,b,c,d,e,f){var g=this.texture.baseTexture.source,h=this.texture.width,i=this.texture.height,j=b[d],k=b[e],l=b[f],m=b[d+1],n=b[e+1],o=b[f+1],p=c[d]*h,q=c[e]*h,r=c[f]*h,s=c[d+1]*i,t=c[e+1]*i,u=c[f+1]*i;if(this.canvasPadding>0){var v=this.canvasPadding/this.worldTransform.a,w=this.canvasPadding/this.worldTransform.d,x=(j+k+l)/3,y=(m+n+o)/3,z=j-x,A=m-y,B=Math.sqrt(z*z+A*A);j=x+z/B*(B+v),m=y+A/B*(B+w),z=k-x,A=n-y,B=Math.sqrt(z*z+A*A),k=x+z/B*(B+v),n=y+A/B*(B+w),z=l-x,A=o-y,B=Math.sqrt(z*z+A*A),l=x+z/B*(B+v),o=y+A/B*(B+w)}a.save(),a.beginPath(),a.moveTo(j,m),a.lineTo(k,n),a.lineTo(l,o),a.closePath(),a.clip();var C=p*t+s*r+q*u-t*r-s*q-p*u,D=j*t+s*l+k*u-t*l-s*k-j*u,E=p*k+j*r+q*l-k*r-j*q-p*l,F=p*t*l+s*k*r+j*q*u-j*t*r-s*q*l-p*k*u,G=m*t+s*o+n*u-t*o-s*n-m*u,H=p*n+m*r+q*o-n*r-m*q-p*o,I=p*t*o+s*n*r+m*q*u-m*t*r-s*q*o-p*n*u;a.transform(D/C,G/C,E/C,H/C,F/C,I/C),a.drawImage(g,0,0),a.restore()},b.Strip.prototype.renderStripFlat=function(a){var b=this.context,c=a.vertices,d=c.length/2;this.count++,b.beginPath();for(var e=1;d-2>e;e++){var f=2*e,g=c[f],h=c[f+2],i=c[f+4],j=c[f+1],k=c[f+3],l=c[f+5];b.moveTo(g,j),b.lineTo(h,k),b.lineTo(i,l)}b.fillStyle=\"#FF0000\",b.fill(),b.closePath()},b.Strip.prototype.onTextureUpdate=function(){this.updateFrame=!0},b.Strip.prototype.getBounds=function(a){for(var c=a||this.worldTransform,d=c.a,e=c.b,f=c.c,g=c.d,h=c.tx,i=c.ty,j=-(1/0),k=-(1/0),l=1/0,m=1/0,n=this.vertices,o=0,p=n.length;p>o;o+=2){var q=n[o],r=n[o+1],s=d*q+f*r+h,t=g*r+e*q+i;l=l>s?s:l,m=m>t?t:m,j=s>j?s:j,k=t>k?t:k}if(l===-(1/0)||k===1/0)return b.EmptyRectangle;var u=this._bounds;return u.x=l,u.width=j-l,u.y=m,u.height=k-m,this._currentBounds=u,u},b.Strip.DrawModes={TRIANGLE_STRIP:0,TRIANGLES:1},b.Rope=function(a,c){b.Strip.call(this,a),this.points=c,this.vertices=new b.Float32Array(4*c.length),this.uvs=new b.Float32Array(4*c.length),this.colors=new b.Float32Array(2*c.length),this.indices=new b.Uint16Array(2*c.length),this.refresh()},b.Rope.prototype=Object.create(b.Strip.prototype),b.Rope.prototype.constructor=b.Rope,b.Rope.prototype.refresh=function(){var a=this.points;if(!(a.length<1)){var b=this.uvs,c=a[0],d=this.indices,e=this.colors;this.count-=.2,b[0]=0,b[1]=0,b[2]=0,b[3]=1,e[0]=1,e[1]=1,d[0]=0,d[1]=1;for(var f,g,h,i=a.length,j=1;i>j;j++)f=a[j],g=4*j,h=j/(i-1),j%2?(b[g]=h,b[g+1]=0,b[g+2]=h,b[g+3]=1):(b[g]=h,b[g+1]=0,b[g+2]=h,b[g+3]=1),g=2*j,e[g]=1,e[g+1]=1,g=2*j,d[g]=g,d[g+1]=g+1,c=f}},b.Rope.prototype.updateTransform=function(){var a=this.points;if(!(a.length<1)){var c,d=a[0],e={x:0,y:0};this.count-=.2;for(var f,g,h,i,j,k=this.vertices,l=a.length,m=0;l>m;m++)f=a[m],\ng=4*m,c=m<a.length-1?a[m+1]:f,e.y=-(c.x-d.x),e.x=c.y-d.y,h=10*(1-m/(l-1)),h>1&&(h=1),i=Math.sqrt(e.x*e.x+e.y*e.y),j=this.texture.height/2,e.x/=i,e.y/=i,e.x*=j,e.y*=j,k[g]=f.x+e.x,k[g+1]=f.y+e.y,k[g+2]=f.x-e.x,k[g+3]=f.y-e.y,d=f;b.DisplayObjectContainer.prototype.updateTransform.call(this)}},b.Rope.prototype.setTexture=function(a){this.texture=a},b.TilingSprite=function(a,c,d){b.Sprite.call(this,a),this._width=c||100,this._height=d||100,this.tileScale=new b.Point(1,1),this.tileScaleOffset=new b.Point(1,1),this.tilePosition=new b.Point(0,0),this.renderable=!0,this.tint=16777215,this.blendMode=b.blendModes.NORMAL},b.TilingSprite.prototype=Object.create(b.Sprite.prototype),b.TilingSprite.prototype.constructor=b.TilingSprite,Object.defineProperty(b.TilingSprite.prototype,\"width\",{get:function(){return this._width},set:function(a){this._width=a}}),Object.defineProperty(b.TilingSprite.prototype,\"height\",{get:function(){return this._height},set:function(a){this._height=a}}),b.TilingSprite.prototype.setTexture=function(a){this.texture!==a&&(this.texture=a,this.refreshTexture=!0,this.cachedTint=16777215)},b.TilingSprite.prototype._renderWebGL=function(a){if(this.visible!==!1&&0!==this.alpha){var b,c;for(this._mask&&(a.spriteBatch.stop(),a.maskManager.pushMask(this.mask,a),a.spriteBatch.start()),this._filters&&(a.spriteBatch.flush(),a.filterManager.pushFilter(this._filterBlock)),!this.tilingTexture||this.refreshTexture?(this.generateTilingTexture(!0),this.tilingTexture&&this.tilingTexture.needsUpdate&&(a.renderer.updateTexture(this.tilingTexture.baseTexture),this.tilingTexture.needsUpdate=!1)):a.spriteBatch.renderTilingSprite(this),b=0,c=this.children.length;c>b;b++)this.children[b]._renderWebGL(a);a.spriteBatch.stop(),this._filters&&a.filterManager.popFilter(),this._mask&&a.maskManager.popMask(this._mask,a),a.spriteBatch.start()}},b.TilingSprite.prototype._renderCanvas=function(a){if(this.visible!==!1&&0!==this.alpha){var c=a.context;this._mask&&a.maskManager.pushMask(this._mask,a),c.globalAlpha=this.worldAlpha;var d,e,f=this.worldTransform,g=a.resolution;if(c.setTransform(f.a*g,f.b*g,f.c*g,f.d*g,f.tx*g,f.ty*g),!this.__tilePattern||this.refreshTexture){if(this.generateTilingTexture(!1),!this.tilingTexture)return;this.__tilePattern=c.createPattern(this.tilingTexture.baseTexture.source,\"repeat\")}this.blendMode!==a.currentBlendMode&&(a.currentBlendMode=this.blendMode,c.globalCompositeOperation=b.blendModesCanvas[a.currentBlendMode]);var h=this.tilePosition,i=this.tileScale;for(h.x%=this.tilingTexture.baseTexture.width,h.y%=this.tilingTexture.baseTexture.height,c.scale(i.x,i.y),c.translate(h.x+this.anchor.x*-this._width,h.y+this.anchor.y*-this._height),c.fillStyle=this.__tilePattern,c.fillRect(-h.x,-h.y,this._width/i.x,this._height/i.y),c.scale(1/i.x,1/i.y),c.translate(-h.x+this.anchor.x*this._width,-h.y+this.anchor.y*this._height),this._mask&&a.maskManager.popMask(a),d=0,e=this.children.length;e>d;d++)this.children[d]._renderCanvas(a)}},b.TilingSprite.prototype.getBounds=function(){var a=this._width,b=this._height,c=a*(1-this.anchor.x),d=a*-this.anchor.x,e=b*(1-this.anchor.y),f=b*-this.anchor.y,g=this.worldTransform,h=g.a,i=g.b,j=g.c,k=g.d,l=g.tx,m=g.ty,n=h*d+j*f+l,o=k*f+i*d+m,p=h*c+j*f+l,q=k*f+i*c+m,r=h*c+j*e+l,s=k*e+i*c+m,t=h*d+j*e+l,u=k*e+i*d+m,v=-(1/0),w=-(1/0),x=1/0,y=1/0;x=x>n?n:x,x=x>p?p:x,x=x>r?r:x,x=x>t?t:x,y=y>o?o:y,y=y>q?q:y,y=y>s?s:y,y=y>u?u:y,v=n>v?n:v,v=p>v?p:v,v=r>v?r:v,v=t>v?t:v,w=o>w?o:w,w=q>w?q:w,w=s>w?s:w,w=u>w?u:w;var z=this._bounds;return z.x=x,z.width=v-x,z.y=y,z.height=w-y,this._currentBounds=z,z},b.TilingSprite.prototype.onTextureUpdate=function(){},b.TilingSprite.prototype.generateTilingTexture=function(a){if(this.texture.baseTexture.hasLoaded){var c,d,e=this.originalTexture||this.texture,f=e.frame,g=f.width!==e.baseTexture.width||f.height!==e.baseTexture.height,h=!1;if(a?(c=b.getNextPowerOfTwo(f.width),d=b.getNextPowerOfTwo(f.height),(f.width!==c||f.height!==d||e.baseTexture.width!==c||e.baseTexture.height||d)&&(h=!0)):g&&(e.trim?(c=e.trim.width,d=e.trim.height):(c=f.width,d=f.height),h=!0),h){var i;this.tilingTexture&&this.tilingTexture.isTiling?(i=this.tilingTexture.canvasBuffer,i.resize(c,d),this.tilingTexture.baseTexture.width=c,this.tilingTexture.baseTexture.height=d,this.tilingTexture.needsUpdate=!0):(i=new b.CanvasBuffer(c,d),this.tilingTexture=b.Texture.fromCanvas(i.canvas),this.tilingTexture.canvasBuffer=i,this.tilingTexture.isTiling=!0),i.context.drawImage(e.baseTexture.source,e.crop.x,e.crop.y,e.crop.width,e.crop.height,0,0,c,d),this.tileScaleOffset.x=f.width/c,this.tileScaleOffset.y=f.height/d}else this.tilingTexture&&this.tilingTexture.isTiling&&this.tilingTexture.destroy(!0),this.tileScaleOffset.x=1,this.tileScaleOffset.y=1,this.tilingTexture=e;this.refreshTexture=!1,this.originalTexture=this.texture,this.texture=this.tilingTexture,this.tilingTexture.baseTexture._powerOf2=!0}},b.TilingSprite.prototype.destroy=function(){b.Sprite.prototype.destroy.call(this),this.tileScale=null,this.tileScaleOffset=null,this.tilePosition=null,this.tilingTexture&&(this.tilingTexture.destroy(!0),this.tilingTexture=null)};var c={radDeg:180/Math.PI,degRad:Math.PI/180,temp:[],Float32Array:\"undefined\"==typeof Float32Array?Array:Float32Array,Uint16Array:\"undefined\"==typeof Uint16Array?Array:Uint16Array};c.BoneData=function(a,b){this.name=a,this.parent=b},c.BoneData.prototype={length:0,x:0,y:0,rotation:0,scaleX:1,scaleY:1,inheritScale:!0,inheritRotation:!0,flipX:!1,flipY:!1},c.SlotData=function(a,b){this.name=a,this.boneData=b},c.SlotData.prototype={r:1,g:1,b:1,a:1,attachmentName:null,additiveBlending:!1},c.IkConstraintData=function(a){this.name=a,this.bones=[]},c.IkConstraintData.prototype={target:null,bendDirection:1,mix:1},c.Bone=function(a,b,c){this.data=a,this.skeleton=b,this.parent=c,this.setToSetupPose()},c.Bone.yDown=!1,c.Bone.prototype={x:0,y:0,rotation:0,rotationIK:0,scaleX:1,scaleY:1,flipX:!1,flipY:!1,m00:0,m01:0,worldX:0,m10:0,m11:0,worldY:0,worldRotation:0,worldScaleX:1,worldScaleY:1,worldFlipX:!1,worldFlipY:!1,updateWorldTransform:function(){var a=this.parent;if(a)this.worldX=this.x*a.m00+this.y*a.m01+a.worldX,this.worldY=this.x*a.m10+this.y*a.m11+a.worldY,this.data.inheritScale?(this.worldScaleX=a.worldScaleX*this.scaleX,this.worldScaleY=a.worldScaleY*this.scaleY):(this.worldScaleX=this.scaleX,this.worldScaleY=this.scaleY),this.worldRotation=this.data.inheritRotation?a.worldRotation+this.rotationIK:this.rotationIK,this.worldFlipX=a.worldFlipX!=this.flipX,this.worldFlipY=a.worldFlipY!=this.flipY;else{var b=this.skeleton.flipX,d=this.skeleton.flipY;this.worldX=b?-this.x:this.x,this.worldY=d!=c.Bone.yDown?-this.y:this.y,this.worldScaleX=this.scaleX,this.worldScaleY=this.scaleY,this.worldRotation=this.rotationIK,this.worldFlipX=b!=this.flipX,this.worldFlipY=d!=this.flipY}var e=this.worldRotation*c.degRad,f=Math.cos(e),g=Math.sin(e);this.worldFlipX?(this.m00=-f*this.worldScaleX,this.m01=g*this.worldScaleY):(this.m00=f*this.worldScaleX,this.m01=-g*this.worldScaleY),this.worldFlipY!=c.Bone.yDown?(this.m10=-g*this.worldScaleX,this.m11=-f*this.worldScaleY):(this.m10=g*this.worldScaleX,this.m11=f*this.worldScaleY)},setToSetupPose:function(){var a=this.data;this.x=a.x,this.y=a.y,this.rotation=a.rotation,this.rotationIK=this.rotation,this.scaleX=a.scaleX,this.scaleY=a.scaleY,this.flipX=a.flipX,this.flipY=a.flipY},worldToLocal:function(a){var b=a[0]-this.worldX,d=a[1]-this.worldY,e=this.m00,f=this.m10,g=this.m01,h=this.m11;this.worldFlipX!=(this.worldFlipY!=c.Bone.yDown)&&(e=-e,h=-h);var i=1/(e*h-g*f);a[0]=b*e*i-d*g*i,a[1]=d*h*i-b*f*i},localToWorld:function(a){var b=a[0],c=a[1];a[0]=b*this.m00+c*this.m01+this.worldX,a[1]=b*this.m10+c*this.m11+this.worldY}},c.Slot=function(a,b){this.data=a,this.bone=b,this.setToSetupPose()},c.Slot.prototype={r:1,g:1,b:1,a:1,_attachmentTime:0,attachment:null,attachmentVertices:[],setAttachment:function(a){this.attachment=a,this._attachmentTime=this.bone.skeleton.time,this.attachmentVertices.length=0},setAttachmentTime:function(a){this._attachmentTime=this.bone.skeleton.time-a},getAttachmentTime:function(){return this.bone.skeleton.time-this._attachmentTime},setToSetupPose:function(){var a=this.data;this.r=a.r,this.g=a.g,this.b=a.b,this.a=a.a;for(var b=this.bone.skeleton.data.slots,c=0,d=b.length;d>c;c++)if(b[c]==a){this.setAttachment(a.attachmentName?this.bone.skeleton.getAttachmentBySlotIndex(c,a.attachmentName):null);break}}},c.IkConstraint=function(a,b){this.data=a,this.mix=a.mix,this.bendDirection=a.bendDirection,this.bones=[];for(var c=0,d=a.bones.length;d>c;c++)this.bones.push(b.findBone(a.bones[c].name));this.target=b.findBone(a.target.name)},c.IkConstraint.prototype={apply:function(){var a=this.target,b=this.bones;switch(b.length){case 1:c.IkConstraint.apply1(b[0],a.worldX,a.worldY,this.mix);break;case 2:c.IkConstraint.apply2(b[0],b[1],a.worldX,a.worldY,this.bendDirection,this.mix)}}},c.IkConstraint.apply1=function(a,b,d,e){var f=a.data.inheritRotation&&a.parent?a.parent.worldRotation:0,g=a.rotation,h=Math.atan2(d-a.worldY,b-a.worldX)*c.radDeg-f;a.rotationIK=g+(h-g)*e},c.IkConstraint.apply2=function(a,b,d,e,f,g){var h=b.rotation,i=a.rotation;if(!g)return b.rotationIK=h,void(a.rotationIK=i);var j,k,l=c.temp,m=a.parent;m?(l[0]=d,l[1]=e,m.worldToLocal(l),d=(l[0]-a.x)*m.worldScaleX,e=(l[1]-a.y)*m.worldScaleY):(d-=a.x,e-=a.y),b.parent==a?(j=b.x,k=b.y):(l[0]=b.x,l[1]=b.y,b.parent.localToWorld(l),a.worldToLocal(l),j=l[0],k=l[1]);var n=j*a.worldScaleX,o=k*a.worldScaleY,p=Math.atan2(o,n),q=Math.sqrt(n*n+o*o),r=b.data.length*b.worldScaleX,s=2*q*r;if(1e-4>s)return void(b.rotationIK=h+(Math.atan2(e,d)*c.radDeg-i-h)*g);var t=(d*d+e*e-q*q-r*r)/s;-1>t?t=-1:t>1&&(t=1);var u=Math.acos(t)*f,v=q+r*t,w=r*Math.sin(u),x=Math.atan2(e*v-d*w,d*v+e*w),y=(x-p)*c.radDeg-i;y>180?y-=360:-180>y&&(y+=360),a.rotationIK=i+y*g,y=(u+p)*c.radDeg-h,y>180?y-=360:-180>y&&(y+=360),b.rotationIK=h+(y+a.worldRotation-b.parent.worldRotation)*g},c.Skin=function(a){this.name=a,this.attachments={}},c.Skin.prototype={addAttachment:function(a,b,c){this.attachments[a+\":\"+b]=c},getAttachment:function(a,b){return this.attachments[a+\":\"+b]},_attachAll:function(a,b){for(var c in b.attachments){var d=c.indexOf(\":\"),e=parseInt(c.substring(0,d)),f=c.substring(d+1),g=a.slots[e];if(g.attachment&&g.attachment.name==f){var h=this.getAttachment(e,f);h&&g.setAttachment(h)}}}},c.Animation=function(a,b,c){this.name=a,this.timelines=b,this.duration=c},c.Animation.prototype={apply:function(a,b,c,d,e){d&&0!=this.duration&&(c%=this.duration,b%=this.duration);for(var f=this.timelines,g=0,h=f.length;h>g;g++)f[g].apply(a,b,c,e,1)},mix:function(a,b,c,d,e,f){d&&0!=this.duration&&(c%=this.duration,b%=this.duration);for(var g=this.timelines,h=0,i=g.length;i>h;h++)g[h].apply(a,b,c,e,f)}},c.Animation.binarySearch=function(a,b,c){var d=0,e=Math.floor(a.length/c)-2;if(!e)return c;for(var f=e>>>1;;){if(a[(f+1)*c]<=b?d=f+1:e=f,d==e)return(d+1)*c;f=d+e>>>1}},c.Animation.binarySearch1=function(a,b){var c=0,d=a.length-2;if(!d)return 1;for(var e=d>>>1;;){if(a[e+1]<=b?c=e+1:d=e,c==d)return c+1;e=c+d>>>1}},c.Animation.linearSearch=function(a,b,c){for(var d=0,e=a.length-c;e>=d;d+=c)if(a[d]>b)return d;return-1},c.Curves=function(a){this.curves=[]},c.Curves.prototype={setLinear:function(a){this.curves[19*a]=0},setStepped:function(a){this.curves[19*a]=1},setCurve:function(a,b,c,d,e){var f=.1,g=f*f,h=g*f,i=3*f,j=3*g,k=6*g,l=6*h,m=2*-b+d,n=2*-c+e,o=3*(b-d)+1,p=3*(c-e)+1,q=b*i+m*j+o*h,r=c*i+n*j+p*h,s=m*k+o*l,t=n*k+p*l,u=o*l,v=p*l,w=19*a,x=this.curves;x[w++]=2;for(var y=q,z=r,A=w+19-1;A>w;w+=2)x[w]=y,x[w+1]=z,q+=s,r+=t,s+=u,t+=v,y+=q,z+=r},getCurvePercent:function(a,b){b=0>b?0:b>1?1:b;var c=this.curves,d=19*a,e=c[d];if(0===e)return b;if(1==e)return 0;d++;for(var f=0,g=d,h=d+19-1;h>d;d+=2)if(f=c[d],f>=b){var i,j;return d==g?(i=0,j=0):(i=c[d-2],j=c[d-1]),j+(c[d+1]-j)*(b-i)/(f-i)}var k=c[d-1];return k+(1-k)*(b-f)/(1-f)}},c.RotateTimeline=function(a){this.curves=new c.Curves(a),this.frames=[],this.frames.length=2*a},c.RotateTimeline.prototype={boneIndex:0,getFrameCount:function(){return this.frames.length/2},setFrame:function(a,b,c){a*=2,this.frames[a]=b,this.frames[a+1]=c},apply:function(a,b,d,e,f){var g=this.frames;if(!(d<g[0])){var h=a.bones[this.boneIndex];if(d>=g[g.length-2]){for(var i=h.data.rotation+g[g.length-1]-h.rotation;i>180;)i-=360;for(;-180>i;)i+=360;return void(h.rotation+=i*f)}var j=c.Animation.binarySearch(g,d,2),k=g[j-1],l=g[j],m=1-(d-l)/(g[j-2]-l);m=this.curves.getCurvePercent(j/2-1,m);for(var i=g[j+1]-k;i>180;)i-=360;for(;-180>i;)i+=360;for(i=h.data.rotation+(k+i*m)-h.rotation;i>180;)i-=360;for(;-180>i;)i+=360;h.rotation+=i*f}}},c.TranslateTimeline=function(a){this.curves=new c.Curves(a),this.frames=[],this.frames.length=3*a},c.TranslateTimeline.prototype={boneIndex:0,getFrameCount:function(){return this.frames.length/3},setFrame:function(a,b,c,d){a*=3,this.frames[a]=b,this.frames[a+1]=c,this.frames[a+2]=d},apply:function(a,b,d,e,f){var g=this.frames;if(!(d<g[0])){var h=a.bones[this.boneIndex];if(d>=g[g.length-3])return h.x+=(h.data.x+g[g.length-2]-h.x)*f,void(h.y+=(h.data.y+g[g.length-1]-h.y)*f);var i=c.Animation.binarySearch(g,d,3),j=g[i-2],k=g[i-1],l=g[i],m=1-(d-l)/(g[i+-3]-l);m=this.curves.getCurvePercent(i/3-1,m),h.x+=(h.data.x+j+(g[i+1]-j)*m-h.x)*f,h.y+=(h.data.y+k+(g[i+2]-k)*m-h.y)*f}}},c.ScaleTimeline=function(a){this.curves=new c.Curves(a),this.frames=[],this.frames.length=3*a},c.ScaleTimeline.prototype={boneIndex:0,getFrameCount:function(){return this.frames.length/3},setFrame:function(a,b,c,d){a*=3,this.frames[a]=b,this.frames[a+1]=c,this.frames[a+2]=d},apply:function(a,b,d,e,f){var g=this.frames;if(!(d<g[0])){var h=a.bones[this.boneIndex];if(d>=g[g.length-3])return h.scaleX+=(h.data.scaleX*g[g.length-2]-h.scaleX)*f,void(h.scaleY+=(h.data.scaleY*g[g.length-1]-h.scaleY)*f);var i=c.Animation.binarySearch(g,d,3),j=g[i-2],k=g[i-1],l=g[i],m=1-(d-l)/(g[i+-3]-l);m=this.curves.getCurvePercent(i/3-1,m),h.scaleX+=(h.data.scaleX*(j+(g[i+1]-j)*m)-h.scaleX)*f,h.scaleY+=(h.data.scaleY*(k+(g[i+2]-k)*m)-h.scaleY)*f}}},c.ColorTimeline=function(a){this.curves=new c.Curves(a),this.frames=[],this.frames.length=5*a},c.ColorTimeline.prototype={slotIndex:0,getFrameCount:function(){return this.frames.length/5},setFrame:function(a,b,c,d,e,f){a*=5,this.frames[a]=b,this.frames[a+1]=c,this.frames[a+2]=d,this.frames[a+3]=e,this.frames[a+4]=f},apply:function(a,b,d,e,f){var g=this.frames;if(!(d<g[0])){var h,i,j,k;if(d>=g[g.length-5]){var l=g.length-1;h=g[l-3],i=g[l-2],j=g[l-1],k=g[l]}else{var m=c.Animation.binarySearch(g,d,5),n=g[m-4],o=g[m-3],p=g[m-2],q=g[m-1],r=g[m],s=1-(d-r)/(g[m-5]-r);s=this.curves.getCurvePercent(m/5-1,s),h=n+(g[m+1]-n)*s,i=o+(g[m+2]-o)*s,j=p+(g[m+3]-p)*s,k=q+(g[m+4]-q)*s}var t=a.slots[this.slotIndex];1>f?(t.r+=(h-t.r)*f,t.g+=(i-t.g)*f,t.b+=(j-t.b)*f,t.a+=(k-t.a)*f):(t.r=h,t.g=i,t.b=j,t.a=k)}}},c.AttachmentTimeline=function(a){this.curves=new c.Curves(a),this.frames=[],this.frames.length=a,this.attachmentNames=[],this.attachmentNames.length=a},c.AttachmentTimeline.prototype={slotIndex:0,getFrameCount:function(){return this.frames.length},setFrame:function(a,b,c){this.frames[a]=b,this.attachmentNames[a]=c},apply:function(a,b,d,e,f){var g=this.frames;if(d<g[0])return void(b>d&&this.apply(a,b,Number.MAX_VALUE,null,0));b>d&&(b=-1);var h=d>=g[g.length-1]?g.length-1:c.Animation.binarySearch1(g,d)-1;if(!(g[h]<b)){var i=this.attachmentNames[h];a.slots[this.slotIndex].setAttachment(i?a.getAttachmentBySlotIndex(this.slotIndex,i):null)}}},c.EventTimeline=function(a){this.frames=[],this.frames.length=a,this.events=[],this.events.length=a},c.EventTimeline.prototype={getFrameCount:function(){return this.frames.length},setFrame:function(a,b,c){this.frames[a]=b,this.events[a]=c},apply:function(a,b,d,e,f){if(e){var g=this.frames,h=g.length;if(b>d)this.apply(a,b,Number.MAX_VALUE,e,f),b=-1;else if(b>=g[h-1])return;if(!(d<g[0])){var i;if(b<g[0])i=0;else{i=c.Animation.binarySearch1(g,b);for(var j=g[i];i>0&&g[i-1]==j;)i--}for(var k=this.events;h>i&&d>=g[i];i++)e.push(k[i])}}}},c.DrawOrderTimeline=function(a){this.frames=[],this.frames.length=a,this.drawOrders=[],this.drawOrders.length=a},c.DrawOrderTimeline.prototype={getFrameCount:function(){return this.frames.length},setFrame:function(a,b,c){this.frames[a]=b,this.drawOrders[a]=c},apply:function(a,b,d,e,f){var g=this.frames;if(!(d<g[0])){var h;h=d>=g[g.length-1]?g.length-1:c.Animation.binarySearch1(g,d)-1;var i=a.drawOrder,j=(a.slots,this.drawOrders[h]);if(j)for(var k=0,l=j.length;l>k;k++)i[k]=j[k]}}},c.FfdTimeline=function(a){this.curves=new c.Curves(a),this.frames=[],this.frames.length=a,this.frameVertices=[],this.frameVertices.length=a},c.FfdTimeline.prototype={slotIndex:0,attachment:0,getFrameCount:function(){return this.frames.length},setFrame:function(a,b,c){this.frames[a]=b,this.frameVertices[a]=c},apply:function(a,b,d,e,f){var g=a.slots[this.slotIndex];if(g.attachment==this.attachment){var h=this.frames;if(!(d<h[0])){var i=this.frameVertices,j=i[0].length,k=g.attachmentVertices;if(k.length!=j&&(f=1),k.length=j,d>=h[h.length-1]){var l=i[h.length-1];if(1>f)for(var m=0;j>m;m++)k[m]+=(l[m]-k[m])*f;else for(var m=0;j>m;m++)k[m]=l[m]}else{var n=c.Animation.binarySearch1(h,d),o=h[n],p=1-(d-o)/(h[n-1]-o);p=this.curves.getCurvePercent(n-1,0>p?0:p>1?1:p);var q=i[n-1],r=i[n];if(1>f)for(var m=0;j>m;m++){var s=q[m];k[m]+=(s+(r[m]-s)*p-k[m])*f}else for(var m=0;j>m;m++){var s=q[m];k[m]=s+(r[m]-s)*p}}}}}},c.IkConstraintTimeline=function(a){this.curves=new c.Curves(a),this.frames=[],this.frames.length=3*a},c.IkConstraintTimeline.prototype={ikConstraintIndex:0,getFrameCount:function(){return this.frames.length/3},setFrame:function(a,b,c,d){a*=3,this.frames[a]=b,this.frames[a+1]=c,this.frames[a+2]=d},apply:function(a,b,d,e,f){var g=this.frames;if(!(d<g[0])){var h=a.ikConstraints[this.ikConstraintIndex];if(d>=g[g.length-3])return h.mix+=(g[g.length-2]-h.mix)*f,void(h.bendDirection=g[g.length-1]);var i=c.Animation.binarySearch(g,d,3),j=g[i+-2],k=g[i],l=1-(d-k)/(g[i+-3]-k);l=this.curves.getCurvePercent(i/3-1,l);var m=j+(g[i+1]-j)*l;h.mix+=(m-h.mix)*f,h.bendDirection=g[i+-1]}}},c.FlipXTimeline=function(a){this.curves=new c.Curves(a),this.frames=[],this.frames.length=2*a},c.FlipXTimeline.prototype={boneIndex:0,getFrameCount:function(){return this.frames.length/2},setFrame:function(a,b,c){a*=2,this.frames[a]=b,this.frames[a+1]=c?1:0},apply:function(a,b,d,e,f){var g=this.frames;if(d<g[0])return void(b>d&&this.apply(a,b,Number.MAX_VALUE,null,0));b>d&&(b=-1);var h=(d>=g[g.length-2]?g.length:c.Animation.binarySearch(g,d,2))-2;g[h]<b||(a.bones[this.boneIndex].flipX=0!=g[h+1])}},c.FlipYTimeline=function(a){this.curves=new c.Curves(a),this.frames=[],this.frames.length=2*a},c.FlipYTimeline.prototype={boneIndex:0,getFrameCount:function(){return this.frames.length/2},setFrame:function(a,b,c){a*=2,this.frames[a]=b,this.frames[a+1]=c?1:0},apply:function(a,b,d,e,f){var g=this.frames;if(d<g[0])return void(b>d&&this.apply(a,b,Number.MAX_VALUE,null,0));b>d&&(b=-1);var h=(d>=g[g.length-2]?g.length:c.Animation.binarySearch(g,d,2))-2;g[h]<b||(a.bones[this.boneIndex].flipY=0!=g[h+1])}},c.SkeletonData=function(){this.bones=[],this.slots=[],this.skins=[],this.events=[],this.animations=[],this.ikConstraints=[]},c.SkeletonData.prototype={name:null,defaultSkin:null,width:0,height:0,version:null,hash:null,findBone:function(a){for(var b=this.bones,c=0,d=b.length;d>c;c++)if(b[c].name==a)return b[c];return null},findBoneIndex:function(a){for(var b=this.bones,c=0,d=b.length;d>c;c++)if(b[c].name==a)return c;return-1},findSlot:function(a){for(var b=this.slots,c=0,d=b.length;d>c;c++)if(b[c].name==a)return slot[c];return null},findSlotIndex:function(a){for(var b=this.slots,c=0,d=b.length;d>c;c++)if(b[c].name==a)return c;return-1},findSkin:function(a){for(var b=this.skins,c=0,d=b.length;d>c;c++)if(b[c].name==a)return b[c];return null},findEvent:function(a){for(var b=this.events,c=0,d=b.length;d>c;c++)if(b[c].name==a)return b[c];return null},findAnimation:function(a){for(var b=this.animations,c=0,d=b.length;d>c;c++)if(b[c].name==a)return b[c];return null},findIkConstraint:function(a){for(var b=this.ikConstraints,c=0,d=b.length;d>c;c++)if(b[c].name==a)return b[c];return null}},c.Skeleton=function(a){this.data=a,this.bones=[];for(var b=0,d=a.bones.length;d>b;b++){var e=a.bones[b],f=e.parent?this.bones[a.bones.indexOf(e.parent)]:null;this.bones.push(new c.Bone(e,this,f))}this.slots=[],this.drawOrder=[];for(var b=0,d=a.slots.length;d>b;b++){var g=a.slots[b],h=this.bones[a.bones.indexOf(g.boneData)],i=new c.Slot(g,h);this.slots.push(i),this.drawOrder.push(b)}this.ikConstraints=[];for(var b=0,d=a.ikConstraints.length;d>b;b++)this.ikConstraints.push(new c.IkConstraint(a.ikConstraints[b],this));this.boneCache=[],this.updateCache()},c.Skeleton.prototype={x:0,y:0,skin:null,r:1,g:1,b:1,a:1,time:0,flipX:!1,flipY:!1,updateCache:function(){var a=this.ikConstraints,b=a.length,c=b+1,d=this.boneCache;d.length>c&&(d.length=c);for(var e=0,f=d.length;f>e;e++)d[e].length=0;for(;d.length<c;)d[d.length]=[];var g=d[0],h=this.bones;a:for(var e=0,f=h.length;f>e;e++){var i=h[e],j=i;do{for(var k=0;b>k;k++)for(var l=a[k],m=l.bones[0],n=l.bones[l.bones.length-1];;){if(j==n){d[k].push(i),d[k+1].push(i);continue a}if(n==m)break;n=n.parent}j=j.parent}while(j);g[g.length]=i}},updateWorldTransform:function(){for(var a=this.bones,b=0,c=a.length;c>b;b++){var d=a[b];d.rotationIK=d.rotation}for(var b=0,e=this.boneCache.length-1;;){for(var f=this.boneCache[b],g=0,h=f.length;h>g;g++)f[g].updateWorldTransform();if(b==e)break;this.ikConstraints[b].apply(),b++}},setToSetupPose:function(){this.setBonesToSetupPose(),this.setSlotsToSetupPose()},setBonesToSetupPose:function(){for(var a=this.bones,b=0,c=a.length;c>b;b++)a[b].setToSetupPose();for(var d=this.ikConstraints,b=0,c=d.length;c>b;b++){var e=d[b];e.bendDirection=e.data.bendDirection,e.mix=e.data.mix}},setSlotsToSetupPose:function(){for(var a=this.slots,b=0,c=a.length;c>b;b++)a[b].setToSetupPose(b);this.resetDrawOrder()},getRootBone:function(){return this.bones.length?this.bones[0]:null},findBone:function(a){for(var b=this.bones,c=0,d=b.length;d>c;c++)if(b[c].data.name==a)return b[c];return null},findBoneIndex:function(a){for(var b=this.bones,c=0,d=b.length;d>c;c++)if(b[c].data.name==a)return c;return-1},findSlot:function(a){for(var b=this.slots,c=0,d=b.length;d>c;c++)if(b[c].data.name==a)return b[c];return null},findSlotIndex:function(a){for(var b=this.slots,c=0,d=b.length;d>c;c++)if(b[c].data.name==a)return c;return-1},setSkinByName:function(a){var b=this.data.findSkin(a);if(!b)throw\"Skin not found: \"+a;this.setSkin(b)},setSkin:function(a){if(a)if(this.skin)a._attachAll(this,this.skin);else for(var b=this.slots,c=0,d=b.length;d>c;c++){var e=b[c],f=e.data.attachmentName;if(f){var g=a.getAttachment(c,f);g&&e.setAttachment(g)}}this.skin=a},getAttachmentBySlotName:function(a,b){return this.getAttachmentBySlotIndex(this.data.findSlotIndex(a),b)},getAttachmentBySlotIndex:function(a,b){if(this.skin){var c=this.skin.getAttachment(a,b);if(c)return c}return this.data.defaultSkin?this.data.defaultSkin.getAttachment(a,b):null},setAttachment:function(a,b){for(var c=this.slots,d=0,e=c.length;e>d;d++){var f=c[d];if(f.data.name==a){var g=null;if(b&&(g=this.getAttachmentBySlotIndex(d,b),!g))throw\"Attachment not found: \"+b+\", for slot: \"+a;return void f.setAttachment(g)}}throw\"Slot not found: \"+a},findIkConstraint:function(a){for(var b=this.ikConstraints,c=0,d=b.length;d>c;c++)if(b[c].data.name==a)return b[c];return null},update:function(a){this.time+=a},resetDrawOrder:function(){for(var a=0,b=this.drawOrder.length;b>a;a++)this.drawOrder[a]=a}},c.EventData=function(a){this.name=a},c.EventData.prototype={intValue:0,floatValue:0,stringValue:null},c.Event=function(a){this.data=a},c.Event.prototype={intValue:0,floatValue:0,stringValue:null},c.AttachmentType={region:0,boundingbox:1,mesh:2,skinnedmesh:3},c.RegionAttachment=function(a){this.name=a,this.offset=[],this.offset.length=8,this.uvs=[],this.uvs.length=8},c.RegionAttachment.prototype={type:c.AttachmentType.region,x:0,y:0,rotation:0,scaleX:1,scaleY:1,width:0,height:0,r:1,g:1,b:1,a:1,path:null,rendererObject:null,regionOffsetX:0,regionOffsetY:0,regionWidth:0,regionHeight:0,regionOriginalWidth:0,regionOriginalHeight:0,setUVs:function(a,b,c,d,e){var f=this.uvs;e?(f[2]=a,f[3]=d,f[4]=a,f[5]=b,f[6]=c,f[7]=b,f[0]=c,f[1]=d):(f[0]=a,f[1]=d,f[2]=a,f[3]=b,f[4]=c,f[5]=b,f[6]=c,f[7]=d)},updateOffset:function(){var a=this.width/this.regionOriginalWidth*this.scaleX,b=this.height/this.regionOriginalHeight*this.scaleY,d=-this.width/2*this.scaleX+this.regionOffsetX*a,e=-this.height/2*this.scaleY+this.regionOffsetY*b,f=d+this.regionWidth*a,g=e+this.regionHeight*b,h=this.rotation*c.degRad,i=Math.cos(h),j=Math.sin(h),k=d*i+this.x,l=d*j,m=e*i+this.y,n=e*j,o=f*i+this.x,p=f*j,q=g*i+this.y,r=g*j,s=this.offset;s[0]=k-n,s[1]=m+l,s[2]=k-r,s[3]=q+l,s[4]=o-r,s[5]=q+p,s[6]=o-n,s[7]=m+p},computeVertices:function(a,b,c,d){a+=c.worldX,b+=c.worldY;var e=c.m00,f=c.m01,g=c.m10,h=c.m11,i=this.offset;d[0]=i[0]*e+i[1]*f+a,d[1]=i[0]*g+i[1]*h+b,d[2]=i[2]*e+i[3]*f+a,d[3]=i[2]*g+i[3]*h+b,d[4]=i[4]*e+i[5]*f+a,d[5]=i[4]*g+i[5]*h+b,d[6]=i[6]*e+i[7]*f+a,d[7]=i[6]*g+i[7]*h+b}},c.MeshAttachment=function(a){this.name=a},c.MeshAttachment.prototype={type:c.AttachmentType.mesh,vertices:null,uvs:null,regionUVs:null,triangles:null,hullLength:0,r:1,g:1,b:1,a:1,path:null,rendererObject:null,regionU:0,regionV:0,regionU2:0,regionV2:0,regionRotate:!1,regionOffsetX:0,regionOffsetY:0,regionWidth:0,regionHeight:0,regionOriginalWidth:0,regionOriginalHeight:0,edges:null,width:0,height:0,updateUVs:function(){var a=this.regionU2-this.regionU,b=this.regionV2-this.regionV,d=this.regionUVs.length;if(this.uvs&&this.uvs.length==d||(this.uvs=new c.Float32Array(d)),this.regionRotate)for(var e=0;d>e;e+=2)this.uvs[e]=this.regionU+this.regionUVs[e+1]*a,this.uvs[e+1]=this.regionV+b-this.regionUVs[e]*b;else for(var e=0;d>e;e+=2)this.uvs[e]=this.regionU+this.regionUVs[e]*a,this.uvs[e+1]=this.regionV+this.regionUVs[e+1]*b},computeWorldVertices:function(a,b,c,d){var e=c.bone;a+=e.worldX,b+=e.worldY;var f=e.m00,g=e.m01,h=e.m10,i=e.m11,j=this.vertices,k=j.length;c.attachmentVertices.length==k&&(j=c.attachmentVertices);for(var l=0;k>l;l+=2){var m=j[l],n=j[l+1];d[l]=m*f+n*g+a,d[l+1]=m*h+n*i+b}}},c.SkinnedMeshAttachment=function(a){this.name=a},c.SkinnedMeshAttachment.prototype={type:c.AttachmentType.skinnedmesh,bones:null,weights:null,uvs:null,regionUVs:null,triangles:null,hullLength:0,r:1,g:1,b:1,a:1,path:null,rendererObject:null,regionU:0,regionV:0,regionU2:0,regionV2:0,regionRotate:!1,regionOffsetX:0,regionOffsetY:0,regionWidth:0,regionHeight:0,regionOriginalWidth:0,regionOriginalHeight:0,edges:null,width:0,height:0,updateUVs:function(a,b,d,e,f){var g=this.regionU2-this.regionU,h=this.regionV2-this.regionV,i=this.regionUVs.length;if(this.uvs&&this.uvs.length==i||(this.uvs=new c.Float32Array(i)),this.regionRotate)for(var j=0;i>j;j+=2)this.uvs[j]=this.regionU+this.regionUVs[j+1]*g,this.uvs[j+1]=this.regionV+h-this.regionUVs[j]*h;else for(var j=0;i>j;j+=2)this.uvs[j]=this.regionU+this.regionUVs[j]*g,this.uvs[j+1]=this.regionV+this.regionUVs[j+1]*h},computeWorldVertices:function(a,b,c,d){var e,f,g,h,i,j,k,l=c.bone.skeleton.bones,m=this.weights,n=this.bones,o=0,p=0,q=0,r=0,s=n.length;if(c.attachmentVertices.length)for(var t=c.attachmentVertices;s>p;o+=2){for(f=0,g=0,e=n[p++]+p;e>p;p++,q+=3,r+=2)h=l[n[p]],i=m[q]+t[r],j=m[q+1]+t[r+1],k=m[q+2],f+=(i*h.m00+j*h.m01+h.worldX)*k,g+=(i*h.m10+j*h.m11+h.worldY)*k;d[o]=f+a,d[o+1]=g+b}else for(;s>p;o+=2){for(f=0,g=0,e=n[p++]+p;e>p;p++,q+=3)h=l[n[p]],i=m[q],j=m[q+1],k=m[q+2],f+=(i*h.m00+j*h.m01+h.worldX)*k,g+=(i*h.m10+j*h.m11+h.worldY)*k;d[o]=f+a,d[o+1]=g+b}}},c.BoundingBoxAttachment=function(a){this.name=a,this.vertices=[]},c.BoundingBoxAttachment.prototype={type:c.AttachmentType.boundingbox,computeWorldVertices:function(a,b,c,d){a+=c.worldX,b+=c.worldY;for(var e=c.m00,f=c.m01,g=c.m10,h=c.m11,i=this.vertices,j=0,k=i.length;k>j;j+=2){var l=i[j],m=i[j+1];d[j]=l*e+m*f+a,d[j+1]=l*g+m*h+b}}},c.AnimationStateData=function(a){this.skeletonData=a,this.animationToMixTime={}},c.AnimationStateData.prototype={defaultMix:0,setMixByName:function(a,b,c){var d=this.skeletonData.findAnimation(a);if(!d)throw\"Animation not found: \"+a;var e=this.skeletonData.findAnimation(b);if(!e)throw\"Animation not found: \"+b;this.setMix(d,e,c)},setMix:function(a,b,c){this.animationToMixTime[a.name+\":\"+b.name]=c},getMix:function(a,b){var c=a.name+\":\"+b.name;return this.animationToMixTime.hasOwnProperty(c)?this.animationToMixTime[c]:this.defaultMix}},c.TrackEntry=function(){},c.TrackEntry.prototype={next:null,previous:null,animation:null,loop:!1,delay:0,time:0,lastTime:-1,endTime:0,timeScale:1,mixTime:0,mixDuration:0,mix:1,onStart:null,onEnd:null,onComplete:null,onEvent:null},c.AnimationState=function(a){this.data=a,this.tracks=[],this.events=[]},c.AnimationState.prototype={onStart:null,onEnd:null,onComplete:null,onEvent:null,timeScale:1,update:function(a){a*=this.timeScale;for(var b=0;b<this.tracks.length;b++){var c=this.tracks[b];if(c){if(c.time+=a*c.timeScale,c.previous){var d=a*c.previous.timeScale;c.previous.time+=d,c.mixTime+=d}var e=c.next;e?(e.time=c.lastTime-e.delay,e.time>=0&&this.setCurrent(b,e)):!c.loop&&c.lastTime>=c.endTime&&this.clearTrack(b)}}},apply:function(a){a.resetDrawOrder();for(var b=0;b<this.tracks.length;b++){var c=this.tracks[b];if(c){this.events.length=0;var d=c.time,e=c.lastTime,f=c.endTime,g=c.loop;!g&&d>f&&(d=f);var h=c.previous;if(h){var i=h.time;!h.loop&&i>h.endTime&&(i=h.endTime),h.animation.apply(a,i,i,h.loop,null);var j=c.mixTime/c.mixDuration*c.mix;j>=1&&(j=1,c.previous=null),c.animation.mix(a,c.lastTime,d,g,this.events,j)}else 1==c.mix?c.animation.apply(a,c.lastTime,d,g,this.events):c.animation.mix(a,c.lastTime,d,g,this.events,c.mix);for(var k=0,l=this.events.length;l>k;k++){var m=this.events[k];c.onEvent&&c.onEvent(b,m),this.onEvent&&this.onEvent(b,m)}if(g?e%f>d%f:f>e&&d>=f){var n=Math.floor(d/f);c.onComplete&&c.onComplete(b,n),this.onComplete&&this.onComplete(b,n)}c.lastTime=c.time}}},clearTracks:function(){for(var a=0,b=this.tracks.length;b>a;a++)this.clearTrack(a);this.tracks.length=0},clearTrack:function(a){if(!(a>=this.tracks.length)){var b=this.tracks[a];b&&(b.onEnd&&b.onEnd(a),this.onEnd&&this.onEnd(a),this.tracks[a]=null)}},_expandToIndex:function(a){if(a<this.tracks.length)return this.tracks[a];for(;a>=this.tracks.length;)this.tracks.push(null);return null},setCurrent:function(a,b){var c=this._expandToIndex(a);if(c){var d=c.previous;c.previous=null,c.onEnd&&c.onEnd(a),this.onEnd&&this.onEnd(a),b.mixDuration=this.data.getMix(c.animation,b.animation),b.mixDuration>0&&(b.mixTime=0,b.previous=d&&c.mixTime/c.mixDuration<.5?d:c)}this.tracks[a]=b,b.onStart&&b.onStart(a),this.onStart&&this.onStart(a)},setAnimationByName:function(a,b,c){var d=this.data.skeletonData.findAnimation(b);if(!d)throw\"Animation not found: \"+b;return this.setAnimation(a,d,c)},setAnimation:function(a,b,d){var e=new c.TrackEntry;return e.animation=b,e.loop=d,e.endTime=b.duration,this.setCurrent(a,e),e},addAnimationByName:function(a,b,c,d){var e=this.data.skeletonData.findAnimation(b);if(!e)throw\"Animation not found: \"+b;return this.addAnimation(a,e,c,d)},addAnimation:function(a,b,d,e){var f=new c.TrackEntry;f.animation=b,f.loop=d,f.endTime=b.duration;var g=this._expandToIndex(a);if(g){for(;g.next;)g=g.next;g.next=f}else this.tracks[a]=f;return 0>=e&&(g?e+=g.endTime-this.data.getMix(g.animation,b):e=0),f.delay=e,f},getCurrent:function(a){return a>=this.tracks.length?null:this.tracks[a]}},c.SkeletonJson=function(a){this.attachmentLoader=a},c.SkeletonJson.prototype={scale:1,readSkeletonData:function(a,b){var d=new c.SkeletonData;d.name=b;var e=a.skeleton;e&&(d.hash=e.hash,d.version=e.spine,d.width=e.width||0,d.height=e.height||0);for(var f=a.bones,g=0,h=f.length;h>g;g++){var i=f[g],j=null;if(i.parent&&(j=d.findBone(i.parent),!j))throw\"Parent bone not found: \"+i.parent;var k=new c.BoneData(i.name,j);\n\nk.length=(i.length||0)*this.scale,k.x=(i.x||0)*this.scale,k.y=(i.y||0)*this.scale,k.rotation=i.rotation||0,k.scaleX=i.hasOwnProperty(\"scaleX\")?i.scaleX:1,k.scaleY=i.hasOwnProperty(\"scaleY\")?i.scaleY:1,k.inheritScale=i.hasOwnProperty(\"inheritScale\")?i.inheritScale:!0,k.inheritRotation=i.hasOwnProperty(\"inheritRotation\")?i.inheritRotation:!0,d.bones.push(k)}var l=a.ik;if(l)for(var g=0,h=l.length;h>g;g++){for(var m=l[g],n=new c.IkConstraintData(m.name),f=m.bones,o=0,p=f.length;p>o;o++){var q=d.findBone(f[o]);if(!q)throw\"IK bone not found: \"+f[o];n.bones.push(q)}if(n.target=d.findBone(m.target),!n.target)throw\"Target bone not found: \"+m.target;n.bendDirection=!m.hasOwnProperty(\"bendPositive\")||m.bendPositive?1:-1,n.mix=m.hasOwnProperty(\"mix\")?m.mix:1,d.ikConstraints.push(n)}for(var r=a.slots,g=0,h=r.length;h>g;g++){var s=r[g],k=d.findBone(s.bone);if(!k)throw\"Slot bone not found: \"+s.bone;var t=new c.SlotData(s.name,k),u=s.color;u&&(t.r=this.toColor(u,0),t.g=this.toColor(u,1),t.b=this.toColor(u,2),t.a=this.toColor(u,3)),t.attachmentName=s.attachment,t.additiveBlending=s.additive&&\"true\"==s.additive,d.slots.push(t)}var v=a.skins;for(var w in v)if(v.hasOwnProperty(w)){var x=v[w],y=new c.Skin(w);for(var z in x)if(x.hasOwnProperty(z)){var A=d.findSlotIndex(z),B=x[z];for(var C in B)if(B.hasOwnProperty(C)){var D=this.readAttachment(y,C,B[C]);D&&y.addAttachment(A,C,D)}}d.skins.push(y),\"default\"==y.name&&(d.defaultSkin=y)}var E=a.events;for(var F in E)if(E.hasOwnProperty(F)){var G=E[F],H=new c.EventData(F);H.intValue=G[\"int\"]||0,H.floatValue=G[\"float\"]||0,H.stringValue=G.string||null,d.events.push(H)}var I=a.animations;for(var J in I)I.hasOwnProperty(J)&&this.readAnimation(J,I[J],d);return d},readAttachment:function(a,b,d){b=d.name||b;var e=c.AttachmentType[d.type||\"region\"],f=d.path||b,g=this.scale;if(e==c.AttachmentType.region){var h=this.attachmentLoader.newRegionAttachment(a,b,f);if(!h)return null;h.path=f,h.x=(d.x||0)*g,h.y=(d.y||0)*g,h.scaleX=d.hasOwnProperty(\"scaleX\")?d.scaleX:1,h.scaleY=d.hasOwnProperty(\"scaleY\")?d.scaleY:1,h.rotation=d.rotation||0,h.width=(d.width||0)*g,h.height=(d.height||0)*g;var i=d.color;return i&&(h.r=this.toColor(i,0),h.g=this.toColor(i,1),h.b=this.toColor(i,2),h.a=this.toColor(i,3)),h.updateOffset(),h}if(e==c.AttachmentType.mesh){var j=this.attachmentLoader.newMeshAttachment(a,b,f);return j?(j.path=f,j.vertices=this.getFloatArray(d,\"vertices\",g),j.triangles=this.getIntArray(d,\"triangles\"),j.regionUVs=this.getFloatArray(d,\"uvs\",1),j.updateUVs(),i=d.color,i&&(j.r=this.toColor(i,0),j.g=this.toColor(i,1),j.b=this.toColor(i,2),j.a=this.toColor(i,3)),j.hullLength=2*(d.hull||0),d.edges&&(j.edges=this.getIntArray(d,\"edges\")),j.width=(d.width||0)*g,j.height=(d.height||0)*g,j):null}if(e==c.AttachmentType.skinnedmesh){var j=this.attachmentLoader.newSkinnedMeshAttachment(a,b,f);if(!j)return null;j.path=f;for(var k=this.getFloatArray(d,\"uvs\",1),l=this.getFloatArray(d,\"vertices\",1),m=[],n=[],o=0,p=l.length;p>o;){var q=0|l[o++];n[n.length]=q;for(var r=o+4*q;r>o;)n[n.length]=l[o],m[m.length]=l[o+1]*g,m[m.length]=l[o+2]*g,m[m.length]=l[o+3],o+=4}return j.bones=n,j.weights=m,j.triangles=this.getIntArray(d,\"triangles\"),j.regionUVs=k,j.updateUVs(),i=d.color,i&&(j.r=this.toColor(i,0),j.g=this.toColor(i,1),j.b=this.toColor(i,2),j.a=this.toColor(i,3)),j.hullLength=2*(d.hull||0),d.edges&&(j.edges=this.getIntArray(d,\"edges\")),j.width=(d.width||0)*g,j.height=(d.height||0)*g,j}if(e==c.AttachmentType.boundingbox){for(var s=this.attachmentLoader.newBoundingBoxAttachment(a,b),l=d.vertices,o=0,p=l.length;p>o;o++)s.vertices.push(l[o]*g);return s}throw\"Unknown attachment type: \"+e},readAnimation:function(a,b,d){var e=[],f=0,g=b.slots;for(var h in g)if(g.hasOwnProperty(h)){var i=g[h],j=d.findSlotIndex(h);for(var k in i)if(i.hasOwnProperty(k)){var l=i[k];if(\"color\"==k){var m=new c.ColorTimeline(l.length);m.slotIndex=j;for(var n=0,o=0,p=l.length;p>o;o++){var q=l[o],r=q.color,s=this.toColor(r,0),t=this.toColor(r,1),u=this.toColor(r,2),v=this.toColor(r,3);m.setFrame(n,q.time,s,t,u,v),this.readCurve(m,n,q),n++}e.push(m),f=Math.max(f,m.frames[5*m.getFrameCount()-5])}else{if(\"attachment\"!=k)throw\"Invalid timeline type for a slot: \"+k+\" (\"+h+\")\";var m=new c.AttachmentTimeline(l.length);m.slotIndex=j;for(var n=0,o=0,p=l.length;p>o;o++){var q=l[o];m.setFrame(n++,q.time,q.name)}e.push(m),f=Math.max(f,m.frames[m.getFrameCount()-1])}}}var w=b.bones;for(var x in w)if(w.hasOwnProperty(x)){var y=d.findBoneIndex(x);if(-1==y)throw\"Bone not found: \"+x;var z=w[x];for(var k in z)if(z.hasOwnProperty(k)){var l=z[k];if(\"rotate\"==k){var m=new c.RotateTimeline(l.length);m.boneIndex=y;for(var n=0,o=0,p=l.length;p>o;o++){var q=l[o];m.setFrame(n,q.time,q.angle),this.readCurve(m,n,q),n++}e.push(m),f=Math.max(f,m.frames[2*m.getFrameCount()-2])}else if(\"translate\"==k||\"scale\"==k){var m,A=1;\"scale\"==k?m=new c.ScaleTimeline(l.length):(m=new c.TranslateTimeline(l.length),A=this.scale),m.boneIndex=y;for(var n=0,o=0,p=l.length;p>o;o++){var q=l[o],B=(q.x||0)*A,C=(q.y||0)*A;m.setFrame(n,q.time,B,C),this.readCurve(m,n,q),n++}e.push(m),f=Math.max(f,m.frames[3*m.getFrameCount()-3])}else{if(\"flipX\"!=k&&\"flipY\"!=k)throw\"Invalid timeline type for a bone: \"+k+\" (\"+x+\")\";var B=\"flipX\"==k,m=B?new c.FlipXTimeline(l.length):new c.FlipYTimeline(l.length);m.boneIndex=y;for(var D=B?\"x\":\"y\",n=0,o=0,p=l.length;p>o;o++){var q=l[o];m.setFrame(n,q.time,q[D]||!1),n++}e.push(m),f=Math.max(f,m.frames[2*m.getFrameCount()-2])}}}var E=b.ik;for(var F in E)if(E.hasOwnProperty(F)){var G=d.findIkConstraint(F),l=E[F],m=new c.IkConstraintTimeline(l.length);m.ikConstraintIndex=d.ikConstraints.indexOf(G);for(var n=0,o=0,p=l.length;p>o;o++){var q=l[o],H=q.hasOwnProperty(\"mix\")?q.mix:1,I=!q.hasOwnProperty(\"bendPositive\")||q.bendPositive?1:-1;m.setFrame(n,q.time,H,I),this.readCurve(m,n,q),n++}e.push(m),f=Math.max(f,m.frames[3*m.getFrameCount()-3])}var J=b.ffd;for(var K in J){var L=d.findSkin(K),i=J[K];for(h in i){var j=d.findSlotIndex(h),M=i[h];for(var N in M){var l=M[N],m=new c.FfdTimeline(l.length),O=L.getAttachment(j,N);if(!O)throw\"FFD attachment not found: \"+N;m.slotIndex=j,m.attachment=O;var P,Q=O.type==c.AttachmentType.mesh;P=Q?O.vertices.length:O.weights.length/3*2;for(var n=0,o=0,p=l.length;p>o;o++){var R,q=l[o];if(q.vertices){var S=q.vertices,R=[];R.length=P;var T=q.offset||0,U=S.length;if(1==this.scale)for(var V=0;U>V;V++)R[V+T]=S[V];else for(var V=0;U>V;V++)R[V+T]=S[V]*this.scale;if(Q)for(var W=O.vertices,V=0,U=R.length;U>V;V++)R[V]+=W[V]}else Q?R=O.vertices:(R=[],R.length=P);m.setFrame(n,q.time,R),this.readCurve(m,n,q),n++}e[e.length]=m,f=Math.max(f,m.frames[m.getFrameCount()-1])}}}var X=b.drawOrder;if(X||(X=b.draworder),X){for(var m=new c.DrawOrderTimeline(X.length),Y=d.slots.length,n=0,o=0,p=X.length;p>o;o++){var Z=X[o],$=null;if(Z.offsets){$=[],$.length=Y;for(var V=Y-1;V>=0;V--)$[V]=-1;var _=Z.offsets,aa=[];aa.length=Y-_.length;for(var ba=0,ca=0,V=0,U=_.length;U>V;V++){var da=_[V],j=d.findSlotIndex(da.slot);if(-1==j)throw\"Slot not found: \"+da.slot;for(;ba!=j;)aa[ca++]=ba++;$[ba+da.offset]=ba++}for(;Y>ba;)aa[ca++]=ba++;for(var V=Y-1;V>=0;V--)-1==$[V]&&($[V]=aa[--ca])}m.setFrame(n++,Z.time,$)}e.push(m),f=Math.max(f,m.frames[m.getFrameCount()-1])}var ea=b.events;if(ea){for(var m=new c.EventTimeline(ea.length),n=0,o=0,p=ea.length;p>o;o++){var fa=ea[o],ga=d.findEvent(fa.name);if(!ga)throw\"Event not found: \"+fa.name;var ha=new c.Event(ga);ha.intValue=fa.hasOwnProperty(\"int\")?fa[\"int\"]:ga.intValue,ha.floatValue=fa.hasOwnProperty(\"float\")?fa[\"float\"]:ga.floatValue,ha.stringValue=fa.hasOwnProperty(\"string\")?fa.string:ga.stringValue,m.setFrame(n++,fa.time,ha)}e.push(m),f=Math.max(f,m.frames[m.getFrameCount()-1])}d.animations.push(new c.Animation(a,e,f))},readCurve:function(a,b,c){var d=c.curve;d?\"stepped\"==d?a.curves.setStepped(b):d instanceof Array&&a.curves.setCurve(b,d[0],d[1],d[2],d[3]):a.curves.setLinear(b)},toColor:function(a,b){if(8!=a.length)throw\"Color hexidecimal length must be 8, recieved: \"+a;return parseInt(a.substring(2*b,2*b+2),16)/255},getFloatArray:function(a,b,d){var e=a[b],f=new c.Float32Array(e.length),g=0,h=e.length;if(1==d)for(;h>g;g++)f[g]=e[g];else for(;h>g;g++)f[g]=e[g]*d;return f},getIntArray:function(a,b){for(var d=a[b],e=new c.Uint16Array(d.length),f=0,g=d.length;g>f;f++)e[f]=0|d[f];return e}},c.Atlas=function(a,b){this.textureLoader=b,this.pages=[],this.regions=[];var d=new c.AtlasReader(a),e=[];e.length=4;for(var f=null;;){var g=d.readLine();if(null===g)break;if(g=d.trim(g),g.length)if(f){var h=new c.AtlasRegion;h.name=g,h.page=f,h.rotate=\"true\"==d.readValue(),d.readTuple(e);var i=parseInt(e[0]),j=parseInt(e[1]);d.readTuple(e);var k=parseInt(e[0]),l=parseInt(e[1]);h.u=i/f.width,h.v=j/f.height,h.rotate?(h.u2=(i+l)/f.width,h.v2=(j+k)/f.height):(h.u2=(i+k)/f.width,h.v2=(j+l)/f.height),h.x=i,h.y=j,h.width=Math.abs(k),h.height=Math.abs(l),4==d.readTuple(e)&&(h.splits=[parseInt(e[0]),parseInt(e[1]),parseInt(e[2]),parseInt(e[3])],4==d.readTuple(e)&&(h.pads=[parseInt(e[0]),parseInt(e[1]),parseInt(e[2]),parseInt(e[3])],d.readTuple(e))),h.originalWidth=parseInt(e[0]),h.originalHeight=parseInt(e[1]),d.readTuple(e),h.offsetX=parseInt(e[0]),h.offsetY=parseInt(e[1]),h.index=parseInt(d.readValue()),this.regions.push(h)}else{f=new c.AtlasPage,f.name=g,2==d.readTuple(e)&&(f.width=parseInt(e[0]),f.height=parseInt(e[1]),d.readTuple(e)),f.format=c.Atlas.Format[e[0]],d.readTuple(e),f.minFilter=c.Atlas.TextureFilter[e[0]],f.magFilter=c.Atlas.TextureFilter[e[1]];var m=d.readValue();f.uWrap=c.Atlas.TextureWrap.clampToEdge,f.vWrap=c.Atlas.TextureWrap.clampToEdge,\"x\"==m?f.uWrap=c.Atlas.TextureWrap.repeat:\"y\"==m?f.vWrap=c.Atlas.TextureWrap.repeat:\"xy\"==m&&(f.uWrap=f.vWrap=c.Atlas.TextureWrap.repeat),b.load(f,g,this),this.pages.push(f)}else f=null}},c.Atlas.prototype={findRegion:function(a){for(var b=this.regions,c=0,d=b.length;d>c;c++)if(b[c].name==a)return b[c];return null},dispose:function(){for(var a=this.pages,b=0,c=a.length;c>b;b++)this.textureLoader.unload(a[b].rendererObject)},updateUVs:function(a){for(var b=this.regions,c=0,d=b.length;d>c;c++){var e=b[c];e.page==a&&(e.u=e.x/a.width,e.v=e.y/a.height,e.rotate?(e.u2=(e.x+e.height)/a.width,e.v2=(e.y+e.width)/a.height):(e.u2=(e.x+e.width)/a.width,e.v2=(e.y+e.height)/a.height))}}},c.Atlas.Format={alpha:0,intensity:1,luminanceAlpha:2,rgb565:3,rgba4444:4,rgb888:5,rgba8888:6},c.Atlas.TextureFilter={nearest:0,linear:1,mipMap:2,mipMapNearestNearest:3,mipMapLinearNearest:4,mipMapNearestLinear:5,mipMapLinearLinear:6},c.Atlas.TextureWrap={mirroredRepeat:0,clampToEdge:1,repeat:2},c.AtlasPage=function(){},c.AtlasPage.prototype={name:null,format:null,minFilter:null,magFilter:null,uWrap:null,vWrap:null,rendererObject:null,width:0,height:0},c.AtlasRegion=function(){},c.AtlasRegion.prototype={page:null,name:null,x:0,y:0,width:0,height:0,u:0,v:0,u2:0,v2:0,offsetX:0,offsetY:0,originalWidth:0,originalHeight:0,index:0,rotate:!1,splits:null,pads:null},c.AtlasReader=function(a){this.lines=a.split(/\\r\\n|\\r|\\n/)},c.AtlasReader.prototype={index:0,trim:function(a){return a.replace(/^\\s+|\\s+$/g,\"\")},readLine:function(){return this.index>=this.lines.length?null:this.lines[this.index++]},readValue:function(){var a=this.readLine(),b=a.indexOf(\":\");if(-1==b)throw\"Invalid line: \"+a;return this.trim(a.substring(b+1))},readTuple:function(a){var b=this.readLine(),c=b.indexOf(\":\");if(-1==c)throw\"Invalid line: \"+b;for(var d=0,e=c+1;3>d;d++){var f=b.indexOf(\",\",e);if(-1==f)break;a[d]=this.trim(b.substr(e,f-e)),e=f+1}return a[d]=this.trim(b.substring(e)),d+1}},c.AtlasAttachmentLoader=function(a){this.atlas=a},c.AtlasAttachmentLoader.prototype={newRegionAttachment:function(a,b,d){var e=this.atlas.findRegion(d);if(!e)throw\"Region not found in atlas: \"+d+\" (region attachment: \"+b+\")\";var f=new c.RegionAttachment(b);return f.rendererObject=e,f.setUVs(e.u,e.v,e.u2,e.v2,e.rotate),f.regionOffsetX=e.offsetX,f.regionOffsetY=e.offsetY,f.regionWidth=e.width,f.regionHeight=e.height,f.regionOriginalWidth=e.originalWidth,f.regionOriginalHeight=e.originalHeight,f},newMeshAttachment:function(a,b,d){var e=this.atlas.findRegion(d);if(!e)throw\"Region not found in atlas: \"+d+\" (mesh attachment: \"+b+\")\";var f=new c.MeshAttachment(b);return f.rendererObject=e,f.regionU=e.u,f.regionV=e.v,f.regionU2=e.u2,f.regionV2=e.v2,f.regionRotate=e.rotate,f.regionOffsetX=e.offsetX,f.regionOffsetY=e.offsetY,f.regionWidth=e.width,f.regionHeight=e.height,f.regionOriginalWidth=e.originalWidth,f.regionOriginalHeight=e.originalHeight,f},newSkinnedMeshAttachment:function(a,b,d){var e=this.atlas.findRegion(d);if(!e)throw\"Region not found in atlas: \"+d+\" (skinned mesh attachment: \"+b+\")\";var f=new c.SkinnedMeshAttachment(b);return f.rendererObject=e,f.regionU=e.u,f.regionV=e.v,f.regionU2=e.u2,f.regionV2=e.v2,f.regionRotate=e.rotate,f.regionOffsetX=e.offsetX,f.regionOffsetY=e.offsetY,f.regionWidth=e.width,f.regionHeight=e.height,f.regionOriginalWidth=e.originalWidth,f.regionOriginalHeight=e.originalHeight,f},newBoundingBoxAttachment:function(a,b){return new c.BoundingBoxAttachment(b)}},c.SkeletonBounds=function(){this.polygonPool=[],this.polygons=[],this.boundingBoxes=[]},c.SkeletonBounds.prototype={minX:0,minY:0,maxX:0,maxY:0,update:function(a,b){var d=a.slots,e=d.length,f=a.x,g=a.y,h=this.boundingBoxes,i=this.polygonPool,j=this.polygons;h.length=0;for(var k=0,l=j.length;l>k;k++)i.push(j[k]);j.length=0;for(var k=0;e>k;k++){var m=d[k],n=m.attachment;if(n.type==c.AttachmentType.boundingbox){h.push(n);var o,p=i.length;p>0?(o=i[p-1],i.splice(p-1,1)):o=[],j.push(o),o.length=n.vertices.length,n.computeWorldVertices(f,g,m.bone,o)}}b&&this.aabbCompute()},aabbCompute:function(){for(var a=this.polygons,b=Number.MAX_VALUE,c=Number.MAX_VALUE,d=Number.MIN_VALUE,e=Number.MIN_VALUE,f=0,g=a.length;g>f;f++)for(var h=a[f],i=0,j=h.length;j>i;i+=2){var k=h[i],l=h[i+1];b=Math.min(b,k),c=Math.min(c,l),d=Math.max(d,k),e=Math.max(e,l)}this.minX=b,this.minY=c,this.maxX=d,this.maxY=e},aabbContainsPoint:function(a,b){return a>=this.minX&&a<=this.maxX&&b>=this.minY&&b<=this.maxY},aabbIntersectsSegment:function(a,b,c,d){var e=this.minX,f=this.minY,g=this.maxX,h=this.maxY;if(e>=a&&e>=c||f>=b&&f>=d||a>=g&&c>=g||b>=h&&d>=h)return!1;var i=(d-b)/(c-a),j=i*(e-a)+b;if(j>f&&h>j)return!0;if(j=i*(g-a)+b,j>f&&h>j)return!0;var k=(f-b)/i+a;return k>e&&g>k?!0:(k=(h-b)/i+a,k>e&&g>k?!0:!1)},aabbIntersectsSkeleton:function(a){return this.minX<a.maxX&&this.maxX>a.minX&&this.minY<a.maxY&&this.maxY>a.minY},containsPoint:function(a,b){for(var c=this.polygons,d=0,e=c.length;e>d;d++)if(this.polygonContainsPoint(c[d],a,b))return this.boundingBoxes[d];return null},intersectsSegment:function(a,b,c,d){for(var e=this.polygons,f=0,g=e.length;g>f;f++)if(e[f].intersectsSegment(a,b,c,d))return this.boundingBoxes[f];return null},polygonContainsPoint:function(a,b,c){for(var d=a.length,e=d-2,f=!1,g=0;d>g;g+=2){var h=a[g+1],i=a[e+1];if(c>h&&i>=c||c>i&&h>=c){var j=a[g];j+(c-h)/(i-h)*(a[e]-j)<b&&(f=!f)}e=g}return f},polygonIntersectsSegment:function(a,b,c,d,e){for(var f=a.length,g=b-d,h=c-e,i=b*e-c*d,j=a[f-2],k=a[f-1],l=0;f>l;l+=2){var m=a[l],n=a[l+1],o=j*n-k*m,p=j-m,q=k-n,r=g*q-h*p,s=(i*p-g*o)/r;if((s>=j&&m>=s||s>=m&&j>=s)&&(s>=b&&d>=s||s>=d&&b>=s)){var t=(i*q-h*o)/r;if((t>=k&&n>=t||t>=n&&k>=t)&&(t>=c&&e>=t||t>=e&&c>=t))return!0}j=m,k=n}return!1},getPolygon:function(a){var b=this.boundingBoxes.indexOf(a);return-1==b?null:this.polygons[b]},getWidth:function(){return this.maxX-this.minX},getHeight:function(){return this.maxY-this.minY}},c.Bone.yDown=!0,b.AnimCache={},b.SpineTextureLoader=function(a,c){b.EventTarget.call(this),this.basePath=a,this.crossorigin=c,this.loadingCount=0},b.SpineTextureLoader.prototype=b.SpineTextureLoader,b.SpineTextureLoader.prototype.load=function(a,c){if(a.rendererObject=b.BaseTexture.fromImage(this.basePath+\"/\"+c,this.crossorigin),!a.rendererObject.hasLoaded){var d=this;++d.loadingCount,a.rendererObject.addEventListener(\"loaded\",function(){--d.loadingCount,d.dispatchEvent({type:\"loadedBaseTexture\",content:d})})}},b.SpineTextureLoader.prototype.unload=function(a){a.destroy(!0)},b.Spine=function(a){if(b.DisplayObjectContainer.call(this),this.spineData=b.AnimCache[a],!this.spineData)throw new Error(\"Spine data must be preloaded using PIXI.SpineLoader or PIXI.AssetLoader: \"+a);this.skeleton=new c.Skeleton(this.spineData),this.skeleton.updateWorldTransform(),this.stateData=new c.AnimationStateData(this.spineData),this.state=new c.AnimationState(this.stateData),this.slotContainers=[];for(var d=0,e=this.skeleton.slots.length;e>d;d++){var f=this.skeleton.slots[d],g=f.attachment,h=new b.DisplayObjectContainer;if(this.slotContainers.push(h),this.addChild(h),g instanceof c.RegionAttachment){var i=g.rendererObject.name,j=this.createSprite(f,g);f.currentSprite=j,f.currentSpriteName=i,h.addChild(j)}else{if(!(g instanceof c.MeshAttachment))continue;var k=this.createMesh(f,g);f.currentMesh=k,f.currentMeshName=g.name,h.addChild(k)}}this.autoUpdate=!0},b.Spine.prototype=Object.create(b.DisplayObjectContainer.prototype),b.Spine.prototype.constructor=b.Spine,Object.defineProperty(b.Spine.prototype,\"autoUpdate\",{get:function(){return this.updateTransform===b.Spine.prototype.autoUpdateTransform},set:function(a){this.updateTransform=a?b.Spine.prototype.autoUpdateTransform:b.DisplayObjectContainer.prototype.updateTransform}}),b.Spine.prototype.update=function(a){this.state.update(a),this.state.apply(this.skeleton),this.skeleton.updateWorldTransform();for(var d=this.skeleton.drawOrder,e=this.skeleton.slots,f=0,g=d.length;g>f;f++)this.children[f]=this.slotContainers[d[f]];for(f=0,g=e.length;g>f;f++){var h=e[f],i=h.attachment,j=this.slotContainers[f];if(i){var k=i.type;if(k===c.AttachmentType.region){if(i.rendererObject&&(!h.currentSpriteName||h.currentSpriteName!==i.name)){var l=i.rendererObject.name;if(void 0!==h.currentSprite&&(h.currentSprite.visible=!1),h.sprites=h.sprites||{},void 0!==h.sprites[l])h.sprites[l].visible=!0;else{var m=this.createSprite(h,i);j.addChild(m)}h.currentSprite=h.sprites[l],h.currentSpriteName=l}var n=h.bone;j.position.x=n.worldX+i.x*n.m00+i.y*n.m01,j.position.y=n.worldY+i.x*n.m10+i.y*n.m11,j.scale.x=n.worldScaleX,j.scale.y=n.worldScaleY,j.rotation=-(h.bone.worldRotation*c.degRad),h.currentSprite.tint=b.rgb2hex([h.r,h.g,h.b])}else{if(k!==c.AttachmentType.skinnedmesh){j.visible=!1;continue}if(!h.currentMeshName||h.currentMeshName!==i.name){var o=i.name;if(void 0!==h.currentMesh&&(h.currentMesh.visible=!1),h.meshes=h.meshes||{},void 0!==h.meshes[o])h.meshes[o].visible=!0;else{var p=this.createMesh(h,i);j.addChild(p)}h.currentMesh=h.meshes[o],h.currentMeshName=o}i.computeWorldVertices(h.bone.skeleton.x,h.bone.skeleton.y,h,h.currentMesh.vertices)}j.visible=!0,j.alpha=h.a}else j.visible=!1}},b.Spine.prototype.autoUpdateTransform=function(){this.lastTime=this.lastTime||Date.now();var a=.001*(Date.now()-this.lastTime);this.lastTime=Date.now(),this.update(a),b.DisplayObjectContainer.prototype.updateTransform.call(this)},b.Spine.prototype.createSprite=function(a,d){var e=d.rendererObject,f=e.page.rendererObject,g=new b.Rectangle(e.x,e.y,e.rotate?e.height:e.width,e.rotate?e.width:e.height),h=new b.Texture(f,g),i=new b.Sprite(h),j=e.rotate?.5*Math.PI:0;return i.scale.set(e.width/e.originalWidth*d.scaleX,e.height/e.originalHeight*d.scaleY),i.rotation=j-d.rotation*c.degRad,i.anchor.x=i.anchor.y=.5,i.alpha=d.a,a.sprites=a.sprites||{},a.sprites[e.name]=i,i},b.Spine.prototype.createMesh=function(a,c){var d=c.rendererObject,e=d.page.rendererObject,f=new b.Texture(e),g=new b.Strip(f);return g.drawMode=b.Strip.DrawModes.TRIANGLES,g.canvasPadding=1.5,g.vertices=new b.Float32Array(c.uvs.length),g.uvs=c.uvs,g.indices=c.triangles,g.alpha=c.a,a.meshes=a.meshes||{},a.meshes[c.name]=g,g},b.BaseTextureCache={},b.BaseTextureCacheIdGenerator=0,b.BaseTexture=function(a,c){if(this.resolution=1,this.width=100,this.height=100,this.scaleMode=c||b.scaleModes.DEFAULT,this.hasLoaded=!1,this.source=a,this._UID=b._UID++,this.premultipliedAlpha=!0,this._glTextures=[],this.mipmap=!1,this._dirty=[!0,!0,!0,!0],a){if((this.source.complete||this.source.getContext)&&this.source.width&&this.source.height)this.hasLoaded=!0,this.width=this.source.naturalWidth||this.source.width,this.height=this.source.naturalHeight||this.source.height,this.dirty();else{var d=this;this.source.onload=function(){d.hasLoaded=!0,d.width=d.source.naturalWidth||d.source.width,d.height=d.source.naturalHeight||d.source.height,d.dirty(),d.dispatchEvent({type:\"loaded\",content:d})},this.source.onerror=function(){d.dispatchEvent({type:\"error\",content:d})}}this.imageUrl=null,this._powerOf2=!1}},b.BaseTexture.prototype.constructor=b.BaseTexture,b.EventTarget.mixin(b.BaseTexture.prototype),b.BaseTexture.prototype.destroy=function(){this.imageUrl?(delete b.BaseTextureCache[this.imageUrl],delete b.TextureCache[this.imageUrl],this.imageUrl=null,navigator.isCocoonJS||(this.source.src=\"\")):this.source&&this.source._pixiId&&delete b.BaseTextureCache[this.source._pixiId],this.source=null,this.unloadFromGPU()},b.BaseTexture.prototype.updateSourceImage=function(a){this.hasLoaded=!1,this.source.src=null,this.source.src=a},b.BaseTexture.prototype.dirty=function(){for(var a=0;a<this._glTextures.length;a++)this._dirty[a]=!0},b.BaseTexture.prototype.unloadFromGPU=function(){this.dirty();for(var a=this._glTextures.length-1;a>=0;a--){var c=this._glTextures[a],d=b.glContexts[a];d&&c&&d.deleteTexture(c)}this._glTextures.length=0,this.dirty()},b.BaseTexture.fromImage=function(a,c,d){var e=b.BaseTextureCache[a];if(void 0===c&&-1===a.indexOf(\"data:\")&&(c=!0),!e){var f=new Image;c&&(f.crossOrigin=\"\"),f.src=a,e=new b.BaseTexture(f,d),e.imageUrl=a,b.BaseTextureCache[a]=e,-1!==a.indexOf(b.RETINA_PREFIX+\".\")&&(e.resolution=2)}return e},b.BaseTexture.fromCanvas=function(a,c){a._pixiId||(a._pixiId=\"canvas_\"+b.TextureCacheIdGenerator++);var d=b.BaseTextureCache[a._pixiId];return d||(d=new b.BaseTexture(a,c),b.BaseTextureCache[a._pixiId]=d),d},b.TextureCache={},b.FrameCache={},b.TextureCacheIdGenerator=0,b.Texture=function(a,c,d,e){this.noFrame=!1,c||(this.noFrame=!0,c=new b.Rectangle(0,0,1,1)),a instanceof b.Texture&&(a=a.baseTexture),this.baseTexture=a,this.frame=c,this.trim=e,this.valid=!1,this.requiresUpdate=!1,this._uvs=null,this.width=0,this.height=0,this.crop=d||new b.Rectangle(0,0,1,1),a.hasLoaded?(this.noFrame&&(c=new b.Rectangle(0,0,a.width,a.height)),this.setFrame(c)):a.addEventListener(\"loaded\",this.onBaseTextureLoaded.bind(this))},b.Texture.prototype.constructor=b.Texture,b.EventTarget.mixin(b.Texture.prototype),b.Texture.prototype.onBaseTextureLoaded=function(){var a=this.baseTexture;a.removeEventListener(\"loaded\",this.onLoaded),this.noFrame&&(this.frame=new b.Rectangle(0,0,a.width,a.height)),this.setFrame(this.frame),this.dispatchEvent({type:\"update\",content:this})},b.Texture.prototype.destroy=function(a){a&&this.baseTexture.destroy(),this.valid=!1},b.Texture.prototype.setFrame=function(a){if(this.noFrame=!1,this.frame=a,this.width=a.width,this.height=a.height,this.crop.x=a.x,this.crop.y=a.y,this.crop.width=a.width,this.crop.height=a.height,!this.trim&&(a.x+a.width>this.baseTexture.width||a.y+a.height>this.baseTexture.height))throw new Error(\"Texture Error: frame does not fit inside the base Texture dimensions \"+this);this.valid=a&&a.width&&a.height&&this.baseTexture.source&&this.baseTexture.hasLoaded,this.trim&&(this.width=this.trim.width,this.height=this.trim.height,this.frame.width=this.trim.width,this.frame.height=this.trim.height),this.valid&&this._updateUvs()},b.Texture.prototype._updateUvs=function(){this._uvs||(this._uvs=new b.TextureUvs);var a=this.crop,c=this.baseTexture.width,d=this.baseTexture.height;this._uvs.x0=a.x/c,this._uvs.y0=a.y/d,this._uvs.x1=(a.x+a.width)/c,this._uvs.y1=a.y/d,this._uvs.x2=(a.x+a.width)/c,this._uvs.y2=(a.y+a.height)/d,this._uvs.x3=a.x/c,this._uvs.y3=(a.y+a.height)/d},b.Texture.fromImage=function(a,c,d){var e=b.TextureCache[a];return e||(e=new b.Texture(b.BaseTexture.fromImage(a,c,d)),b.TextureCache[a]=e),e},b.Texture.fromFrame=function(a){var c=b.TextureCache[a];if(!c)throw new Error('The frameId \"'+a+'\" does not exist in the texture cache ');return c},b.Texture.fromCanvas=function(a,c){var d=b.BaseTexture.fromCanvas(a,c);return new b.Texture(d)},b.Texture.addTextureToCache=function(a,c){b.TextureCache[c]=a},b.Texture.removeTextureFromCache=function(a){var c=b.TextureCache[a];return delete b.TextureCache[a],delete b.BaseTextureCache[a],c},b.TextureUvs=function(){this.x0=0,this.y0=0,this.x1=0,this.y1=0,this.x2=0,this.y2=0,this.x3=0,this.y3=0},b.Texture.emptyTexture=new b.Texture(new b.BaseTexture),b.RenderTexture=function(a,c,d,e,f){if(this.width=a||100,this.height=c||100,this.resolution=f||1,this.frame=new b.Rectangle(0,0,this.width*this.resolution,this.height*this.resolution),this.crop=new b.Rectangle(0,0,this.width*this.resolution,this.height*this.resolution),this.baseTexture=new b.BaseTexture,this.baseTexture.width=this.width*this.resolution,this.baseTexture.height=this.height*this.resolution,this.baseTexture._glTextures=[],this.baseTexture.resolution=this.resolution,this.baseTexture.scaleMode=e||b.scaleModes.DEFAULT,this.baseTexture.hasLoaded=!0,b.Texture.call(this,this.baseTexture,new b.Rectangle(0,0,this.width*this.resolution,this.height*this.resolution)),this.renderer=d||b.defaultRenderer,this.renderer.type===b.WEBGL_RENDERER){var g=this.renderer.gl;this.baseTexture._dirty[g.id]=!1,this.textureBuffer=new b.FilterTexture(g,this.width,this.height,this.baseTexture.scaleMode),this.baseTexture._glTextures[g.id]=this.textureBuffer.texture,this.render=this.renderWebGL,this.projection=new b.Point(.5*this.width,.5*-this.height)}else this.render=this.renderCanvas,this.textureBuffer=new b.CanvasBuffer(this.width*this.resolution,this.height*this.resolution),this.baseTexture.source=this.textureBuffer.canvas;this.valid=!0,this._updateUvs()},b.RenderTexture.prototype=Object.create(b.Texture.prototype),b.RenderTexture.prototype.constructor=b.RenderTexture,b.RenderTexture.prototype.resize=function(a,c,d){(a!==this.width||c!==this.height)&&(this.valid=a>0&&c>0,this.width=a,this.height=c,this.frame.width=this.crop.width=a*this.resolution,this.frame.height=this.crop.height=c*this.resolution,d&&(this.baseTexture.width=this.width*this.resolution,this.baseTexture.height=this.height*this.resolution),this.renderer.type===b.WEBGL_RENDERER&&(this.projection.x=this.width/2,this.projection.y=-this.height/2),this.valid&&this.textureBuffer.resize(this.width,this.height))},b.RenderTexture.prototype.clear=function(){this.valid&&(this.renderer.type===b.WEBGL_RENDERER&&this.renderer.gl.bindFramebuffer(this.renderer.gl.FRAMEBUFFER,this.textureBuffer.frameBuffer),this.textureBuffer.clear())},b.RenderTexture.prototype.renderWebGL=function(a,b,c){if(this.valid){var d=a.worldTransform;d.identity(),d.translate(0,2*this.projection.y),b&&d.append(b),d.scale(1,-1),a.worldAlpha=1;for(var e=a.children,f=0,g=e.length;g>f;f++)e[f].updateTransform();var h=this.renderer.gl;h.viewport(0,0,this.width*this.resolution,this.height*this.resolution),h.bindFramebuffer(h.FRAMEBUFFER,this.textureBuffer.frameBuffer),c&&this.textureBuffer.clear(),this.renderer.spriteBatch.dirty=!0,this.renderer.renderDisplayObject(a,this.projection,this.textureBuffer.frameBuffer),this.renderer.spriteBatch.dirty=!0}},b.RenderTexture.prototype.renderCanvas=function(a,b,c){if(this.valid){var d=a.worldTransform;d.identity(),b&&d.append(b),a.worldAlpha=1;for(var e=a.children,f=0,g=e.length;g>f;f++)e[f].updateTransform();c&&this.textureBuffer.clear();var h=this.textureBuffer.context,i=this.renderer.resolution;this.renderer.resolution=this.resolution,this.renderer.renderDisplayObject(a,h),this.renderer.resolution=i}},b.RenderTexture.prototype.getImage=function(){var a=new Image;return a.src=this.getBase64(),a},b.RenderTexture.prototype.getBase64=function(){return this.getCanvas().toDataURL()},b.RenderTexture.prototype.getCanvas=function(){if(this.renderer.type===b.WEBGL_RENDERER){var a=this.renderer.gl,c=this.textureBuffer.width,d=this.textureBuffer.height,e=new Uint8Array(4*c*d);a.bindFramebuffer(a.FRAMEBUFFER,this.textureBuffer.frameBuffer),a.readPixels(0,0,c,d,a.RGBA,a.UNSIGNED_BYTE,e),a.bindFramebuffer(a.FRAMEBUFFER,null);var f=new b.CanvasBuffer(c,d),g=f.context.getImageData(0,0,c,d);return g.data.set(e),f.context.putImageData(g,0,0),f.canvas}return this.textureBuffer.canvas},b.RenderTexture.tempMatrix=new b.Matrix,b.VideoTexture=function(a,c){if(!a)throw new Error(\"No video source element specified.\");(a.readyState===a.HAVE_ENOUGH_DATA||a.readyState===a.HAVE_FUTURE_DATA)&&a.width&&a.height&&(a.complete=!0),b.BaseTexture.call(this,a,c),this.autoUpdate=!1,this.updateBound=this._onUpdate.bind(this),a.complete||(this._onCanPlay=this.onCanPlay.bind(this),a.addEventListener(\"canplay\",this._onCanPlay),a.addEventListener(\"canplaythrough\",this._onCanPlay),a.addEventListener(\"play\",this.onPlayStart.bind(this)),a.addEventListener(\"pause\",this.onPlayStop.bind(this)))},b.VideoTexture.prototype=Object.create(b.BaseTexture.prototype),b.VideoTexture.constructor=b.VideoTexture,b.VideoTexture.prototype._onUpdate=function(){this.autoUpdate&&(window.requestAnimationFrame(this.updateBound),this.dirty())},b.VideoTexture.prototype.onPlayStart=function(){this.autoUpdate||(window.requestAnimationFrame(this.updateBound),this.autoUpdate=!0)},b.VideoTexture.prototype.onPlayStop=function(){this.autoUpdate=!1},b.VideoTexture.prototype.onCanPlay=function(){\"canplaythrough\"===event.type&&(this.hasLoaded=!0,this.source&&(this.source.removeEventListener(\"canplay\",this._onCanPlay),this.source.removeEventListener(\"canplaythrough\",this._onCanPlay),this.width=this.source.videoWidth,this.height=this.source.videoHeight,this.__loaded||(this.__loaded=!0,this.dispatchEvent({type:\"loaded\",content:this}))))},b.VideoTexture.prototype.destroy=function(){this.source&&this.source._pixiId&&(b.BaseTextureCache[this.source._pixiId]=null,delete b.BaseTextureCache[this.source._pixiId],this.source._pixiId=null,delete this.source._pixiId),b.BaseTexture.prototype.destroy.call(this)},b.VideoTexture.baseTextureFromVideo=function(a,c){a._pixiId||(a._pixiId=\"video_\"+b.TextureCacheIdGenerator++);var d=b.BaseTextureCache[a._pixiId];return d||(d=new b.VideoTexture(a,c),b.BaseTextureCache[a._pixiId]=d),d},b.VideoTexture.textureFromVideo=function(a,c){var d=b.VideoTexture.baseTextureFromVideo(a,c);return new b.Texture(d)},b.VideoTexture.fromUrl=function(a,c){var d=document.createElement(\"video\");return d.src=a,d.autoPlay=!0,d.play(),b.VideoTexture.textureFromVideo(d,c)},b.AssetLoader=function(a,c){this.assetURLs=a,this.crossorigin=c,this.loadersByType={jpg:b.ImageLoader,jpeg:b.ImageLoader,png:b.ImageLoader,gif:b.ImageLoader,webp:b.ImageLoader,json:b.JsonLoader,atlas:b.AtlasLoader,anim:b.SpineLoader,xml:b.BitmapFontLoader,fnt:b.BitmapFontLoader}},b.EventTarget.mixin(b.AssetLoader.prototype),b.AssetLoader.prototype.constructor=b.AssetLoader,b.AssetLoader.prototype._getDataType=function(a){var b=\"data:\",c=a.slice(0,b.length).toLowerCase();if(c===b){var d=a.slice(b.length),e=d.indexOf(\",\");if(-1===e)return null;var f=d.slice(0,e).split(\";\")[0];return f&&\"text/plain\"!==f.toLowerCase()?f.split(\"/\").pop().toLowerCase():\"txt\"}return null},b.AssetLoader.prototype.load=function(){function a(a){b.onAssetLoaded(a.data.content)}var b=this;this.loadCount=this.assetURLs.length;for(var c=0;c<this.assetURLs.length;c++){var d=this.assetURLs[c],e=this._getDataType(d);e||(e=d.split(\"?\").shift().split(\".\").pop().toLowerCase());var f=this.loadersByType[e];if(!f)throw new Error(e+\" is an unsupported file type\");var g=new f(d,this.crossorigin);g.on(\"loaded\",a),g.load()}},b.AssetLoader.prototype.onAssetLoaded=function(a){this.loadCount--,this.emit(\"onProgress\",{content:this,loader:a,loaded:this.assetURLs.length-this.loadCount,total:this.assetURLs.length}),this.onProgress&&this.onProgress(a),this.loadCount||(this.emit(\"onComplete\",{content:this}),this.onComplete&&this.onComplete())},b.JsonLoader=function(a,b){this.url=a,this.crossorigin=b,this.baseUrl=a.replace(/[^\\/]*$/,\"\"),\nthis.loaded=!1},b.JsonLoader.prototype.constructor=b.JsonLoader,b.EventTarget.mixin(b.JsonLoader.prototype),b.JsonLoader.prototype.load=function(){window.XDomainRequest&&this.crossorigin?(this.ajaxRequest=new window.XDomainRequest,this.ajaxRequest.timeout=3e3,this.ajaxRequest.onerror=this.onError.bind(this),this.ajaxRequest.ontimeout=this.onError.bind(this),this.ajaxRequest.onprogress=function(){},this.ajaxRequest.onload=this.onJSONLoaded.bind(this)):(this.ajaxRequest=window.XMLHttpRequest?new window.XMLHttpRequest:new window.ActiveXObject(\"Microsoft.XMLHTTP\"),this.ajaxRequest.onreadystatechange=this.onReadyStateChanged.bind(this)),this.ajaxRequest.open(\"GET\",this.url,!0),this.ajaxRequest.send()},b.JsonLoader.prototype.onReadyStateChanged=function(){4!==this.ajaxRequest.readyState||200!==this.ajaxRequest.status&&-1!==window.location.href.indexOf(\"http\")||this.onJSONLoaded()},b.JsonLoader.prototype.onJSONLoaded=function(){if(!this.ajaxRequest.responseText)return void this.onError();if(this.json=JSON.parse(this.ajaxRequest.responseText),this.json.frames&&this.json.meta&&this.json.meta.image){var a=this.json.meta.image;-1===a.indexOf(\"data:\")&&(a=this.baseUrl+a);var d=new b.ImageLoader(a,this.crossorigin),e=this.json.frames;this.texture=d.texture.baseTexture,d.addEventListener(\"loaded\",this.onLoaded.bind(this));for(var f in e){var g=e[f].frame;if(g){var h=new b.Rectangle(g.x,g.y,g.w,g.h),i=h.clone(),j=null;if(e[f].trimmed){var k=e[f].sourceSize,l=e[f].spriteSourceSize;j=new b.Rectangle(l.x,l.y,k.w,k.h)}b.TextureCache[f]=new b.Texture(this.texture,h,i,j)}}d.load()}else if(this.json.bones)if(b.AnimCache[this.url])this.onLoaded();else{var m=this.url.substr(0,this.url.lastIndexOf(\".\"))+\".atlas\",n=new b.JsonLoader(m,this.crossorigin),o=this;n.onJSONLoaded=function(){if(!this.ajaxRequest.responseText)return void this.onError();var a=new b.SpineTextureLoader(this.url.substring(0,this.url.lastIndexOf(\"/\"))),d=new c.Atlas(this.ajaxRequest.responseText,a),e=new c.AtlasAttachmentLoader(d),f=new c.SkeletonJson(e),g=f.readSkeletonData(o.json);b.AnimCache[o.url]=g,o.spine=g,o.spineAtlas=d,o.spineAtlasLoader=n,a.loadingCount>0?a.addEventListener(\"loadedBaseTexture\",function(a){a.content.content.loadingCount<=0&&o.onLoaded()}):o.onLoaded()},n.load()}else this.onLoaded()},b.JsonLoader.prototype.onLoaded=function(){this.loaded=!0,this.dispatchEvent({type:\"loaded\",content:this})},b.JsonLoader.prototype.onError=function(){this.dispatchEvent({type:\"error\",content:this})},b.AtlasLoader=function(a,b){this.url=a,this.baseUrl=a.replace(/[^\\/]*$/,\"\"),this.crossorigin=b,this.loaded=!1},b.AtlasLoader.constructor=b.AtlasLoader,b.EventTarget.mixin(b.AtlasLoader.prototype),b.AtlasLoader.prototype.load=function(){this.ajaxRequest=new b.AjaxRequest,this.ajaxRequest.onreadystatechange=this.onAtlasLoaded.bind(this),this.ajaxRequest.open(\"GET\",this.url,!0),this.ajaxRequest.overrideMimeType&&this.ajaxRequest.overrideMimeType(\"application/json\"),this.ajaxRequest.send(null)},b.AtlasLoader.prototype.onAtlasLoaded=function(){if(4===this.ajaxRequest.readyState)if(200===this.ajaxRequest.status||-1===window.location.href.indexOf(\"http\")){this.atlas={meta:{image:[]},frames:[]};var a=this.ajaxRequest.responseText.split(/\\r?\\n/),c=-3,d=0,e=null,f=!1,g=0,h=0,i=this.onLoaded.bind(this);for(g=0;g<a.length;g++)if(a[g]=a[g].replace(/^\\s+|\\s+$/g,\"\"),\"\"===a[g]&&(f=g+1),a[g].length>0){if(f===g)this.atlas.meta.image.push(a[g]),d=this.atlas.meta.image.length-1,this.atlas.frames.push({}),c=-3;else if(c>0)if(c%7===1)null!=e&&(this.atlas.frames[d][e.name]=e),e={name:a[g],frame:{}};else{var j=a[g].split(\" \");if(c%7===3)e.frame.x=Number(j[1].replace(\",\",\"\")),e.frame.y=Number(j[2]);else if(c%7===4)e.frame.w=Number(j[1].replace(\",\",\"\")),e.frame.h=Number(j[2]);else if(c%7===5){var k={x:0,y:0,w:Number(j[1].replace(\",\",\"\")),h:Number(j[2])};k.w>e.frame.w||k.h>e.frame.h?(e.trimmed=!0,e.realSize=k):e.trimmed=!1}}c++}if(null!=e&&(this.atlas.frames[d][e.name]=e),this.atlas.meta.image.length>0){for(this.images=[],h=0;h<this.atlas.meta.image.length;h++){var l=this.baseUrl+this.atlas.meta.image[h],m=this.atlas.frames[h];this.images.push(new b.ImageLoader(l,this.crossorigin));for(g in m){var n=m[g].frame;n&&(b.TextureCache[g]=new b.Texture(this.images[h].texture.baseTexture,{x:n.x,y:n.y,width:n.w,height:n.h}),m[g].trimmed&&(b.TextureCache[g].realSize=m[g].realSize,b.TextureCache[g].trim.x=0,b.TextureCache[g].trim.y=0))}}for(this.currentImageId=0,h=0;h<this.images.length;h++)this.images[h].on(\"loaded\",i);this.images[this.currentImageId].load()}else this.onLoaded()}else this.onError()},b.AtlasLoader.prototype.onLoaded=function(){this.images.length-1>this.currentImageId?(this.currentImageId++,this.images[this.currentImageId].load()):(this.loaded=!0,this.emit(\"loaded\",{content:this}))},b.AtlasLoader.prototype.onError=function(){this.emit(\"error\",{content:this})},b.SpriteSheetLoader=function(a,b){this.url=a,this.crossorigin=b,this.baseUrl=a.replace(/[^\\/]*$/,\"\"),this.texture=null,this.frames={}},b.SpriteSheetLoader.prototype.constructor=b.SpriteSheetLoader,b.EventTarget.mixin(b.SpriteSheetLoader.prototype),b.SpriteSheetLoader.prototype.load=function(){var a=this,c=new b.JsonLoader(this.url,this.crossorigin);c.on(\"loaded\",function(b){a.json=b.data.content.json,a.onLoaded()}),c.load()},b.SpriteSheetLoader.prototype.onLoaded=function(){this.emit(\"loaded\",{content:this})},b.ImageLoader=function(a,c){this.texture=b.Texture.fromImage(a,c),this.frames=[]},b.ImageLoader.prototype.constructor=b.ImageLoader,b.EventTarget.mixin(b.ImageLoader.prototype),b.ImageLoader.prototype.load=function(){this.texture.baseTexture.hasLoaded?this.onLoaded():this.texture.baseTexture.on(\"loaded\",this.onLoaded.bind(this))},b.ImageLoader.prototype.onLoaded=function(){this.emit(\"loaded\",{content:this})},b.ImageLoader.prototype.loadFramedSpriteSheet=function(a,c,d){this.frames=[];for(var e=Math.floor(this.texture.width/a),f=Math.floor(this.texture.height/c),g=0,h=0;f>h;h++)for(var i=0;e>i;i++,g++){var j=new b.Texture(this.texture.baseTexture,{x:i*a,y:h*c,width:a,height:c});this.frames.push(j),d&&(b.TextureCache[d+\"-\"+g]=j)}this.load()},b.BitmapFontLoader=function(a,b){this.url=a,this.crossorigin=b,this.baseUrl=a.replace(/[^\\/]*$/,\"\"),this.texture=null},b.BitmapFontLoader.prototype.constructor=b.BitmapFontLoader,b.EventTarget.mixin(b.BitmapFontLoader.prototype),b.BitmapFontLoader.prototype.load=function(){this.ajaxRequest=new b.AjaxRequest,this.ajaxRequest.onreadystatechange=this.onXMLLoaded.bind(this),this.ajaxRequest.open(\"GET\",this.url,!0),this.ajaxRequest.overrideMimeType&&this.ajaxRequest.overrideMimeType(\"application/xml\"),this.ajaxRequest.send(null)},b.BitmapFontLoader.prototype.onXMLLoaded=function(){if(4===this.ajaxRequest.readyState&&(200===this.ajaxRequest.status||-1===window.location.protocol.indexOf(\"http\"))){var a=this.ajaxRequest.responseXML;if(!a||/MSIE 9/i.test(navigator.userAgent)||navigator.isCocoonJS)if(\"function\"==typeof window.DOMParser){var c=new DOMParser;a=c.parseFromString(this.ajaxRequest.responseText,\"text/xml\")}else{var d=document.createElement(\"div\");d.innerHTML=this.ajaxRequest.responseText,a=d}var e=this.baseUrl+a.getElementsByTagName(\"page\")[0].getAttribute(\"file\"),f=new b.ImageLoader(e,this.crossorigin);this.texture=f.texture.baseTexture;var g={},h=a.getElementsByTagName(\"info\")[0],i=a.getElementsByTagName(\"common\")[0];g.font=h.getAttribute(\"face\"),g.size=parseInt(h.getAttribute(\"size\"),10),g.lineHeight=parseInt(i.getAttribute(\"lineHeight\"),10),g.chars={};for(var j=a.getElementsByTagName(\"char\"),k=0;k<j.length;k++){var l=parseInt(j[k].getAttribute(\"id\"),10),m=new b.Rectangle(parseInt(j[k].getAttribute(\"x\"),10),parseInt(j[k].getAttribute(\"y\"),10),parseInt(j[k].getAttribute(\"width\"),10),parseInt(j[k].getAttribute(\"height\"),10));g.chars[l]={xOffset:parseInt(j[k].getAttribute(\"xoffset\"),10),yOffset:parseInt(j[k].getAttribute(\"yoffset\"),10),xAdvance:parseInt(j[k].getAttribute(\"xadvance\"),10),kerning:{},texture:b.TextureCache[l]=new b.Texture(this.texture,m)}}var n=a.getElementsByTagName(\"kerning\");for(k=0;k<n.length;k++){var o=parseInt(n[k].getAttribute(\"first\"),10),p=parseInt(n[k].getAttribute(\"second\"),10),q=parseInt(n[k].getAttribute(\"amount\"),10);g.chars[p].kerning[o]=q}b.BitmapText.fonts[g.font]=g,f.addEventListener(\"loaded\",this.onLoaded.bind(this)),f.load()}},b.BitmapFontLoader.prototype.onLoaded=function(){this.emit(\"loaded\",{content:this})},b.SpineLoader=function(a,b){this.url=a,this.crossorigin=b,this.loaded=!1},b.SpineLoader.prototype.constructor=b.SpineLoader,b.EventTarget.mixin(b.SpineLoader.prototype),b.SpineLoader.prototype.load=function(){var a=this,c=new b.JsonLoader(this.url,this.crossorigin);c.on(\"loaded\",function(b){a.json=b.data.content.json,a.onLoaded()}),c.load()},b.SpineLoader.prototype.onLoaded=function(){this.loaded=!0,this.emit(\"loaded\",{content:this})},b.AbstractFilter=function(a,b){this.passes=[this],this.shaders=[],this.dirty=!0,this.padding=0,this.uniforms=b||{},this.fragmentSrc=a||[]},b.AbstractFilter.prototype.constructor=b.AbstractFilter,b.AbstractFilter.prototype.syncUniforms=function(){for(var a=0,b=this.shaders.length;b>a;a++)this.shaders[a].dirty=!0},b.AlphaMaskFilter=function(a){b.AbstractFilter.call(this),this.passes=[this],a.baseTexture._powerOf2=!0,this.uniforms={mask:{type:\"sampler2D\",value:a},mapDimensions:{type:\"2f\",value:{x:1,y:5112}},dimensions:{type:\"4fv\",value:[0,0,0,0]}},a.baseTexture.hasLoaded?(this.uniforms.mask.value.x=a.width,this.uniforms.mask.value.y=a.height):(this.boundLoadedFunction=this.onTextureLoaded.bind(this),a.baseTexture.on(\"loaded\",this.boundLoadedFunction)),this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform sampler2D mask;\",\"uniform sampler2D uSampler;\",\"uniform vec2 offset;\",\"uniform vec4 dimensions;\",\"uniform vec2 mapDimensions;\",\"void main(void) {\",\"   vec2 mapCords = vTextureCoord.xy;\",\"   mapCords += (dimensions.zw + offset)/ dimensions.xy ;\",\"   mapCords.y *= -1.0;\",\"   mapCords.y += 1.0;\",\"   mapCords *= dimensions.xy / mapDimensions;\",\"   vec4 original =  texture2D(uSampler, vTextureCoord);\",\"   float maskAlpha =  texture2D(mask, mapCords).r;\",\"   original *= maskAlpha;\",\"   gl_FragColor =  original;\",\"}\"]},b.AlphaMaskFilter.prototype=Object.create(b.AbstractFilter.prototype),b.AlphaMaskFilter.prototype.constructor=b.AlphaMaskFilter,b.AlphaMaskFilter.prototype.onTextureLoaded=function(){this.uniforms.mapDimensions.value.x=this.uniforms.mask.value.width,this.uniforms.mapDimensions.value.y=this.uniforms.mask.value.height,this.uniforms.mask.value.baseTexture.off(\"loaded\",this.boundLoadedFunction)},Object.defineProperty(b.AlphaMaskFilter.prototype,\"map\",{get:function(){return this.uniforms.mask.value},set:function(a){this.uniforms.mask.value=a}}),b.ColorMatrixFilter=function(){b.AbstractFilter.call(this),this.passes=[this],this.uniforms={matrix:{type:\"mat4\",value:[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}},this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform float invert;\",\"uniform mat4 matrix;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"   gl_FragColor = texture2D(uSampler, vTextureCoord) * matrix;\",\"}\"]},b.ColorMatrixFilter.prototype=Object.create(b.AbstractFilter.prototype),b.ColorMatrixFilter.prototype.constructor=b.ColorMatrixFilter,Object.defineProperty(b.ColorMatrixFilter.prototype,\"matrix\",{get:function(){return this.uniforms.matrix.value},set:function(a){this.uniforms.matrix.value=a}}),b.GrayFilter=function(){b.AbstractFilter.call(this),this.passes=[this],this.uniforms={gray:{type:\"1f\",value:1}},this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform sampler2D uSampler;\",\"uniform float gray;\",\"void main(void) {\",\"   gl_FragColor = texture2D(uSampler, vTextureCoord);\",\"   gl_FragColor.rgb = mix(gl_FragColor.rgb, vec3(0.2126*gl_FragColor.r + 0.7152*gl_FragColor.g + 0.0722*gl_FragColor.b), gray);\",\"}\"]},b.GrayFilter.prototype=Object.create(b.AbstractFilter.prototype),b.GrayFilter.prototype.constructor=b.GrayFilter,Object.defineProperty(b.GrayFilter.prototype,\"gray\",{get:function(){return this.uniforms.gray.value},set:function(a){this.uniforms.gray.value=a}}),b.DisplacementFilter=function(a){b.AbstractFilter.call(this),this.passes=[this],a.baseTexture._powerOf2=!0,this.uniforms={displacementMap:{type:\"sampler2D\",value:a},scale:{type:\"2f\",value:{x:30,y:30}},offset:{type:\"2f\",value:{x:0,y:0}},mapDimensions:{type:\"2f\",value:{x:1,y:5112}},dimensions:{type:\"4fv\",value:[0,0,0,0]}},a.baseTexture.hasLoaded?(this.uniforms.mapDimensions.value.x=a.width,this.uniforms.mapDimensions.value.y=a.height):(this.boundLoadedFunction=this.onTextureLoaded.bind(this),a.baseTexture.on(\"loaded\",this.boundLoadedFunction)),this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform sampler2D displacementMap;\",\"uniform sampler2D uSampler;\",\"uniform vec2 scale;\",\"uniform vec2 offset;\",\"uniform vec4 dimensions;\",\"uniform vec2 mapDimensions;\",\"void main(void) {\",\"   vec2 mapCords = vTextureCoord.xy;\",\"   mapCords += (dimensions.zw + offset)/ dimensions.xy ;\",\"   mapCords.y *= -1.0;\",\"   mapCords.y += 1.0;\",\"   vec2 matSample = texture2D(displacementMap, mapCords).xy;\",\"   matSample -= 0.5;\",\"   matSample *= scale;\",\"   matSample /= mapDimensions;\",\"   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x + matSample.x, vTextureCoord.y + matSample.y));\",\"   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb, 1.0);\",\"   vec2 cord = vTextureCoord;\",\"}\"]},b.DisplacementFilter.prototype=Object.create(b.AbstractFilter.prototype),b.DisplacementFilter.prototype.constructor=b.DisplacementFilter,b.DisplacementFilter.prototype.onTextureLoaded=function(){this.uniforms.mapDimensions.value.x=this.uniforms.displacementMap.value.width,this.uniforms.mapDimensions.value.y=this.uniforms.displacementMap.value.height,this.uniforms.displacementMap.value.baseTexture.off(\"loaded\",this.boundLoadedFunction)},Object.defineProperty(b.DisplacementFilter.prototype,\"map\",{get:function(){return this.uniforms.displacementMap.value},set:function(a){this.uniforms.displacementMap.value=a}}),Object.defineProperty(b.DisplacementFilter.prototype,\"scale\",{get:function(){return this.uniforms.scale.value},set:function(a){this.uniforms.scale.value=a}}),Object.defineProperty(b.DisplacementFilter.prototype,\"offset\",{get:function(){return this.uniforms.offset.value},set:function(a){this.uniforms.offset.value=a}}),b.PixelateFilter=function(){b.AbstractFilter.call(this),this.passes=[this],this.uniforms={invert:{type:\"1f\",value:0},dimensions:{type:\"4fv\",value:new b.Float32Array([1e4,100,10,10])},pixelSize:{type:\"2f\",value:{x:10,y:10}}},this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform vec2 testDim;\",\"uniform vec4 dimensions;\",\"uniform vec2 pixelSize;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"   vec2 coord = vTextureCoord;\",\"   vec2 size = dimensions.xy/pixelSize;\",\"   vec2 color = floor( ( vTextureCoord * size ) ) / size + pixelSize/dimensions.xy * 0.5;\",\"   gl_FragColor = texture2D(uSampler, color);\",\"}\"]},b.PixelateFilter.prototype=Object.create(b.AbstractFilter.prototype),b.PixelateFilter.prototype.constructor=b.PixelateFilter,Object.defineProperty(b.PixelateFilter.prototype,\"size\",{get:function(){return this.uniforms.pixelSize.value},set:function(a){this.dirty=!0,this.uniforms.pixelSize.value=a}}),b.BlurXFilter=function(){b.AbstractFilter.call(this),this.passes=[this],this.uniforms={blur:{type:\"1f\",value:1/512}},this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform float blur;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"   vec4 sum = vec4(0.0);\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x - 4.0*blur, vTextureCoord.y)) * 0.05;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x - 3.0*blur, vTextureCoord.y)) * 0.09;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x - 2.0*blur, vTextureCoord.y)) * 0.12;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x - blur, vTextureCoord.y)) * 0.15;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * 0.16;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x + blur, vTextureCoord.y)) * 0.15;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x + 2.0*blur, vTextureCoord.y)) * 0.12;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x + 3.0*blur, vTextureCoord.y)) * 0.09;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x + 4.0*blur, vTextureCoord.y)) * 0.05;\",\"   gl_FragColor = sum;\",\"}\"]},b.BlurXFilter.prototype=Object.create(b.AbstractFilter.prototype),b.BlurXFilter.prototype.constructor=b.BlurXFilter,Object.defineProperty(b.BlurXFilter.prototype,\"blur\",{get:function(){return this.uniforms.blur.value/(1/7e3)},set:function(a){this.dirty=!0,this.uniforms.blur.value=1/7e3*a}}),b.BlurYFilter=function(){b.AbstractFilter.call(this),this.passes=[this],this.uniforms={blur:{type:\"1f\",value:1/512}},this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform float blur;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"   vec4 sum = vec4(0.0);\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 4.0*blur)) * 0.05;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 3.0*blur)) * 0.09;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - 2.0*blur)) * 0.12;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y - blur)) * 0.15;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y)) * 0.16;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + blur)) * 0.15;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 2.0*blur)) * 0.12;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 3.0*blur)) * 0.09;\",\"   sum += texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y + 4.0*blur)) * 0.05;\",\"   gl_FragColor = sum;\",\"}\"]},b.BlurYFilter.prototype=Object.create(b.AbstractFilter.prototype),b.BlurYFilter.prototype.constructor=b.BlurYFilter,Object.defineProperty(b.BlurYFilter.prototype,\"blur\",{get:function(){return this.uniforms.blur.value/(1/7e3)},set:function(a){this.uniforms.blur.value=1/7e3*a}}),b.BlurFilter=function(){this.blurXFilter=new b.BlurXFilter,this.blurYFilter=new b.BlurYFilter,this.passes=[this.blurXFilter,this.blurYFilter]},b.BlurFilter.prototype=Object.create(b.AbstractFilter.prototype),b.BlurFilter.prototype.constructor=b.BlurFilter,Object.defineProperty(b.BlurFilter.prototype,\"blur\",{get:function(){return this.blurXFilter.blur},set:function(a){this.blurXFilter.blur=this.blurYFilter.blur=a}}),Object.defineProperty(b.BlurFilter.prototype,\"blurX\",{get:function(){return this.blurXFilter.blur},set:function(a){this.blurXFilter.blur=a}}),Object.defineProperty(b.BlurFilter.prototype,\"blurY\",{get:function(){return this.blurYFilter.blur},set:function(a){this.blurYFilter.blur=a}}),b.InvertFilter=function(){b.AbstractFilter.call(this),this.passes=[this],this.uniforms={invert:{type:\"1f\",value:1}},this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform float invert;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"   gl_FragColor = texture2D(uSampler, vTextureCoord);\",\"   gl_FragColor.rgb = mix( (vec3(1)-gl_FragColor.rgb) * gl_FragColor.a, gl_FragColor.rgb, 1.0 - invert);\",\"}\"]},b.InvertFilter.prototype=Object.create(b.AbstractFilter.prototype),b.InvertFilter.prototype.constructor=b.InvertFilter,Object.defineProperty(b.InvertFilter.prototype,\"invert\",{get:function(){return this.uniforms.invert.value},set:function(a){this.uniforms.invert.value=a}}),b.SepiaFilter=function(){b.AbstractFilter.call(this),this.passes=[this],this.uniforms={sepia:{type:\"1f\",value:1}},this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform float sepia;\",\"uniform sampler2D uSampler;\",\"const mat3 sepiaMatrix = mat3(0.3588, 0.7044, 0.1368, 0.2990, 0.5870, 0.1140, 0.2392, 0.4696, 0.0912);\",\"void main(void) {\",\"   gl_FragColor = texture2D(uSampler, vTextureCoord);\",\"   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb * sepiaMatrix, sepia);\",\"}\"]},b.SepiaFilter.prototype=Object.create(b.AbstractFilter.prototype),b.SepiaFilter.prototype.constructor=b.SepiaFilter,Object.defineProperty(b.SepiaFilter.prototype,\"sepia\",{get:function(){return this.uniforms.sepia.value},set:function(a){this.uniforms.sepia.value=a}}),b.TwistFilter=function(){b.AbstractFilter.call(this),this.passes=[this],this.uniforms={radius:{type:\"1f\",value:.5},angle:{type:\"1f\",value:5},offset:{type:\"2f\",value:{x:.5,y:.5}}},this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform vec4 dimensions;\",\"uniform sampler2D uSampler;\",\"uniform float radius;\",\"uniform float angle;\",\"uniform vec2 offset;\",\"void main(void) {\",\"   vec2 coord = vTextureCoord - offset;\",\"   float distance = length(coord);\",\"   if (distance < radius) {\",\"       float ratio = (radius - distance) / radius;\",\"       float angleMod = ratio * ratio * angle;\",\"       float s = sin(angleMod);\",\"       float c = cos(angleMod);\",\"       coord = vec2(coord.x * c - coord.y * s, coord.x * s + coord.y * c);\",\"   }\",\"   gl_FragColor = texture2D(uSampler, coord+offset);\",\"}\"]},b.TwistFilter.prototype=Object.create(b.AbstractFilter.prototype),b.TwistFilter.prototype.constructor=b.TwistFilter,Object.defineProperty(b.TwistFilter.prototype,\"offset\",{get:function(){return this.uniforms.offset.value},set:function(a){this.dirty=!0,this.uniforms.offset.value=a}}),Object.defineProperty(b.TwistFilter.prototype,\"radius\",{get:function(){return this.uniforms.radius.value},set:function(a){this.dirty=!0,this.uniforms.radius.value=a}}),Object.defineProperty(b.TwistFilter.prototype,\"angle\",{get:function(){return this.uniforms.angle.value},set:function(a){this.dirty=!0,this.uniforms.angle.value=a}}),b.ColorStepFilter=function(){b.AbstractFilter.call(this),this.passes=[this],this.uniforms={step:{type:\"1f\",value:5}},this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform sampler2D uSampler;\",\"uniform float step;\",\"void main(void) {\",\"   vec4 color = texture2D(uSampler, vTextureCoord);\",\"   color = floor(color * step) / step;\",\"   gl_FragColor = color;\",\"}\"]},b.ColorStepFilter.prototype=Object.create(b.AbstractFilter.prototype),b.ColorStepFilter.prototype.constructor=b.ColorStepFilter,Object.defineProperty(b.ColorStepFilter.prototype,\"step\",{get:function(){return this.uniforms.step.value},set:function(a){this.uniforms.step.value=a}}),b.DotScreenFilter=function(){b.AbstractFilter.call(this),this.passes=[this],this.uniforms={scale:{type:\"1f\",value:1},angle:{type:\"1f\",value:5},dimensions:{type:\"4fv\",value:[0,0,0,0]}},this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform vec4 dimensions;\",\"uniform sampler2D uSampler;\",\"uniform float angle;\",\"uniform float scale;\",\"float pattern() {\",\"   float s = sin(angle), c = cos(angle);\",\"   vec2 tex = vTextureCoord * dimensions.xy;\",\"   vec2 point = vec2(\",\"       c * tex.x - s * tex.y,\",\"       s * tex.x + c * tex.y\",\"   ) * scale;\",\"   return (sin(point.x) * sin(point.y)) * 4.0;\",\"}\",\"void main() {\",\"   vec4 color = texture2D(uSampler, vTextureCoord);\",\"   float average = (color.r + color.g + color.b) / 3.0;\",\"   gl_FragColor = vec4(vec3(average * 10.0 - 5.0 + pattern()), color.a);\",\"}\"]},b.DotScreenFilter.prototype=Object.create(b.AbstractFilter.prototype),b.DotScreenFilter.prototype.constructor=b.DotScreenFilter,Object.defineProperty(b.DotScreenFilter.prototype,\"scale\",{get:function(){return this.uniforms.scale.value},set:function(a){this.dirty=!0,this.uniforms.scale.value=a}}),Object.defineProperty(b.DotScreenFilter.prototype,\"angle\",{get:function(){return this.uniforms.angle.value},set:function(a){this.dirty=!0,this.uniforms.angle.value=a}}),b.CrossHatchFilter=function(){b.AbstractFilter.call(this),this.passes=[this],this.uniforms={blur:{type:\"1f\",value:1/512}},this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform float blur;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"    float lum = length(texture2D(uSampler, vTextureCoord.xy).rgb);\",\"    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\",\"    if (lum < 1.00) {\",\"        if (mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0) {\",\"            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\",\"        }\",\"    }\",\"    if (lum < 0.75) {\",\"        if (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0) {\",\"            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\",\"        }\",\"    }\",\"    if (lum < 0.50) {\",\"        if (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0) {\",\"            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\",\"        }\",\"    }\",\"    if (lum < 0.3) {\",\"        if (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0) {\",\"            gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\",\"        }\",\"    }\",\"}\"]},b.CrossHatchFilter.prototype=Object.create(b.AbstractFilter.prototype),b.CrossHatchFilter.prototype.constructor=b.CrossHatchFilter,Object.defineProperty(b.CrossHatchFilter.prototype,\"blur\",{get:function(){return this.uniforms.blur.value/(1/7e3)},set:function(a){this.uniforms.blur.value=1/7e3*a}}),b.RGBSplitFilter=function(){b.AbstractFilter.call(this),this.passes=[this],this.uniforms={red:{type:\"2f\",value:{x:20,y:20}},green:{type:\"2f\",value:{x:-20,y:20}},blue:{type:\"2f\",value:{x:20,y:-20}},dimensions:{type:\"4fv\",value:[0,0,0,0]}},this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying vec4 vColor;\",\"uniform vec2 red;\",\"uniform vec2 green;\",\"uniform vec2 blue;\",\"uniform vec4 dimensions;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"   gl_FragColor.r = texture2D(uSampler, vTextureCoord + red/dimensions.xy).r;\",\"   gl_FragColor.g = texture2D(uSampler, vTextureCoord + green/dimensions.xy).g;\",\"   gl_FragColor.b = texture2D(uSampler, vTextureCoord + blue/dimensions.xy).b;\",\"   gl_FragColor.a = texture2D(uSampler, vTextureCoord).a;\",\"}\"]},b.RGBSplitFilter.prototype=Object.create(b.AbstractFilter.prototype),b.RGBSplitFilter.prototype.constructor=b.RGBSplitFilter,Object.defineProperty(b.RGBSplitFilter.prototype,\"red\",{get:function(){return this.uniforms.red.value},set:function(a){this.uniforms.red.value=a}}),Object.defineProperty(b.RGBSplitFilter.prototype,\"green\",{get:function(){return this.uniforms.green.value},set:function(a){this.uniforms.green.value=a}}),Object.defineProperty(b.RGBSplitFilter.prototype,\"blue\",{get:function(){return this.uniforms.blue.value},set:function(a){this.uniforms.blue.value=a}}),\"undefined\"!=typeof exports?(\"undefined\"!=typeof module&&module.exports&&(exports=module.exports=b),exports.PIXI=b):\"undefined\"!=typeof define&&define.amd?define(b):a.PIXI=b}).call(this);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pixi.js/bin/pixi.js\n ** module id = 8\n ** module chunks = 0\n **/","var baseClone = require('../internal/baseClone'),\n    bindCallback = require('../internal/bindCallback');\n\n/**\n * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n * to produce the cloned values. If `customizer` returns `undefined` cloning\n * is handled by the method instead. The `customizer` is bound to `thisArg`\n * and invoked with two argument; (value [, index|key, object]).\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n * The enumerable properties of `arguments` objects and objects created by\n * constructors other than `Object` are cloned to plain `Object` objects. An\n * empty object is returned for uncloneable values such as functions, DOM nodes,\n * Maps, Sets, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {*} Returns the deep cloned value.\n * @example\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * var deep = _.cloneDeep(users);\n * deep[0] === users[0];\n * // => false\n *\n * // using a customizer callback\n * var el = _.cloneDeep(document.body, function(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * });\n *\n * el === document.body\n * // => false\n * el.nodeName\n * // => BODY\n * el.childNodes.length;\n * // => 20\n */\nfunction cloneDeep(value, customizer, thisArg) {\n  customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 1);\n  return baseClone(value, true, customizer);\n}\n\nmodule.exports = cloneDeep;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lang/cloneDeep.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\n\nvar object = require('./util/object');\nvar digits = require('./util/number').digits;\n\n/**\n * math.js factory function.\n *\n * @param {Object} [config] Available configuration options:\n *                            {String} matrix\n *                              A string 'matrix' (default) or 'array'.\n *                            {String} number\n *                              A string 'number' (default) or 'bignumber'\n *                            {Number} precision\n *                              The number of significant digits for BigNumbers.\n *                              Not applicable for Numbers.\n */\nfunction create (config) {\n  // simple test for ES5 support\n  if (typeof Object.create !== 'function') {\n    throw new Error('ES5 not supported by this JavaScript engine. ' +\n        'Please load the es5-shim and es5-sham library for compatibility.');\n  }\n\n  // create namespace\n  var math = {};\n\n  // create configuration options. These are private\n  var _config = {\n    // type of default matrix output. Choose 'matrix' (default) or 'array'\n    matrix: 'matrix',\n\n    // type of default number output. Choose 'number' (default) or 'bignumber'\n    number: 'number',\n\n    // number of significant digits in BigNumbers\n    precision: 64,\n\n    // minimum relative difference between two compared values,\n    // used by all comparison functions\n    epsilon: 1e-14\n  };\n\n  /**\n   * Set configuration options for math.js, and get current options\n   * @param {Object} [options] Available options:\n   *                            {String} matrix\n   *                              A string 'matrix' (default) or 'array'.\n   *                            {String} number\n   *                              A string 'number' (default) or 'bignumber'\n   *                            {Number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   * @return {Object} Returns the current configuration\n   */\n  math.config = function(options) {\n    if (options) {\n      // merge options\n      object.deepExtend(_config, options);\n\n      if (options.precision) {\n        math.type.BigNumber.config({\n          precision: options.precision\n        });\n      }\n\n      // reload the constants (they depend on option number and precision)\n      // this must be done after math.type.BigNumber.config is applied\n      require('./constants')(math, _config);\n\n      // TODO: remove deprecated setting some day (deprecated since version 0.17.0)\n      if (options.number && options.number.defaultType) {\n        throw new Error('setting `number.defaultType` is deprecated. Use `number` instead.');\n      }\n\n      // TODO: remove deprecated setting some day (deprecated since version 0.17.0)\n      if (options.number && options.number.precision) {\n        throw new Error('setting `number.precision` is deprecated. Use `precision` instead.');\n      }\n\n      // TODO: remove deprecated setting some day (deprecated since version 0.17.0)\n      if (options.matrix && options.matrix.defaultType) {\n        throw new Error('setting `matrix.defaultType` is deprecated. Use `matrix` instead.');\n      }\n\n      // TODO: remove deprecated setting some day (deprecated since version 0.15.0)\n      if (options.matrix && options.matrix['default']) {\n        throw new Error('setting `matrix.default` is deprecated. Use `matrix` instead.');\n      }\n\n      // TODO: remove deprecated setting some day (deprecated since version 0.20.0)\n      if (options.decimals) {\n        throw new Error('setting `decimals` is deprecated. Use `precision` instead.');\n      }\n    }\n\n    // return a clone of the settings\n    return object.clone(_config);\n  };\n\n  /**\n   * math.js factory function. Creates a new instance of math.js\n   *\n   * @param {Object} [config] Available configuration options:\n   *                            {String} matrix\n   *                              A string 'matrix' (default) or 'array'.\n   *                            {String} number\n   *                              A string 'number' (default) or 'bignumber'\n   *                            {Number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   */\n  math.create = create;\n\n  // create a new BigNumber factory for this instance of math.js\n  var BigNumber = require('./type/BigNumber').constructor();\n\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    };\n  };\n\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value);\n  };\n\n  // extend BigNumber with a function clone\n  if (typeof BigNumber.prototype.clone !== 'function') {\n    /**\n     * Clone a bignumber\n     * @return {BigNumber} clone\n     */\n    BigNumber.prototype.clone = function() {\n      return this; // just return itself (a BigNumber is immutable)\n    };\n  }\n\n  // extend BigNumber with a function convert\n  if (typeof BigNumber.convert !== 'function') {\n    /**\n     * Try to convert a Number in to a BigNumber.\n     * If the number has 15 or mor significant digits, the Number cannot be\n     * converted to BigNumber and will return the original number.\n     * @param {Number} number\n     * @return {BigNumber | Number} bignumber\n     */\n    BigNumber.convert = function(number) {\n      if (digits(number) > 15) {\n        return number;\n      }\n      else {\n        return new BigNumber(number);\n      }\n    };\n  }\n  else {\n    throw new Error('Cannot add function convert to BigNumber: function already exists');\n  }\n\n  // errors\n  math.error = require('./error/index');\n\n  // types (Matrix, Complex, Unit, ...)\n  math.type = {};\n  math.type.Complex = require('./type/Complex');\n  math.type.Range = require('./type/Range');\n  math.type.Index = require('./type/Index');\n  math.type.Matrix = require('./type/Matrix')(_config);\n  math.type.Unit = require('./type/Unit');\n  math.type.Help = require('./type/Help');\n  math.type.ResultSet = require('./type/ResultSet');\n  math.type.BigNumber = BigNumber;\n\n  math.collection = require('./type/collection')(math, _config);\n\n  // matrix storage formats\n  math.type.CcsMatrix = require('./type/matrix/CcsMatrix')(math, _config);\n  math.type.CrsMatrix = require('./type/matrix/CrsMatrix')(math, _config);\n  math.type.DenseMatrix = require('./type/matrix/DenseMatrix')(math, _config);\n\n  // matrix storage format registry\n  math.type.Matrix._storage.ccs = math.type.CcsMatrix;\n  math.type.Matrix._storage.crs = math.type.CrsMatrix;\n  math.type.Matrix._storage.dense = math.type.DenseMatrix;\n  math.type.Matrix._storage['default'] = math.type.DenseMatrix;\n\n  // expression (parse, Parser, nodes, docs)\n  math.expression = {};\n  math.expression.node = require('./expression/node/index');\n  math.expression.parse = require('./expression/parse')(math, _config);\n  math.expression.Parser = require('./expression/Parser')(math, _config);\n  math.expression.docs = require('./expression/docs/index');\n\n  // serialization utilities\n  math.json = {\n    reviver: require('./json/reviver')(math, _config)\n  };\n  \n  // functions - construction (must be defined before the rest of functions)\n  require('./function/construction/bignumber')(math, _config);\n  require('./function/construction/boolean')(math, _config);\n  require('./function/construction/complex')(math, _config);\n  require('./function/construction/index')(math, _config);\n  require('./function/construction/matrix')(math, _config);\n  require('./function/construction/number')(math, _config);\n  require('./function/construction/parser')(math, _config);\n  require('./function/construction/chain')(math, _config);\n  require('./function/construction/string')(math, _config);\n  require('./function/construction/unit')(math, _config);\n\n  // expression parser\n  require('./function/expression/compile')(math, _config);\n  require('./function/expression/eval')(math, _config);\n  require('./function/expression/help')(math, _config);\n  require('./function/expression/parse')(math, _config);\n\n  // functions - arithmetic\n  require('./function/arithmetic/abs')(math, _config);\n  require('./function/arithmetic/add')(math, _config);\n  require('./function/arithmetic/ceil')(math, _config);\n  require('./function/arithmetic/cube')(math, _config);\n  require('./function/arithmetic/_divide')(math, _config);\n  require('./function/arithmetic/divide')(math, _config);\n  require('./function/arithmetic/dotDivide')(math, _config);\n  require('./function/arithmetic/dotMultiply')(math, _config);\n  require('./function/arithmetic/dotPow')(math, _config);\n  require('./function/arithmetic/exp')(math, _config);\n  require('./function/arithmetic/fix')(math, _config);\n  require('./function/arithmetic/floor')(math, _config);\n  require('./function/arithmetic/gcd')(math, _config);\n  require('./function/arithmetic/lcm')(math, _config);\n  require('./function/arithmetic/log')(math, _config);\n  require('./function/arithmetic/log10')(math, _config);\n  require('./function/arithmetic/mod')(math, _config);\n  require('./function/arithmetic/multiply')(math, _config);\n  require('./function/arithmetic/norm')(math, _config);\n  require('./function/arithmetic/nthRoot')(math, _config);\n  require('./function/arithmetic/pow')(math, _config);\n  require('./function/arithmetic/round')(math, _config);\n  require('./function/arithmetic/sign')(math, _config);\n  require('./function/arithmetic/sqrt')(math, _config);\n  require('./function/arithmetic/square')(math, _config);\n  require('./function/arithmetic/subtract')(math, _config);\n  require('./function/arithmetic/unaryMinus')(math, _config);\n  require('./function/arithmetic/unaryPlus')(math, _config);\n  require('./function/arithmetic/xgcd')(math, _config);\n\n  // functions - bitwise\n  require('./function/bitwise/bitAnd')(math, _config);\n  require('./function/bitwise/bitNot')(math, _config);\n  require('./function/bitwise/bitOr')(math, _config);\n  require('./function/bitwise/bitXor')(math, _config);\n  require('./function/bitwise/leftShift')(math, _config);\n  require('./function/bitwise/rightArithShift')(math, _config);\n  require('./function/bitwise/rightLogShift')(math, _config);\n\n  // functions - complex\n  require('./function/complex/arg')(math, _config);\n  require('./function/complex/conj')(math, _config);\n  require('./function/complex/re')(math, _config);\n  require('./function/complex/im')(math, _config);\n\n  // functions - logical\n  require('./function/logical/and')(math, _config);\n  require('./function/logical/not')(math, _config);\n  require('./function/logical/or')(math, _config);\n  require('./function/logical/xor')(math, _config);\n\n  // functions - matrix\n  require('./function/matrix/concat')(math, _config);\n  require('./function/matrix/cross')(math, _config);\n  require('./function/matrix/det')(math, _config);\n  require('./function/matrix/diag')(math, _config);\n  require('./function/matrix/dot')(math, _config);\n  require('./function/matrix/eye')(math, _config);\n  require('./function/matrix/flatten')(math, _config);\n  require('./function/matrix/inv')(math, _config);\n  require('./function/matrix/ones')(math, _config);\n  require('./function/matrix/range')(math, _config);\n  require('./function/matrix/resize')(math, _config);\n  require('./function/matrix/size')(math, _config);\n  require('./function/matrix/squeeze')(math, _config);\n  require('./function/matrix/subset')(math, _config);\n  require('./function/matrix/trace')(math, _config);\n  require('./function/matrix/transpose')(math, _config);\n  require('./function/matrix/zeros')(math, _config);\n\n  // functions - probability\n  //require('./function/probability/distribution')(math, _config); // TODO: rethink math.distribution\n  require('./function/probability/factorial')(math, _config);\n  require('./function/probability/gamma')(math, _config);\n  require('./function/probability/random')(math, _config);\n  require('./function/probability/randomInt')(math, _config);\n  require('./function/probability/pickRandom')(math, _config);\n  require('./function/probability/permutations')(math, _config);\n  require('./function/probability/combinations')(math, _config);\n\n  // functions - relational\n  require('./function/relational/compare')(math, _config);\n  require('./function/relational/deepEqual')(math, _config);\n  require('./function/relational/equal')(math, _config);\n  require('./function/relational/larger')(math, _config);\n  require('./function/relational/largerEq')(math, _config);\n  require('./function/relational/smaller')(math, _config);\n  require('./function/relational/smallerEq')(math, _config);\n  require('./function/relational/unequal')(math, _config);\n\n  // functions - statistics\n  require('./function/statistics/min')(math, _config);\n  require('./function/statistics/max')(math, _config);\n  require('./function/statistics/mean')(math, _config);\n  require('./function/statistics/median')(math, _config);\n  require('./function/statistics/prod')(math, _config);\n  require('./function/statistics/std')(math, _config);\n  require('./function/statistics/sum')(math, _config);\n  require('./function/statistics/var')(math, _config);\n\n  // functions - trigonometry\n  require('./function/trigonometry/acos')(math, _config);\n  require('./function/trigonometry/acosh')(math, _config);\n  require('./function/trigonometry/acot')(math, _config);\n  require('./function/trigonometry/acoth')(math, _config);\n  require('./function/trigonometry/acsc')(math, _config);\n  require('./function/trigonometry/acsch')(math, _config);\n  require('./function/trigonometry/asec')(math, _config);\n  require('./function/trigonometry/asech')(math, _config);\n  require('./function/trigonometry/asin')(math, _config);\n  require('./function/trigonometry/asinh')(math, _config);\n  require('./function/trigonometry/atan')(math, _config);\n  require('./function/trigonometry/atan2')(math, _config);\n  require('./function/trigonometry/atanh')(math, _config);\n  require('./function/trigonometry/cos')(math, _config);\n  require('./function/trigonometry/cosh')(math, _config);\n  require('./function/trigonometry/cot')(math, _config);\n  require('./function/trigonometry/coth')(math, _config);\n  require('./function/trigonometry/csc')(math, _config);\n  require('./function/trigonometry/csch')(math, _config);\n  require('./function/trigonometry/sec')(math, _config);\n  require('./function/trigonometry/sech')(math, _config);\n  require('./function/trigonometry/sin')(math, _config);\n  require('./function/trigonometry/sinh')(math, _config);\n  require('./function/trigonometry/tan')(math, _config);\n  require('./function/trigonometry/tanh')(math, _config);\n\n  // functions - units\n  require('./function/units/to')(math, _config);\n\n  // functions - utils\n  require('./function/utils/clone')(math, _config);\n  require('./function/utils/filter')(math, _config);\n  require('./function/utils/format')(math, _config);\n  require('./function/utils/import')(math, _config);\n  require('./function/utils/map')(math, _config);\n  require('./function/utils/print')(math, _config);\n  require('./function/utils/sort')(math, _config);\n  require('./function/utils/typeof')(math, _config);\n  require('./function/utils/forEach')(math, _config);\n\n  // TODO: deprecated since version 0.25.0, remove some day.\n  math.ifElse = function () {\n    throw new Error('Function ifElse is deprecated. Use the conditional operator instead.');\n  };\n\n  // constants\n  require('./constants')(math, _config);\n\n  // attach transform functions (for converting one-based indices to zero-based)\n  math.expression.transform = {\n    concat: require('./expression/transform/concat.transform')(math, _config),\n    filter: require('./expression/transform/filter.transform')(math, _config),\n    forEach:require('./expression/transform/forEach.transform')(math, _config),\n    index:  require('./expression/transform/index.transform')(math, _config),\n    map:    require('./expression/transform/map.transform')(math, _config),\n    max:    require('./expression/transform/max.transform')(math, _config),\n    mean:   require('./expression/transform/mean.transform')(math, _config),\n    min:    require('./expression/transform/min.transform')(math, _config),\n    range:  require('./expression/transform/range.transform')(math, _config),\n    subset: require('./expression/transform/subset.transform')(math, _config)\n  };\n\n  // selector (we initialize after all functions are loaded)\n  math.chaining = {};\n  math.chaining.Chain = require('./chaining/Chain')(math, _config);\n  math.chaining.Selector = math.chaining.Chain; // TODO: deprecate in v2.0\n\n  // apply provided configuration options\n  math.config(_config); // apply the default options\n  math.config(config);  // apply custom options\n\n  // return the new instance\n  return math;\n}\n\n// create a default instance of math.js\nvar math = create();\n\nif (typeof window !== 'undefined') {\n  window.mathjs = math; // TODO: deprecate the mathjs namespace some day (replaced with 'math' since version 0.25.0)\n}\n\n// export the default instance\nmodule.exports = math;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/math.js\n ** module id = 10\n ** module chunks = 0\n **/","var arrayCopy = require('./arrayCopy'),\n    arrayEach = require('./arrayEach'),\n    baseAssign = require('./baseAssign'),\n    baseForOwn = require('./baseForOwn'),\n    initCloneArray = require('./initCloneArray'),\n    initCloneByTag = require('./initCloneByTag'),\n    initCloneObject = require('./initCloneObject'),\n    isArray = require('../lang/isArray'),\n    isObject = require('../lang/isObject');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\ncloneableTags[dateTag] = cloneableTags[float32Tag] =\ncloneableTags[float64Tag] = cloneableTags[int8Tag] =\ncloneableTags[int16Tag] = cloneableTags[int32Tag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[stringTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[mapTag] = cloneableTags[setTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * The base implementation of `_.clone` without support for argument juggling\n * and `this` binding `customizer` functions.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {Function} [customizer] The function to customize cloning values.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The object `value` belongs to.\n * @param {Array} [stackA=[]] Tracks traversed source objects.\n * @param {Array} [stackB=[]] Associates clones with source counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return arrayCopy(value, result);\n    }\n  } else {\n    var tag = objToString.call(value),\n        isFunc = tag == funcTag;\n\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return baseAssign(result, value);\n      }\n    } else {\n      return cloneableTags[tag]\n        ? initCloneByTag(value, tag, isDeep)\n        : (object ? value : {});\n    }\n  }\n  // Check for circular references and return corresponding clone.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == value) {\n      return stackB[length];\n    }\n  }\n  // Add the source value to the stack of traversed objects and associate it with its clone.\n  stackA.push(value);\n  stackB.push(result);\n\n  // Recursively populate clone (susceptible to call stack limits).\n  (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n    result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/baseClone.js\n ** module id = 11\n ** module chunks = 0\n **/","var identity = require('../utility/identity');\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\nmodule.exports = bindCallback;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/bindCallback.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Clone an object\n *\n *     clone(x)\n *\n * Can clone any primitive type, array, and object.\n * If x has a function clone, this function will be invoked to clone the object.\n *\n * @param {*} x\n * @return {*} clone\n */\nexports.clone = function clone(x) {\n  var type = typeof x;\n\n  // immutable primitive types\n  if (type === 'number' || type === 'string' || type === 'boolean' ||\n      x === null || x === undefined) {\n    return x;\n  }\n\n  // use clone function of the object when available\n  if (typeof x.clone === 'function') {\n    return x.clone();\n  }\n\n  // array\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value);\n    });\n  }\n\n  if (x instanceof Number)  return new Number(x.valueOf());\n  if (x instanceof String)  return new String(x.valueOf());\n  if (x instanceof Boolean) return new Boolean(x.valueOf());\n  if (x instanceof Date)    return new Date(x.valueOf());\n  if (x instanceof RegExp)  throw new TypeError('Cannot clone ' + x);  // TODO: clone a RegExp\n\n  // object\n  var m = {};\n  for (var key in x) {\n    if (x.hasOwnProperty(key)) {\n      m[key] = clone(x[key]);\n    }\n  }\n  return m;\n};\n\n/**\n * Extend object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n */\nexports.extend = function(a, b) {\n  for (var prop in b) {\n    if (b.hasOwnProperty(prop)) {\n      a[prop] = b[prop];\n    }\n  }\n  return a;\n};\n\n/**\n * Deep extend an object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @returns {Object}\n */\nexports.deepExtend = function deepExtend (a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend');\n  }\n\n  for (var prop in b) {\n    if (b.hasOwnProperty(prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n        if (a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop]);\n        }\n        else {\n          a[prop] = b[prop];\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend');\n      } else {\n        a[prop] = b[prop];\n      }\n    }\n  }\n  return a;\n};\n\n/**\n * Deep test equality of all fields in two pairs of arrays or objects.\n * @param {Array | Object} a\n * @param {Array | Object} b\n * @returns {boolean}\n */\nexports.deepEqual = function deepEqual (a, b) {\n  var prop, i, len;\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n\n    if (a.length != b.length) {\n      return false;\n    }\n\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!exports.deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false;\n    }\n\n    for (prop in a) {\n      //noinspection JSUnfilteredForInLoop\n      if (!exports.deepEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n    for (prop in b) {\n      //noinspection JSUnfilteredForInLoop\n      if (!exports.deepEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  else {\n    return (typeof a === typeof b) && (a == b);\n  }\n};\n\n/**\n * Test whether the current JavaScript engine supports Object.defineProperty\n * @returns {boolean} returns true if supported\n */\nexports.canDefineProperty = function () {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', {});\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n};\n\n/**\n * Attach a lazy loading property to a constant.\n * The given function `fn` is called once when the property is first requested.\n * On older browsers (<IE8), the function will fall back to direct evaluation\n * of the properties value.\n * @param {Object} object   Object where to add the property\n * @param {string} prop     Property name\n * @param {function} fn     Function returning the property value. Called\n *                          without arguments.\n */\nexports.lazy = function (object, prop, fn) {\n  if (exports.canDefineProperty()) {\n    var _uninitialized = true;\n    var _value;\n    Object.defineProperty(object, prop, {\n      get: function () {\n        if (_uninitialized) {\n          _value = fn();\n          _uninitialized = false;\n        }\n        return _value;\n      },\n\n      set: function (value) {\n        _value = value;\n        _uninitialized = false;\n      },\n\n      configurable: true\n    });\n  }\n  else {\n    // fall back to immediate evaluation\n    object[prop] = fn();\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/util/object.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\n\nvar NumberFormatter = require('./NumberFormatter');\n\n/**\n * Test whether value is a Number\n * @param {*} value\n * @return {Boolean} isNumber\n */\nexports.isNumber = function(value) {\n  return (value instanceof Number) || (typeof value == 'number');\n};\n\n/**\n * Check if a number is integer\n * @param {Number | Boolean} value\n * @return {Boolean} isInteger\n */\nexports.isInteger = function(value) {\n  return (value == Math.round(value));\n  // Note: we use ==, not ===, as we can have Booleans as well\n};\n\n/**\n * Calculate the sign of a number\n * @param {Number} x\n * @returns {*}\n */\nexports.sign = function(x) {\n  if (x > 0) {\n    return 1;\n  }\n  else if (x < 0) {\n    return -1;\n  }\n  else {\n    return 0;\n  }\n};\n\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {Number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {String} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {Number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential' and\n *                                          'auto', `precision` defines the total\n *                                          number of significant digits returned\n *                                          and is undefined by default.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point, and is 0 by default.\n *                     {Object} exponential An object containing two parameters,\n *                                          {Number} lower and {Number} upper,\n *                                          used by notation 'auto' to determine\n *                                          when to return exponential notation.\n *                                          Default values are `lower=1e-3` and\n *                                          `upper=1e5`.\n *                                          Only applicable for notation `auto`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4);                                        // '6.4'\n *    format(1240000);                                    // '1.24e6'\n *    format(1/3);                                        // '0.3333333333333333'\n *    format(1/3, 3);                                     // '0.333'\n *    format(21385, 2);                                   // '21000'\n *    format(12.071, {notation: 'fixed'});                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2});  // '2.30'\n *    format(52.8,   {notation: 'exponential'});          // '5.28e+1'\n *\n * @param {Number} value\n * @param {Object | Function | Number} [options]\n * @return {String} str The formatted value\n */\nexports.format = function(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  }\n\n  // handle special cases\n  if (value === Infinity) {\n    return 'Infinity';\n  }\n  else if (value === -Infinity) {\n    return '-Infinity';\n  }\n  else if (isNaN(value)) {\n    return 'NaN';\n  }\n\n  // default values for options\n  var notation = 'auto';\n  var precision = undefined;\n\n  if (options) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    }\n\n    // determine precision from options\n    if (exports.isNumber(options)) {\n      precision = options;\n    }\n    else if (options.precision) {\n      precision = options.precision;\n    }\n  }\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return exports.toFixed(value, precision);\n\n    case 'exponential':\n      return exports.toExponential(value, precision);\n\n    case 'auto':\n      return exports\n          .toPrecision(value, precision, options && options.exponential)\n\n          // remove trailing zeros after the decimal point\n          .replace(/((\\.\\d*?)(0+))($|e)/, function () {\n            var digits = arguments[2];\n            var e = arguments[4];\n            return (digits !== '.') ? digits + e : e;\n          });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' +\n          'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n};\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {Number} value\n * @param {Number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\nexports.toExponential = function(value, precision) {\n  return new NumberFormatter(value).toExponential(precision);\n};\n\n/**\n * Format a number with fixed notation.\n * @param {Number} value\n * @param {Number} [precision=0]        Optional number of decimals after the\n *                                      decimal point. Zero by default.\n */\nexports.toFixed = function(value, precision) {\n  return new NumberFormatter(value).toFixed(precision);\n};\n\n/**\n * Format a number with a certain precision\n * @param {Number} value\n * @param {Number} [precision=undefined] Optional number of digits.\n * @param {{lower: number, upper: number}} [options]  By default:\n *                                                    lower = 1e-3 (excl)\n *                                                    upper = 1e+5 (incl)\n * @return {string}\n */\nexports.toPrecision = function(value, precision, options) {\n  return new NumberFormatter(value).toPrecision(precision, options);\n};\n\n/**\n * Count the number of significant digits of a number.\n *\n * For example:\n *   2.34 returns 3\n *   0.0034 returns 2\n *   120.5e+30 returns 4\n *\n * @param {Number} value\n * @return {Number} digits   Number of significant digits\n */\nexports.digits = function(value) {\n  return value\n      .toExponential()\n      .replace(/e.*$/, '')          // remove exponential notation\n      .replace( /^0\\.?0*|\\./, '')   // remove decimal point and leading zeros\n      .length\n};\n\n/**\n * Minimum number added to one that makes the result different than one\n */\nexports.DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;\n\n/**\n * Compares two floating point numbers.\n * @param {Number} x          First value to compare\n * @param {Number} y          Second value to compare\n * @param {Number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are equal\n*/\nexports.nearlyEqual = function(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon == null) return x == y;\n\n  // use \"==\" operator, handles infinities\n  if (x == y) return true;\n\n  // NaN\n  if (isNaN(x) || isNaN(y)) return false;\n\n  // at this point x and y should be finite\n  if(isFinite(x) && isFinite(y)) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = Math.abs(x - y);\n    if (diff < exports.DBL_EPSILON) {\n      return true;\n    }\n    else {\n      // use relative error\n      return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;\n    }\n  }\n\n  // Infinite and Number or negative Infinite and positive Infinite cases\n  return false;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/util/number.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var object = require('./util/object');\n  var bignumber = require('./util/bignumber');\n  var Complex = require('./type/Complex');\n  var BigNumber = math.type.BigNumber;\n\n  math['true']     = true;\n  math['false']    = false;\n  math['null']     = null;\n  math['uninitialized'] = require('./util/array').UNINITIALIZED;\n\n  if (config.number === 'bignumber') {\n    math['Infinity'] = new BigNumber(Infinity);\n    math['NaN']      = new BigNumber(NaN);\n\n    object.lazy(math, 'pi',  function () {return bignumber.pi(config.precision)});\n    object.lazy(math, 'tau', function () {return bignumber.tau(config.precision)});\n    object.lazy(math, 'e',   function () {return bignumber.e(config.precision)});\n    object.lazy(math, 'phi', function () {return bignumber.phi(config.precision)}); // golden ratio, (1+sqrt(5))/2\n\n    // uppercase constants (for compatibility with built-in Math)\n    object.lazy(math, 'E',       function () {return math.e;});\n    object.lazy(math, 'LN2',     function () {return new BigNumber(2).ln();});\n    object.lazy(math, 'LN10',    function () {return new BigNumber(10).ln()});\n    object.lazy(math, 'LOG2E',   function () {return new BigNumber(1).div(new BigNumber(2).ln());});\n    object.lazy(math, 'LOG10E',  function () {return new BigNumber(1).div(new BigNumber(10).ln())});\n    object.lazy(math, 'PI',      function () {return math.pi});\n    object.lazy(math, 'SQRT1_2', function () {return new BigNumber('0.5').sqrt()});\n    object.lazy(math, 'SQRT2',   function () {return new BigNumber(2).sqrt()});\n  }\n  else {\n    math['Infinity'] = Infinity;\n    math['NaN']      = NaN;\n\n    math.pi  = Math.PI;\n    math.tau = Math.PI * 2;\n    math.e   = Math.E;\n    math.phi = 1.61803398874989484820458683436563811772030917980576286213545; // golden ratio, (1+sqrt(5))/2\n\n    // uppercase constants (for compatibility with built-in Math)\n    math.E           = math.e;\n    math.LN2         = Math.LN2;\n    math.LN10        = Math.LN10;\n    math.LOG2E       = Math.LOG2E;\n    math.LOG10E      = Math.LOG10E;\n    math.PI          = math.pi;\n    math.SQRT1_2     = Math.SQRT1_2;\n    math.SQRT2       = Math.SQRT2;\n  }\n\n  // complex i\n  math.i = new Complex(0, 1);\n\n  // meta information\n  math.version = require('./version');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/constants.js\n ** module id = 15\n ** module chunks = 0\n **/","var BigNumber = require('decimal.js');\n\n// FIXME: replace all require('decimal.js') with require('./BigNumber').\n\nmodule.exports = BigNumber;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/type/BigNumber.js\n ** module id = 16\n ** module chunks = 0\n **/","'use strict';\n\nexports.ArgumentsError = require('./ArgumentsError');\nexports.DimensionError = require('./DimensionError');\nexports.IndexError = require('./IndexError');\nexports.UnsupportedTypeError = require('./UnsupportedTypeError');\n\n// TODO: implement an InvalidValueError?\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/error/index.js\n ** module id = 17\n ** module chunks = 0\n **/","'use strict';\n\nvar util = require('../util/index'),\n    Unit = require('./Unit'),\n    number = util.number,\n\n    isNumber = util.number.isNumber,\n    isUnit = Unit.isUnit,\n    isString = util.string.isString;\n\n/**\n * @constructor Complex\n *\n * A complex value can be constructed in the following ways:\n *     var a = new Complex();\n *     var b = new Complex(re, im);\n *     var c = Complex.parse(str);\n *\n * Example usage:\n *     var a = new Complex(3, -4);      // 3 - 4i\n *     a.re = 5;                        // a = 5 - 4i\n *     var i = a.im;                    // -4;\n *     var b = Complex.parse('2 + 6i'); // 2 + 6i\n *     var c = new Complex();           // 0 + 0i\n *     var d = math.add(a, b);          // 5 + 2i\n *\n * @param {Number} re       The real part of the complex value\n * @param {Number} [im]     The imaginary part of the complex value\n */\nfunction Complex(re, im) {\n  if (!(this instanceof Complex)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  switch (arguments.length) {\n    case 0:\n      this.re = 0;\n      this.im = 0;\n      break;\n\n    case 1:\n      var arg = arguments[0];\n      if (typeof arg === 'object') {\n        if('re' in arg && 'im' in arg) {\n          var construct = new Complex(arg.re, arg.im); // pass on input validation\n          this.re = construct.re;\n          this.im = construct.im;\n          break;\n        } else if ('r' in arg && 'phi' in arg) {\n          var construct = Complex.fromPolar(arg.r, arg.phi);\n          this.re = construct.re;\n          this.im = construct.im;\n          break;\n        }\n      }\n      throw new SyntaxError('Object with the re and im or r and phi properties expected.');\n\n    case 2:\n      if (!isNumber(re) || !isNumber(im)) {\n        throw new TypeError('Two numbers expected in Complex constructor');\n      }\n      this.re = re;\n      this.im = im;\n      break;\n\n    default:\n      throw new SyntaxError('One, two or three arguments expected in Complex constructor');\n  }\n}\n\n/**\n * Test whether value is a Complex value\n * @param {*} value\n * @return {Boolean} isComplex\n */\nComplex.isComplex = function (value) {\n  return (value instanceof Complex);\n};\n\n// private variables and functions for the parser\nvar text, index, c;\n\nfunction skipWhitespace() {\n  while (c == ' ' || c == '\\t') {\n    next();\n  }\n}\n\nfunction isDigitDot (c) {\n  return ((c >= '0' && c <= '9') || c == '.');\n}\n\nfunction isDigit (c) {\n  return ((c >= '0' && c <= '9'));\n}\n\nfunction next() {\n  index++;\n  c = text.charAt(index);\n}\n\nfunction revert(oldIndex) {\n  index = oldIndex;\n  c = text.charAt(index);\n}\n\nfunction parseNumber () {\n  var number = '';\n  var oldIndex;\n  oldIndex = index;\n\n  if (c == '+') {\n    next();\n  }\n  else if (c == '-') {\n    number += c;\n    next();\n  }\n\n  if (!isDigitDot(c)) {\n    // a + or - must be followed by a digit\n    revert(oldIndex);\n    return null;\n  }\n\n  // get number, can have a single dot\n  if (c == '.') {\n    number += c;\n    next();\n    if (!isDigit(c)) {\n      // this is no legal number, it is just a dot\n      revert(oldIndex);\n      return null;\n    }\n  }\n  else {\n    while (isDigit(c)) {\n      number += c;\n      next();\n    }\n    if (c == '.') {\n      number += c;\n      next();\n    }\n  }\n  while (isDigit(c)) {\n    number += c;\n    next();\n  }\n\n  // check for exponential notation like \"2.3e-4\" or \"1.23e50\"\n  if (c == 'E' || c == 'e') {\n    number += c;\n    next();\n\n    if (c == '+' || c == '-') {\n      number += c;\n      next();\n    }\n\n    // Scientific notation MUST be followed by an exponent\n    if (!isDigit(c)) {\n      // this is no legal number, exponent is missing.\n      revert(oldIndex);\n      return null;\n    }\n\n    while (isDigit(c)) {\n      number += c;\n      next();\n    }\n  }\n\n  return number;\n}\n\nfunction parseComplex () {\n  // check for 'i', '-i', '+i'\n  var cnext = text.charAt(index + 1);\n  if (c == 'I' || c == 'i') {\n    next();\n    return '1';\n  }\n  else if ((c == '+' || c == '-') && (cnext == 'I' || cnext == 'i')) {\n    var number = (c == '+') ? '1' : '-1';\n    next();\n    next();\n    return number;\n  }\n\n  return null;\n}\n\n/**\n * Parse a complex number from a string. For example Complex.parse(\"2 + 3i\")\n * will return a Complex value where re = 2, im = 3.\n * Returns null if provided string does not contain a valid complex number.\n * @param {String} str\n * @returns {Complex | null} complex\n */\nComplex.parse = function (str) {\n  text = str;\n  index = -1;\n  c = '';\n\n  if (!isString(text)) {\n    return null;\n  }\n\n  next();\n  skipWhitespace();\n  var first = parseNumber();\n  if (first) {\n    if (c == 'I' || c == 'i') {\n      // pure imaginary number\n      next();\n      skipWhitespace();\n      if (c) {\n        // garbage at the end. not good.\n        return null;\n      }\n\n      return new Complex(0, Number(first));\n    }\n    else {\n      // complex and real part\n      skipWhitespace();\n      var separator = c;\n      if (separator != '+' && separator != '-') {\n        // pure real number\n        skipWhitespace();\n        if (c) {\n          // garbage at the end. not good.\n          return null;\n        }\n\n        return new Complex(Number(first), 0);\n      }\n      else {\n        // complex and real part\n        next();\n        skipWhitespace();\n        var second = parseNumber();\n        if (second) {\n          if (c != 'I' && c != 'i') {\n            // 'i' missing at the end of the complex number\n            return null;\n          }\n          next();\n        }\n        else {\n          second = parseComplex();\n          if (!second) {\n            // imaginary number missing after separator\n            return null;\n          }\n        }\n\n        if (separator == '-') {\n          if (second[0] == '-') {\n            second =  '+' + second.substring(1);\n          }\n          else {\n            second = '-' + second;\n          }\n        }\n\n        next();\n        skipWhitespace();\n        if (c) {\n          // garbage at the end. not good.\n          return null;\n        }\n\n        return new Complex(Number(first), Number(second));\n      }\n    }\n  }\n  else {\n    // check for 'i', '-i', '+i'\n    first = parseComplex();\n    if (first) {\n      skipWhitespace();\n      if (c) {\n        // garbage at the end. not good.\n        return null;\n      }\n\n      return new Complex(0, Number(first));\n    }\n  }\n\n  return null;\n};\n\n/**\n * Create a complex number from polar coordinates\n *\n * Usage:\n *\n *     Complex.fromPolar(r: Number, phi: Number) : Complex\n *     Complex.fromPolar({r: Number, phi: Number}) : Complex\n *\n * @param {*} args...\n * @return {Complex}\n */\nComplex.fromPolar = function (args) {\n  switch (arguments.length) {\n    case 1:\n      var arg = arguments[0];\n      if(typeof arg === 'object') {\n        return Complex.fromPolar(arg.r, arg.phi);\n      }\n      throw new TypeError('Input has to be an object with r and phi keys.');\n\n    case 2:\n      var r = arguments[0],\n        phi = arguments[1];\n      if(isNumber(r)) {\n        if (isUnit(phi) && phi.hasBase(Unit.BASE_UNITS.ANGLE)) {\n          // convert unit to a number in radians\n          phi = phi.toNumber('rad');\n        }\n\n        if(isNumber(phi)) {\n          return new Complex(r * Math.cos(phi), r * Math.sin(phi));\n        }\n\n        throw new TypeError('Phi is not a number nor an angle unit.');\n      } else {\n        throw new TypeError('Radius r is not a number.');\n      }\n\n    default:\n      throw new SyntaxError('Wrong number of arguments in function fromPolar');\n  }\n};\n\n/*\n * Return the value of the complex number in polar notation\n * The angle phi will be set in the interval of [-pi, pi].\n * @return {{r: number, phi: number}} Returns and object with properties r and phi.\n */\nComplex.prototype.toPolar = function() {\n  return {\n    r: Math.sqrt(this.re * this.re + this.im * this.im),\n    phi: Math.atan2(this.im, this.re)\n  };\n};\n\n/**\n * Create a copy of the complex value\n * @return {Complex} clone\n */\nComplex.prototype.clone = function () {\n  return new Complex(this.re, this.im);\n};\n\n/**\n * Test whether this complex number equals an other complex value.\n * Two complex numbers are equal when both their real and imaginary parts\n * are equal.\n * @param {Complex} other\n * @return {boolean} isEqual\n */\nComplex.prototype.equals = function (other) {\n  return (this.re === other.re) && (this.im === other.im);\n};\n\n/**\n * Get a string representation of the complex number,\n * with optional formatting options.\n * @param {Object | Number | Function} [options]  Formatting options. See\n *                                                lib/util/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {String} str\n */\nComplex.prototype.format = function (options) {\n  var str = '';\n  var im = this.im;\n  var re = this.re;\n  var strRe = number.format(this.re, options);\n  var strIm = number.format(this.im, options);\n\n  // round either re or im when smaller than the configured precision\n  var precision = isNumber(options) ? options : options ? options.precision : null;\n  if (precision !== null) {\n    var epsilon = Math.pow(10, -precision);\n    if (Math.abs(re / im) < epsilon) {re = 0;}\n    if (Math.abs(im / re) < epsilon) {im = 0;}\n  }\n\n  if (im == 0) {\n    // real value\n    str = strRe;\n  }\n  else if (re == 0) {\n    // purely complex value\n    if (im == 1) {\n      str = 'i';\n    }\n    else if (im == -1) {\n      str = '-i';\n    }\n    else {\n      str = strIm + 'i';\n    }\n  }\n  else {\n    // complex value\n    if (im > 0) {\n      if (im == 1) {\n        str = strRe + ' + i';\n      }\n      else {\n        str = strRe + ' + ' + strIm + 'i';\n      }\n    }\n    else {\n      if (im == -1) {\n        str = strRe + ' - i';\n      }\n      else {\n        str = strRe + ' - ' + strIm.substring(1) + 'i';\n      }\n    }\n  }\n\n  return str;\n};\n\n/**\n * Get a string representation of the complex number.\n * @return {String} str\n */\nComplex.prototype.toString = function () {\n  return this.format();\n};\n\n/**\n * Get a JSON representation of the complex number\n * @returns {Object} Returns a JSON object structured as:\n *                   `{\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}`\n */\nComplex.prototype.toJSON = function () {\n  return {\n    mathjs: 'Complex',\n    re: this.re,\n    im: this.im\n  };\n};\n\n/**\n * Create a Complex number from a JSON object\n * @param {Object} json  A JSON Object structured as\n *                       {\"mathjs\": \"Complex\", \"re\": 2, \"im\": 3}\n *                       All properties are optional, default values\n *                       for `re` and `im` are 0.\n * @return {Complex} Returns a new Complex number\n */\nComplex.fromJSON = function (json) {\n  return new Complex(json);\n};\n\n/**\n * Returns a string representation of the complex number.\n * @return {String} str\n */\nComplex.prototype.valueOf = Complex.prototype.toString;\n\n// exports\nmodule.exports = Complex;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/type/Complex.js\n ** module id = 18\n ** module chunks = 0\n **/","'use strict';\n\nvar util = require('../util/index');\n\nvar number = util.number;\nvar string = util.string;\nvar array = util.array;\n\n/**\n * @constructor Range\n * Create a range. A range has a start, step, and end, and contains functions\n * to iterate over the range.\n *\n * A range can be constructed as:\n *     var range = new Range(start, end);\n *     var range = new Range(start, end, step);\n *\n * To get the result of the range:\n *     range.forEach(function (x) {\n *         console.log(x);\n *     });\n *     range.map(function (x) {\n *         return math.sin(x);\n *     });\n *     range.toArray();\n *\n * Example usage:\n *     var c = new Range(2, 6);         // 2:1:5\n *     c.toArray();                     // [2, 3, 4, 5]\n *     var d = new Range(2, -3, -1);    // 2:-1:-2\n *     d.toArray();                     // [2, 1, 0, -1, -2]\n *\n * @param {Number} start  included lower bound\n * @param {Number} end    excluded upper bound\n * @param {Number} [step] step size, default value is 1\n */\nfunction Range(start, end, step) {\n  if (!(this instanceof Range)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (start != null && !number.isNumber(start)) {\n    throw new TypeError('Parameter start must be a number');\n  }\n  if (end != null && !number.isNumber(end)) {\n    throw new TypeError('Parameter end must be a number');\n  }\n  if (step != null && !number.isNumber(step)) {\n    throw new TypeError('Parameter step must be a number');\n  }\n\n  this.start = (start != null) ? parseFloat(start) : 0;\n  this.end   = (end != null) ? parseFloat(end) : 0;\n  this.step  = (step != null) ? parseFloat(step) : 1;\n}\n\n/**\n * Parse a string into a range,\n * The string contains the start, optional step, and end, separated by a colon.\n * If the string does not contain a valid range, null is returned.\n * For example str='0:2:11'.\n * @param {String} str\n * @return {Range | null} range\n */\nRange.parse = function (str) {\n  if (!string.isString(str)) {\n    return null;\n  }\n\n  var args = str.split(':');\n  var nums = args.map(function (arg) {\n    return parseFloat(arg);\n  });\n\n  var invalid = nums.some(function (num) {\n    return isNaN(num);\n  });\n  if(invalid) {\n    return null;\n  }\n\n  switch (nums.length) {\n    case 2: return new Range(nums[0], nums[1]);\n    case 3: return new Range(nums[0], nums[2], nums[1]);\n    default: return null;\n  }\n};\n\n/**\n * Create a clone of the range\n * @return {Range} clone\n */\nRange.prototype.clone = function () {\n  return new Range(this.start, this.end, this.step);\n};\n\n/**\n * Test whether an object is a Range\n * @param {*} object\n * @return {Boolean} isRange\n */\nRange.isRange = function (object) {\n  return (object instanceof Range);\n};\n\n/**\n * Retrieve the size of the range.\n * Returns an array containing one number, the number of elements in the range.\n * @returns {Number[]} size\n */\nRange.prototype.size = function () {\n  var len = 0,\n      start = this.start,\n      step = this.step,\n      end = this.end,\n      diff = end - start;\n\n  if (number.sign(step) == number.sign(diff)) {\n    len = Math.ceil((diff) / step);\n  }\n  else if (diff == 0) {\n    len = 0;\n  }\n\n  if (isNaN(len)) {\n    len = 0;\n  }\n  return [len];\n};\n\n/**\n * Calculate the minimum value in the range\n * @return {Number | undefined} min\n */\nRange.prototype.min = function () {\n  var size = this.size()[0];\n\n  if (size > 0) {\n    if (this.step > 0) {\n      // positive step\n      return this.start;\n    }\n    else {\n      // negative step\n      return this.start + (size - 1) * this.step;\n    }\n  }\n  else {\n    return undefined;\n  }\n};\n\n/**\n * Calculate the maximum value in the range\n * @return {Number | undefined} max\n */\nRange.prototype.max = function () {\n  var size = this.size()[0];\n\n  if (size > 0) {\n    if (this.step > 0) {\n      // positive step\n      return this.start + (size - 1) * this.step;\n    }\n    else {\n      // negative step\n      return this.start;\n    }\n  }\n  else {\n    return undefined;\n  }\n};\n\n\n/**\n * Execute a callback function for each value in the range.\n * @param {function} callback   The callback method is invoked with three\n *                              parameters: the value of the element, the index\n *                              of the element, and the Matrix being traversed.\n */\nRange.prototype.forEach = function (callback) {\n  var x = this.start;\n  var step = this.step;\n  var end = this.end;\n  var i = 0;\n\n  if (step > 0) {\n    while (x < end) {\n      callback(x, i, this);\n      x += step;\n      i++;\n    }\n  }\n  else if (step < 0) {\n    while (x > end) {\n      callback(x, i, this);\n      x += step;\n      i++;\n    }\n  }\n};\n\n/**\n * Execute a callback function for each value in the Range, and return the\n * results as an array\n * @param {function} callback   The callback method is invoked with three\n *                              parameters: the value of the element, the index\n *                              of the element, and the Matrix being traversed.\n * @returns {Array} array\n */\nRange.prototype.map = function (callback) {\n  var array = [];\n  this.forEach(function (value, index, obj) {\n    array[index] = callback(value, index, obj);\n  });\n  return array;\n};\n\n/**\n * Create an Array with a copy of the Ranges data\n * @returns {Array} array\n */\nRange.prototype.toArray = function () {\n  var array = [];\n  this.forEach(function (value, index) {\n    array[index] = value;\n  });\n  return array;\n};\n\n/**\n * Get the primitive value of the Range, a one dimensional array\n * @returns {Array} array\n */\nRange.prototype.valueOf = function () {\n  // TODO: implement a caching mechanism for range.valueOf()\n  return this.toArray();\n};\n\n/**\n * Get a string representation of the range, with optional formatting options.\n * Output is formatted as 'start:step:end', for example '2:6' or '0:0.2:11'\n * @param {Object | Number | Function} [options]  Formatting options. See\n *                                                lib/util/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {String} str\n */\nRange.prototype.format = function (options) {\n  var str = number.format(this.start, options);\n\n  if (this.step != 1) {\n    str += ':' + number.format(this.step, options);\n  }\n  str += ':' + number.format(this.end, options);\n  return str;\n};\n\n/**\n * Get a string representation of the range.\n * @returns {String}\n */\nRange.prototype.toString = function () {\n  return this.format();\n};\n\n/**\n * Get a JSON representation of the range\n * @returns {Object} Returns a JSON object structured as:\n *                   `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n */\nRange.prototype.toJSON = function () {\n  return {\n    mathjs: 'Range',\n    start: this.start,\n    end: this.end,\n    step: this.step\n  };\n};\n\n/**\n * Instantiate a Range from a JSON object\n * @param {Object} json A JSON object structured as:\n *                      `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n * @return {Range}\n */\nRange.fromJSON = function (json) {\n  return new Range(json.start, json.end, json.step);\n};\n\n// exports\nmodule.exports = Range;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/type/Range.js\n ** module id = 19\n ** module chunks = 0\n **/","'use strict';\n\nvar util = require('../util/index'),\n\n    Range = require('./Range'),\n\n    number = util.number,\n\n    isNumber = number.isNumber,\n    isInteger = number.isInteger,\n    isArray = Array.isArray;\n\n/**\n * @Constructor Index\n * Create an index. An Index can store ranges having start, step, and end\n * for multiple dimensions.\n * Matrix.get, Matrix.set, and math.subset accept an Index as input.\n *\n * Usage:\n *     var index = new Index(range1, range2, ...);\n *\n * Where each range can be any of:\n *     An array [start, end]\n *     An array [start, end, step]\n *     A number\n *     An instance of Range\n *\n * The parameters start, end, and step must be integer numbers.\n *\n * @param {...*} ranges\n */\nfunction Index(ranges) {\n  if (!(this instanceof Index)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this._ranges = [];\n  this._isScalar = true;\n\n  for (var i = 0, ii = arguments.length; i < ii; i++) {\n    var arg = arguments[i];\n\n    if (arg instanceof Range) {\n      this._ranges.push(arg);\n      this._isScalar = false;\n    }\n    else if (isArray(arg)) {\n      this._ranges.push(_createRange(arg));\n      this._isScalar = false;\n    }\n    else if (isNumber(arg)) {\n      this._ranges.push(_createRange([arg, arg + 1]));\n    }\n    // TODO: implement support for wildcard '*'\n    else {\n      var primitive = arg.valueOf(); // for example turn a Matrix into an Array\n      if (isArray(primitive)) {\n        this._ranges.push(_createRange(primitive));\n        this._isScalar = false;\n      }\n      else {\n        throw new TypeError('Ranges must be an Array, Number, or Range');\n      }\n    }\n  }\n}\n\n/**\n * Parse an argument into a range and validate the range\n * @param {Array} arg  An array with [start: Number, end: Number] and\n *                     optional a third element step:Number\n * @return {Range} range\n * @private\n */\nfunction _createRange(arg) {\n  // TODO: make function _createRange simpler/faster\n\n  // test whether all arguments are integers\n  var num = arg.length;\n  for (var i = 0; i < num; i++) {\n    if (!isNumber(arg[i]) || !isInteger(arg[i])) {\n      throw new TypeError('Index parameters must be integer numbers');\n    }\n  }\n\n  switch (arg.length) {\n    case 2:\n      return new Range(arg[0], arg[1]); // start, end\n    case 3:\n      return new Range(arg[0], arg[1], arg[2]); // start, end, step\n    default:\n      // TODO: improve error message\n      throw new SyntaxError('Wrong number of arguments in Index (2 or 3 expected)');\n  }\n}\n\n/**\n * Create a clone of the index\n * @return {Index} clone\n */\nIndex.prototype.clone = function () {\n  var index = new Index();\n  index._ranges = util.object.clone(this._ranges);\n  index._isScalar = this._isScalar;\n  return index;\n};\n\n/**\n * Test whether an object is an Index\n * @param {*} object\n * @return {Boolean} isIndex\n */\nIndex.isIndex = function (object) {\n  return (object instanceof Index);\n};\n\n/**\n * Create an index from an array with ranges/numbers\n * @param {Array.<Array | Number>} ranges\n * @return {Index} index\n * @private\n */\nIndex.create = function (ranges) {\n  var index = new Index();\n  Index.apply(index, ranges);\n  return index;\n};\n\n/**\n * Retrieve the size of the index, the number of elements for each dimension.\n * @returns {Number[]} size\n */\nIndex.prototype.size = function () {\n  var size = [];\n\n  for (var i = 0, ii = this._ranges.length; i < ii; i++) {\n    var range = this._ranges[i];\n\n    size[i] = range.size()[0];\n  }\n\n  return size;\n};\n\n/**\n * Get the maximum value for each of the indexes ranges.\n * @returns {Number[]} max\n */\nIndex.prototype.max = function () {\n  var values = [];\n\n  for (var i = 0, ii = this._ranges.length; i < ii; i++) {\n    var range = this._ranges[i];\n    values[i] = range.max();\n  }\n\n  return values;\n};\n\n/**\n * Get the minimum value for each of the indexes ranges.\n * @returns {Number[]} min\n */\nIndex.prototype.min = function () {\n  var values = [];\n\n  for (var i = 0, ii = this._ranges.length; i < ii; i++) {\n    var range = this._ranges[i];\n\n    values[i] = range.min();\n  }\n\n  return values;\n};\n\n/**\n * Loop over each of the ranges of the index\n * @param {function} callback   Called for each range with a Range as first\n *                              argument, the dimension as second, and the\n *                              index object as third.\n */\nIndex.prototype.forEach = function (callback) {\n  for (var i = 0, ii = this._ranges.length; i < ii; i++) {\n    callback(this._ranges[i], i, this);\n  }\n};\n\n/**\n * Retrieve the range for a given dimension number from the index\n * @param {Number} dim                  Number of the dimension\n * @returns {Range | null} range\n */\nIndex.prototype.range = function(dim) {\n  return this._ranges[dim] || null;\n};\n\n/**\n * Test whether this index contains only a single value.\n *\n * This is the case when the index is created with only scalar values as ranges,\n * not for ranges resolving into a single value.\n * @return {boolean} isScalar\n */\nIndex.prototype.isScalar = function () {\n  return this._isScalar;\n};\n\n/**\n * Expand the Index into an array.\n * For example new Index([0,3], [2,7]) returns [[0,1,2], [2,3,4,5,6]]\n * @returns {Array} array\n */\nIndex.prototype.toArray = function () {\n  var array = [];\n  for (var i = 0, ii = this._ranges.length; i < ii; i++) {\n    var range = this._ranges[i],\n        row = [],\n        x = range.start,\n        end = range.end,\n        step = range.step;\n\n    if (step > 0) {\n      while (x < end) {\n        row.push(x);\n        x += step;\n      }\n    }\n    else if (step < 0) {\n      while (x > end) {\n        row.push(x);\n        x += step;\n      }\n    }\n\n    array.push(row);\n  }\n\n  return array;\n};\n\n/**\n * Get the primitive value of the Index, a two dimensional array.\n * Equivalent to Index.toArray().\n * @returns {Array} array\n */\nIndex.prototype.valueOf = Index.prototype.toArray;\n\n/**\n * Get the string representation of the index, for example '[2:6]' or '[0:2:10, 4:7]'\n * @returns {String} str\n */\nIndex.prototype.toString = function () {\n  var strings = [];\n\n  for (var i = 0, ii = this._ranges.length; i < ii; i++) {\n    var range = this._ranges[i];\n    var str = number.format(range.start);\n    if (range.step != 1) {\n      str += ':' + number.format(range.step);\n    }\n    str += ':' + number.format(range.end);\n    strings.push(str);\n  }\n\n  return '[' + strings.join(', ') + ']';\n};\n\n/**\n * Get a JSON representation of the Index\n * @returns {Object} Returns a JSON object structured as:\n *                   `{\"mathjs\": \"Index\", \"ranges\": [{\"mathjs\": \"Range\", start: 0, end: 10, step:1}, ...]}`\n */\nIndex.prototype.toJSON = function () {\n  return {\n    mathjs: 'Index',\n    ranges: this._ranges\n  };\n};\n\n/**\n * Instantiate an Index from a JSON object\n * @param {Object} json A JSON object structured as:\n *                     `{\"mathjs\": \"Index\", \"ranges\": [{\"mathjs\": \"Range\", start: 0, end: 10, step:1}, ...]}`\n * @return {Index}\n */\nIndex.fromJSON = function (json) {\n  return Index.create(json.ranges);\n};\n\n// exports\nmodule.exports = Index;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/type/Index.js\n ** module id = 20\n ** module chunks = 0\n **/","'use strict';\n\nvar string = require('../util/string'),\n\n    isString = string.isString;\n\nmodule.exports = function (config) {\n\n  /**\n   * @constructor Matrix\n   *\n   * A Matrix is a wrapper around an Array. A matrix can hold a multi dimensional\n   * array. A matrix can be constructed as:\n   *     var matrix = math.matrix(data)\n   *\n   * Matrix contains the functions to resize, get and set values, get the size,\n   * clone the matrix and to convert the matrix to a vector, array, or scalar.\n   * Furthermore, one can iterate over the matrix using map and forEach.\n   * The internal Array of the Matrix can be accessed using the function valueOf.\n   *\n   * Example usage:\n   *     var matrix = math.matrix([[1, 2], [3, 4]]);\n   *     matix.size();              // [2, 2]\n   *     matrix.resize([3, 2], 5);\n   *     matrix.valueOf();          // [[1, 2], [3, 4], [5, 5]]\n   *     matrix.subset([1,2])       // 3 (indexes are zero-based)\n   *\n   */\n  function Matrix() {\n    if (!(this instanceof Matrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n  }\n\n  /**\n   * Test whether an object is a Matrix\n   * @param {*} object\n   * @return {Boolean} isMatrix\n   */\n  Matrix.isMatrix = function (object) {\n    return (object instanceof Matrix);\n  };\n\n  /**\n   * Get the Matrix storage constructor for the given format.\n   *\n   * @param {string} format       The Matrix storage format.\n   *\n   * @return {Function}           The Matrix storage constructor.\n   */\n  Matrix.storage = function (format) {\n    // check storage format is a string\n    if (!isString(format)) {\n      throw new TypeError('format must be a string value');\n    }\n\n    // get storage format constructor\n    var constructor = Matrix._storage[format];\n    if (!constructor) {\n      throw new SyntaxError('Unsupported matrix storage format: ' + format);\n    }\n\n    // return storage constructor\n    return constructor;\n  };\n\n  // a map with all constructors for all storage types\n  Matrix._storage = {};\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n  Matrix.prototype.storage = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke storage on a Matrix interface');\n  };\n  \n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  Matrix.prototype.subset = function (index, replacement, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke subset on a Matrix interface');\n  };\n\n  /**\n   * Get a single element from the matrix.\n   * @param {Number[]} index   Zero-based index\n   * @return {*} value\n   */\n  Matrix.prototype.get = function (index) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke get on a Matrix interface');\n  };\n\n  /**\n   * Replace a single element in the matrix.\n   * @param {Number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {Matrix} self\n   */\n  Matrix.prototype.set = function (index, value, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke set on a Matrix interface');\n  };\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when \n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {Number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  Matrix.prototype.resize = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke resize on a Matrix interface');\n  };\n\n  /**\n   * Create a clone of the matrix\n   * @return {Matrix} clone\n   */\n  Matrix.prototype.clone = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke clone on a Matrix interface');\n  };\n\n  /**\n   * Retrieve the size of the matrix.\n   * @returns {Number[]} size\n   */\n  Matrix.prototype.size = function() {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke size on a Matrix interface');\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Matrix} matrix\n   */\n  Matrix.prototype.map = function (callback, skipZeros) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke map on a Matrix interface');\n  };\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  Matrix.prototype.forEach = function (callback) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke forEach on a Matrix interface');\n  };\n\n  /**\n   * Create an Array with a copy of the data of the Matrix\n   * @returns {Array} array\n   */\n  Matrix.prototype.toArray = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toArray on a Matrix interface');\n  };\n\n  /**\n   * Get the primitive value of the Matrix: a multidimensional array\n   * @returns {Array} array\n   */\n  Matrix.prototype.valueOf = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke valueOf on a Matrix interface');\n  };\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | Number | Function} [options]  Formatting options. See\n   *                                                lib/util/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {String} str\n   */\n  Matrix.prototype.format = function (options) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke format on a Matrix interface');\n  };\n\n  /**\n   * Get a string representation of the matrix\n   * @returns {String} str\n   */\n  Matrix.prototype.toString = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toString on a Matrix interface');\n  };\n\n  /**\n   * Calculates the transpose of the matrix\n   * @returns {Matrix}\n   */\n  Matrix.prototype.transpose = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke transpose on a Matrix interface');\n  };\n\n  /**\n   * Calculate the trace of a matrix: the sum of the elements on the main\n   * diagonal of a square matrix.\n   *\n   * See also:\n   *\n   *    diagonal\n   *\n   * @returns {Number}       The matrix trace\n   */\n  Matrix.prototype.trace = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke transpose on a Matrix interface');\n  };\n\n  /**\n   * Multiply the matrix values times the argument.\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} Value to multiply.\n   *\n   * @return {Number | BigNumber | Complex | Unit | Matrix}\n   */\n  Matrix.prototype.multiply = function (value) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke multiply on a Matrix interface');\n  };\n  \n  // exports\n  return Matrix;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/type/Matrix.js\n ** module id = 21\n ** module chunks = 0\n **/","'use strict';\n\nvar util = require('../util/index'),\n\n    number = util.number,\n    string = util.string,\n    isNumber = util.number.isNumber,\n    isString = util.string.isString;\n\n/**\n * @constructor Unit\n *\n * A unit can be constructed in the following ways:\n *     var a = new Unit(value, name);\n *     var b = new Unit(null, name);\n *     var c = Unit.parse(str);\n *\n * Example usage:\n *     var a = new Unit(5, 'cm');               // 50 mm\n *     var b = Unit.parse('23 kg');             // 23 kg\n *     var c = math.in(a, new Unit(null, 'm');  // 0.05 m\n *\n * @param {Number} [value]  A value like 5.2\n * @param {String} [name]   A unit name like \"cm\" or \"inch\". Can include a prefix\n */\nfunction Unit(value, name) {\n  if (!(this instanceof Unit)) {\n    throw new Error('Constructor must be called with the new operator');\n  }\n\n  if (value != undefined && !isNumber(value)) {\n    throw new TypeError('First parameter in Unit constructor must be a number');\n  }\n  if (name != undefined && (!isString(name) || name == '')) {\n    throw new TypeError('Second parameter in Unit constructor must be a string');\n  }\n\n  if (name != undefined) {\n    // find the unit and prefix from the string\n    var res = _findUnit(name);\n    if (!res) {\n      throw new SyntaxError('Unknown unit \"' + name + '\"');\n    }\n    this.unit = res.unit;\n    this.prefix = res.prefix;\n  }\n  else {\n    this.unit = UNIT_NONE;\n    this.prefix = PREFIX_NONE;  // link to a list with supported prefixes\n  }\n\n  this.value = (value != undefined) ? this._normalize(value) : null;\n  this.fixPrefix = false; // if true, function format will not search for the\n                          // best prefix but leave it as initially provided.\n                          // fixPrefix is set true by the method Unit.to\n}\n\n// private variables and functions for the Unit parser\nvar text, index, c;\n\nfunction skipWhitespace() {\n  while (c == ' ' || c == '\\t') {\n    next();\n  }\n}\n\nfunction isDigitDot (c) {\n  return ((c >= '0' && c <= '9') || c == '.');\n}\n\nfunction isDigit (c) {\n  return ((c >= '0' && c <= '9'));\n}\n\nfunction next() {\n  index++;\n  c = text.charAt(index);\n}\n\nfunction revert(oldIndex) {\n  index = oldIndex;\n  c = text.charAt(index);\n}\n\nfunction parseNumber () {\n  var number = '';\n  var oldIndex;\n  oldIndex = index;\n\n  if (c == '+') {\n    next();\n  }\n  else if (c == '-') {\n    number += c;\n    next();\n  }\n\n  if (!isDigitDot(c)) {\n    // a + or - must be followed by a digit\n    revert(oldIndex);\n    return null;\n  }\n\n  // get number, can have a single dot\n  if (c == '.') {\n    number += c;\n    next();\n    if (!isDigit(c)) {\n      // this is no legal number, it is just a dot\n      revert(oldIndex);\n      return null;\n    }\n  }\n  else {\n    while (isDigit(c)) {\n      number += c;\n      next();\n    }\n    if (c == '.') {\n      number += c;\n      next();\n    }\n  }\n  while (isDigit(c)) {\n    number += c;\n    next();\n  }\n\n  // check for exponential notation like \"2.3e-4\" or \"1.23e50\"\n  if (c == 'E' || c == 'e') {\n    number += c;\n    next();\n\n    if (c == '+' || c == '-') {\n      number += c;\n      next();\n    }\n\n    // Scientific notation MUST be followed by an exponent\n    if (!isDigit(c)) {\n      // this is no legal number, exponent is missing.\n      revert(oldIndex);\n      return null;\n    }\n\n    while (isDigit(c)) {\n      number += c;\n      next();\n    }\n  }\n\n  return number;\n}\n\nfunction parseUnit() {\n  var unitName = '';\n\n  skipWhitespace();\n  while (c && c != ' ' && c != '\\t') {\n    unitName += c;\n    next();\n  }\n\n  return unitName || null;\n}\n\n/**\n * Parse a string into a unit. Returns null if the provided string does not\n * contain a valid unit.\n * @param {String} str        A string like \"5.2 inch\", \"4e2 kg\"\n * @return {Unit | null} unit\n */\nUnit.parse = function(str) {\n  text = str;\n  index = -1;\n  c = '';\n\n  if (!isString(text)) {\n    return null;\n  }\n\n  next();\n  skipWhitespace();\n  var value = parseNumber();\n  var name;\n  if (value) {\n    name = parseUnit();\n\n    next();\n    skipWhitespace();\n    if (c) {\n      // garbage at the end. not good.\n      return null;\n    }\n\n    if (value && name) {\n      try {\n        // constructor will throw an error when unit is not found\n        return new Unit(Number(value), name);\n      }\n      catch (err) {}\n    }\n  }\n  else {\n    name = parseUnit();\n\n    next();\n    skipWhitespace();\n    if (c) {\n      // garbage at the end. not good.\n      return null;\n    }\n\n    if (name) {\n      try {\n        // constructor will throw an error when unit is not found\n        return new Unit(null, name);\n      }\n      catch (err) {}\n    }\n  }\n\n  return null;\n};\n\n/**\n * Test whether value is of type Unit\n * @param {*} value\n * @return {Boolean} isUnit\n */\nUnit.isUnit = function(value) {\n  return (value instanceof Unit);\n};\n\n/**\n * create a copy of this unit\n * @return {Unit} clone\n */\nUnit.prototype.clone = function () {\n  var clone = new Unit();\n\n  for (var p in this) {\n    if (this.hasOwnProperty(p)) {\n      clone[p] = this[p];\n    }\n  }\n\n  return clone;\n};\n\n/**\n * Normalize a value, based on its currently set unit\n * @param {Number} value\n * @return {Number} normalized value\n * @private\n */\nUnit.prototype._normalize = function(value) {\n  return (value + this.unit.offset) * this.unit.value * this.prefix.value;\n};\n\n/**\n * Denormalize a value, based on its currently set unit\n * @param {Number} value\n * @param {Number} [prefixValue]    Optional prefix value to be used\n * @return {Number} denormalized value\n * @private\n */\nUnit.prototype._denormalize = function (value, prefixValue) {\n  if (prefixValue == undefined) {\n    return value / this.unit.value / this.prefix.value - this.unit.offset;\n  }\n  else {\n    return value / this.unit.value / prefixValue - this.unit.offset;\n  }\n};\n\n/**\n * Find a unit from a string\n * @param {String} str              A string like 'cm' or 'inch'\n * @returns {Object | null} result  When found, an object with fields unit and\n *                                  prefix is returned. Else, null is returned.\n * @private\n */\nfunction _findUnit(str) {\n  for (var name in UNITS) {\n    if (UNITS.hasOwnProperty(name)) {\n      if (string.endsWith(str, name) ) {\n        var unit = UNITS[name];\n        var prefixLen = (str.length - name.length);\n        var prefixName = str.substring(0, prefixLen);\n        var prefix = unit.prefixes[prefixName];\n        if (prefix !== undefined) {\n          // store unit, prefix, and value\n          return {\n            unit: unit,\n            prefix: prefix\n          };\n        }\n      }\n    }\n  }\n\n  return null;\n}\n\n/**\n * Test if the given expression is a unit.\n * The unit can have a prefix but cannot have a value.\n * @param {String} name   A string to be tested whether it is a value less unit.\n *                        The unit can have prefix, like \"cm\"\n * @return {Boolean}      true if the given string is a unit\n */\nUnit.isValuelessUnit = function (name) {\n  return (_findUnit(name) != null);\n};\n\n/**\n * check if this unit has given base unit\n * @param {BASE_UNITS | undefined} base\n */\nUnit.prototype.hasBase = function(base) {\n  return (this.unit.base === base);\n};\n\n/**\n * Check if this unit has a base equal to another base\n * @param {Unit} other\n * @return {Boolean} true if equal base\n */\nUnit.prototype.equalBase = function(other) {\n  return (this.unit.base === other.unit.base);\n};\n\n/**\n * Check if this unit equals another unit\n * @param {Unit} other\n * @return {Boolean} true if both units are equal\n */\nUnit.prototype.equals = function(other) {\n  return (this.equalBase(other) && this.value == other.value);\n};\n\n/**\n * Create a clone of this unit with a representation\n * @param {String | Unit} valuelessUnit   A unit without value. Can have prefix, like \"cm\"\n * @returns {Unit} unit having fixed, specified unit\n */\nUnit.prototype.to = function (valuelessUnit) {\n  var other;\n  var value = this.value == null ? this._normalize(1) : this.value;\n  if (isString(valuelessUnit)) {\n    other = new Unit(null, valuelessUnit);\n\n    if (!this.equalBase(other)) {\n      throw new Error('Units do not match');\n    }\n\n    other.value = value;\n    other.fixPrefix = true;\n    return other;\n  }\n  else if (valuelessUnit instanceof Unit) {\n    if (!this.equalBase(valuelessUnit)) {\n      throw new Error('Units do not match');\n    }\n    if (valuelessUnit.value !== null) {\n      throw new Error('Cannot convert to a unit with a value');\n    }\n\n    other = valuelessUnit.clone();\n    other.value = value;\n    other.fixPrefix = true;\n    return other;\n  }\n  else {\n    throw new Error('String or Unit expected as parameter');\n  }\n};\n\n/**\n * Return the value of the unit when represented with given valueless unit\n * @param {String | Unit} valuelessUnit    For example 'cm' or 'inch'\n * @return {Number} value\n */\nUnit.prototype.toNumber = function (valuelessUnit) {\n  var other = this.to(valuelessUnit);\n  return other._denormalize(other.value, other.prefix.value);\n};\n\n\n/**\n * Get a string representation of the unit.\n * @return {String}\n */\nUnit.prototype.toString = function() {\n  return this.format();\n};\n\n/**\n * Get a JSON representation of the unit\n * @returns {Object} Returns a JSON object structured as:\n *                   `{\"mathjs\": \"Unit\", \"value\": 2, \"unit\": \"cm\", \"fixPrefix\": false}`\n */\nUnit.prototype.toJSON = function () {\n  return {\n    mathjs: 'Unit',\n    value: this._denormalize(this.value),\n    unit: this.prefix.name + this.unit.name,\n    fixPrefix: this.fixPrefix\n  };\n};\n\n/**\n * Instantiate a Unit from a JSON object\n * @param {Object} json  A JSON object structured as:\n *                       `{\"mathjs\": \"Unit\", \"value\": 2, \"unit\": \"cm\", \"fixPrefix\": false}`\n * @return {Unit}\n */\nUnit.fromJSON = function (json) {\n  var unit = new Unit(json.value, json.unit);\n  unit.fixPrefix = json.fixPrefix || false;\n  return unit;\n};\n\n/**\n * Returns the string representation of the unit.\n * @return {String}\n */\nUnit.prototype.valueOf = Unit.prototype.toString;\n\n/**\n * Get a string representation of the Unit, with optional formatting options.\n * @param {Object | Number | Function} [options]  Formatting options. See\n *                                                lib/util/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {String}\n */\nUnit.prototype.format = function(options) {\n  var value,\n      str;\n\n  if (this.value !== null && !this.fixPrefix) {\n    var bestPrefix = this._bestPrefix();\n    value = this._denormalize(this.value, bestPrefix.value);\n    str = number.format(value, options) + ' ';\n    str += bestPrefix.name + this.unit.name;\n  }\n  else {\n    value = this._denormalize(this.value);\n    str = (this.value !== null) ? (number.format(value, options) + ' ') : '';\n    str += this.prefix.name + this.unit.name;\n  }\n\n  return str;\n};\n\n/**\n * Calculate the best prefix using current value.\n * @returns {Object} prefix\n * @private\n */\nUnit.prototype._bestPrefix = function () {\n  // find the best prefix value (resulting in the value of which\n  // the absolute value of the log10 is closest to zero,\n  // though with a little offset of 1.2 for nicer values: you get a\n  // sequence 1mm 100mm 500mm 0.6m 1m 10m 100m 500m 0.6km 1km ...\n  var absValue = Math.abs(this.value / this.unit.value);\n  var bestPrefix = PREFIX_NONE;\n  var bestDiff = Math.abs(\n      Math.log(absValue / bestPrefix.value) / Math.LN10 - 1.2);\n\n  var prefixes = this.unit.prefixes;\n  for (var p in prefixes) {\n    if (prefixes.hasOwnProperty(p)) {\n      var prefix = prefixes[p];\n      if (prefix.scientific) {\n        var diff = Math.abs(\n            Math.log(absValue / prefix.value) / Math.LN10 - 1.2);\n\n        if (diff < bestDiff) {\n          bestPrefix = prefix;\n          bestDiff = diff;\n        }\n      }\n    }\n  }\n\n  return bestPrefix;\n};\n\nvar PREFIXES = {\n  NONE: {\n    '': {name: '', value: 1, scientific: true}\n  },\n  SHORT: {\n    '': {name: '', value: 1, scientific: true},\n\n    'da': {name: 'da', value: 1e1, scientific: false},\n    'h': {name: 'h', value: 1e2, scientific: false},\n    'k': {name: 'k', value: 1e3, scientific: true},\n    'M': {name: 'M', value: 1e6, scientific: true},\n    'G': {name: 'G', value: 1e9, scientific: true},\n    'T': {name: 'T', value: 1e12, scientific: true},\n    'P': {name: 'P', value: 1e15, scientific: true},\n    'E': {name: 'E', value: 1e18, scientific: true},\n    'Z': {name: 'Z', value: 1e21, scientific: true},\n    'Y': {name: 'Y', value: 1e24, scientific: true},\n\n    'd': {name: 'd', value: 1e-1, scientific: false},\n    'c': {name: 'c', value: 1e-2, scientific: false},\n    'm': {name: 'm', value: 1e-3, scientific: true},\n    'u': {name: 'u', value: 1e-6, scientific: true},\n    'n': {name: 'n', value: 1e-9, scientific: true},\n    'p': {name: 'p', value: 1e-12, scientific: true},\n    'f': {name: 'f', value: 1e-15, scientific: true},\n    'a': {name: 'a', value: 1e-18, scientific: true},\n    'z': {name: 'z', value: 1e-21, scientific: true},\n    'y': {name: 'y', value: 1e-24, scientific: true}\n  },\n  LONG: {\n    '': {name: '', value: 1, scientific: true},\n\n    'deca': {name: 'deca', value: 1e1, scientific: false},\n    'hecto': {name: 'hecto', value: 1e2, scientific: false},\n    'kilo': {name: 'kilo', value: 1e3, scientific: true},\n    'mega': {name: 'mega', value: 1e6, scientific: true},\n    'giga': {name: 'giga', value: 1e9, scientific: true},\n    'tera': {name: 'tera', value: 1e12, scientific: true},\n    'peta': {name: 'peta', value: 1e15, scientific: true},\n    'exa': {name: 'exa', value: 1e18, scientific: true},\n    'zetta': {name: 'zetta', value: 1e21, scientific: true},\n    'yotta': {name: 'yotta', value: 1e24, scientific: true},\n\n    'deci': {name: 'deci', value: 1e-1, scientific: false},\n    'centi': {name: 'centi', value: 1e-2, scientific: false},\n    'milli': {name: 'milli', value: 1e-3, scientific: true},\n    'micro': {name: 'micro', value: 1e-6, scientific: true},\n    'nano': {name: 'nano', value: 1e-9, scientific: true},\n    'pico': {name: 'pico', value: 1e-12, scientific: true},\n    'femto': {name: 'femto', value: 1e-15, scientific: true},\n    'atto': {name: 'atto', value: 1e-18, scientific: true},\n    'zepto': {name: 'zepto', value: 1e-21, scientific: true},\n    'yocto': {name: 'yocto', value: 1e-24, scientific: true}\n  },\n  SQUARED: {\n    '': {name: '', value: 1, scientific: true},\n\n    'da': {name: 'da', value: 1e2, scientific: false},\n    'h': {name: 'h', value: 1e4, scientific: false},\n    'k': {name: 'k', value: 1e6, scientific: true},\n    'M': {name: 'M', value: 1e12, scientific: true},\n    'G': {name: 'G', value: 1e18, scientific: true},\n    'T': {name: 'T', value: 1e24, scientific: true},\n    'P': {name: 'P', value: 1e30, scientific: true},\n    'E': {name: 'E', value: 1e36, scientific: true},\n    'Z': {name: 'Z', value: 1e42, scientific: true},\n    'Y': {name: 'Y', value: 1e48, scientific: true},\n\n    'd': {name: 'd', value: 1e-2, scientific: false},\n    'c': {name: 'c', value: 1e-4, scientific: false},\n    'm': {name: 'm', value: 1e-6, scientific: true},\n    'u': {name: 'u', value: 1e-12, scientific: true},\n    'n': {name: 'n', value: 1e-18, scientific: true},\n    'p': {name: 'p', value: 1e-24, scientific: true},\n    'f': {name: 'f', value: 1e-30, scientific: true},\n    'a': {name: 'a', value: 1e-36, scientific: true},\n    'z': {name: 'z', value: 1e-42, scientific: true},\n    'y': {name: 'y', value: 1e-42, scientific: true}\n  },\n  CUBIC: {\n    '': {name: '', value: 1, scientific: true},\n\n    'da': {name: 'da', value: 1e3, scientific: false},\n    'h': {name: 'h', value: 1e6, scientific: false},\n    'k': {name: 'k', value: 1e9, scientific: true},\n    'M': {name: 'M', value: 1e18, scientific: true},\n    'G': {name: 'G', value: 1e27, scientific: true},\n    'T': {name: 'T', value: 1e36, scientific: true},\n    'P': {name: 'P', value: 1e45, scientific: true},\n    'E': {name: 'E', value: 1e54, scientific: true},\n    'Z': {name: 'Z', value: 1e63, scientific: true},\n    'Y': {name: 'Y', value: 1e72, scientific: true},\n\n    'd': {name: 'd', value: 1e-3, scientific: false},\n    'c': {name: 'c', value: 1e-6, scientific: false},\n    'm': {name: 'm', value: 1e-9, scientific: true},\n    'u': {name: 'u', value: 1e-18, scientific: true},\n    'n': {name: 'n', value: 1e-27, scientific: true},\n    'p': {name: 'p', value: 1e-36, scientific: true},\n    'f': {name: 'f', value: 1e-45, scientific: true},\n    'a': {name: 'a', value: 1e-54, scientific: true},\n    'z': {name: 'z', value: 1e-63, scientific: true},\n    'y': {name: 'y', value: 1e-72, scientific: true}\n  },\n  BINARY_SHORT: {\n    '': {name: '', value: 1, scientific: true},\n    'k': {name: 'k', value: 1e3, scientific: true},\n    'M': {name: 'M', value: 1e6, scientific: true},\n    'G': {name: 'G', value: 1e9, scientific: true},\n    'T': {name: 'T', value: 1e12, scientific: true},\n    'P': {name: 'P', value: 1e15, scientific: true},\n    'E': {name: 'E', value: 1e18, scientific: true},\n    'Z': {name: 'Z', value: 1e21, scientific: true},\n    'Y': {name: 'Y', value: 1e24, scientific: true},\n\n    'Ki': {name: 'Ki', value: 1024, scientific: true},\n    'Mi': {name: 'Mi', value: Math.pow(1024, 2), scientific: true},\n    'Gi': {name: 'Gi', value: Math.pow(1024, 3), scientific: true},\n    'Ti': {name: 'Ti', value: Math.pow(1024, 4), scientific: true},\n    'Pi': {name: 'Pi', value: Math.pow(1024, 5), scientific: true},\n    'Ei': {name: 'Ei', value: Math.pow(1024, 6), scientific: true},\n    'Zi': {name: 'Zi', value: Math.pow(1024, 7), scientific: true},\n    'Yi': {name: 'Yi', value: Math.pow(1024, 8), scientific: true}\n  },\n  BINARY_LONG: {\n    '': {name: '', value: 1, scientific: true},\n    'kilo': {name: 'kilo', value: 1e3, scientific: true},\n    'mega': {name: 'mega', value: 1e6, scientific: true},\n    'giga': {name: 'giga', value: 1e9, scientific: true},\n    'tera': {name: 'tera', value: 1e12, scientific: true},\n    'peta': {name: 'peta', value: 1e15, scientific: true},\n    'exa':  {name: 'exa', value: 1e18, scientific: true},\n    'zetta': {name: 'zetta', value: 1e21, scientific: true},\n    'yotta': {name: 'yotta', value: 1e24, scientific: true},\n\n    'kibi': {name: 'kibi', value: 1024, scientific: true},\n    'mebi': {name: 'mebi', value: Math.pow(1024, 2), scientific: true},\n    'gibi': {name: 'gibi', value: Math.pow(1024, 3), scientific: true},\n    'tebi': {name: 'tebi', value: Math.pow(1024, 4), scientific: true},\n    'pebi': {name: 'pebi', value: Math.pow(1024, 5), scientific: true},\n    'exi':  {name: 'exi', value: Math.pow(1024, 6), scientific: true},\n    'zebi': {name: 'zebi', value: Math.pow(1024, 7), scientific: true},\n    'yobi': {name: 'yobi', value: Math.pow(1024, 8), scientific: true}\n  }\n};\n\nvar PREFIX_NONE = {name: '', value: 1, scientific: true};\n\nvar BASE_UNITS = {\n  NONE: {},\n\n  LENGTH: {},               // meter\n  MASS: {},                 // kilogram\n  TIME: {},                 // second\n  CURRENT: {},              // ampere\n  TEMPERATURE: {},          // kelvin\n  LUMINOUS_INTENSITY: {},   // candela\n  AMOUNT_OF_SUBSTANCE: {},  // mole\n\n  FORCE: {},                // Newton\n  SURFACE: {},              // m2\n  VOLUME: {},               // m3\n  ANGLE: {},                // rad\n  BIT: {}                   // bit (digital)\n};\n\nvar BASE_UNIT_NONE = {};\n\nvar UNIT_NONE = {name: '', base: BASE_UNIT_NONE, value: 1, offset: 0};\n\nvar UNITS = {\n  // length\n  meter: {name: 'meter', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.LONG, value: 1, offset: 0},\n  inch: {name: 'inch', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 0.0254, offset: 0},\n  foot: {name: 'foot', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 0.3048, offset: 0},\n  yard: {name: 'yard', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 0.9144, offset: 0},\n  mile: {name: 'mile', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 1609.344, offset: 0},\n  link: {name: 'link', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 0.201168, offset: 0},\n  rod: {name: 'rod', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 5.029210, offset: 0},\n  chain: {name: 'chain', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 20.1168, offset: 0},\n  angstrom: {name: 'angstrom', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 1e-10, offset: 0},\n\n  m: {name: 'm', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.SHORT, value: 1, offset: 0},\n  'in': {name: 'in', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 0.0254, offset: 0},\n  ft: {name: 'ft', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 0.3048, offset: 0},\n  yd: {name: 'yd', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 0.9144, offset: 0},\n  mi: {name: 'mi', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 1609.344, offset: 0},\n  li: {name: 'li', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 0.201168, offset: 0},\n  rd: {name: 'rd', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 5.029210, offset: 0},\n  ch: {name: 'ch', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 20.1168, offset: 0},\n  mil: {name: 'mil', base: BASE_UNITS.LENGTH, prefixes: PREFIXES.NONE, value: 0.0000254, offset: 0}, // 1/1000 inch\n\n  // Surface\n  m2: {name: 'm2', base: BASE_UNITS.SURFACE, prefixes: PREFIXES.SQUARED, value: 1, offset: 0},\n  sqin: {name: 'sqin', base: BASE_UNITS.SURFACE, prefixes: PREFIXES.NONE, value: 0.00064516, offset: 0}, // 645.16 mm2\n  sqft: {name: 'sqft', base: BASE_UNITS.SURFACE, prefixes: PREFIXES.NONE, value: 0.09290304, offset: 0}, // 0.09290304 m2\n  sqyd: {name: 'sqyd', base: BASE_UNITS.SURFACE, prefixes: PREFIXES.NONE, value: 0.83612736, offset: 0}, // 0.83612736 m2\n  sqmi: {name: 'sqmi', base: BASE_UNITS.SURFACE, prefixes: PREFIXES.NONE, value: 2589988.110336, offset: 0}, // 2.589988110336 km2\n  sqrd: {name: 'sqrd', base: BASE_UNITS.SURFACE, prefixes: PREFIXES.NONE, value: 25.29295, offset: 0}, // 25.29295 m2\n  sqch: {name: 'sqch', base: BASE_UNITS.SURFACE, prefixes: PREFIXES.NONE, value: 404.6873, offset: 0}, // 404.6873 m2\n  sqmil: {name: 'sqmil', base: BASE_UNITS.SURFACE, prefixes: PREFIXES.NONE, value: 6.4516e-10, offset: 0}, // 6.4516 * 10^-10 m2\n\n  // Volume\n  m3: {name: 'm3', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.CUBIC, value: 1, offset: 0},\n  L: {name: 'L', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.SHORT, value: 0.001, offset: 0}, // litre\n  l: {name: 'l', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.SHORT, value: 0.001, offset: 0}, // litre\n  litre: {name: 'litre', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.LONG, value: 0.001, offset: 0},\n  cuin: {name: 'cuin', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 1.6387064e-5, offset: 0}, // 1.6387064e-5 m3\n  cuft: {name: 'cuft', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.028316846592, offset: 0}, // 28.316 846 592 L\n  cuyd: {name: 'cuyd', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.764554857984, offset: 0}, // 764.554 857 984 L\n  teaspoon: {name: 'teaspoon', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.000005, offset: 0}, // 5 mL\n  tablespoon: {name: 'tablespoon', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.000015, offset: 0}, // 15 mL\n  //{name: 'cup', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.000240, offset: 0}, // 240 mL  // not possible, we have already another cup\n  drop: {name: 'drop', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 5e-8, offset: 0},  // 0.05 mL = 5e-8 m3\n  gtt: {name: 'gtt', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 5e-8, offset: 0},  // 0.05 mL = 5e-8 m3\n\n  // Liquid volume\n  minim: {name: 'minim', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.00000006161152, offset: 0}, // 0.06161152 mL\n  fluiddram: {name: 'fluiddram', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.0000036966911, offset: 0},  // 3.696691 mL\n  fluidounce: {name: 'fluidounce', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.00002957353, offset: 0}, // 29.57353 mL\n  gill: {name: 'gill', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.0001182941, offset: 0}, // 118.2941 mL\n  cc: {name: 'cc', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 1e-6, offset: 0}, // 1e-6 L\n  cup: {name: 'cup', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.0002365882, offset: 0}, // 236.5882 mL\n  pint: {name: 'pint', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.0004731765, offset: 0}, // 473.1765 mL\n  quart: {name: 'quart', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.0009463529, offset: 0}, // 946.3529 mL\n  gallon: {name: 'gallon', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.003785412, offset: 0}, // 3.785412 L\n  beerbarrel: {name: 'beerbarrel', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.1173478, offset: 0}, // 117.3478 L\n  oilbarrel: {name: 'oilbarrel', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.1589873, offset: 0}, // 158.9873 L\n  hogshead: {name: 'hogshead', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.2384810, offset: 0}, // 238.4810 L\n\n  //{name: 'min', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.00000006161152, offset: 0}, // 0.06161152 mL // min is already in use as minute\n  fldr: {name: 'fldr', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.0000036966911, offset: 0},  // 3.696691 mL\n  floz: {name: 'floz', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.00002957353, offset: 0}, // 29.57353 mL\n  gi: {name: 'gi', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.0001182941, offset: 0}, // 118.2941 mL\n  cp: {name: 'cp', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.0002365882, offset: 0}, // 236.5882 mL\n  pt: {name: 'pt', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.0004731765, offset: 0}, // 473.1765 mL\n  qt: {name: 'qt', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.0009463529, offset: 0}, // 946.3529 mL\n  gal: {name: 'gal', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.003785412, offset: 0}, // 3.785412 L\n  bbl: {name: 'bbl', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.1173478, offset: 0}, // 117.3478 L\n  obl: {name: 'obl', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.1589873, offset: 0}, // 158.9873 L\n  //{name: 'hogshead', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.2384810, offset: 0}, // 238.4810 L // TODO: hh?\n\n  // Mass\n  g: {name: 'g', base: BASE_UNITS.MASS, prefixes: PREFIXES.SHORT, value: 0.001, offset: 0},\n  gram: {name: 'gram', base: BASE_UNITS.MASS, prefixes: PREFIXES.LONG, value: 0.001, offset: 0},\n\n  ton: {name: 'ton', base: BASE_UNITS.MASS, prefixes: PREFIXES.SHORT, value: 907.18474, offset: 0},\n  tonne: {name: 'tonne', base: BASE_UNITS.MASS, prefixes: PREFIXES.SHORT, value: 1000, offset: 0},\n\n  grain: {name: 'grain', base: BASE_UNITS.MASS, prefixes: PREFIXES.NONE, value: 64.79891e-6, offset: 0},\n  dram: {name: 'dram', base: BASE_UNITS.MASS, prefixes: PREFIXES.NONE, value: 1.7718451953125e-3, offset: 0},\n  ounce: {name: 'ounce', base: BASE_UNITS.MASS, prefixes: PREFIXES.NONE, value: 28.349523125e-3, offset: 0},\n  poundmass: {name: 'poundmass', base: BASE_UNITS.MASS, prefixes: PREFIXES.NONE, value: 453.59237e-3, offset: 0},\n  hundredweight: {name: 'hundredweight', base: BASE_UNITS.MASS, prefixes: PREFIXES.NONE, value: 45.359237, offset: 0},\n  stick: {name: 'stick', base: BASE_UNITS.MASS, prefixes: PREFIXES.NONE, value: 115e-3, offset: 0},\n  stone: {name: 'stone', base: BASE_UNITS.MASS, prefixes: PREFIXES.NONE, value: 6350, offset: 0},\n\n  gr: {name: 'gr', base: BASE_UNITS.MASS, prefixes: PREFIXES.NONE, value: 64.79891e-6, offset: 0},\n  dr: {name: 'dr', base: BASE_UNITS.MASS, prefixes: PREFIXES.NONE, value: 1.7718451953125e-3, offset: 0},\n  oz: {name: 'oz', base: BASE_UNITS.MASS, prefixes: PREFIXES.NONE, value: 28.349523125e-3, offset: 0},\n  lbm: {name: 'lbm', base: BASE_UNITS.MASS, prefixes: PREFIXES.NONE, value: 453.59237e-3, offset: 0},\n  cwt: {name: 'cwt', base: BASE_UNITS.MASS, prefixes: PREFIXES.NONE, value: 45.359237, offset: 0},\n\n  // Time\n  s: {name: 's', base: BASE_UNITS.TIME, prefixes: PREFIXES.SHORT, value: 1, offset: 0},\n  min: {name: 'min', base: BASE_UNITS.TIME, prefixes: PREFIXES.NONE, value: 60, offset: 0},\n  h: {name: 'h', base: BASE_UNITS.TIME, prefixes: PREFIXES.NONE, value: 3600, offset: 0},\n  second: {name: 'second', base: BASE_UNITS.TIME, prefixes: PREFIXES.LONG, value: 1, offset: 0},\n  sec: {name: 'sec', base: BASE_UNITS.TIME, prefixes: PREFIXES.LONG, value: 1, offset: 0},\n  minute: {name: 'minute', base: BASE_UNITS.TIME, prefixes: PREFIXES.NONE, value: 60, offset: 0},\n  hour: {name: 'hour', base: BASE_UNITS.TIME, prefixes: PREFIXES.NONE, value: 3600, offset: 0},\n  day: {name: 'day', base: BASE_UNITS.TIME, prefixes: PREFIXES.NONE, value: 86400, offset: 0},\n\n  // Angle\n  rad: {name: 'rad', base: BASE_UNITS.ANGLE, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n  // deg = rad / (2*pi) * 360 = rad / 0.017453292519943295769236907684888\n  deg: {name: 'deg', base: BASE_UNITS.ANGLE, prefixes: PREFIXES.NONE, value: 0.017453292519943295769236907684888, offset: 0},\n  // grad = rad / (2*pi) * 400  = rad / 0.015707963267948966192313216916399\n  grad: {name: 'grad', base: BASE_UNITS.ANGLE, prefixes: PREFIXES.NONE, value: 0.015707963267948966192313216916399, offset: 0},\n  // cycle = rad / (2*pi) = rad / 6.2831853071795864769252867665793\n  cycle: {name: 'cycle', base: BASE_UNITS.ANGLE, prefixes: PREFIXES.NONE, value: 6.2831853071795864769252867665793, offset: 0},\n\n  // Electric current\n  A: {name: 'A', base: BASE_UNITS.CURRENT, prefixes: PREFIXES.SHORT, value: 1, offset: 0},\n  ampere: {name: 'ampere', base: BASE_UNITS.CURRENT, prefixes: PREFIXES.LONG, value: 1, offset: 0},\n\n  // Temperature\n  // K(C) = °C + 273.15\n  // K(F) = (°F + 459.67) / 1.8\n  // K(R) = °R / 1.8\n  K: {name: 'K', base: BASE_UNITS.TEMPERATURE, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n  degC: {name: 'degC', base: BASE_UNITS.TEMPERATURE, prefixes: PREFIXES.NONE, value: 1, offset: 273.15},\n  degF: {name: 'degF', base: BASE_UNITS.TEMPERATURE, prefixes: PREFIXES.NONE, value: 1/1.8, offset: 459.67},\n  degR: {name: 'degR', base: BASE_UNITS.TEMPERATURE, prefixes: PREFIXES.NONE, value: 1/1.8, offset: 0},\n  kelvin: {name: 'kelvin', base: BASE_UNITS.TEMPERATURE, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n  celsius: {name: 'celsius', base: BASE_UNITS.TEMPERATURE, prefixes: PREFIXES.NONE, value: 1, offset: 273.15},\n  fahrenheit: {name: 'fahrenheit', base: BASE_UNITS.TEMPERATURE, prefixes: PREFIXES.NONE, value: 1/1.8, offset: 459.67},\n  rankine: {name: 'rankine', base: BASE_UNITS.TEMPERATURE, prefixes: PREFIXES.NONE, value: 1/1.8, offset: 0},\n\n  // amount of substance\n  mol: {name: 'mol', base: BASE_UNITS.AMOUNT_OF_SUBSTANCE, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n  mole: {name: 'mole', base: BASE_UNITS.AMOUNT_OF_SUBSTANCE, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n\n  // luminous intensity\n  cd: {name: 'cd', base: BASE_UNITS.LUMINOUS_INTENSITY, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n  candela: {name: 'candela', base: BASE_UNITS.LUMINOUS_INTENSITY, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n  // TODO: units STERADIAN\n  //{name: 'sr', base: BASE_UNITS.STERADIAN, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n  //{name: 'steradian', base: BASE_UNITS.STERADIAN, prefixes: PREFIXES.NONE, value: 1, offset: 0},\n\n  // Force\n  N: {name: 'N', base: BASE_UNITS.FORCE, prefixes: PREFIXES.SHORT, value: 1, offset: 0},\n  newton: {name: 'newton', base: BASE_UNITS.FORCE, prefixes: PREFIXES.LONG, value: 1, offset: 0},\n  lbf: {name: 'lbf', base: BASE_UNITS.FORCE, prefixes: PREFIXES.NONE, value: 4.4482216152605, offset: 0},\n  poundforce: {name: 'poundforce', base: BASE_UNITS.FORCE, prefixes: PREFIXES.NONE, value: 4.4482216152605, offset: 0},\n\n  // Binary\n  b: {name: 'b', base: BASE_UNITS.BIT, prefixes: PREFIXES.BINARY_SHORT, value: 1, offset: 0},\n  bits: {name: 'bits', base: BASE_UNITS.BIT, prefixes: PREFIXES.BINARY_LONG, value: 1, offset: 0},\n  B: {name: 'B', base: BASE_UNITS.BIT, prefixes: PREFIXES.BINARY_SHORT, value: 8, offset: 0},\n  bytes: {name: 'bytes', base: BASE_UNITS.BIT, prefixes: PREFIXES.BINARY_LONG, value: 8, offset: 0}\n};\n\n// plurals\nvar PLURALS = {\n  meters: 'meter',\n  inches: 'inch',\n  feet: 'foot',\n  yards: 'yard',\n  miles: 'mile',\n  links: 'link',\n  rods: 'rod',\n  chains: 'chain',\n  angstroms: 'angstrom',\n\n  litres: 'litre',\n  teaspoons: 'teaspoon',\n  tablespoons: 'tablespoon',\n  minims: 'minim',\n  fluiddrams: 'fluiddram',\n  fluidounces: 'fluidounce',\n  gills: 'gill',\n  cups: 'cup',\n  pints: 'pint',\n  quarts: 'quart',\n  gallons: 'gallon',\n  beerbarrels: 'beerbarrel',\n  oilbarrels: 'oilbarrel',\n  hogsheads: 'hogshead',\n  gtts: 'gtt',\n\n  grams: 'gram',\n  tons: 'ton',\n  tonnes: 'tonne',\n  grains: 'grain',\n  drams: 'dram',\n  ounces: 'ounce',\n  poundmasses: 'poundmass',\n  hundredweights: 'hundredweight',\n  sticks: 'stick',\n\n  seconds: 'second',\n  minutes: 'minute',\n  hours: 'hour',\n  days: 'day',\n\n  radians: 'rad',\n  degrees: 'deg',\n  gradients: 'grad',\n  cycles: 'cycle',\n\n  amperes: 'ampere',\n  moles: 'mole'\n};\n\nfor (var name in PLURALS) {\n  /* istanbul ignore next (we cannot really test next statement) */\n  if (PLURALS.hasOwnProperty(name)) {\n    var unit = UNITS[PLURALS[name]];\n    var plural = Object.create(unit);\n    plural.name = name;\n    UNITS[name] = plural;\n  }\n}\n\n// aliases\nUNITS.lt = UNITS.l;\nUNITS.liter = UNITS.litre;\nUNITS.liters = UNITS.litres;\nUNITS.lb = UNITS.lbm;\nUNITS.lbs = UNITS.lbm;\n\n\nUnit.PREFIXES = PREFIXES;\nUnit.BASE_UNITS = BASE_UNITS;\nUnit.UNITS = UNITS;\n\n// end of unit aliases\n\n\n// exports\nmodule.exports = Unit;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/type/Unit.js\n ** module id = 22\n ** module chunks = 0\n **/","'use strict';\n\nvar util = require('../util/index');\nvar object = util.object;\nvar string = util.string;\n\n/**\n * Documentation object\n * @param {Object} doc  Object containing properties:\n *                      {String} name\n *                      {String} category\n *                      {String} description\n *                      {String[]} syntax\n *                      {String[]} examples\n *                      {String[]} seealso\n * @constructor\n */\nfunction Help (doc) {\n  if (!(this instanceof Help)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (!doc)  throw new Error('Argument \"doc\" missing');\n\n  this.doc = doc;\n}\n\n/**\n * Test whether a value is an instance of Help\n * @param {*} value\n * @return {Boolean} isHelp\n */\nHelp.isHelp = function (value) {\n  return (value instanceof Help);\n};\n\n/**\n * Generate readable description from a Help object\n * @param {Object} [math]   A math instance, used to evaluate the examples\n * @return {String} readableDoc\n * @private\n */\nHelp.prototype.toText = function (math) {\n  var doc = this.doc || {};\n  var desc = '\\n';\n\n  if (doc.name) {\n    desc += 'Name: ' + doc.name + '\\n\\n';\n  }\n  if (doc.category) {\n    desc += 'Category: ' + doc.category + '\\n\\n';\n  }\n  if (doc.description) {\n    desc += 'Description:\\n    ' + doc.description + '\\n\\n';\n  }\n  if (doc.syntax) {\n    desc += 'Syntax:\\n    ' + doc.syntax.join('\\n    ') + '\\n\\n';\n  }\n  if (doc.examples) {\n    var parser = math && math.parser();\n    desc += 'Examples:\\n';\n    for (var i = 0; i < doc.examples.length; i++) {\n      var expr = doc.examples[i];\n      desc += '    ' + expr + '\\n';\n\n      if (parser) {\n        var res;\n        try {\n          res = parser.eval(expr);\n        }\n        catch (e) {\n          res = e;\n        }\n        if (res !== undefined && !(res instanceof Help)) {\n          desc += '        ' + string.format(res, {precision: 14}) + '\\n';\n        }\n      }\n    }\n    desc += '\\n';\n  }\n  if (doc.seealso) {\n    desc += 'See also: ' + doc.seealso.join(', ') + '\\n';\n  }\n\n  return desc;\n};\n\n/**\n * Generate a string representation of the Help object\n * @return {String} Returns a string\n * @private\n */\nHelp.prototype.toString = function () {\n  return this.toText();\n};\n\n/**\n * Export the help object to JSON\n */\nHelp.prototype.toJSON = function () {\n  var obj = object.clone(this.doc);\n  obj.mathjs = 'Help';\n  return obj;\n};\n\n/**\n * Instantiate a Help object from a JSON object\n * @param {Object} json\n * @returns {Help} Returns a new Help object\n */\nHelp.fromJSON = function (json) {\n  var doc = {};\n  for (var prop in json) {\n    if (prop !== 'mathjs') { // ignore mathjs field\n      doc[prop] = json[prop];\n    }\n  }\n  return new Help(doc);\n};\n\n/**\n * Returns a string representation of the Help object\n */\nHelp.prototype.valueOf = Help.prototype.toString;\n\n// exports\nmodule.exports = Help;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/type/Help.js\n ** module id = 23\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * A ResultSet contains a list or results\n * @param {Array} entries\n * @constructor\n */\nfunction ResultSet(entries) {\n  if (!(this instanceof ResultSet)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.entries = entries || [];\n}\n\n/**\n * Returns the array with results hold by this ResultSet\n * @returns {Array} entries\n */\nResultSet.prototype.valueOf = function () {\n  return this.entries;\n};\n\n/**\n * Returns the stringified results of the ResultSet\n * @returns {String} string\n */\nResultSet.prototype.toString = function () {\n  return '[' + this.entries.join(', ') + ']';\n};\n\n/**\n * Get a JSON representation of the ResultSet\n * @returns {Object} Returns a JSON object structured as:\n *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n */\nResultSet.prototype.toJSON = function () {\n  return {\n    mathjs: 'ResultSet',\n    entries: this.entries\n  };\n};\n\n/**\n * Instantiate a ResultSet from a JSON object\n * @param {Object} json  A JSON object structured as:\n *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n * @return {ResultSet}\n */\nResultSet.fromJSON = function (json) {\n  return new ResultSet(json.entries);\n};\n\nmodule.exports = ResultSet;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/type/ResultSet.js\n ** module id = 24\n ** module chunks = 0\n **/","// utility methods for arrays and matrices\n'use strict';\n\nvar util = require('../util/index'),\n\n    IndexError = require('../error/IndexError'),\n    DimensionError = require('../error/DimensionError'),\n\n    array = util.array,\n    isArray = util.array.isArray;\n\nmodule.exports = function (math) {\n\n  var Matrix = math.type.Matrix;\n\n  var collection = {};\n\n  /**\n   * Convert function arguments to an array. Arguments can have the following\n   * signature:\n   *     fn()\n   *     fn(n)\n   *     fn(m, n, p, ...)\n   *     fn([m, n, p, ...])\n   * @param {...Number | Array | Matrix} args\n   * @returns {Array} array\n   */\n  collection.argsToArray = function(args) {\n    if (args.length === 0) {\n      // fn()\n      return [];\n    }\n    else if (args.length == 1) {\n      // fn(n)\n      // fn([m, n, p, ...])\n      var array = args[0];\n      if (array instanceof Matrix) {\n        array = array.valueOf();\n      }\n      if (!isArray(array)) {\n        array = [array];\n      }\n      return array;\n    }\n    else {\n      // fn(m, n, p, ...)\n      return util.array.argsToArray(args);\n    }\n  };\n\n\n  /**\n   * Test whether a value is a collection: an Array or Matrix\n   * @param {*} x\n   * @returns {boolean} isCollection\n   */\n  collection.isCollection = function(x) {\n    return (isArray(x) || (x instanceof Matrix));\n  };\n\n  /**\n   * Execute the callback function element wise for each element in array and any\n   * nested array\n   * Returns an array with the results\n   * @param {Array | Matrix} array\n   * @param {function} callback   The callback is called with two parameters:\n   *                              value1 and value2, which contain the current\n   *                              element of both arrays.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Array | Matrix} res\n   */\n  collection.deepMap = function deepMap(array, callback, skipZeros) {\n    if (array && (typeof array.map === 'function')) {\n      return array.map(function (x) {\n        return deepMap(x, callback, skipZeros);\n      });\n    }\n    else {\n      return callback(array);\n    }\n  };\n\n  /**\n   * Execute the callback function element wise for each entry in two given arrays,\n   * and for any nested array. Objects can also be scalar objects.\n   * Returns an array with the results.\n   * @param {Array | Matrix | Object} array1\n   * @param {Array | Matrix | Object} array2\n   * @param {function} callback   The callback is called with two parameters:\n   *                              value1 and value2, which contain the current\n   *                              element of both arrays.\n   * @return {Array | Matrix} res\n   */\n  collection.deepMap2 = function deepMap2(array1, array2, callback) {\n    var res, len, i;\n\n    if (isArray(array1)) {\n      if (isArray(array2)) {\n        // callback(array, array)\n        if (array1.length != array2.length) {\n          throw new DimensionError(array1.length, array2.length);\n        }\n\n        res = [];\n        len = array1.length;\n        for (i = 0; i < len; i++) {\n          res[i] = deepMap2(array1[i], array2[i], callback);\n        }\n      }\n      else if (array2 instanceof Matrix) {\n        // callback(array, matrix)\n        res = deepMap2(array1, array2.valueOf(), callback);\n        return math.matrix(res);\n      }\n      else {\n        // callback(array, object)\n        res = [];\n        len = array1.length;\n        for (i = 0; i < len; i++) {\n          res[i] = deepMap2(array1[i], array2, callback);\n        }\n      }\n    }\n    else if (array1 instanceof Matrix) {\n      if (array2 instanceof Matrix) {\n        // callback(matrix, matrix)\n        res = deepMap2(array1.valueOf(), array2.valueOf(), callback);\n        return math.matrix(res);\n      }\n      else {\n        // callback(matrix, array)\n        // callback(matrix, object)\n        res = deepMap2(array1.valueOf(), array2, callback);\n        return math.matrix(res);\n      }\n    }\n    else {\n      if (isArray(array2)) {\n        // callback(object, array)\n        res = [];\n        len = array2.length;\n        for (i = 0; i < len; i++) {\n          res[i] = deepMap2(array1, array2[i], callback);\n        }\n      }\n      else if (array2 instanceof Matrix) {\n        // callback(object, matrix)\n        res = deepMap2(array1, array2.valueOf(), callback);\n        return math.matrix(res);\n      }\n      else {\n        // callback(object, object)\n        res = callback(array1, array2);\n      }\n    }\n\n    return res;\n  };\n\n  /**\n   * Reduce a given matrix or array to a new matrix or\n   * array with one less dimension, applying the given\n   * callback in the selected dimension.\n   * @param {Array | Matrix} mat\n   * @param {Number} dim\n   * @param {function} callback\n   * @return {Array | Matrix} res\n   */\n  collection.reduce = function(mat, dim, callback) {\n    var size = isArray(mat) ? array.size(mat) : mat.size();\n    if (dim < 0) {\n      // TODO: would be more clear when throwing a DimensionError here\n      throw new IndexError(dim);\n    }\n    if (dim >= size.length) {\n      // TODO: would be more clear when throwing a DimensionError here\n      throw new IndexError(dim, size.length);\n    }\n\n      if (mat instanceof Matrix) {\n          return math.matrix(_reduce(mat.valueOf(), dim, callback));\n      }else {\n          return _reduce(mat, dim, callback);\n      }\n  };\n\n  /**\n   * Recursively reduce a matrix\n   * @param {Array} mat\n   * @param {Number} dim\n   * @param {Function} callback\n   * @returns {Array} ret\n   * @private\n   */\n  function _reduce(mat, dim, callback){\n    var i, ret, val, tran;\n\n      if(dim<=0){\n          if( !isArray(mat[0]) ){\n              val = mat[0];\n              for(i=1; i<mat.length; i++){\n                  val = callback(val, mat[i]);\n              }\n              return val;\n          }else{\n              tran = _switch(mat);\n              ret = [];\n              for(i=0; i<tran.length; i++){\n                  ret[i] = _reduce(tran[i], dim-1, callback);\n              }\n              return ret;\n          }\n      }else{\n          ret = [];\n          for(i=0; i<mat.length; i++){\n              ret[i] = _reduce(mat[i], dim-1, callback);\n          }\n          return ret;\n      }\n  }\n\n  /**\n   * Transpose a matrix\n   * @param {Array} mat\n   * @returns {Array} ret\n   * @private\n   */\n  function _switch(mat){\n    var I = mat.length;\n    var J = mat[0].length;\n    var i, j;\n    var ret = [];\n    for( j=0; j<J; j++) {\n      var tmp = [];\n      for( i=0; i<I; i++) {\n        tmp.push(mat[i][j]);\n      }\n      ret.push(tmp);\n    }\n    return ret;\n  }\n\n  /**\n   * Recursively loop over all elements in a given multi dimensional array\n   * and invoke the callback on each of the elements.\n   * @param {Array | Matrix} array\n   * @param {function} callback     The callback method is invoked with one\n   *                                parameter: the current element in the array\n   */\n  collection.deepForEach = function deepForEach (array, callback) {\n    if (array instanceof Matrix) {\n      array = array.valueOf();\n    }\n\n    for (var i = 0, ii = array.length; i < ii; i++) {\n      var value = array[i];\n\n      if (isArray(value)) {\n        deepForEach(value, callback);\n      }\n      else {\n        callback(value);\n      }\n    }\n  };\n  \n  return collection;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/type/collection.js\n ** module id = 25\n ** module chunks = 0\n **/","'use strict';\n\nvar util = require('../../util/index');\nvar DimensionError = require('../../error/DimensionError');\n\nvar array = util.array;\nvar object = util.object;\nvar string = util.string;\nvar number = util.number;\n\nvar isArray = Array.isArray;\nvar isNumber = util.number.isNumber;\nvar isInteger = util.number.isInteger;\n\nvar validateIndex = array.validateIndex;\n\nmodule.exports = function (math) {\n  \n  var Index = math.type.Index,\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix;\n  \n  function CcsMatrix(data) {\n    if (!(this instanceof CcsMatrix))\n      throw new SyntaxError('Constructor must be called with the new operator');\n\n    if (data instanceof Matrix) {\n      // check data is a CcsMatrix\n      if (data.type === 'CcsMatrix') {\n        // clone arrays\n        this._values = object.clone(data._values);\n        this._index = object.clone(data._index);\n        this._ptr = object.clone(data._ptr);\n        this._size = object.clone(data._size);\n      }\n      else {\n        // build from matrix data\n        _createFromArray(this, data.valueOf());\n      }\n    }\n    else if (data && isArray(data.values) && isArray(data.index) && isArray(data.ptr) && isArray(data.size)) {\n      // initialize fields\n      this._values = data.values;\n      this._index = data.index;\n      this._ptr = data.ptr;\n      this._size = data.size;\n    }\n    else if (isArray(data)) {\n      // create from array\n      _createFromArray(this, data);\n    }\n    else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');\n    }\n    else {\n      // nothing provided\n      this._values = [];\n      this._index = [];\n      this._ptr = [0];\n      this._size = [0];\n    }\n  }\n  \n  var _createFromArray = function (matrix, data) {\n    // initialize fields\n    matrix._values = [];\n    matrix._index = [];\n    matrix._ptr = [];\n    // discover rows & columns, do not use math.size() to avoid looping array twice\n    var rows = data.length;\n    var columns = 0;\n\n    // check we have rows (empty array)\n    if (rows > 0) {\n      // column index\n      var j = 0;\n      do {\n        // store pointer to values index\n        matrix._ptr.push(matrix._values.length);\n        // loop rows\n        for (var i = 0; i < rows; i++) {\n          // current row\n          var row = data[i];\n          // check row is an array\n          if (isArray(row)) {\n            // update columns if needed (only on first column)\n            if (j ===0 && columns < row.length)\n              columns = row.length;\n            // check row has column\n            if (j < row.length) {\n              // value\n              var v = row[j];\n              // check value != 0\n              if (!math.equal(v, 0)) {\n                // store value\n                matrix._values.push(v);\n                // index\n                matrix._index.push(i);\n              }\n            }\n          }\n          else {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < 1)\n              columns = 1;\n            // check value != 0 (row is a scalar)\n            if (!math.equal(row, 0)) {\n              // store value\n              matrix._values.push(row);\n              // index\n              matrix._index.push(i);\n            }\n          }\n        }\n        // increment index\n        j++;      \n      }\n      while (j < columns);\n    }\n    // store number of values in ptr\n    matrix._ptr.push(matrix._values.length);\n    // size\n    matrix._size = [rows, columns];\n  };\n  \n  CcsMatrix.prototype = new math.type.Matrix();\n\n  CcsMatrix.prototype.type = 'CcsMatrix';\n  \n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n  CcsMatrix.prototype.storage = function () {\n    return 'ccs';\n  };\n  \n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Maytrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  CcsMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    // check arguments\n    switch (arguments.length) {\n      case 1:\n        return _getsubset(this, index);\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _setsubset(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  \n  var _getsubset = function (matrix, index) {\n    // check index\n    if (!(index instanceof Index)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = index.isScalar();\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(index.min());\n    }\n    // validate dimensions\n    var size = index.size();\n    if (size.length != matrix._size.length) {\n      throw new DimensionError(size.length, matrix._size.length);\n    }\n\n    // validate if any of the ranges in the index is out of range\n    var min = index.min();\n    var max = index.max();\n    for (var i = 0, ii = matrix._size.length; i < ii; i++) {\n      validateIndex(min[i], matrix._size[i]);\n      validateIndex(max[i], matrix._size[i]);\n    }\n\n    // map callback\n    var callback = function (v) {\n      // return value\n      return v;\n    };\n    // get sub-matrix\n    return _map(matrix, min[0], max[0], min[1], max[1], callback, false);\n  };\n  \n  var _setsubset = function (matrix, index, submatrix, defaultValue) {\n    // check index\n    if (!(index instanceof Index)) {\n      throw new TypeError('Invalid index');\n    }\n    \n    // get index size and check whether the index contains a single value\n    var iSize = index.size(),\n        isScalar = index.isScalar();\n    \n    // calculate the size of the submatrix, and convert it into an Array if needed\n    var sSize;\n    if (submatrix instanceof Matrix) {\n      // submatrix size\n      sSize = submatrix.size();\n      // use array representation\n      submatrix = submatrix.toArray();\n    }\n    else {\n      // get submatrix size (array, scalar)\n      sSize = array.size(submatrix);\n    }\n    \n    // check index is a scalar\n    if (isScalar) {\n      // verify submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n      // set value\n      matrix.set(index.min(), submatrix, defaultValue);\n    }\n    else {\n      // validate dimensions, index size must be one or two dimensions\n      if (iSize.length !== 1 && iSize.length !== 2) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n      \n      // check submatrix and index have the same dimensions\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        }\n        // unsqueeze both outer and inner dimensions\n        submatrix = array.unsqueeze(submatrix, iSize.length, outer, sSize);\n      }\n      \n      // check whether the size of the submatrix matches the index size\n      if (!object.deepEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      }\n      \n      // offsets\n      var x0 = index.min()[0];\n      var y0 = index.min()[1];      \n      \n      // submatrix rows and columns\n      var m = sSize[0];\n      var n = sSize[1];\n\n      // loop submatrix\n      for (var x = 0; x < m; x++) {\n        // loop columns\n        for (var y = 0; y < n; y++) {\n          // value at i, j\n          var v = submatrix[x][y];\n          // invoke set (zero value will remove entry from matrix)\n          matrix.set([x + x0, y + y0], v, defaultValue);\n        }\n      }\n    }\n    return matrix;\n  };\n\n  /**\n   * Get a single element from the matrix.\n   * @param {Number[]} index   Zero-based index\n   * @return {*} value\n   */\n  CcsMatrix.prototype.get = function (index) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // row and column\n    var i = index[0];\n    var j = index[1];\n\n    // check i, j are valid\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[1]);\n\n    // find value index\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index);\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i)\n      return object.clone(this._values[k]);\n\n    return 0;\n  };\n  \n  /**\n   * Replace a single element in the matrix.\n   * @param {Number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be set to zero.\n   * @return {CcsMatrix} self\n   */\n  CcsMatrix.prototype.set = function (index, v, defaultValue) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // row and column\n    var i = index[0];\n    var j = index[1];\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n\n    // check we need to resize matrix\n    if (i > rows - 1 || j > columns - 1) {\n      // resize matrix\n      _resize(this, Math.max(i + 1, rows), Math.max(j + 1, columns), defaultValue);\n      // update rows & columns\n      rows = this._size[0];\n      columns = this._size[1];\n    }\n\n    // check i, j are valid\n    validateIndex(i, rows);\n    validateIndex(j, columns);\n\n    // find value index\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index);\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      // check value != 0\n      if (!math.equal(v, 0)) {\n        // update value\n        this._values[k] = v;\n      }\n      else {\n        // remove value from matrix\n        _remove(k, j, this._values, this._index, this._ptr);\n      }\n    }\n    else {\n      // insert value @ (i, j)\n      _insert(k, i, j, v, this._values, this._index, this._ptr);\n    }\n\n    return this;\n  };\n  \n  var _getValueIndex = function(i, top, bottom, index) {\n    // check row is on the bottom side\n    if (bottom - top === 0 || i > index[bottom - 1])\n      return bottom;\n    // loop until we find row index\n    while (top < bottom) {\n      // point in the middle (fast integer division)\n      var p = ~~((top + bottom) / 2);\n      // row @ p\n      var r = index[p];\n      // check we have to look on the top side, bottom side or we found the row\n      if (i < r)\n        bottom = p;\n      else if (i > r)\n        top = p + 1;\n      else\n        return p;\n    }\n    return top;\n  };\n\n  var _remove = function (k, j, values, index, ptr) {\n    // remove value @ k\n    values.splice(k, 1);\n    index.splice(k, 1);\n    // update pointers\n    for (var x = j + 1; x < ptr.length; x++)\n      ptr[x]--;\n  };\n\n  var _insert = function (k, i, j, v, values, index, ptr) {\n    // insert value\n    values.splice(k, 0, v);\n    // update row for k\n    index.splice(k, 0, i);\n    // update column pointers\n    for (var x = j + 1; x < ptr.length; x++)\n      ptr[x]++;\n  };\n  \n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when \n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {Number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  CcsMatrix.prototype.resize = function (size, defaultValue, copy) {    \n    // validate arguments\n    if (!isArray(size))\n      throw new TypeError('Array expected');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n\n    // check sizes\n    size.forEach(function (value) {\n      if (!number.isNumber(value) || !number.isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' +\n                            '(size: ' + string.format(size) + ')');\n      }\n    });\n    \n    // matrix to resize\n    var m = copy ? this.clone() : this;\n    // resize matrix\n    return _resize(m, size[0], size[1], defaultValue);\n  };\n  \n  var _resize = function (matrix, rows, columns, defaultValue) {\n    // value to insert at the time of growing matrix\n    var value = defaultValue || 0;\n    // should we insert the value?\n    var ins = !math.equal(value, 0);\n\n    // old columns and rows\n    var r = matrix._size[0];\n    var c = matrix._size[1];\n\n    var i, j, k;\n\n    // check we need to increase columns\n    if (columns > c) {\n      // loop new columns\n      for (j = c; j < columns; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._values.length;\n        // check we need to insert matrix._values\n        if (ins) {\n          // loop rows\n          for (i = 0; i < r; i++) {\n            // add new matrix._values\n            matrix._values.push(value);\n            // update matrix._index\n            matrix._index.push(i);\n          }\n        }        \n      }\n      // store number of matrix._values in matrix._ptr\n      matrix._ptr[columns] = matrix._values.length;\n    }\n    else if (columns < c) {\n      // truncate matrix._ptr\n      matrix._ptr.splice(columns + 1, c - columns);\n      // truncate matrix._values and matrix._index\n      matrix._values.splice(matrix._ptr[columns], matrix._values.length);\n      matrix._index.splice(matrix._ptr[columns], matrix._index.length);\n    }\n    // update columns\n    c = columns;\n\n    // check we need to increase rows\n    if (rows > r) {\n      // check we have to insert values\n      if (ins) {\n        // inserts\n        var n = 0;\n        // loop columns\n        for (j = 0; j < c; j++) {\n          // update matrix._ptr for current column\n          matrix._ptr[j] = matrix._ptr[j] + n;\n          // where to insert matrix._values\n          k = matrix._ptr[j + 1] + n;\n          // pointer\n          var p = 0;\n          // loop new rows, initialize pointer\n          for (i = r; i < rows; i++, p++) {\n            // add value\n            matrix._values.splice(k + p, 0, value);\n            // update matrix._index\n            matrix._index.splice(k + p, 0, i);\n            // increment inserts\n            n++;\n          }\n        }\n        // store number of matrix._values in matrix._ptr\n        matrix._ptr[c] = matrix._values.length;\n      }\n    }\n    else if (rows < r) {\n      // deletes\n      var d = 0;\n      // loop columns\n      for (j = 0; j < c; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._ptr[j] - d;\n        // where matrix._values start for next column\n        var k0 = matrix._ptr[j];\n        var k1 = matrix._ptr[j + 1] - d;\n        // loop matrix._index\n        for (k = k0; k < k1; k++) {\n          // row\n          i = matrix._index[k];\n          // check we need to delete value and matrix._index\n          if (i > rows - 1) {\n            // remove value\n            matrix._values.splice(k, 1);\n            // remove item from matrix._index\n            matrix._index.splice(k, 1);\n            // increase deletes\n            d++;\n          }\n        }\n      }\n      // update matrix._ptr for current column\n      matrix._ptr[j] = matrix._values.length;\n    }\n    // update matrix._size\n    matrix._size[0] = rows;\n    matrix._size[1] = columns;\n    // return matrix\n    return matrix;\n  };\n  \n  /**\n   * Create a clone of the matrix\n   * @return {CcsMatrix} clone\n   */\n  CcsMatrix.prototype.clone = function () {\n    var m = new CcsMatrix({\n      values: object.clone(this._values),\n      index: object.clone(this._index),\n      ptr: object.clone(this._ptr),\n      size: object.clone(this._size)\n    });\n    return m;\n  };\n  \n  /**\n   * Retrieve the size of the matrix.\n   * @returns {Number[]} size\n   */\n  CcsMatrix.prototype.size = function() {\n    return object.clone(this._size);\n  };\n  \n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {CcsMatrix} matrix\n   */\n  CcsMatrix.prototype.map = function (callback, skipZeros) {\n    // matrix instance\n    var me = this;\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // invoke callback\n    var invoke = function (v, i, j) {\n      // invoke callback\n      return callback(v, [i, j], me);\n    };\n    // invoke _map\n    return _map(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros);\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on the interval\n   * [minRow..maxRow, minColumn..maxColumn].\n   */\n  var _map = function (matrix, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {\n    // result arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    // invoke callback\n    var invoke = function (v, x, y) {\n      // invoke callback\n      v = callback(v, x, y);\n      // check value != 0\n      if (!math.equal(v, 0)) {\n        // store value\n        values.push(v);\n        // index\n        index.push(x);\n      }\n    };\n    // loop columns\n    for (var j = minColumn; j <= maxColumn; j++) {\n      // store pointer to values index\n      ptr.push(values.length);\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = matrix._ptr[j];\n      var k1 = matrix._ptr[j + 1];\n      // row pointer\n      var p = minRow;\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = matrix._index[k];\n        // check i is in range\n        if (i >= minRow && i <= maxRow) {\n          // zero values\n          if (!skipZeros) {\n           for (var x = p; x < i; x++)\n             invoke(0, x - minRow, j - minColumn);\n          }\n          // value @ k\n          invoke(matrix._values[k], i - minRow, j - minColumn);\n        }\n        // update pointer\n        p = i + 1;\n      }\n      // zero values\n      if (!skipZeros) {\n        for (var y = p; y <= maxRow; y++)\n          invoke(0, y - minRow, j - minColumn);\n      }\n    }\n    // store number of values in ptr\n    ptr.push(values.length);\n    // return ccs\n    return new CcsMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]\n    });\n  };\n  \n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   */\n  CcsMatrix.prototype.forEach = function (callback, skipZeros) {\n    // matrix instance\n    var me = this;\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // column pointer\n      var p = 0;\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k];\n        // check we need to process zeros\n        if (!skipZeros) {\n          // zero values\n          for (var x = p; x < i; x++)\n            callback(0, [x, j], me);\n        }\n        // value @ k\n        callback(this._values[k], [i, j], me);\n        // update pointer\n        p = i + 1;\n      }\n      // check we need to process zeros\n      if (!skipZeros) {\n        // zero values\n        for (var y = p; y < rows; y++)\n          callback(0, [y, j], me);\n      }\n    }\n  };\n  \n  /**\n   * Create an Array with a copy of the data of the CcsMatrix\n   * @returns {Array} array\n   */\n  CcsMatrix.prototype.toArray = function () {\n    return _toArray(this, true);\n  };\n\n  /**\n   * Get the primitive value of the CcsMatrix: a two dimensions array\n   * @returns {Array} array\n   */\n  CcsMatrix.prototype.valueOf = function () {\n    return _toArray(this, false);\n  };\n  \n  var _toArray = function (matrix, copy) {\n    // result\n    var a = [];\n    // rows and columns\n    var rows = matrix._size[0];\n    var columns = matrix._size[1];\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = matrix._ptr[j];\n      var k1 = matrix._ptr[j + 1];\n      // row pointer\n      var p = 0;\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = matrix._index[k];\n        // zeros\n        for (var x = p; x < i; x++)\n          (a[x] = (a[x] || []))[j] = 0;\n        // set value\n        (a[i] = (a[i] || []))[j] = copy ? object.clone(matrix._values[k]) : matrix._values[k];\n        // update pointer\n        p = i + 1;\n      }\n      // zero values\n      for (var y = p; y < rows; y++)\n        (a[y] = (a[y] || []))[j] = 0;\n    }\n    return a;\n  };\n  \n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | Number | Function} [options]  Formatting options. See\n   *                                                lib/util/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {String} str\n   */\n  CcsMatrix.prototype.format = function (options) {\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // rows & columns\n    var str = 'CCS [' + string.format(rows, options) + ' x ' + string.format(columns, options) + '] density: ' + string.format(this._values.length / (rows * columns), options) + '\\n';\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k];\n        // append value\n        str += '\\n    (' + string.format(i, options) + ', ' + string.format(j, options) + ') ==> ' + string.format(this._values[k], options);\n      }\n    }\n    return str;\n  };\n  \n  /**\n   * Get a string representation of the matrix\n   * @returns {String} str\n   */\n  CcsMatrix.prototype.toString = function () {\n    return string.format(this.toArray());\n  };\n  \n  /**\n   * Get a JSON representation of the matrix\n   * @returns {Object}\n   */\n  CcsMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'CcsMatrix',\n      values: this._values,\n      index: this._index,\n      ptr: this._ptr,\n      size: this._size\n    };\n  };\n\n  /**\n   * Calculates the transpose of the matrix\n   * @returns {Matrix}\n   */\n  CcsMatrix.prototype.transpose = function () {\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // check columns\n    if (columns === 0) {\n      // throw exception\n      throw new RangeError('Cannot transpose a 2D matrix with no columns (size: ' + string.format(this._size) + ')');\n    }\n    // ccs transpose is a crs matrix with the same structure\n    return new math.type.CrsMatrix({\n      values: object.clone(this._values),\n      index: object.clone(this._index),\n      ptr: object.clone(this._ptr),\n      size: [columns, rows]\n    });\n  };\n\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @param {Number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Array}                      The array vector with the diagonal values.\n   */\n  CcsMatrix.prototype.diagonal = function(k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (k instanceof BigNumber) \n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    \n    // number diagonal values\n    var n = Math.min(rows - kSub, columns -  kSuper);\n    \n    // diagonal\n    var values = [];\n    // loop columns\n    for (var j = kSuper; j < columns && values.length < n; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // column value flag\n      var cv = false;\n      // loop x within [k0, k1[\n      for (var x = k0; x < k1; x++) {\n        // row index\n        var i = this._index[x];\n        // check row\n        if (i === j - kSuper + kSub) {\n          // set flag\n          cv = true;\n          // value on this column\n          values.push(object.clone(this._values[x]));\n          // exit loop\n          break;\n        }\n        else if (i > j - kSuper + kSub) {\n          // exit loop, no value on the diagonal for column j\n          break;\n        }\n      }\n      // check this column has a value set\n      if (!cv && values.length < n) {\n        // zero on this column\n        values.push(0);\n      }\n    }\n    return values;\n  };\n  \n  /**\n   * Generate a matrix from a JSON object\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"CcsMatrix\", \"values\": [], \"index\": [], \"ptr\": [], \"size\": []}`,\n   *                       where mathjs is optional\n   * @returns {CcsMatrix}\n   */\n  CcsMatrix.fromJSON = function (json) {\n    return new CcsMatrix(json);\n  };\n\n  /**\n   * Create a diagonal matrix.\n   *\n   * @param {Array} size                   The matrix size.\n   * @param {Number, Array} value          The values for the diagonal.\n   * @param {Number | BigNumber} [k=0]     The kth diagonal where the vector will be filled in.\n   *\n   * @returns {CcsMatrix}\n   */\n  CcsMatrix.diagonal = function (size, value, k) {\n    if (!isArray(size))\n      throw new TypeError('Array expected, size parameter');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n    \n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (s instanceof BigNumber) {\n        // convert it\n        s = s.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      } \n      return s;\n    });\n    \n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (k instanceof BigNumber) \n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n    \n    // number of non-zero items\n    var n = Math.min(rows - kSub, columns -  kSuper);\n    \n    // value extraction function\n    var _value;\n      \n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i];\n      };\n    }\n    else {\n      // define function\n      _value = function () {\n        // return value\n        return value;\n      };\n    }\n    \n    // create arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    \n    // loop items\n    for (var j = 0; j < columns; j++) {\n      // number of rows with value\n      ptr.push(values.length);\n      // diagonal index\n      var i = j - kSuper;      \n      // check we need to set diagonal value\n      if (i >= 0 && i < n) {\n        // get value @ i\n        var v = _value(i);\n        // check for zero\n        if (!math.equal(v, 0)) {\n          // column\n          index.push(i + kSub);\n          // add value\n          values.push(v);\n        }\n      }\n    }\n    // last value should be number of values\n    ptr.push(values.length);\n    // create CcsMatrix\n    return new CcsMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [rows, columns]\n    });\n  };\n  \n  /**\n   * Calculate the trace of a matrix: the sum of the elements on the main\n   * diagonal of a square matrix.\n   *\n   * See also:\n   *\n   *    diagonal\n   *\n   * @returns {Number}       The matrix trace\n   */\n  CcsMatrix.prototype.trace = function () {\n    // size\n    var size = this._size;\n    // check dimensions\n    var rows = size[0];\n    var columns = size[1];\n    // matrix must be square\n    if (rows === columns) {\n      // calulate sum\n      var sum = 0;\n      // check we have data (avoid looping columns)\n      if (this._values.length > 0) {\n        // loop columns\n        for (var j = 0; j < columns; j++) {\n          // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n          var k0 = this._ptr[j];\n          var k1 = this._ptr[j + 1];\n          // loop k within [k0, k1[\n          for (var k = k0; k < k1; k++) {\n            // row index\n            var i = this._index[k];\n            // check row\n            if (i === j) {\n              // accumulate value\n              sum = math.add(sum, this._values[k]);\n              // exit loop\n              break;\n            }\n            if (i > j) {\n              // exit loop, no value on the diagonal for column j\n              break;\n            }\n          }\n        }\n      }\n      // return trace\n      return sum;\n    }\n    throw new RangeError('Matrix must be square (size: ' + string.format(size) + ')');        \n  };\n  \n  /**\n   * Multiply the matrix values times the argument.\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} Value to multiply.\n   *\n   * @return {Number | BigNumber | Complex | Unit | Matrix}\n   */\n  CcsMatrix.prototype.multiply = function (value) {\n    // check dimensions\n    var rows = this._size[0];\n    var columns = this._size[1];\n    \n    // check value is a matrix\n    if (value instanceof Matrix) {\n      // matrix size\n      var z = value.size();\n      // check value is a vector\n      if (z.length === 1) {\n        // mutiply matrix x vector array\n        return _multiply(this, z[0], 1, function (i) {\n          // value[i]\n          return value.get([i]);\n        });\n      }\n      // check two dimensions matrix\n      if (z.length === 2) {        \n        // mutiply matrix x matrix\n        return _multiply(this, z[0], z[1], function (i, j) {\n          // value[i, j]\n          return value.get([i, j]);\n        });\n      }\n      throw new Error('Can only multiply a 1 or 2 dimensional matrix ' +\n                      '(value has ' + z.length + ' dimensions)');\n    }\n\n    // check value is an array\n    if (isArray(value)) {\n      // array size\n      var s = array.size(value);\n      // check value is a vector\n      if (s.length === 1) {\n        // mutiply matrix x vector array\n        return _multiply(this, s[0], 1, function (i) {\n          // value[i]\n          return value[i];\n        });\n      }\n      if (s.length === 2) {\n        // mutiply matrix x array\n        return _multiply(this, s[0], s[1], function (i, j) {\n          // value[i, j]\n          return value[i][j];\n        });\n      }\n      throw new Error('Can only multiply a 1 or 2 dimensional matrix ' +\n                      '(value has ' + s.length + ' dimensions)');\n    }\n    \n    var callback = function (v) {\n      return math.multiply(v, value);\n    };\n\n    // map non zero elements\n    return _map(this, 0, rows - 1, 0, columns - 1, callback, false);\n  };\n\n  var _multiply = function (matrix, r, c, get) {\n  \n    // matrix dimensions\n    var rows = matrix._size[0];\n    var columns = matrix._size[1];\n    \n    // check dimensions match\n    if (columns !== r) {\n      // throw error\n      throw new RangeError('Dimension mismatch in multiplication. ' +\n                           'Columns of A must match length of B ' +\n                           '(A is ' + rows + 'x' + columns +\n                           ', B is ' + r + ', ' +\n                           columns + ' != ' + r + ')');\n    }\n    \n    // result arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n\n    // create array with rows entries\n    var data = [];\n    for (var x = 0; x < rows; x++)\n      data[x] = 0;\n    // loop value columns\n    for (var z = 0; z < c; z++) {\n      // update ptr\n      ptr.push(values.length);\n      // do not traverse rows in matrix, it is not efficient in CCS\n      for (var j = 0; j < columns; j++) {          \n        // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n        var k0 = matrix._ptr[j];\n        var k1 = matrix._ptr[j + 1];\n        // loop k within [k0, k1[\n        for (var k = k0; k < k1; k++) {\n          // row\n          var i = matrix._index[k];\n          // multiply & aggregate\n          data[i] = math.add(data[i], math.multiply(matrix._values[k], get(j, z)));\n        }          \n      }\n      // finished processing column z, compress results\n      for (var y = 0; y < rows; y++) {\n        // check value is different than zero\n        if (!math.equal(data[y], 0)) {\n          // push value\n          values.push(data[y]);\n          index.push(y);          \n        }\n        // reset value\n        data[y] = 0;\n      }\n    }\n    // update ptr\n    ptr.push(values.length);\n    \n    // check we need to squeeze the result into a scalar\n    if (rows === 1 && c === 1)\n      return values.length === 1 ? values[0] : 0;\n    \n    // return CCS matrix\n    return new CcsMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [rows, c]\n    });\n  };\n  \n  return CcsMatrix;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/type/matrix/CcsMatrix.js\n ** module id = 26\n ** module chunks = 0\n **/","'use strict';\n\nvar util = require('../../util/index');\nvar DimensionError = require('../../error/DimensionError');\n\nvar array = util.array;\nvar object = util.object;\nvar string = util.string;\nvar number = util.number;\n\nvar isArray = Array.isArray;\nvar isNumber = util.number.isNumber;\nvar isInteger = util.number.isInteger;\n\nvar validateIndex = array.validateIndex;\n\nmodule.exports = function (math) {\n\n  var Index = math.type.Index,\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix;\n\n  function CrsMatrix(data) {\n    if (!(this instanceof CrsMatrix))\n      throw new SyntaxError('Constructor must be called with the new operator');\n\n    if (data instanceof Matrix) {\n      // check data is a CrsMatrix\n      if (data.type === 'CrsMatrix') {\n        // clone arrays\n        this._values = object.clone(data._values);\n        this._index = object.clone(data._index);\n        this._ptr = object.clone(data._ptr);\n        this._size = object.clone(data._size);\n      }\n      else {\n        // build from matrix data\n        _createFromArray(this, data.valueOf());\n      }\n    }\n    else if (data && isArray(data.values) && isArray(data.index) && isArray(data.ptr) && isArray(data.size)) {\n      // initialize fields\n      this._values = data.values;\n      this._index = data.index;\n      this._ptr = data.ptr;\n      this._size = data.size;\n    }\n    else if (isArray(data)) {\n      // create from array\n      _createFromArray(this, data);\n    }\n    else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');\n    }\n    else {\n      // nothing provided\n      this._values = [];\n      this._index = [];\n      this._ptr = [0];\n      this._size = [0];\n    }\n  }\n\n  var _createFromArray = function (matrix, data) {\n    // initialize fields\n    matrix._values = [];\n    matrix._index = [];\n    matrix._ptr = [];\n    // discover rows & columns, do not use math.size() to avoid looping array twice\n    var rows = data.length;\n    var columns = 0;\n\n    // loop rows\n    for (var i = 0; i < rows; i++) {\n      // store value index in ptr\n      matrix._ptr.push(matrix._values.length);\n      // current row\n      var row = data[i];      \n      // check row is an array\n      if (isArray(row)) {\n        // update columns if needed\n        if (row.length > columns)\n          columns = row.length;\n        // loop columns\n        for (var j = 0; j < row.length; j++) {\n          // value at data[i][j]\n          var v = row[j];\n          // check value != 0\n          if (!math.equal(v, 0)) {\n            // store value\n            matrix._values.push(v);\n            // add column index\n            matrix._index.push(j);\n          }\n        }\n      }\n      else {\n        // update columns if needed (only on first row)\n        if (i === 0 && columns < 1)\n          columns = 1;\n        // check value != 0 (row is a scalar)\n        if (!math.equal(row, 0)) {\n          // store value\n          matrix._values.push(row);\n          // index\n          matrix._index.push(0);\n        }\n      }\n    }\n    // store number of values in ptr\n    matrix._ptr.push(matrix._values.length);\n    // size\n    matrix._size = [rows, columns];\n  };\n\n  CrsMatrix.prototype = new math.type.Matrix();\n\n  CrsMatrix.prototype.type = 'CrsMatrix';\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n  CrsMatrix.prototype.storage = function () {\n    return 'crs';\n  };\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Maytrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  CrsMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    // check arguments\n    switch (arguments.length) {\n      case 1:\n        return _getsubset(this, index);\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _setsubset(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n\n  var _getsubset = function (matrix, index) {\n    // check index\n    if (!(index instanceof Index)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = index.isScalar();\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(index.min());\n    }\n    // validate dimensions\n    var size = index.size();\n    if (size.length != matrix._size.length) {\n      throw new DimensionError(size.length, matrix._size.length);\n    }\n\n    // validate if any of the ranges in the index is out of range\n    var min = index.min();\n    var max = index.max();\n    for (var i = 0, ii = matrix._size.length; i < ii; i++) {\n      validateIndex(min[i], matrix._size[i]);\n      validateIndex(max[i], matrix._size[i]);\n    }\n\n    // map callback\n    var callback = function (v) {\n      // return value\n      return v;\n    };\n    // get sub-matrix\n    return _map(matrix, min[0], max[0], min[1], max[1], callback, false);\n  };\n\n  var _setsubset = function (matrix, index, submatrix, defaultValue) {\n    // check index\n    if (!(index instanceof Index)) {\n      throw new TypeError('Invalid index');\n    }\n\n    // get index size and check whether the index contains a single value\n    var iSize = index.size(),\n        isScalar = index.isScalar();\n\n    // calculate the size of the submatrix, and convert it into an Array if needed\n    var sSize;\n    if (submatrix instanceof Matrix) {\n      // submatrix size\n      sSize = submatrix.size();\n      // use array representation\n      submatrix = submatrix.toArray();\n    }\n    else {\n      // get submatrix size (array, scalar)\n      sSize = array.size(submatrix);\n    }\n\n    // check index is a scalar\n    if (isScalar) {\n      // verify submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n      // set value\n      matrix.set(index.min(), submatrix, defaultValue);\n    }\n    else {\n      // validate dimensions, index size must be one or two dimensions\n      if (iSize.length !== 1 && iSize.length !== 2) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n\n      // check submatrix and index have the same dimensions\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        }\n        // unsqueeze both outer and inner dimensions\n        submatrix = array.unsqueeze(submatrix, iSize.length, outer, sSize);\n      }\n\n      // check whether the size of the submatrix matches the index size\n      if (!object.deepEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      }\n\n      // offsets\n      var x0 = index.min()[0];\n      var y0 = index.min()[1];      \n\n      // submatrix rows and columns\n      var m = sSize[0];\n      var n = sSize[1];\n\n      // loop submatrix\n      for (var x = 0; x < m; x++) {\n        // loop columns\n        for (var y = 0; y < n; y++) {\n          // value at i, j\n          var v = submatrix[x][y];\n          // invoke set (zero value will remove entry from matrix)\n          matrix.set([x + x0, y + y0], v, defaultValue);\n        }\n      }\n    }\n    return matrix;\n  };\n\n  /**\n   * Get a single element from the matrix.\n   * @param {Number[]} index   Zero-based index\n   * @return {*} value\n   */\n  CrsMatrix.prototype.get = function (index) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // row and column\n    var i = index[0];\n    var j = index[1];\n\n    // check i, j are valid\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[1]);\n\n    // find value index\n    var k = _getValueIndex(j, this._ptr[i], this._ptr[i + 1], this._index);\n    // check k is prior to next row k and it is in the correct row\n    if (k < this._ptr[i + 1] && this._index[k] === j)\n      return object.clone(this._values[k]);\n\n    return 0;\n  };\n\n  /**\n   * Replace a single element in the matrix.\n   * @param {Number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be set to zero.\n   * @return {CrsMatrix} self\n   */\n  CrsMatrix.prototype.set = function (index, v, defaultValue) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // row and column\n    var i = index[0];\n    var j = index[1];\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n\n    // check we need to resize matrix\n    if (i > rows - 1 || j > columns - 1) {\n      // resize matrix\n      _resize(this, Math.max(i + 1, rows), Math.max(j + 1, columns), defaultValue);\n      // update rows & columns\n      rows = this._size[0];\n      columns = this._size[1];\n    }\n\n    // check i, j are valid\n    validateIndex(i, rows);\n    validateIndex(j, columns);\n\n    // find value index\n    var k = _getValueIndex(j, this._ptr[i], this._ptr[i + 1], this._index);\n    // check k is prior to next row k and it is in the correct column\n    if (k < this._ptr[i + 1] && this._index[k] === j) {\n      // check value != 0\n      if (!math.equal(v, 0)) {\n        // update value\n        this._values[k] = v;\n      }\n      else {\n        // remove value from matrix\n        _remove(k, i, this._values, this._index, this._ptr);\n      }\n    }\n    else {\n      // insert value @ (i, j)\n      _insert(k, i, j, v, this._values, this._index, this._ptr);\n    }\n\n    return this;\n  };\n\n  var _getValueIndex = function(j, left, right, index) {\n    // check column is on the right side\n    if (right - left === 0 || j > index[right - 1])\n      return right;\n    // loop until we find row index\n    while (left < right) {\n      // point in the middle (fast integer division)\n      var p = ~~((left + right) / 2);\n      // column @ p\n      var c = index[p];\n      // check we have to look on the left side, right side or we found the column\n      if (j < c)\n        right = p;\n      else if (j > c)\n        left = p + 1;\n      else\n        return p;\n    }\n    return left;\n  };\n\n  var _remove = function (k, i, values, index, ptr) {\n    // remove value @ k\n    values.splice(k, 1);\n    index.splice(k, 1);\n    // update pointers\n    for (var x = i + 1; x < ptr.length; x++)\n      ptr[x]--;\n  };\n\n  var _insert = function (k, i, j, v, values, index, ptr) {\n    // insert value\n    values.splice(k, 0, v);\n    // update column for k\n    index.splice(k, 0, j);\n    // update row pointers\n    for (var x = i + 1; x < ptr.length; x++)\n      ptr[x]++;\n  };\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when \n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {Number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  CrsMatrix.prototype.resize = function (size, defaultValue, copy) {    \n    // validate arguments\n    if (!isArray(size))\n      throw new TypeError('Array expected');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n\n    // check sizes\n    size.forEach(function (value) {\n      if (!number.isNumber(value) || !number.isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' +\n                            '(size: ' + string.format(size) + ')');\n      }\n    });\n\n    // matrix to resize\n    var m = copy ? this.clone() : this;\n    // resize matrix\n    return _resize(m, size[0], size[1], defaultValue);\n  };\n\n  var _resize = function (matrix, rows, columns, defaultValue) {\n    // value to insert at the time of growing matrix\n    var value = defaultValue || 0;\n    // should we insert the value?\n    var ins = !math.equal(value, 0);\n\n    // old columns and rows\n    var r = matrix._size[0];\n    var c = matrix._size[1];\n\n    var i, j, k;\n\n    // check we need to increase rows\n    if (rows > r) {\n      // loop new rows\n      for (i = r; i < rows; i++) {\n        // update matrix._ptr for current column\n        matrix._ptr[i] = matrix._values.length;\n        // check we need to insert matrix._values\n        if (ins) {\n          // loop columns\n          for (j = 0; j < c; j++) {\n            // add new matrix._values\n            matrix._values.push(value);\n            // update matrix._index\n            matrix._index.push(j);\n          }\n        }        \n      }\n      // store number of matrix._values in matrix._ptr\n      matrix._ptr[rows] = matrix._values.length;\n    }\n    else if (rows < r) {\n      // truncate matrix._ptr\n      matrix._ptr.splice(rows + 1, r - rows);\n      // truncate matrix._values and matrix._index\n      matrix._values.splice(matrix._ptr[rows], matrix._values.length);\n      matrix._index.splice(matrix._ptr[rows], matrix._index.length);\n    }\n    // update rows\n    r = rows;\n\n    // check we need to increase columns\n    if (columns > c) {\n      // check we have to insert values\n      if (ins) {\n        // inserts\n        var n = 0;\n        // loop rows\n        for (i = 0; i < r; i++) {\n          // update matrix._ptr for current row\n          matrix._ptr[i] = matrix._ptr[i] + n;\n          // where to insert matrix._values\n          k = matrix._ptr[i + 1] + n;\n          // pointer\n          var p = 0;\n          // loop new columns, initialize pointer\n          for (j = c; j < columns; j++, p++) {\n            // add value\n            matrix._values.splice(k + p, 0, value);\n            // update matrix._index\n            matrix._index.splice(k + p, 0, j);\n            // increment inserts\n            n++;\n          }\n        }\n        // store number of matrix._values in matrix._ptr\n        matrix._ptr[r] = matrix._values.length;\n      }\n    }\n    else if (columns < c) {\n      // deletes\n      var d = 0;\n      // loop rows\n      for (i = 0; i < r; i++) {\n        // update matrix._ptr for current row\n        matrix._ptr[i] = matrix._ptr[i] - d;\n        // where matrix._values start for next column\n        var k0 = matrix._ptr[i];\n        var k1 = matrix._ptr[i + 1] - d;\n        // loop matrix._index\n        for (k = k0; k < k1; k++) {\n          // column\n          j = matrix._index[k];\n          // check we need to delete value and matrix._index\n          if (j > columns - 1) {\n            // remove value\n            matrix._values.splice(k, 1);\n            // remove item from matrix._index\n            matrix._index.splice(k, 1);\n            // increase deletes\n            d++;\n          }\n        }\n      }\n      // update matrix._ptr for current column\n      matrix._ptr[i] = matrix._values.length;\n    }\n    // update matrix._size\n    matrix._size[0] = rows;\n    matrix._size[1] = columns;\n    // return matrix\n    return matrix;\n  };\n\n  /**\n   * Create a clone of the matrix\n   * @return {CrsMatrix} clone\n   */\n  CrsMatrix.prototype.clone = function () {\n    var m = new CrsMatrix({\n      values: object.clone(this._values),\n      index: object.clone(this._index),\n      ptr: object.clone(this._ptr),\n      size: object.clone(this._size)\n    });\n    return m;\n  };\n\n  /**\n   * Retrieve the size of the matrix.\n   * @returns {Number[]} size\n   */\n  CrsMatrix.prototype.size = function() {\n    return object.clone(this._size);\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Matrix} matrix\n   */\n  CrsMatrix.prototype.map = function (callback, skipZeros) {\n    // matrix instance\n    var me = this;\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // invoke callback\n    var invoke = function (v, i, j) {\n      // invoke callback\n      return callback(v, [i, j], me);\n    };\n    // invoke _map\n    return _map(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros);\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on the interval\n   * [minRow..maxRow, minColumn..maxColumn].\n   */\n  var _map = function (matrix, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {\n    // result arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    // invoke callback\n    var invoke = function (v, x, y) {\n      // invoke callback\n      v = callback(v, x, y);\n      // check value != 0\n      if (!math.equal(v, 0)) {\n        // store value\n        values.push(v);\n        // index\n        index.push(y);\n      }\n    };\n    // loop rows\n    for (var i = minRow; i <= maxRow; i++) {\n      // store pointer to values index\n      ptr.push(values.length);\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = matrix._ptr[i];\n      var k1 = matrix._ptr[i + 1];\n      // column pointer\n      var p = minColumn;\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // column index\n        var j = matrix._index[k];\n        // check j is in range\n        if (j >= minColumn && j <= maxColumn) {\n          // zero values\n          if (!skipZeros) {\n            // write zeros from column p to j\n            for (var x = p; x < j; x++)\n              invoke(0, i - minRow, x - minColumn);\n          }\n          // value @ k\n          invoke(matrix._values[k], i - minRow, j - minColumn);\n        }\n        // update pointer\n        p = j + 1;\n      }\n      // zero values\n      if (!skipZeros) {\n        // write zeros from column p to maxColumn\n        for (var y = p; y <= maxColumn; y++)\n          invoke(0, i - minRow, y - minColumn);\n      }\n    }\n    // store number of values in ptr\n    ptr.push(values.length);\n    // return ccs\n    return new CrsMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]\n    });\n  };\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   */\n  CrsMatrix.prototype.forEach = function (callback, skipZeros) {\n    // matrix instance\n    var me = this;\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // loop rows\n    for (var i = 0; i < rows; i++) {\n      // k0 <= k < k1 where k0 = _ptr[i] && k1 = _ptr[i+1]\n      var k0 = this._ptr[i];\n      var k1 = this._ptr[i + 1];\n      // column pointer\n      var p = 0;\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // column index\n        var j = this._index[k];\n        // check we need to process zeros\n        if (!skipZeros) {\n          // zero values\n          for (var x = p; x < j; x++)\n            callback(0, [i, x], me);\n        }\n        // value @ k\n        callback(this._values[k], [i, j], me);\n        // update pointer\n        p = j + 1;\n      }\n      // check we need to process zeros\n      if (!skipZeros) {\n        // zero values\n        for (var y = p; y < columns; y++)\n          callback(0, [i, y], me);\n      }\n    }\n  };\n\n  /**\n   * Create an Array with a copy of the data of the CrsMatrix\n   * @returns {Array} array\n   */\n  CrsMatrix.prototype.toArray = function () {\n    return _toArray(this, true);\n  };\n\n  /**\n   * Get the primitive value of the CrsMatrix: a two dimensions array\n   * @returns {Array} array\n   */\n  CrsMatrix.prototype.valueOf = function () {\n    return _toArray(this, false);\n  };\n\n  var _toArray = function (matrix, copy) {\n    // result\n    var a = [];\n    // rows and columns\n    var rows = matrix._size[0];\n    var columns = matrix._size[1];\n    // loop rows\n    for (var i = 0; i < rows; i++) {\n      // push row\n      var r = a[i] = [];\n      // k0 <= k < k1 where k0 = _ptr[i] && k1 = _ptr[i+1]\n      var k0 = matrix._ptr[i];\n      var k1 = matrix._ptr[i + 1];\n      // column pointer\n      var p = 0;\n      // loop k is within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // column index\n        var j = matrix._index[k];\n        // zero values\n        for (var x = p; x < j; x++)\n          r[x] = 0;\n        // set value\n        r[j] = copy ? object.clone(matrix._values[k]) : matrix._values[k];\n        // update pointer\n        p = j + 1;\n      }\n      // zero values\n      for (var y = p; y < columns; y++)\n        r[y] = 0;\n    }\n    return a;\n  };\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | Number | Function} [options]  Formatting options. See\n   *                                                lib/util/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {String} str\n   */\n  CrsMatrix.prototype.format = function (options) {\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // rows & columns\n    var str = 'CRS [' + string.format(rows, options) + ' x ' + string.format(columns, options) + '] density: ' + string.format(this._values.length / (rows * columns), options) + '\\n';\n    // loop rows\n    for (var i = 0; i < rows; i++) {\n      // k0 <= k < k1 where k0 = _ptr[i] && k1 = _ptr[i+1]\n      var k0 = this._ptr[i];\n      var k1 = this._ptr[i + 1];\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // column index\n        var j = this._index[k];\n        // append value\n        str += '\\n    (' + string.format(i, options) + ', ' + string.format(j, options) + ') ==> ' + string.format(this._values[k], options);\n      }\n    }\n    return str;\n  };\n\n  /**\n   * Get a string representation of the matrix\n   * @returns {String} str\n   */\n  CrsMatrix.prototype.toString = function () {\n    return string.format(this.toArray());\n  };\n\n  /**\n   * Get a JSON representation of the matrix\n   * @returns {Object}\n   */\n  CrsMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'CrsMatrix',\n      values: this._values,\n      index: this._index,\n      ptr: this._ptr,\n      size: this._size\n    };\n  };\n\n  /**\n   * Calculates the transpose of the matrix\n   * @returns {Matrix}\n   */\n  CrsMatrix.prototype.transpose = function () {\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // check columns\n    if (columns === 0) {\n      // throw exception\n      throw new RangeError('Cannot transpose a 2D matrix with no columns (size: ' + string.format(this._size) + ')');\n    }\n    // crs transpose is a ccs matrix with the same structure\n    return new math.type.CcsMatrix({\n      values: object.clone(this._values),\n      index: object.clone(this._index),\n      ptr: object.clone(this._ptr),\n      size: [columns, rows]\n    });\n  };\n\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @param {Number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Array}                      The array vector with the diagonal values.\n   */\n  CrsMatrix.prototype.diagonal = function(k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (k instanceof BigNumber) \n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n\n    // number diagonal values\n    var n = Math.min(rows - kSub, columns -  kSuper);\n\n    // diagonal\n    var values = [];\n    // loop rows\n    for (var i = kSub; i < rows && values.length < n; i++) {\n      // k0 <= k < k1 where k0 = _ptr[i] && k1 = _ptr[i+1]\n      var k0 = this._ptr[i];\n      var k1 = this._ptr[i + 1];\n      // row value flag\n      var rv = false;\n      // loop x within [k0, k1[\n      for (var x = k0; x < k1; x++) {\n        // column index\n        var j = this._index[x];\n        // check column\n        if (j === i + kSuper - kSub) {\n          // set flag\n          rv = true;\n          // value on this column\n          values.push(object.clone(this._values[x]));\n          // exit loop\n          break;\n        }\n        else if (j > i + kSuper - kSub) {\n          // exit loop, no value on the diagonal for row i\n          break;\n        }\n      }\n      // check this row has a value set\n      if (!rv && values.length < n) {\n        // zero on this column\n        values.push(0);\n      }\n    }\n    return values;\n  };\n\n  /**\n   * Generate a matrix from a JSON object\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"CrsMatrix\", \"values\": [], \"index\": [], \"ptr\": [], \"size\": []}`,\n   *                       where mathjs is optional\n   * @returns {CrsMatrix}\n   */\n  CrsMatrix.fromJSON = function (json) {\n    return new CrsMatrix(json);\n  };\n\n  /**\n   * Create a diagonal matrix.\n   *\n   * @param {Array} size                   The matrix size.\n   * @param {Number, Array} value          The values for the diagonal.\n   * @param {Number | BigNumber} [k=0]     The kth diagonal where the vector will be filled in.\n   *\n   * @returns {CrsMatrix}\n   */\n  CrsMatrix.diagonal = function (size, value, k) {\n    if (!isArray(size))\n      throw new TypeError('Array expected, size parameter');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n\n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (s instanceof BigNumber) {\n        // convert it\n        s = s.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      } \n      return s;\n    });\n\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (k instanceof BigNumber) \n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n\n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n\n    // number of non-zero items\n    var n = Math.min(rows - kSub, columns -  kSuper);\n\n    // value extraction function\n    var _value;\n\n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i];\n      };\n    }\n    else {\n      // define function\n      _value = function () {\n        // return value\n        return value;\n      };\n    }\n\n    // create arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n\n    // loop items\n    for (var i = 0; i < rows; i++) {\n      // number of rows with value\n      ptr.push(values.length);\n      // diagonal index\n      var j = i - kSub;\n      // check we need to set diagonal value\n      if (j >= 0 && j < n) {\n        // get value @ j\n        var v = _value(j);\n        // check for zero\n        if (!math.equal(v, 0)) {\n          // column\n          index.push(j + kSuper);\n          // add value\n          values.push(v);\n        }\n      }\n    }\n    // last value should be number of values\n    ptr.push(values.length);\n    // create CrsMatrix\n    return new CrsMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [rows, columns]\n    });\n  };\n\n  /**\n   * Calculate the trace of a matrix: the sum of the elements on the main\n   * diagonal of a square matrix.\n   *\n   * See also:\n   *\n   *    diagonal\n   *\n   * @returns {Number}       The matrix trace\n   */\n  CrsMatrix.prototype.trace = function () {\n    // size\n    var size = this._size;\n    // check dimensions\n    var rows = size[0];\n    var columns = size[1];\n    // matrix must be square\n    if (rows === columns) {\n      // calulate sum\n      var sum = 0;\n      // check we have data (avoid looping rows)\n      if (this._values.length > 0) {\n        // loop rows\n        for (var i = 0; i < rows; i++) {\n          // k0 <= k < k1 where k0 = _ptr[i] && k1 = _ptr[i+1]\n          var k0 = this._ptr[i];\n          var k1 = this._ptr[i + 1];\n          // loop k within [k0, k1[\n          for (var k = k0; k < k1; k++) {\n            // column index\n            var j = this._index[k];\n            // check row\n            if (i === j) {\n              // accumulate value\n              sum = math.add(sum, this._values[k]);\n              // exit loop\n              break;\n            }\n            if (j > i) {\n              // exit loop, no value on the diagonal for column j\n              break;\n            }\n          }\n        }\n      }\n      // return trace\n      return sum;\n    }\n    throw new RangeError('Matrix must be square (size: ' + string.format(size) + ')');        \n  };\n  \n  /**\n   * Multiply the matrix values times the argument.\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} Value to multiply.\n   *\n   * @return {Number | BigNumber | Complex | Unit | Matrix}\n   */\n  CrsMatrix.prototype.multiply = function (value) {\n    // check dimensions\n    var rows = this._size[0];\n    var columns = this._size[1];\n\n    // check value is a matrix\n    if (value instanceof Matrix) {\n      // matrix size\n      var z = value.size();\n      // check value is a vector\n      if (z.length === 1) {\n        // mutiply matrix x vector array\n        return _multiply(this, z[0], 1, function (i) {\n          // value[i]\n          return value.get([i]);\n        });\n      }\n      // check two dimensions matrix\n      if (z.length === 2) {        \n        // mutiply matrix x matrix\n        return _multiply(this, z[0], z[1], function (i, j) {\n          // value[i, j]\n          return value.get([i, j]);\n        });\n      }\n      throw new Error('Can only multiply a 1 or 2 dimensional matrix ' +\n                      '(value has ' + z.length + ' dimensions)');\n    }\n\n    // check value is an array\n    if (isArray(value)) {\n      // array size\n      var s = array.size(value);\n      // check value is a vector\n      if (s.length === 1) {\n        // mutiply matrix x vector array\n        return _multiply(this, s[0], 1, function (i) {\n          // value[i]\n          return value[i];\n        });\n      }\n      if (s.length === 2) {\n        // mutiply matrix x array\n        return _multiply(this, s[0], s[1], function (i, j) {\n          // value[i, j]\n          return value[i][j];\n        });\n      }\n      throw new Error('Can only multiply a 1 or 2 dimensional matrix ' +\n                      '(value has ' + s.length + ' dimensions)');\n    }\n\n    var callback = function (v) {\n      return math.multiply(v, value);\n    };\n\n    // map non zero elements\n    return _map(this, 0, rows - 1, 0, columns - 1, callback, false);\n  };\n  \n  var _multiply = function (matrix, r, c, get) {\n\n    // matrix dimensions\n    var rows = matrix._size[0];\n    var columns = matrix._size[1];\n\n    // check dimensions match\n    if (columns !== r) {\n      // throw error\n      throw new RangeError('Dimension mismatch in multiplication. ' +\n                           'Columns of A must match length of B ' +\n                           '(A is ' + rows + 'x' + columns +\n                           ', B is ' + r + ', ' +\n                           columns + ' != ' + r + ')');\n    }\n\n    // result arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n\n    // loop rows\n    for (var i = 0; i < rows; i++) {\n      // update ptr\n      ptr.push(values.length);\n      // k0 <= k < k1 where k0 = _ptr[i] && k1 = _ptr[i+1]\n      var k0 = matrix._ptr[i];\n      var k1 = matrix._ptr[i + 1];\n      // loop value columns\n      for (var z = 0; z < c; z++) {\n        // value @ (i, x)\n        var value = 0;\n        // loop k within [k0, k1[\n        for (var k = k0; k < k1; k++) {\n          // column\n          var j = matrix._index[k];\n          // multiply & aggregate\n          value = math.add(value, math.multiply(matrix._values[k], get(j, z)));\n        }\n        // check value is different than zero\n        if (!math.equal(value, 0)) {\n          // push value & column\n          values.push(value);\n          index.push(z);\n        }        \n      }\n    }\n    // update ptr\n    ptr.push(values.length);\n\n    // check we need to squeeze the result into a scalar\n    if (rows === 1 && c === 1)\n      return values.length === 1 ? values[0] : 0;\n\n    // return CRS matrix\n    return new CrsMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [rows, c]\n    });\n  };\n\n  return CrsMatrix;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/type/matrix/CrsMatrix.js\n ** module id = 27\n ** module chunks = 0\n **/","'use strict';\n\nvar util = require('../../util/index');\nvar DimensionError = require('../../error/DimensionError');\n\nvar string = util.string;\nvar array = util.array;\nvar object = util.object;\n\nvar isArray = Array.isArray;\nvar isNumber = util.number.isNumber;\nvar isInteger = util.number.isInteger;\n\nvar validateIndex = array.validateIndex;\n\nmodule.exports = function (math) {\n\n  var Index = math.type.Index,\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix;\n  \n  function DenseMatrix(data) {\n    if (!(this instanceof DenseMatrix))\n      throw new SyntaxError('Constructor must be called with the new operator');\n\n    if (data instanceof Matrix) {\n      // check data is a DenseMatrix\n      if (data.type === 'DenseMatrix') {\n        // clone data & size\n        this._data = object.clone(data._data);\n        this._size = object.clone(data._size);\n      }\n      else {\n        // build data from existing matrix\n        this._data = data.toArray();\n        this._size = data.size();\n      }\n    }\n    else if (data && isArray(data.data) && isArray(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data;\n      this._size = data.size;\n    }\n    else if (isArray(data)) {\n      // replace nested Matrices with Arrays\n      this._data = preprocess(data);\n      // verify the size of the array, TODO: compute size while processing array\n      this._size = array.size(this._data);\n    }\n    else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');\n    }\n    else {\n      // nothing provided\n      this._data = [];\n      this._size = [0];\n    }\n  }\n  \n  DenseMatrix.prototype = new math.type.Matrix();\n\n  DenseMatrix.prototype.type = 'DenseMatrix';\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n  DenseMatrix.prototype.storage = function () {\n    return 'dense';\n  };\n  \n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | DenseMatrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  DenseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    switch (arguments.length) {\n      case 1:\n        return _get(this, index);\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _set(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  \n  /**\n   * Get a single element from the matrix.\n   * @param {Number[]} index   Zero-based index\n   * @return {*} value\n   */\n  DenseMatrix.prototype.get = function (index) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // check index\n    for (var x = 0; x < index.length; x++)\n      validateIndex(index[x], this._size[x]);\n\n    var data = this._data;\n    for (var i = 0, ii = index.length; i < ii; i++) {\n      var index_i = index[i];\n      validateIndex(index_i, data.length);\n      data = data[index_i];\n    }\n\n    return object.clone(data);\n  };\n  \n  /**\n   * Replace a single element in the matrix.\n   * @param {Number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {DenseMatrix} self\n   */\n  DenseMatrix.prototype.set = function (index, value, defaultValue) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length < this._size.length)\n      throw new DimensionError(index.length, this._size.length, '<');\n\n    var i, ii, index_i;\n\n    // enlarge matrix when needed\n    var size = index.map(function (i) {\n      return i + 1;\n    });\n    _fit(this, size, defaultValue);\n\n    // traverse over the dimensions\n    var data = this._data;\n    for (i = 0, ii = index.length - 1; i < ii; i++) {\n      index_i = index[i];\n      validateIndex(index_i, data.length);\n      data = data[index_i];\n    }\n\n    // set new value\n    index_i = index[index.length - 1];\n    validateIndex(index_i, data.length);\n    data[index_i] = value;\n\n    return this;\n  };\n  \n  /**\n   * Get a submatrix of this matrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index   Zero-based index\n   * @private\n   */\n  function _get (matrix, index) {\n    if (!(index instanceof Index)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = index.isScalar();\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(index.min());\n    }\n    else {\n      // validate dimensions\n      var size = index.size();\n      if (size.length != matrix._size.length) {\n        throw new DimensionError(size.length, matrix._size.length);\n      }\n\n      // validate if any of the ranges in the index is out of range\n      var min = index.min();\n      var max = index.max();\n      for (var i = 0, ii = matrix._size.length; i < ii; i++) {\n        validateIndex(min[i], matrix._size[i]);\n        validateIndex(max[i], matrix._size[i]);\n      }\n\n      // retrieve submatrix\n      // TODO: more efficient when creating an empty matrix and setting _data and _size manually\n      return new DenseMatrix(_getSubmatrix(matrix._data, index, size.length, 0));\n    }\n  }\n  \n  /**\n   * Recursively get a submatrix of a multi dimensional matrix.\n   * Index is not checked for correct number or length of dimensions.\n   * @param {Array} data\n   * @param {Index} index\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim    Current dimension\n   * @return {Array} submatrix\n   * @private\n   */\n  function _getSubmatrix (data, index, dims, dim) {\n    var last = (dim == dims - 1);\n    var range = index.range(dim);\n\n    if (last) {\n      return range.map(function (i) {\n        return data[i];\n      });\n    }\n    else {\n      return range.map(function (i) {\n        var child = data[i];\n        return _getSubmatrix(child, index, dims, dim + 1);\n      });\n    }\n  }\n  \n  /**\n   * Replace a submatrix in this matrix\n   * Indexes are zero-based.\n   * @param {DenseMatrix} matrix\n   * @param {Index} index\n   * @param {DenseMatrix | Array | *} submatrix\n   * @param {*} defaultValue          Default value, filled in on new entries when\n   *                                  the matrix is resized.\n   * @return {DenseMatrix} matrix\n   * @private\n   */\n  function _set (matrix, index, submatrix, defaultValue) {\n    if (!(index instanceof Index)) {\n      throw new TypeError('Invalid index');\n    }\n\n    // get index size and check whether the index contains a single value\n    var iSize = index.size(),\n        isScalar = index.isScalar();\n\n    // calculate the size of the submatrix, and convert it into an Array if needed\n    var sSize;\n    if (submatrix instanceof math.type.Matrix) {\n      sSize = submatrix.size();\n      submatrix = submatrix.valueOf();\n    }\n    else {\n      sSize = array.size(submatrix);\n    }\n\n    if (isScalar) {\n      // set a scalar\n\n      // check whether submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n\n      matrix.set(index.min(), submatrix, defaultValue);\n    }\n    else {\n      // set a submatrix\n\n      // validate dimensions\n      if (iSize.length < matrix._size.length) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        }\n\n        // unsqueeze both outer and inner dimensions\n        submatrix = array.unsqueeze(submatrix, iSize.length, outer, sSize);\n      }\n\n      // check whether the size of the submatrix matches the index size\n      if (!object.deepEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      }\n\n      // enlarge matrix when needed\n      var size = index.max().map(function (i) {\n        return i + 1;\n      });\n      _fit(matrix, size, defaultValue);\n\n      // insert the sub matrix\n      var dims = iSize.length,\n          dim = 0;\n      _setSubmatrix (matrix._data, index, submatrix, dims, dim);\n    }\n\n    return matrix;\n  }\n  \n  /**\n   * Replace a submatrix of a multi dimensional matrix.\n   * @param {Array} data\n   * @param {Index} index\n   * @param {Array} submatrix\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim\n   * @private\n   */\n  function _setSubmatrix (data, index, submatrix, dims, dim) {\n    var last = (dim == dims - 1),\n        range = index.range(dim);\n\n    if (last) {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n        data[dataIndex] = submatrix[subIndex];\n      });\n    }\n    else {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n        _setSubmatrix(data[dataIndex], index, submatrix[subIndex], dims, dim + 1);\n      });\n    }\n  }\n  \n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {Number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  DenseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isArray(size))\n      throw new TypeError('Array expected');\n\n    // matrix to resize\n    var m = copy ? this.clone() : this;\n    // resize matrix\n    return _resize(m, size, defaultValue);\n  };\n  \n  var _resize = function (matrix, size, defaultValue) {\n    // check size\n    if (size.length === 0) {\n      // first value in matrix\n      var v = matrix._data;\n      // go deep\n      while (isArray(v)) {\n        v = v[0];\n      }\n      return object.clone(v);\n    }\n    // resize matrix\n    matrix._size = object.clone(size);\n    matrix._data = array.resize(matrix._data, matrix._size, defaultValue);\n    // return matrix\n    return matrix;\n  };\n  \n  /**\n   * Enlarge the matrix when it is smaller than given size.\n   * If the matrix is larger or equal sized, nothing is done.\n   * @param {DenseMatrix} matrix           The matrix to be resized\n   * @param {Number[]} size\n   * @param {*} defaultValue          Default value, filled in on new entries.\n   * @private\n   */\n  function _fit(matrix, size, defaultValue) {\n    var newSize = object.clone(matrix._size),\n        changed = false;\n\n    // add dimensions when needed\n    while (newSize.length < size.length) {\n      newSize.push(0);\n      changed = true;\n    }\n\n    // enlarge size when needed\n    for (var i = 0, ii = size.length; i < ii; i++) {\n      if (size[i] > newSize[i]) {\n        newSize[i] = size[i];\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      // resize only when size is changed\n      _resize(matrix, newSize, defaultValue);\n    }\n  }\n  \n  /**\n   * Create a clone of the matrix\n   * @return {DenseMatrix} clone\n   */\n  DenseMatrix.prototype.clone = function () {\n    var m = new DenseMatrix({\n      data: object.clone(this._data),\n      size: object.clone(this._size)\n    });\n    return m;\n  };\n  \n  /**\n   * Retrieve the size of the matrix.\n   * @returns {Number[]} size\n   */\n  DenseMatrix.prototype.size = function() {\n    return this._size;\n  };\n  \n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   *\n   * @return {DenseMatrix} matrix\n   */\n  DenseMatrix.prototype.map = function (callback) {\n    // matrix instance\n    var me = this;\n    var recurse = function (value, index) {\n      if (isArray(value)) {\n        return value.map(function (child, i) {\n          return recurse(child, index.concat(i));\n        });\n      }\n      else {\n        return callback(value, index, me);\n      }\n    };\n    // return dense format\n    return new DenseMatrix({\n      data: recurse(this._data, []),\n      size: object.clone(this._size)\n    });\n  };\n  \n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  DenseMatrix.prototype.forEach = function (callback) {\n    // matrix instance\n    var me = this;\n    var recurse = function (value, index) {\n      if (isArray(value)) {\n        value.forEach(function (child, i) {\n          recurse(child, index.concat(i));\n        });\n      }\n      else {\n        callback(value, index, me);\n      }\n    };\n    recurse(this._data, []);\n  };\n  \n  /**\n   * Create an Array with a copy of the data of the DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.toArray = function () {\n    return object.clone(this._data);\n  };\n  \n  /**\n   * Get the primitive value of the DenseMatrix: a multidimensional array\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.valueOf = function () {\n    return this._data;\n  };\n  \n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | Number | Function} [options]  Formatting options. See\n   *                                                lib/util/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {String} str\n   */\n  DenseMatrix.prototype.format = function (options) {\n    return string.format(this._data, options);\n  };\n  \n  /**\n   * Get a string representation of the matrix\n   * @returns {String} str\n   */\n  DenseMatrix.prototype.toString = function () {\n    return string.format(this._data);\n  };\n  \n  /**\n   * Get a JSON representation of the matrix\n   * @returns {Object}\n   */\n  DenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'DenseMatrix',\n      data: this._data,\n      size: this._size\n    };\n  };\n  \n  /**\n   * Calculates the transpose of the matrix\n   * @returns {Matrix}\n   */\n  DenseMatrix.prototype.transpose = function () {\n    // check dimensions\n    switch (this._size.length) {\n        case 1:\n          // vector\n          return this.clone();\n        case 2:\n          // rows and columns\n          var rows = this._size[0];\n          var columns = this._size[1];\n          // check columns\n          if (columns === 0) {\n            // throw exception\n            throw new RangeError('Cannot transpose a 2D matrix with no columns (size: ' + string.format(this._size) + ')');\n          }\n          // transposed matrix data\n          var transposed = [];\n          var transposedRow;\n          // loop columns\n          for (var j = 0; j < columns; j++) {\n            // initialize row\n            transposedRow = transposed[j] = [];\n            // loop rows\n            for (var i = 0; i < rows; i++) {\n              // set data\n              transposedRow[i] = object.clone(this._data[i][j]);\n            }\n          }\n          // return matrix\n          return new DenseMatrix({\n            data: transposed,\n            size: [columns, rows]\n          });\n        default:\n          // multi dimensional\n          throw new RangeError('Matrix must be two dimensional (size: ' + string.format(this._size) + ')');\n    }\n  };\n  \n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @param {Number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Array}                      The array vector with the diagonal values.\n   */\n  DenseMatrix.prototype.diagonal = function(k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (k instanceof BigNumber) \n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n\n    // number diagonal values\n    var n = Math.min(rows - kSub, columns -  kSuper);\n    \n    // x is a matrix get diagonal from matrix\n    var vector = [];\n    \n    // loop rows\n    for (var i = 0; i < n; i++) {\n      vector[i] = object.clone(this._data[i + kSub][i + kSuper]);\n    }\n    return vector;\n  };\n  \n  /**\n   * Create a diagonal matrix.\n   *\n   * @param {Array} size                   The matrix size.\n   * @param {Number, Array} value          The values for the diagonal.\n   * @param {Number | BigNumber} [k=0]     The kth diagonal where the vector will be filled in.\n   * @param {Number} [defaultValue]        The default value for non-diagonal\n   *\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.diagonal = function (size, value, k, defaultValue) {\n    if (!isArray(size))\n      throw new TypeError('Array expected, size parameter');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n\n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (s instanceof BigNumber) {\n        // convert it\n        s = s.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      } \n      return s;\n    });\n\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (k instanceof BigNumber) \n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n\n    // number of non-zero items\n    var n = Math.min(rows - kSub, columns -  kSuper);\n\n    // value extraction function\n    var _value;\n\n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i];\n      };\n    }\n    else {\n      // define function\n      _value = function () {\n        // return value\n        return value;\n      };\n    }\n\n    // empty array\n    var data = [];\n\n    // check we need to resize array\n    if (size.length > 0) {\n      // resize array\n      data = array.resize(data, size, defaultValue);\n      // fill diagonal\n      for (var d = 0; d < n; d++) {\n        data[d + kSub][d + kSuper] = _value(d);\n      }\n    }\n    \n    // create DenseMatrix\n    return new DenseMatrix({\n      data: data,\n      size: [rows, columns]\n    });\n  };\n  \n  /**\n   * Calculate the trace of a matrix: the sum of the elements on the main\n   * diagonal of a square matrix.\n   *\n   * See also:\n   *\n   *    diagonal\n   *\n   * @returns {Number}       The matrix trace\n   */\n  DenseMatrix.prototype.trace = function () {\n    // size & data\n    var size = this._size;\n    var data = this._data;\n    // check dimensions\n    switch (size.length) {\n      case 1:\n        // vector\n        if (size[0] == 1) {\n          // return data[0]\n          return object.clone(data[0]);\n        }\n        throw new RangeError('Matrix must be square (size: ' + string.format(size) + ')');\n      case 2:\n        // two dimensional array\n        var rows = size[0];\n        var cols = size[1];\n        if (rows === cols) {\n          // calulate sum\n          var sum = 0;\n          // loop diagonal\n          for (var i = 0; i < rows; i++)\n            sum = math.add(sum, data[i][i]);\n          // return trace\n          return sum;\n        }\n        throw new RangeError('Matrix must be square (size: ' + string.format(size) + ')');        \n      default:\n        // multi dimensional array\n        throw new RangeError('Matrix must be two dimensional (size: ' + string.format(size) + ')');\n    }\n  };\n\n  /**\n   * Generate a matrix from a JSON object\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"DenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.fromJSON = function (json) {\n    return new DenseMatrix(json);\n  };\n\n  /**\n   * Multiply the matrix values times the argument.\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} Value to multiply.\n   *\n   * @return {Number | BigNumber | Complex | Unit | Matrix}\n   */\n  DenseMatrix.prototype.multiply = function (value) {\n    // process matrix size\n    switch(this._size.length) {\n      case 1:\n        // multiply vector\n        return _multiplyVector(this, this._size[0], value);\n      case 2:\n        // multiply matrix\n        return _multiplyMatrix(this, this._size[0], this._size[1], value);\n      default:\n        throw new Error('Can only multiply a 1 or 2 dimensional matrix ' +\n                        '(matrix has ' + this._size.length + ' dimensions)');\n    }\n  };\n  \n  var _multiplyVector = function (matrix, m, value) {\n    // check value is a matrix\n    if (value instanceof Matrix) {\n      // matrix size\n      var z = value.size();\n      // check value is a vector\n      if (z.length === 1) {\n        // vectors must have same length\n        if (z[0] !== m)\n          throw new RangeError('Dimension mismatch in multiplication. Vectors must have the same length.');\n        // multiply vector x vector\n        return _multiplyVectorVector(matrix, m, function (i) {\n          // value[i]\n          return value.get([i]);\n        });\n      }\n      // check two dimensions matrix\n      if (z.length === 2) {        \n        // vector length must be equal rows in matrix\n        if (z[0] !== m)\n          throw new RangeError('Dimension mismatch in multiplication. Matrix rows and Vector length must be equal.');\n        // mutiply vector x matrix\n        return _multiplyVectorMatrix(matrix, m, z[1], function (i, j) {\n          // value[i]\n          return value.get([i, j]);\n        });\n      }\n      throw new Error('Can only multiply a 1 or 2 dimensional matrix ' +\n                      '(value has ' + z.length + ' dimensions)');\n    }\n\n    // check value is an array\n    if (isArray(value)) {\n      // array size\n      var s = array.size(value);\n      // check value is a vector\n      if (s.length === 1) {\n        // vectors must have same length\n        if (s[0] !== m)\n          throw new RangeError('Dimension mismatch in multiplication. Vectors must have the same length.');\n        // multiply vector x vector\n        return _multiplyVectorVector(matrix, m, function (i) {\n          // value[i]\n          return value[i];\n        });\n      }\n      if (s.length === 2) {\n        // vector length must be equal rows in matrix\n        if (s[0] !== m)\n          throw new RangeError('Dimension mismatch in multiplication. Matrix rows and Vector length must be equal.');\n        // mutiply vector x matrix\n        return _multiplyVectorMatrix(matrix, m, s[1], function (i, j) {\n          // value[i]\n          return value[i][j];\n        });\n      }\n      throw new Error('Can only multiply a 1 or 2 dimensional matrix ' +\n                      '(value has ' + s.length + ' dimensions)');\n    }\n    \n    // value is a scalar\n    return matrix.map(function (v) {\n      return math.multiply(value, v);\n    });\n  };\n  \n  var _multiplyVectorVector = function (matrix, m, get) {\n    // check empty vector\n    if (m === 0)\n      throw new Error('Cannot multiply two empty vectors');\n    // result\n    var result = 0;\n    // loop data\n    for (var i = 0; i < m; i++) {\n      // multiply and accumulate\n      result = math.add(result, math.multiply(matrix._data[i], get(i)));\n    }\n    return result;\n  };\n                        \n  var _multiplyVectorMatrix = function (matrix, m, n, get) {\n    // result\n    var result = [];\n    // loop columns in matrix\n    for (var j = 0; j < n; j++) {\n      // sum\n      var sum = 0;\n      // loop vector\n      for (var i = 0; i < m; i++) {\n        // multiply and accumulate\n        sum = math.add(sum, math.multiply(matrix._data[i], get(i, j)));\n      }\n      result[j] = sum;\n    }\n    // check we need to squeeze the result into a scalar\n    if (n === 1)\n      return result[0];\n    // return matrix\n    return new DenseMatrix({\n      data: result,\n      size: [n]\n    });\n  };\n      \n  var _multiplyMatrix = function (matrix, m, n, value) {\n    // check value is a matrix\n    if (value instanceof Matrix) {\n      // matrix size\n      var z = value.size();\n      // check value is a vector\n      if (z.length === 1) {\n        // vectors must have same length\n        if (z[0] !== n)\n          throw new RangeError('Dimension mismatch in multiplication. Matrix columns must match vector length.');\n        // multiply matrix vector\n        return _multiplyMatrixVector(matrix, m, n, function (i) {\n          // value[i]\n          return value.get([i]);\n        });\n      }\n      // check two dimensions matrix\n      if (z.length === 2) {        \n        // vector length must be equal rows in matrix\n        if (z[0] !== n) {\n          throw new RangeError('Dimension mismatch in multiplication. ' +\n                               'Columns of A must match length of B ' +\n                               '(A is ' + m + 'x' + n +\n                               ', B is ' + z[0] + ', ' +\n                               n + ' != ' + z[0] + ')');\n        }\n        // mutiply vector x matrix\n        return _multiplyMatrixMatrix(matrix, m, n, z[1], function (i, j) {\n          // value[i, j]\n          return value.get([i, j]);\n        });\n      }\n      throw new Error('Can only multiply a 1 or 2 dimensional matrix ' +\n                      '(value has ' + z.length + ' dimensions)');\n    }\n\n    // check value is an array\n    if (isArray(value)) {\n      // array size\n      var s = array.size(value);\n      // check value is a vector\n      if (s.length === 1) {\n        // vectors must have same length\n        if (s[0] !== n)\n          throw new RangeError('Dimension mismatch in multiplication. Matrix columns must match vector length.');\n        // multiply matrix vector\n        return _multiplyMatrixVector(matrix, m, n, function (i) {\n          // value[i]\n          return value[i];\n        });\n      }\n      if (s.length === 2) {\n        // vector length must be equal rows in matrix\n        if (s[0] !== n) {\n          throw new RangeError('Dimension mismatch in multiplication. ' +\n                               'Columns of A must match length of B ' +\n                               '(A is ' + m + 'x' + n +\n                               ', B is ' + s[0] + ', ' +\n                               n + ' != ' + s[0] + ')');\n        }\n        // mutiply vector x matrix\n        return _multiplyMatrixMatrix(matrix, m, n, s[1], function (i, j) {\n          // value[i, j]\n          return value[i][j];\n        });\n      }\n      throw new Error('Can only multiply a 1 or 2 dimensional matrix ' +\n                      '(value has ' + s.length + ' dimensions)');\n    }\n\n    // value is a scalar\n    return matrix.map(function (v) {\n      return math.multiply(value, v);\n    });\n  };\n  \n  var _multiplyMatrixVector = function (matrix, m, n, get) {\n    // result\n    var result = [];\n    // loop matrix rows\n    for (var i = 0; i < m; i++) {\n      // current row\n      var row = matrix._data[i];\n      // sum\n      var sum = 0;\n      // loop matrix columns\n      for (var j = 0; j < n; j++) {\n        // multiply & accumulate\n        sum = math.add(sum, math.multiply(row[j], get(j)));\n      }\n      result[i] = sum;\n    }\n    // check we need to squeeze the result into a scalar\n    if (m === 1)\n      return result[0];\n    // return matrix\n    return new DenseMatrix({\n      data: result,\n      size: [m]\n    });\n  };\n  \n  var _multiplyMatrixMatrix = function (matrix, m, n, c, get) {\n    // result\n    var result = [];\n    // loop matrix rows\n    for (var i = 0; i < m; i++) {\n      // current row\n      var row = matrix._data[i];\n      // initialize row array\n      result[i] = [];\n      // loop other matrix columns\n      for (var j = 0; j < c; j++) {\n        // sum\n        var sum = 0;\n        // loop matrix columns\n        for (var x = 0; x < n; x++) {\n          // multiply & accumulate\n          sum = math.add(sum, math.multiply(row[x], get(x, j)));\n        }\n        result[i][j] = sum;\n      }\n    }\n    // check we need to squeeze the result into a scalar\n    if (m === 1 && c === 1)\n      return result[0][0];\n    // return matrix\n    return new DenseMatrix({\n      data: result,\n      size: [m, c]\n    });\n  };\n  \n  /**\n   * Preprocess data, which can be an Array or DenseMatrix with nested Arrays and\n   * Matrices. Replaces all nested Matrices with Arrays\n   * @param {Array} data\n   * @return {Array} data\n   */\n  function preprocess(data) {\n    for (var i = 0, ii = data.length; i < ii; i++) {\n      var elem = data[i];\n      if (isArray(elem)) {\n        data[i] = preprocess(elem);\n      }\n      else if (elem instanceof math.type.Matrix) {\n        data[i] = preprocess(elem.valueOf());\n      }\n    }\n\n    return data;\n  }\n\n  // exports\n  return DenseMatrix;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/type/matrix/DenseMatrix.js\n ** module id = 28\n ** module chunks = 0\n **/","'use strict';\n\nexports.ArrayNode = require('./ArrayNode');\nexports.AssignmentNode = require('./AssignmentNode');\nexports.BlockNode = require('./BlockNode');\nexports.ConditionalNode = require('./ConditionalNode');\nexports.ConstantNode = require('./ConstantNode');\nexports.IndexNode = require('./IndexNode');\nexports.FunctionAssignmentNode = require('./FunctionAssignmentNode');\nexports.FunctionNode = require('./FunctionNode');\nexports.Node = require('./Node');\nexports.OperatorNode = require('./OperatorNode');\nexports.RangeNode = require('./RangeNode');\nexports.SymbolNode = require('./SymbolNode');\nexports.UpdateNode = require('./UpdateNode');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/index.js\n ** module id = 29\n ** module chunks = 0\n **/","'use strict';\n\nvar util = require('../util/index'),\n\n    ArgumentsError = require('../error/ArgumentsError'),\n\n    isString = util.string.isString,\n    isArray = Array.isArray,\n\n    // scope and nodes\n    ArrayNode = require('./node/ArrayNode'),\n    AssignmentNode = require('./node/AssignmentNode'),\n    BlockNode = require('./node/BlockNode'),\n    ConditionalNode = require('./node/ConditionalNode'),\n    ConstantNode = require('./node/ConstantNode'),\n    FunctionAssignmentNode = require('./node/FunctionAssignmentNode'),\n    IndexNode = require('./node/IndexNode'),\n    OperatorNode = require('./node/OperatorNode'),\n    FunctionNode = require('./node/FunctionNode'),\n    RangeNode = require('./node/RangeNode'),\n    SymbolNode = require('./node/SymbolNode'),\n    UpdateNode = require('./node/UpdateNode');\n\nmodule.exports = function (math) {\n\n  // types\n  var Matrix = math.type.Matrix,\n      collection = math.collection;\n    \n  /**\n   * Parse an expression. Returns a node tree, which can be evaluated by\n   * invoking node.eval();\n   *\n   * Syntax:\n   *\n   *     parse(expr)\n   *     parse(expr, options)\n   *     parse([expr1, expr2, expr3, ...])\n   *     parse([expr1, expr2, expr3, ...], options)\n   *\n   * Example:\n   *\n   *     var node = parse('sqrt(3^2 + 4^2)');\n   *     node.compile(math).eval(); // 5\n   *\n   *     var scope = {a:3, b:4}\n   *     var node = parse('a * b'); // 12\n   *     var code = node.compile(math);\n   *     code.eval(scope); // 12\n   *     scope.a = 5;\n   *     code.eval(scope); // 20\n   *\n   *     var nodes = math.parse(['a = 3', 'b = 4', 'a * b']);\n   *     nodes[2].compile(math).eval(); // 12\n   *\n   * @param {String | String[] | Matrix} expr\n   * @param {{nodes: Object<String, Node>}} [options]  Available options:\n   *                                                   - `nodes` a set of custom nodes\n   * @return {Node | Node[]} node\n   * @throws {Error}\n   */\n  function parse (expr, options) {\n    if (arguments.length != 1 && arguments.length != 2) {\n      throw new ArgumentsError('parse', arguments.length, 1, 2);\n    }\n\n    // pass extra nodes\n    extra_nodes = (options && options.nodes) ? options.nodes : {};\n\n    if (isString(expr)) {\n      // parse a single expression\n      expression = expr;\n      return parseStart();\n    }\n    else if (isArray(expr) || expr instanceof Matrix) {\n      // parse an array or matrix with expressions\n      return collection.deepMap(expr, function (elem) {\n        if (!isString(elem)) throw new TypeError('String expected');\n\n        expression = elem;\n        return parseStart();\n      });\n    }\n    else {\n      // oops\n      throw new TypeError('String or matrix expected');\n    }\n  }\n\n  // token types enumeration\n  var TOKENTYPE = {\n    NULL : 0,\n    DELIMITER : 1,\n    NUMBER : 2,\n    SYMBOL : 3,\n    UNKNOWN : 4\n  };\n\n  // map with all delimiters\n  var DELIMITERS = {\n    ',': true,\n    '(': true,\n    ')': true,\n    '[': true,\n    ']': true,\n    '\\\"': true,\n    ';': true,\n\n    '+': true,\n    '-': true,\n    '*': true,\n    '.*': true,\n    '/': true,\n    './': true,\n    '%': true,\n    '^': true,\n    '.^': true,\n    '~': true,\n    '!': true,\n    '&': true,\n    '|': true,\n    '^|': true,\n    '\\'': true,\n    '=': true,\n    ':': true,\n    '?': true,\n\n    '==': true,\n    '!=': true,\n    '<': true,\n    '>': true,\n    '<=': true,\n    '>=': true,\n\n    '<<': true,\n    '>>': true,\n    '>>>': true\n  };\n\n  // map with all named delimiters\n  var NAMED_DELIMITERS = {\n    'mod': true,\n    'to': true,\n    'in': true,\n    'and': true,\n    'xor': true,\n    'or': true,\n    'not': true\n  };\n\n  var extra_nodes = {};             // current extra nodes\n  var expression = '';              // current expression\n  var index = 0;                    // current index in expr\n  var c = '';                       // current token character in expr\n  var token = '';                   // current token\n  var token_type = TOKENTYPE.NULL;  // type of the token\n  var nesting_level = 0;            // level of nesting inside parameters, used to ignore newline characters\n  var conditional_level = null;     // when a conditional is being parsed, the level of the conditional is stored here\n\n  /**\n   * Get the first character from the expression.\n   * The character is stored into the char c. If the end of the expression is\n   * reached, the function puts an empty string in c.\n   * @private\n   */\n  function first() {\n    index = 0;\n    c = expression.charAt(0);\n    nesting_level = 0;\n    conditional_level = null;\n  }\n\n  /**\n   * Get the next character from the expression.\n   * The character is stored into the char c. If the end of the expression is\n   * reached, the function puts an empty string in c.\n   * @private\n   */\n  function next() {\n    index++;\n    c = expression.charAt(index);\n  }\n\n  /**\n   * Preview the next character from the expression.\n   * @return {String} cNext\n   * @private\n   */\n  function nextPreview() {\n    return expression.charAt(index + 1);\n  }\n\n  /**\n   * Preview the second next character from the expression.\n   * @return {String} cNext\n   * @private\n   */\n  function nextNextPreview() {\n    return expression.charAt(index + 2);\n  }\n\n  /**\n   * Get next token in the current string expr.\n   * The token and token type are available as token and token_type\n   * @private\n   */\n  function getToken() {\n    token_type = TOKENTYPE.NULL;\n    token = '';\n\n    // skip over whitespaces\n    // space, tab, and newline when inside parameters\n    while (c == ' ' || c == '\\t' || (c == '\\n' && nesting_level)) {\n      // TODO: also take '\\r' carriage return as newline? Or does that give problems on mac?\n      next();\n    }\n\n    // skip comment\n    if (c == '#') {\n      while (c != '\\n' && c != '') {\n        next();\n      }\n    }\n\n    // check for end of expression\n    if (c == '') {\n      // token is still empty\n      token_type = TOKENTYPE.DELIMITER;\n      return;\n    }\n\n    // check for new line character\n    if (c == '\\n' && !nesting_level) {\n      token_type = TOKENTYPE.DELIMITER;\n      token = c;\n      next();\n      return;\n    }\n\n    // check for delimiters consisting of 3 characters\n    var c2 = c + nextPreview();\n    var c3 = c2 + nextNextPreview();\n    if (c3.length == 3 && DELIMITERS[c3]) {\n      token_type = TOKENTYPE.DELIMITER;\n      token = c3;\n      next();\n      next();\n      next();\n      return;\n    }\n\n    // check for delimiters consisting of 2 characters\n    if (c2.length == 2 && DELIMITERS[c2]) {\n      token_type = TOKENTYPE.DELIMITER;\n      token = c2;\n      next();\n      next();\n      return;\n    }\n\n    // check for delimiters consisting of 1 character\n    if (DELIMITERS[c]) {\n      token_type = TOKENTYPE.DELIMITER;\n      token = c;\n      next();\n      return;\n    }\n\n    // check for a number\n    if (isDigitDot(c)) {\n      token_type = TOKENTYPE.NUMBER;\n\n      // get number, can have a single dot\n      if (c == '.') {\n        token += c;\n        next();\n\n        if (!isDigit(c)) {\n          // this is no legal number, it is just a dot\n          token_type = TOKENTYPE.UNKNOWN;\n        }\n      }\n      else {\n        while (isDigit(c)) {\n          token += c;\n          next();\n        }\n        if (c == '.') {\n          token += c;\n          next();\n        }\n      }\n      while (isDigit(c)) {\n        token += c;\n        next();\n      }\n\n      // check for exponential notation like \"2.3e-4\", \"1.23e50\" or \"2e+4\"\n      c2 = nextPreview();\n      if ((c == 'E' || c == 'e') && (isDigit(c2) || c2 == '-' || c2 == '+')) {\n        token += c;\n        next();\n\n        if (c == '+' || c == '-') {\n          token += c;\n          next();\n        }\n\n        // Scientific notation MUST be followed by an exponent\n        if (!isDigit(c)) {\n          // this is no legal number, exponent is missing.\n          token_type = TOKENTYPE.UNKNOWN;\n        }\n\n        while (isDigit(c)) {\n          token += c;\n          next();\n        }\n      }\n\n      return;\n    }\n\n    // check for variables, functions, named operators\n    if (isAlpha(c)) {\n      while (isAlpha(c) || isDigit(c)) {\n        token += c;\n        next();\n      }\n\n      if (NAMED_DELIMITERS[token]) {\n        token_type = TOKENTYPE.DELIMITER;\n      }\n      else {\n        token_type = TOKENTYPE.SYMBOL;\n      }\n\n      return;\n    }\n\n    // something unknown is found, wrong characters -> a syntax error\n    token_type = TOKENTYPE.UNKNOWN;\n    while (c != '') {\n      token += c;\n      next();\n    }\n    throw createSyntaxError('Syntax error in part \"' + token + '\"');\n  }\n\n  /**\n   * Get next token and skip newline tokens\n   */\n  function getTokenSkipNewline () {\n    do {\n      getToken();\n    }\n    while (token == '\\n');\n  }\n\n  /**\n   * Open parameters.\n   * New line characters will be ignored until closeParams() is called\n   */\n  function openParams() {\n    nesting_level++;\n  }\n\n  /**\n   * Close parameters.\n   * New line characters will no longer be ignored\n   */\n  function closeParams() {\n    nesting_level--;\n  }\n\n  /**\n   * checks if the given char c is a letter (upper or lower case)\n   * or underscore\n   * @param {String} c   a string with one character\n   * @return {Boolean}\n   * @private\n   */\n  function isAlpha (c) {\n    return ((c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        c == '_');\n  }\n\n  /**\n   * checks if the given char c is a digit or dot\n   * @param {String} c   a string with one character\n   * @return {Boolean}\n   * @private\n   */\n  function isDigitDot (c) {\n    return ((c >= '0' && c <= '9') ||\n        c == '.');\n  }\n\n  /**\n   * checks if the given char c is a digit\n   * @param {String} c   a string with one character\n   * @return {Boolean}\n   * @private\n   */\n  function isDigit (c) {\n    return ((c >= '0' && c <= '9'));\n  }\n\n  /**\n   * Start of the parse levels below, in order of precedence\n   * @return {Node} node\n   * @private\n   */\n  function parseStart () {\n    // get the first character in expression\n    first();\n\n    getToken();\n\n    var node = parseBlock();\n\n    // check for garbage at the end of the expression\n    // an expression ends with a empty character '' and token_type DELIMITER\n    if (token != '') {\n      if (token_type == TOKENTYPE.DELIMITER) {\n        // user entered a not existing operator like \"//\"\n\n        // TODO: give hints for aliases, for example with \"<>\" give as hint \" did you mean != ?\"\n        throw createError('Unexpected operator ' + token);\n      }\n      else {\n        throw createSyntaxError('Unexpected part \"' + token + '\"');\n      }\n    }\n\n    return node;\n  }\n\n  /**\n   * Parse a block with expressions. Expressions can be separated by a newline\n   * character '\\n', or by a semicolon ';'. In case of a semicolon, no output\n   * of the preceding line is returned.\n   * @return {Node} node\n   * @private\n   */\n  function parseBlock () {\n    var node;\n    var blocks = [];\n    var visible;\n\n    if (token == '') {\n      // empty expression\n      return new ConstantNode('undefined', 'undefined');\n    }\n\n    if (token != '\\n' && token != ';') {\n      node = parseFunctionAssignment();\n    }\n\n    // TODO: simplify this loop\n    while (token == '\\n' || token == ';') {\n      if (blocks.length == 0 && node) {\n        visible = (token != ';');\n        blocks.push({\n          node: node,\n          visible: visible\n        });\n      }\n\n      getToken();\n      if (token != '\\n' && token != ';' && token != '') {\n        node = parseFunctionAssignment();\n\n        visible = (token != ';');\n        blocks.push({\n          node: node,\n          visible: visible\n        });\n      }\n    }\n\n    if (blocks.length > 0) {\n      return new BlockNode(blocks);\n    }\n    else {\n      return node;\n    }\n  }\n\n  /**\n   * Parse a function assignment like \"function f(a,b) = a*b\"\n   * @return {Node} node\n   * @private\n   */\n  function parseFunctionAssignment () {\n    // TODO: function assignment using keyword 'function' is deprecated since version 0.18.0, cleanup some day\n    if (token_type == TOKENTYPE.SYMBOL && token == 'function') {\n      throw createSyntaxError('Deprecated keyword \"function\". ' +\n          'Functions can now be assigned without it, like \"f(x) = x^2\".');\n    }\n\n    return parseAssignment();\n  }\n\n  /**\n   * Assignment of a variable, can be a variable like \"a=2.3\" or a updating an\n   * existing variable like \"matrix(2,3:5)=[6,7,8]\"\n   * @return {Node} node\n   * @private\n   */\n  function parseAssignment () {\n    var name, args, expr, valid;\n\n    var node = parseConditional();\n\n    if (token == '=') {\n      if (node instanceof SymbolNode) {\n        // parse a variable assignment like 'a = 2/3'\n        name = node.name;\n        getTokenSkipNewline();\n        expr = parseAssignment();\n        return new AssignmentNode(name, expr);\n      }\n      else if (node instanceof IndexNode) {\n        // parse a matrix subset assignment like 'A[1,2] = 4'\n        getTokenSkipNewline();\n        expr = parseAssignment();\n        return new UpdateNode(node, expr);\n      }\n      else if (node instanceof FunctionNode) {\n        // parse function assignment like 'f(x) = x^2'\n        valid = true;\n        args = [];\n\n        name = node.name;\n        node.args.forEach(function (arg, index) {\n          if (arg instanceof SymbolNode) {\n            args[index] = arg.name;\n          }\n          else {\n            valid = false;\n          }\n        });\n\n        if (valid) {\n          getTokenSkipNewline();\n          expr = parseAssignment();\n          return new FunctionAssignmentNode(name, args, expr);\n        }\n      }\n\n      throw createSyntaxError('Invalid left hand side of assignment operator =');\n    }\n\n    return node;\n  }\n\n  /**\n   * conditional operation\n   *\n   *     condition ? truePart : falsePart\n   *\n   * Note: conditional operator is right-associative\n   *\n   * @return {Node} node\n   * @private\n   */\n  function parseConditional () {\n    var node = parseLogicalOr();\n\n    while (token == '?') {\n      // set a conditional level, the range operator will be ignored as long\n      // as conditional_level == nesting_level.\n      var prev = conditional_level;\n      conditional_level = nesting_level;\n      getTokenSkipNewline();\n\n      var condition = node;\n      var trueExpr = parseLogicalOr();\n\n      if (token != ':') throw createSyntaxError('False part of conditional expression expected');\n\n      conditional_level = null;\n      getTokenSkipNewline();\n\n      var falseExpr = parseConditional(); // Note: check for conditional operator again, right associativity\n\n      node = new ConditionalNode(condition, trueExpr, falseExpr);\n\n      // restore the previous conditional level\n      conditional_level = prev;\n    }\n\n    return node;\n  }\n\n  /**\n   * logical or, 'x or y'\n   * @return {Node} node\n   * @private\n   */\n  function parseLogicalOr() {\n    var node = parseLogicalXor();\n\n    while (token == 'or') {\n      getTokenSkipNewline();\n      node = new OperatorNode('or', 'or', [node, parseLogicalXor()]);\n    }\n\n    return node;\n  }\n\n  /**\n   * logical exclusive or, 'x xor y'\n   * @return {Node} node\n   * @private\n   */\n  function parseLogicalXor() {\n    var node = parseLogicalAnd();\n\n    while (token == 'xor') {\n      getTokenSkipNewline();\n      node = new OperatorNode('xor', 'xor', [node, parseLogicalAnd()]);\n    }\n\n    return node;\n  }\n\n  /**\n   * logical and, 'x and y'\n   * @return {Node} node\n   * @private\n   */\n  function parseLogicalAnd() {\n    var node = parseBitwiseOr();\n\n    while (token == 'and') {\n      getTokenSkipNewline();\n      node = new OperatorNode('and', 'and', [node, parseBitwiseOr()]);\n    }\n\n    return node;\n  }\n\n  /**\n   * bitwise or, 'x | y'\n   * @return {Node} node\n   * @private\n   */\n  function parseBitwiseOr() {\n    var node = parseBitwiseXor();\n\n    while (token == '|') {\n      getTokenSkipNewline();\n      node = new OperatorNode('|', 'bitOr', [node, parseBitwiseXor()]);\n    }\n\n    return node;\n  }\n\n  /**\n   * bitwise exclusive or (xor), 'x ^| y'\n   * @return {Node} node\n   * @private\n   */\n  function parseBitwiseXor() {\n    var node = parseBitwiseAnd();\n\n    while (token == '^|') {\n      getTokenSkipNewline();\n      node = new OperatorNode('^|', 'bitXor', [node, parseBitwiseAnd()]);\n    }\n\n    return node;\n  }\n\n  /**\n   * bitwise and, 'x & y'\n   * @return {Node} node\n   * @private\n   */\n  function parseBitwiseAnd () {\n    var node = parseRelational();\n\n    while (token == '&') {\n      getTokenSkipNewline();\n      node = new OperatorNode('&', 'bitAnd', [node, parseRelational()]);\n    }\n\n    return node;\n  }\n\n  /**\n   * relational operators\n   * @return {Node} node\n   * @private\n   */\n  function parseRelational () {\n    var node, operators, name, fn, params;\n\n    node = parseShift();\n\n    operators = {\n      '==': 'equal',\n      '!=': 'unequal',\n      '<': 'smaller',\n      '>': 'larger',\n      '<=': 'smallerEq',\n      '>=': 'largerEq'\n    };\n    while (token in operators) {\n      name = token;\n      fn = operators[name];\n\n      getTokenSkipNewline();\n      params = [node, parseShift()];\n      node = new OperatorNode(name, fn, params);\n    }\n\n    return node;\n  }\n\n  /**\n   * Bitwise left shift, bitwise right arithmetic shift, bitwise right logical shift\n   * @return {Node} node\n   * @private\n   */\n  function parseShift () {\n    var node, operators, name, fn, params;\n\n    node = parseConversion();\n\n    operators = {\n      '<<' : 'leftShift',\n      '>>' : 'rightArithShift',\n      '>>>' : 'rightLogShift'\n    };\n\n    while (token in operators) {\n      name = token;\n      fn = operators[name];\n\n      getTokenSkipNewline();\n      params = [node, parseConversion()];\n      node = new OperatorNode(name, fn, params);\n    }\n\n    return node;\n  }\n\n  /**\n   * conversion operators 'to' and 'in'\n   * @return {Node} node\n   * @private\n   */\n  function parseConversion () {\n    var node, operators, name, fn, params;\n\n    node = parseRange();\n\n    operators = {\n      'to' : 'to',\n      'in' : 'to'   // alias of 'to'\n    };\n\n    while (token in operators) {\n      name = token;\n      fn = operators[name];\n\n      getTokenSkipNewline();\n      params = [node, parseRange()];\n      node = new OperatorNode(name, fn, params);\n    }\n\n    return node;\n  }\n\n  /**\n   * parse range, \"start:end\", \"start:step:end\", \":\", \"start:\", \":end\", etc\n   * @return {Node} node\n   * @private\n   */\n  function parseRange () {\n    var node, params = [];\n\n    if (token == ':') {\n      // implicit start=1 (one-based)\n      node = new ConstantNode('1', 'number');\n    }\n    else {\n      // explicit start\n      node = parseAddSubtract();\n    }\n\n    if (token == ':' && (conditional_level !== nesting_level)) {\n      // we ignore the range operator when a conditional operator is being processed on the same level\n      params.push(node);\n\n      // parse step and end\n      while (token == ':' && params.length < 3) {\n        getTokenSkipNewline();\n\n        if (token == ')' || token == ']' || token == ',' || token == '') {\n          // implicit end\n          params.push(new SymbolNode('end'));\n        }\n        else {\n          // explicit end\n          params.push(parseAddSubtract());\n        }\n      }\n\n      if (params.length == 3) {\n        // params = [start, step, end]\n        node = new RangeNode(params[0], params[2], params[1]); // start, end, step\n      }\n      else { // length == 2\n        // params = [start, end]\n        node = new RangeNode(params[0], params[1]); // start, end\n      }\n    }\n\n    return node;\n  }\n\n  /**\n   * add or subtract\n   * @return {Node} node\n   * @private\n   */\n  function parseAddSubtract ()  {\n    var node, operators, name, fn, params;\n\n    node = parseMultiplyDivide();\n\n    operators = {\n      '+': 'add',\n      '-': 'subtract'\n    };\n    while (token in operators) {\n      name = token;\n      fn = operators[name];\n\n      getTokenSkipNewline();\n      params = [node, parseMultiplyDivide()];\n      node = new OperatorNode(name, fn, params);\n    }\n\n    return node;\n  }\n\n  /**\n   * multiply, divide, modulus\n   * @return {Node} node\n   * @private\n   */\n  function parseMultiplyDivide () {\n    var node, operators, name, fn, params;\n\n    node = parseUnary();\n\n    operators = {\n      '*': 'multiply',\n      '.*': 'dotMultiply',\n      '/': 'divide',\n      './': 'dotDivide',\n      '%': 'mod',\n      'mod': 'mod'\n    };\n\n    if (token in operators) {\n      while (token in operators) {\n        name = token;\n        fn = operators[name];\n\n        getTokenSkipNewline();\n        params = [node, parseUnary()];\n        node = new OperatorNode(name, fn, params);\n      }\n    }\n\n    // parse implicit multiplication\n    if ((token_type == TOKENTYPE.SYMBOL) ||\n        (token == 'in' && (node instanceof ConstantNode)) ||\n        (token_type == TOKENTYPE.NUMBER && !(node instanceof ConstantNode)) ||\n        (token == '(' || token == '[')) {\n      // symbol:      implicit multiplication like '2a', '(2+3)a', 'a b'\n      // number:      implicit multiplication like '(2+3)2'\n      //              Note: we don't allow implicit multiplication between numbers,\n      //              like '2 3'. I'm not sure whether that is a good idea.\n      // parenthesis: implicit multiplication like '2(3+4)', '(3+4)(1+2)', '2[1,2,3]'\n      node = new OperatorNode('*', 'multiply', [node, parseMultiplyDivide()]);\n    }\n\n    return node;\n  }\n\n  /**\n   * Unary plus and minus, and logical and bitwise not\n   * @return {Node} node\n   * @private\n   */\n  function parseUnary () {\n    var name, params;\n    var fn = {\n      '-': 'unaryMinus',\n      '+': 'unaryPlus',\n      '~': 'bitNot',\n      'not': 'not'\n    }[token];\n\n    if (fn) {\n      name = token;\n\n      getTokenSkipNewline();\n      params = [parseUnary()];\n\n      return new OperatorNode(name, fn, params);\n    }\n\n    return parsePow();\n  }\n\n  /**\n   * power\n   * Note: power operator is right associative\n   * @return {Node} node\n   * @private\n   */\n  function parsePow () {\n    var node, name, fn, params;\n\n    node = parseLeftHandOperators();\n\n    if (token == '^' || token == '.^') {\n      name = token;\n      fn = (name == '^') ? 'pow' : 'dotPow';\n\n      getTokenSkipNewline();\n      params = [node, parseUnary()]; // Go back to unary, we can have '2^-3'\n      node = new OperatorNode(name, fn, params);\n    }\n\n    return node;\n  }\n\n  /**\n   * Left hand operators: factorial x!, transpose x'\n   * @return {Node} node\n   * @private\n   */\n  function parseLeftHandOperators ()  {\n    var node, operators, name, fn, params;\n\n    node = parseCustomNodes();\n\n    operators = {\n      '!': 'factorial',\n      '\\'': 'transpose'\n    };\n\n    while (token in operators) {\n      name = token;\n      fn = operators[name];\n\n      getToken();\n      params = [node];\n\n      node = new OperatorNode(name, fn, params);\n    }\n\n    return node;\n  }\n\n  /**\n   * Parse a custom node handler. A node handler can be used to process\n   * nodes in a custom way, for example for handling a plot.\n   *\n   * A handler must be passed as second argument of the parse function.\n   * - must extend math.expression.node.Node\n   * - must contain a function _compile(defs: Object) : String\n   * - must contain a function find(filter: Object) : Node[]\n   * - must contain a function toString() : String\n   * - the constructor is called with a single argument containing all parameters\n   *\n   * For example:\n   *\n   *     nodes = {\n   *       'plot': PlotHandler\n   *     };\n   *\n   * The constructor of the handler is called as:\n   *\n   *     node = new PlotHandler(params);\n   *\n   * The handler will be invoked when evaluating an expression like:\n   *\n   *     node = math.parse('plot(sin(x), x)', nodes);\n   *\n   * @return {Node} node\n   * @private\n   */\n  function parseCustomNodes () {\n    var params = [], handler;\n\n    if (token_type == TOKENTYPE.SYMBOL && extra_nodes[token]) {\n      handler = extra_nodes[token];\n\n      getToken();\n\n      // parse parameters\n      if (token == '(') {\n        params = [];\n\n        openParams();\n        getToken();\n\n        if (token != ')') {\n          params.push(parseConditional());\n\n          // parse a list with parameters\n          while (token == ',') {\n            getToken();\n            params.push(parseConditional());\n          }\n        }\n\n        if (token != ')') {\n          throw createSyntaxError('Parenthesis ) expected');\n        }\n        closeParams();\n        getToken();\n      }\n\n      // create a new node handler\n      //noinspection JSValidateTypes\n      return new handler(params);\n    }\n\n    return parseSymbol();\n  }\n\n  /**\n   * parse symbols: functions, variables, constants, units\n   * @return {Node} node\n   * @private\n   */\n  function parseSymbol () {\n    var node, name;\n\n    if (token_type == TOKENTYPE.SYMBOL ||\n        (token_type == TOKENTYPE.DELIMITER && token in NAMED_DELIMITERS)) {\n      name = token;\n\n      getToken();\n\n      // parse function parameters and matrix index\n      node = parseFunctions(name);\n      node = parseIndex(node);\n      return node;\n    }\n\n    return parseString();\n  }\n\n  /**\n   * parse a function call like fn(a, b, c)\n   * @param {string} name    Function name\n   * @return {FunctionNode | SymbolNode} node\n   * @private\n   */\n  function parseFunctions (name) {\n    var params;\n\n    if (token == '(') {\n      params = [];\n\n      openParams();\n      getToken();\n\n      if (token != ')') {\n        params.push(parseConditional());\n\n        // parse a list with parameters\n        while (token == ',') {\n          getToken();\n          params.push(parseConditional());\n        }\n      }\n\n      if (token != ')') {\n        throw createSyntaxError('Parenthesis ) expected');\n      }\n      closeParams();\n      getToken();\n\n      return new FunctionNode(name, params);\n    }\n\n    return new SymbolNode(name);\n  }\n\n  /**\n   * parse index parameters, enclosed in square brackets [...], for example A[2,3]\n   * @param {Node} node    Node on which to apply the parameters. If there\n   *                       are no parameters in the expression, the node\n   *                       itself is returned\n   * @return {Node} node\n   * @private\n   */\n  function parseIndex (node) {\n    var params;\n\n    while (token == '[') {\n      params = [];\n\n      openParams();\n      getToken();\n\n      if (token != ']') {\n        params.push(parseConditional());\n\n        // parse a list with parameters\n        while (token == ',') {\n          getToken();\n          params.push(parseConditional());\n        }\n      }\n\n      if (token != ']') {\n        throw createSyntaxError('Parenthesis ] expected');\n      }\n      closeParams();\n      getToken();\n\n      node = new IndexNode(node, params);\n    }\n\n    return node;\n  }\n\n  /**\n   * parse a string.\n   * A string is enclosed by double quotes\n   * @return {Node} node\n   * @private\n   */\n  function parseString () {\n    var node, str, tPrev;\n\n    if (token == '\"') {\n      // string \"...\"\n      str = '';\n      tPrev = '';\n      while (c != '' && (c != '\\\"' || tPrev == '\\\\')) { // also handle escape character\n        str += c;\n        tPrev = c;\n        next();\n      }\n\n      getToken();\n      if (token != '\"') {\n        throw createSyntaxError('End of string \" expected');\n      }\n      getToken();\n\n      // create constant\n      node = new ConstantNode(str, 'string');\n\n      // parse index parameters\n      node = parseIndex(node);\n\n      return node;\n    }\n\n    return parseMatrix();\n  }\n\n  /**\n   * parse the matrix\n   * @return {Node} node\n   * @private\n   */\n  function parseMatrix () {\n    var array, params, rows, cols;\n\n    if (token == '[') {\n      // matrix [...]\n      openParams();\n      getToken();\n\n      if (token != ']') {\n        // this is a non-empty matrix\n        var row = parseRow();\n\n        if (token == ';') {\n          // 2 dimensional array\n          rows = 1;\n          params = [row];\n\n          // the rows of the matrix are separated by dot-comma's\n          while (token == ';') {\n            getToken();\n\n            params[rows] = parseRow();\n            rows++;\n          }\n\n          if (token != ']') {\n            throw createSyntaxError('End of matrix ] expected');\n          }\n          closeParams();\n          getToken();\n\n          // check if the number of columns matches in all rows\n          cols = params[0].nodes.length;\n          for (var r = 1; r < rows; r++) {\n            if (params[r].nodes.length != cols) {\n              throw createError('Column dimensions mismatch ' +\n                  '(' + params[r].nodes.length + ' != ' + cols + ')');\n            }\n          }\n\n          array = new ArrayNode(params);\n        }\n        else {\n          // 1 dimensional vector\n          if (token != ']') {\n            throw createSyntaxError('End of matrix ] expected');\n          }\n          closeParams();\n          getToken();\n\n          array = row;\n        }\n      }\n      else {\n        // this is an empty matrix \"[ ]\"\n        closeParams();\n        getToken();\n        array = new ArrayNode([]);\n      }\n\n      return array;\n    }\n\n    return parseNumber();\n  }\n\n  /**\n   * Parse a single comma-separated row from a matrix, like 'a, b, c'\n   * @return {ArrayNode} node\n   */\n  function parseRow () {\n    var params = [parseAssignment()];\n    var len = 1;\n\n    while (token == ',') {\n      getToken();\n\n      // parse expression\n      params[len] = parseAssignment();\n      len++;\n    }\n\n    return new ArrayNode(params);\n  }\n\n  /**\n   * parse a number\n   * @return {Node} node\n   * @private\n   */\n  function parseNumber () {\n    var number;\n\n    if (token_type == TOKENTYPE.NUMBER) {\n      // this is a number\n      number = token;\n      getToken();\n\n      return new ConstantNode(number, 'number');\n    }\n\n    return parseParentheses();\n  }\n\n  /**\n   * parentheses\n   * @return {Node} node\n   * @private\n   */\n  function parseParentheses () {\n    var node;\n\n    // check if it is a parenthesized expression\n    if (token == '(') {\n      // parentheses (...)\n      openParams();\n      getToken();\n\n      node = parseAssignment(); // start again\n\n      if (token != ')') {\n        throw createSyntaxError('Parenthesis ) expected');\n      }\n      closeParams();\n      getToken();\n\n      return node;\n    }\n\n    return parseEnd();\n  }\n\n  /**\n   * Evaluated when the expression is not yet ended but expected to end\n   * @return {Node} res\n   * @private\n   */\n  function parseEnd () {\n    if (token == '') {\n      // syntax error or unexpected end of expression\n      throw createSyntaxError('Unexpected end of expression');\n    } else {\n      throw createSyntaxError('Value expected');\n    }\n  }\n\n  /**\n   * Shortcut for getting the current row value (one based)\n   * Returns the line of the currently handled expression\n   * @private\n   */\n  /* TODO: implement keeping track on the row number\n  function row () {\n    return null;\n  }\n  */\n\n  /**\n   * Shortcut for getting the current col value (one based)\n   * Returns the column (position) where the last token starts\n   * @private\n   */\n  function col () {\n    return index - token.length + 1;\n  }\n\n  /**\n   * Create an error\n   * @param {String} message\n   * @return {SyntaxError} instantiated error\n   * @private\n   */\n  function createSyntaxError (message) {\n    var c = col();\n    var error = new SyntaxError(message + ' (char ' + c + ')');\n    error['char'] = c;\n\n    return error;\n  }\n\n  /**\n   * Create an error\n   * @param {String} message\n   * @return {Error} instantiated error\n   * @private\n   */\n  function createError (message) {\n    var c = col();\n    var error = new Error(message + ' (char ' + c + ')');\n    error['char'] = c;\n\n    return error;\n  }\n\n  return parse;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/parse.js\n ** module id = 30\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n\n  var _parse = math.expression.parse;\n\n  /**\n   * @constructor Parser\n   * Parser contains methods to evaluate or parse expressions, and has a number\n   * of convenience methods to get, set, and remove variables from memory. Parser\n   * keeps a scope containing variables in memory, which is used for all\n   * evaluations.\n   *\n   * Methods:\n   *    var result = parser.eval(expr);    // evaluate an expression\n   *    var value = parser.get(name);      // retrieve a variable from the parser\n   *    parser.set(name, value);           // set a variable in the parser\n   *    parser.remove(name);               // clear a variable from the\n   *                                       // parsers scope\n   *    parser.clear();                    // clear the parsers scope\n   *\n   * Example usage:\n   *    var parser = new Parser();\n   *    // Note: there is a convenience method which can be used instead:\n   *    // var parser = new math.parser();\n   *\n   *    // evaluate expressions\n   *    parser.eval('sqrt(3^2 + 4^2)');         // 5\n   *    parser.eval('sqrt(-4)');                // 2i\n   *    parser.eval('2 inch in cm');            // 5.08 cm\n   *    parser.eval('cos(45 deg)');             // 0.7071067811865476\n   *\n   *    // define variables and functions\n   *    parser.eval('x = 7 / 2');               // 3.5\n   *    parser.eval('x + 3');                   // 6.5\n   *    parser.eval('function f(x, y) = x^y');  // f(x, y)\n   *    parser.eval('f(2, 3)');                 // 8\n   *\n   *    // get and set variables and functions\n   *    var x = parser.get('x');                // 7\n   *    var f = parser.get('f');                // function\n   *    var g = f(3, 2);                        // 9\n   *    parser.set('h', 500);\n   *    var i = parser.eval('h / 2');           // 250\n   *    parser.set('hello', function (name) {\n   *        return 'hello, ' + name + '!';\n   *    });\n   *    parser.eval('hello(\"user\")');           // \"hello, user!\"\n   *\n   *    // clear defined functions and variables\n   *    parser.clear();\n   *\n   */\n  function Parser() {\n    if (!(this instanceof Parser)) {\n      throw new SyntaxError(\n          'Constructor must be called with the new operator');\n    }\n    this.scope = {};\n  }\n\n  /**\n   * Parse an expression and return the parsed function node.\n   * The node tree can be compiled via `code = node.compile(math)`,\n   * and the compiled code can be executed as `code.eval([scope])`\n   * @param {String} expr\n   * @return {Node} node\n   * @throws {Error}\n   */\n  Parser.prototype.parse = function (expr) {\n    throw new Error('Parser.parse is deprecated. Use math.parse instead.');\n  };\n\n  /**\n   * Parse and compile an expression, return the compiled javascript code.\n   * The node can be evaluated via code.eval([scope])\n   * @param {String} expr\n   * @return {{eval: function}} code\n   * @throws {Error}\n   */\n  Parser.prototype.compile = function (expr) {\n    throw new Error('Parser.compile is deprecated. Use math.compile instead.');\n  };\n\n  /**\n   * Parse and evaluate the given expression\n   * @param {String} expr   A string containing an expression, for example \"2+3\"\n   * @return {*} result     The result, or undefined when the expression was empty\n   * @throws {Error}\n   */\n  Parser.prototype.eval = function (expr) {\n    // TODO: validate arguments\n    return _parse(expr)\n        .compile(math)\n        .eval(this.scope);\n  };\n\n  /**\n   * Get a variable (a function or variable) by name from the parsers scope.\n   * Returns undefined when not found\n   * @param {String} name\n   * @return {* | undefined} value\n   */\n  Parser.prototype.get = function (name) {\n    // TODO: validate arguments\n    return this.scope[name];\n  };\n\n  /**\n   * Set a symbol (a function or variable) by name from the parsers scope.\n   * @param {String} name\n   * @param {* | undefined} value\n   */\n  Parser.prototype.set = function (name, value) {\n    // TODO: validate arguments\n    return this.scope[name] = value;\n  };\n\n  /**\n   * Remove a variable from the parsers scope\n   * @param {String} name\n   */\n  Parser.prototype.remove = function (name) {\n    // TODO: validate arguments\n    delete this.scope[name];\n  };\n\n  /**\n   * Clear the scope with variables and functions\n   */\n  Parser.prototype.clear = function () {\n    for (var name in this.scope) {\n      if (this.scope.hasOwnProperty(name)) {\n        delete this.scope[name];\n      }\n    }\n  };\n\n  return Parser;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/Parser.js\n ** module id = 31\n ** module chunks = 0\n **/","// constants\nexports.e = require('./constants/e');\nexports.E = require('./constants/e');\nexports['false'] = require('./constants/false');\nexports.i = require('./constants/i');\nexports['Infinity'] = require('./constants/Infinity');\nexports.LN2 = require('./constants/LN2');\nexports.LN10 = require('./constants/LN10');\nexports.LOG2E = require('./constants/LOG2E');\nexports.LOG10E = require('./constants/LOG10E');\nexports.NaN = require('./constants/NaN');\nexports['null'] = require('./constants/null');\nexports.pi = require('./constants/pi');\nexports.PI = require('./constants/pi');\nexports.phi = require('./constants/phi');\nexports.SQRT1_2 = require('./constants/SQRT1_2');\nexports.SQRT2 = require('./constants/SQRT2');\nexports.tau = require('./constants/tau');\nexports['true'] = require('./constants/true');\nexports.version = require('./constants/version');\n\n// functions - arithmetic\nexports.abs = require('./function/arithmetic/abs');\nexports.add = require('./function/arithmetic/add');\nexports.ceil = require('./function/arithmetic/ceil');\nexports.cube = require('./function/arithmetic/cube');\nexports.divide = require('./function/arithmetic/divide');\nexports.dotDivide = require('./function/arithmetic/dotDivide');\nexports.dotMultiply = require('./function/arithmetic/dotMultiply');\nexports.dotPow = require('./function/arithmetic/dotPow');\nexports.exp = require('./function/arithmetic/exp');\nexports.fix = require('./function/arithmetic/fix');\nexports.floor = require('./function/arithmetic/floor');\nexports.gcd = require('./function/arithmetic/gcd');\nexports.lcm = require('./function/arithmetic/lcm');\nexports.log = require('./function/arithmetic/log');\nexports.log10 = require('./function/arithmetic/log10');\nexports.mod = require('./function/arithmetic/mod');\nexports.multiply = require('./function/arithmetic/multiply');\nexports.norm = require('./function/arithmetic/norm');\nexports.nthRoot = require('./function/arithmetic/nthRoot');\nexports.pow = require('./function/arithmetic/pow');\nexports.round = require('./function/arithmetic/round');\nexports.sign = require('./function/arithmetic/sign');\nexports.sqrt = require('./function/arithmetic/sqrt');\nexports.square = require('./function/arithmetic/square');\nexports.subtract = require('./function/arithmetic/subtract');\nexports.unaryMinus = require('./function/arithmetic/unaryMinus');\nexports.unaryPlus = require('./function/arithmetic/unaryPlus');\nexports.xgcd = require('./function/arithmetic/xgcd');\n\n// functions - bitwise\nexports.bitAnd = require('./function/bitwise/bitAnd');\nexports.bitNot = require('./function/bitwise/bitNot');\nexports.bitOr = require('./function/bitwise/bitOr');\nexports.bitXor = require('./function/bitwise/bitXor');\nexports.leftShift = require('./function/bitwise/leftShift');\nexports.rightArithShift = require('./function/bitwise/rightArithShift');\nexports.rightLogShift = require('./function/bitwise/rightLogShift');\n\n// functions - complex\nexports.arg = require('./function/complex/arg');\nexports.conj = require('./function/complex/conj');\nexports.re = require('./function/complex/re');\nexports.im = require('./function/complex/im');\n\n// functions - construction\nexports.bignumber = require('./function/construction/bignumber');\nexports['boolean'] = require('./function/construction/boolean');\nexports.complex = require('./function/construction/complex');\nexports.index = require('./function/construction/index');\nexports.matrix = require('./function/construction/matrix');\nexports.number = require('./function/construction/number');\nexports.string = require('./function/construction/string');\nexports.unit = require('./function/construction/unit');\n\n// functions - expression\nexports['eval'] =  require('./function/expression/eval');\nexports.help =  require('./function/expression/help');\n\n// functions - logical\nexports['and'] = require('./function/logical/and');\nexports['not'] = require('./function/logical/not');\nexports['or'] = require('./function/logical/or');\nexports['xor'] = require('./function/logical/xor');\n\n// functions - matrix\nexports['concat'] = require('./function/matrix/concat');\nexports.cross = require('./function/matrix/cross');\nexports.det = require('./function/matrix/det');\nexports.diag = require('./function/matrix/diag');\nexports.dot = require('./function/matrix/dot');\nexports.eye = require('./function/matrix/eye');\nexports.flatten = require('./function/matrix/flatten');\nexports.inv = require('./function/matrix/inv');\nexports.ones = require('./function/matrix/ones');\nexports.range = require('./function/matrix/range');\nexports.resize = require('./function/matrix/resize');\nexports.size = require('./function/matrix/size');\nexports.squeeze = require('./function/matrix/squeeze');\nexports.subset = require('./function/matrix/subset');\nexports.trace = require('./function/matrix/trace');\nexports.transpose = require('./function/matrix/transpose');\nexports.zeros = require('./function/matrix/zeros');\n\n// functions - probability\nexports.combinations = require('./function/probability/combinations');\n//exports.distribution = require('./function/probability/distribution');\nexports.factorial = require('./function/probability/factorial');\nexports.gamma = require('./function/probability/gamma');\nexports.permutations = require('./function/probability/permutations');\nexports.pickRandom = require('./function/probability/pickRandom');\nexports.random = require('./function/probability/random');\nexports.randomInt = require('./function/probability/randomInt');\n\n// functions - relational\nexports.compare = require('./function/relational/compare');\nexports.deepEqual = require('./function/relational/deepEqual');\nexports['equal'] = require('./function/relational/equal');\nexports.larger = require('./function/relational/larger');\nexports.largerEq = require('./function/relational/largerEq');\nexports.smaller = require('./function/relational/smaller');\nexports.smallerEq = require('./function/relational/smallerEq');\nexports.unequal = require('./function/relational/unequal');\n\n// functions - statistics\nexports.max = require('./function/statistics/max');\nexports.mean = require('./function/statistics/mean');\nexports.median = require('./function/statistics/median');\nexports.min = require('./function/statistics/min');\nexports.prod = require('./function/statistics/prod');\nexports.std = require('./function/statistics/std');\nexports.sum = require('./function/statistics/sum');\nexports['var'] = require('./function/statistics/var');\n\n// functions - trigonometry\nexports.acos = require('./function/trigonometry/acos');\nexports.acosh = require('./function/trigonometry/acosh');\nexports.acot = require('./function/trigonometry/acot');\nexports.acoth = require('./function/trigonometry/acoth');\nexports.acsc = require('./function/trigonometry/acsc');\nexports.acsch = require('./function/trigonometry/acsch');\nexports.asec = require('./function/trigonometry/asec');\nexports.asech = require('./function/trigonometry/asech');\nexports.asin = require('./function/trigonometry/asin');\nexports.asinh = require('./function/trigonometry/asinh');\nexports.atan = require('./function/trigonometry/atan');\nexports.atanh = require('./function/trigonometry/atanh');\nexports.atan2 = require('./function/trigonometry/atan2');\nexports.cos = require('./function/trigonometry/cos');\nexports.cosh = require('./function/trigonometry/cosh');\nexports.cot = require('./function/trigonometry/cot');\nexports.coth = require('./function/trigonometry/coth');\nexports.csc = require('./function/trigonometry/csc');\nexports.csch = require('./function/trigonometry/csch');\nexports.sec = require('./function/trigonometry/sec');\nexports.sech = require('./function/trigonometry/sech');\nexports.sin = require('./function/trigonometry/sin');\nexports.sinh = require('./function/trigonometry/sinh');\nexports.tan = require('./function/trigonometry/tan');\nexports.tanh = require('./function/trigonometry/tanh');\n\n// functions - units\nexports.to = require('./function/units/to');\n\n// functions - utils\nexports.clone =  require('./function/utils/clone');\nexports.map =  require('./function/utils/map');\nexports.filter =  require('./function/utils/filter');\nexports.forEach =  require('./function/utils/forEach');\nexports.format =  require('./function/utils/format');\n// exports.print =  require('./function/utils/print'); // TODO: add documentation for print as soon as the parser supports objects.\nexports['import'] =  require('./function/utils/import');\nexports.sort =  require('./function/utils/sort');\nexports['typeof'] =  require('./function/utils/typeof');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/index.js\n ** module id = 32\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  /**\n   * Instantiate mathjs data types from their JSON representation\n   * @param {string} key\n   * @param {*} value\n   * @returns {*} Returns the revived object\n   */\n  function reviver(key, value) {\n    var name = value && value.mathjs;\n\n    var constructor = math.type[name];\n    if (constructor && constructor.fromJSON) {\n      return constructor.fromJSON(value);\n    }\n\n    return value;\n  }\n\n  return reviver;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/json/reviver.js\n ** module id = 33\n ** module chunks = 0\n **/","'use strict';\n\nvar BigNumber = require('../../type/BigNumber');\nvar errorTransform = require('./error.transform').transform;\nvar isNumber = require('../../util/number').isNumber;\nvar argsToArray = require('../../util/array').argsToArray;\n\n/**\n * Attach a transform function to math.range\n * Adds a property transform containing the transform function.\n *\n * This transform changed the last `dim` parameter of function concat\n * from one-based to zero based\n * @param {Object} math\n */\nmodule.exports = function (math) {\n  var transform = function () {\n    // copy arguments into an array\n    var args = argsToArray(arguments);\n\n    // change last argument from one-based to zero-based\n    var lastIndex = args.length - 1;\n    var last = args[lastIndex];\n    if (isNumber(last)) {\n      args[lastIndex] = last - 1;\n    }\n    else if (last instanceof BigNumber) {\n      args[lastIndex] = last.minus(1);\n    }\n\n    try {\n      return math.concat.apply(math, args);\n    }\n    catch (err) {\n      throw errorTransform(err);\n    }\n  };\n\n  math.concat.transform = transform;\n\n  return transform;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/transform/concat.transform.js\n ** module id = 34\n ** module chunks = 0\n **/","'use strict';\n\nvar SymbolNode = require('../../expression/node/SymbolNode');\nvar isBoolean = require('../../util/boolean').isBoolean;\nvar argsToArray = require('../../util/array').argsToArray;\nvar ArgumentsError = require('../../error/ArgumentsError');\n\n/**\n * Attach a transform function to math.filter\n * Adds a property transform containing the transform function.\n *\n * This transform adds support for equations as test function for math.filter,\n * so you can do something like 'filter([3, -2, 5], x > 0)'.\n * @param {Object} math\n */\nmodule.exports = function (math) {\n  var _filter = math.filter;\n\n  var transform = function (args, math, scope) {\n    if (args.length !== 2) {\n      throw new ArgumentsError('filter', arguments.length, 2);\n    }\n\n    var x = args[0].compile(math).eval(scope);\n    var test;\n    if (args[1] instanceof SymbolNode) {\n      // a function pointer, like filter([3, -2, 5], myTestFunction);\n      test = args[1].compile(math).eval(scope);\n    }\n    else {\n      // an equation like filter([3, -2, 5], x > 0)\n\n      // find an undefined symbol\n      var _scope = scope || {};\n      var symbol = args[1]\n          .filter(function (node) {\n            return (node instanceof SymbolNode) &&\n                !(node.name in math) &&\n                !(node.name in _scope);\n          })[0];\n\n      // create a test function for this equation\n      var sub = Object.create(_scope);\n      var eq = args[1].compile(math);\n      if (symbol) {\n        var name = symbol.name;\n        test = function (x) {\n          sub[name] = x;\n          return eq.eval(sub);\n        }\n      }\n      else {\n        throw new Error('No undefined variable found in filter equation');\n      }\n    }\n\n    return _filter(x, test);\n  };\n\n  transform.rawArgs = true;\n  math.filter.transform = transform;\n\n  return transform;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/transform/filter.transform.js\n ** module id = 35\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Attach a transform function to math.forEach\n * Adds a property transform containing the transform function.\n *\n * This transform creates a one-based index instead of a zero-based index\n * @param {Object} math\n */\nmodule.exports = function (math) {\n\n  var Matrix = math.type.Matrix;\n\n  var transform = function (x, callback) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('forEach', arguments.length, 2);\n    }\n\n    if (Array.isArray(x)) {\n      _forEachArray(x, callback, x);\n    } else if (x instanceof Matrix) {\n      _forEachArray(x.valueOf(), callback, x);\n    } else {\n      throw new math.error.UnsupportedTypeError('forEach', math['typeof'](x));\n    }\n  };\n\n  function _forEachArray (array, callback, arrayOrig) {\n    var recurse = function (value, index) {\n      if (Array.isArray(value)) {\n        value.forEach(function (child, i) {\n          // we create a copy of the index array and append the new index value\n          recurse(child, index.concat(i + 1)); // one based index, hence i+1\n        });\n      }\n      else {\n        callback(value, index, arrayOrig);\n      }\n    };\n    recurse(array, []);\n  }\n\n  math.forEach.transform = transform;\n\n  return transform;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/transform/forEach.transform.js\n ** module id = 36\n ** module chunks = 0\n **/","'use strict';\n\nvar BigNumber = require('../../type/BigNumber');\nvar Range = require('../../type/Range');\nvar Index = require('../../type/Index');\nvar isNumber = require('../../util/number').isNumber;\n\n/**\n * Attach a transform function to math.index\n * Adds a property transform containing the transform function.\n *\n * This transform creates a one-based index instead of a zero-based index\n * @param {Object} math\n */\nmodule.exports = function (math) {\n  var transform = function () {\n    var args = [];\n    for (var i = 0, ii = arguments.length; i < ii; i++) {\n      var arg = arguments[i];\n\n      // change from one-based to zero based, and convert BigNumber to number\n      if (arg instanceof Range) {\n        arg.start--;\n        arg.end -= (arg.step > 0 ? 0 : 2);\n      }\n      else if (isNumber(arg)) {\n        arg--;\n      }\n      else if (arg instanceof BigNumber) {\n        arg = arg.toNumber() - 1;\n      }\n      else {\n        throw new TypeError('Ranges must be a Number or Range');\n      }\n\n      args[i] = arg;\n    }\n\n    var res = new Index();\n    Index.apply(res, args);\n    return res;\n  };\n\n  math.index.transform = transform;\n\n  return transform;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/transform/index.transform.js\n ** module id = 37\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Attach a transform function to math.map\n * Adds a property transform containing the transform function.\n *\n * This transform creates a one-based index instead of a zero-based index\n * @param {Object} math\n */\nmodule.exports = function (math) {\n\n  var Matrix = math.type.Matrix;\n\n  var transform = function (x, callback) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('map', arguments.length, 2);\n    }\n\n    if (Array.isArray(x)) {\n      return _mapArray(x, callback, x);\n    } else if (x instanceof Matrix) {\n      return math.matrix(_mapArray(x.valueOf(), callback, x));\n    } else {\n      throw new math.error.UnsupportedTypeError('map', math['typeof'](x));\n    }\n  };\n\n  function _mapArray (arrayIn, callback, arrayOrig) {\n    var recurse = function (value, index) {\n      if (Array.isArray(value)) {\n        return value.map(function (child, i) {\n          // we create a copy of the index array and append the new index value\n          return recurse(child, index.concat(i + 1)); // one based index, hence i + 1\n        });\n      }\n      else {\n        return callback(value, index, arrayOrig);\n      }\n    };\n\n    return recurse(arrayIn, []);\n  }\n\n  math.map.transform = transform;\n\n  return transform;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/transform/map.transform.js\n ** module id = 38\n ** module chunks = 0\n **/","'use strict';\n\nvar BigNumber = require('../../type/BigNumber');\nvar errorTransform = require('./error.transform').transform;\nvar isNumber = require('../../util/number').isNumber;\nvar argsToArray = require('../../util/array').argsToArray;\n\n/**\n * Attach a transform function to math.max\n * Adds a property transform containing the transform function.\n *\n * This transform changed the last `dim` parameter of function max\n * from one-based to zero based\n * @param {Object} math\n */\nmodule.exports = function (math) {\n\n  var isCollection = math.collection.isCollection;\n\n  var transform = function () {\n    var args = argsToArray(arguments);\n\n    // change last argument dim from one-based to zero-based\n    if (args.length == 2 && isCollection(args[0])) {\n      var dim = args[1];\n      if (isNumber(dim)) {\n        args[1] = dim - 1;\n      }\n      else if (dim instanceof BigNumber) {\n        args[1] = dim.minus(1);\n      }\n    }\n\n    try {\n      return math.max.apply(math, args);\n    }\n    catch (err) {\n      throw errorTransform(err);\n    }\n  };\n\n  math.max.transform = transform;\n\n  return transform;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/transform/max.transform.js\n ** module id = 39\n ** module chunks = 0\n **/","'use strict';\n\nvar BigNumber = require('../../type/BigNumber');\nvar errorTransform = require('./error.transform').transform;\nvar isNumber = require('../../util/number').isNumber;\nvar argsToArray = require('../../util/array').argsToArray;\n\n/**\n * Attach a transform function to math.mean\n * Adds a property transform containing the transform function.\n *\n * This transform changed the last `dim` parameter of function mean\n * from one-based to zero based\n * @param {Object} math\n */\nmodule.exports = function (math) {\n\n  var isCollection = math.collection.isCollection;\n\n  var transform = function () {\n    var args = argsToArray(arguments);\n\n    // change last argument dim from one-based to zero-based\n    if (args.length == 2 && isCollection(args[0])) {\n      var dim = args[1];\n      if (isNumber(dim)) {\n        args[1] = dim - 1;\n      }\n      else if (dim instanceof BigNumber) {\n        args[1] = dim.minus(1);\n      }\n    }\n\n    try {\n      return math.mean.apply(math, args);\n    }\n    catch (err) {\n      throw errorTransform(err);\n    }\n  };\n\n  math.mean.transform = transform;\n\n  return transform;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/transform/mean.transform.js\n ** module id = 40\n ** module chunks = 0\n **/","'use strict';\n\nvar BigNumber = require('../../type/BigNumber');\nvar errorTransform = require('./error.transform').transform;\nvar isNumber = require('../../util/number').isNumber;\nvar argsToArray = require('../../util/array').argsToArray;\n\n/**\n * Attach a transform function to math.min\n * Adds a property transform containing the transform function.\n *\n * This transform changed the last `dim` parameter of function min\n * from one-based to zero based\n * @param {Object} math\n */\nmodule.exports = function (math) {\n\n  var isCollection = math.collection.isCollection;\n\n  var transform = function () {\n    var args = argsToArray(arguments);\n\n    // change last argument dim from one-based to zero-based\n    if (args.length == 2 && isCollection(args[0])) {\n      var dim = args[1];\n      if (isNumber(dim)) {\n        args[1] = dim - 1;\n      }\n      else if (dim instanceof BigNumber) {\n        args[1] = dim.minus(1);\n      }\n    }\n\n    try {\n      return math.min.apply(math, args);\n    }\n    catch (err) {\n      throw errorTransform(err);\n    }\n  };\n\n  math.min.transform = transform;\n\n  return transform;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/transform/min.transform.js\n ** module id = 41\n ** module chunks = 0\n **/","'use strict';\n\nvar isBoolean = require('../../util/boolean').isBoolean;\nvar argsToArray = require('../../util/array').argsToArray;\n\n/**\n * Attach a transform function to math.range\n * Adds a property transform containing the transform function.\n *\n * This transform creates a range which includes the end value\n * @param {Object} math\n */\nmodule.exports = function (math) {\n  var transform = function () {\n    var args = argsToArray(arguments);\n\n    var lastIndex = args.length - 1;\n    var last = args[lastIndex];\n    if (!isBoolean(last)) {\n      args.push(true); // append a parameter includeEnd=true\n    }\n\n    return math.range.apply(math, args);\n  };\n\n  math.range.transform = transform;\n\n  return transform;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/transform/range.transform.js\n ** module id = 42\n ** module chunks = 0\n **/","'use strict';\n\nvar errorTransform = require('./error.transform').transform;\nvar isBoolean = require('../../util/boolean').isBoolean;\nvar argsToArray = require('../../util/array').argsToArray;\n\n/**\n * Attach a transform function to math.subset\n * Adds a property transform containing the transform function.\n *\n * This transform creates a range which includes the end value\n * @param {Object} math\n */\nmodule.exports = function (math) {\n  var transform = function () {\n    try {\n      return math.subset.apply(math, argsToArray(arguments));\n    }\n    catch (err) {\n      throw errorTransform(err);\n    }\n  };\n\n  math.subset.transform = transform;\n\n  return transform;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/transform/subset.transform.js\n ** module id = 43\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var string = require('../util/string');\n\n  /**\n   * @constructor Chain\n   * Wrap any value in a chain, allowing to perform chained operations on\n   * the value.\n   *\n   * All methods available in the math.js library can be called upon the chain,\n   * and then will be evaluated with the value itself as first argument.\n   * The chain can be closed by executing chain.done(), which will return\n   * the final value.\n   *\n   * The Chain has a number of special functions:\n   * - done()             Finalize the chained operation and return the\n   *                      chain's value.\n   * - valueOf()          The same as done()\n   * - toString()         Returns a string representation of the chain's value.\n   *\n   * @param {*} [value]\n   */\n  function Chain (value) {\n    if (!(this instanceof Chain)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (value instanceof Chain) {\n      this.value = value.value;\n    }\n    else {\n      this.value = value;\n    }\n  }\n\n  /**\n   * Close the chain. Returns the final value.\n   * Does the same as method valueOf()\n   * @returns {*} value\n   */\n  Chain.prototype.done = function () {\n    return this.value;\n  };\n\n  /**\n   * Close the chain. Returns the final value.\n   * Does the same as method done()\n   * @returns {*} value\n   */\n  Chain.prototype.valueOf = function () {\n    return this.value;\n  };\n\n  /**\n   * Get a string representation of the value in the chain\n   * @returns {String}\n   */\n  Chain.prototype.toString = function () {\n    return string.format(this.value);\n  };\n\n  /**\n   * Create a proxy method for the chain\n   * @param {String} name\n   * @param {*} value       The value or function to be proxied\n   */\n  function createProxy(name, value) {\n    var slice = Array.prototype.slice;\n    if (typeof value === 'function') {\n      // a function\n      Chain.prototype[name] = function () {\n        var args = [this.value].concat(slice.call(arguments, 0));\n        return new Chain(value.apply(this, args));\n      }\n    }\n    else {\n      // a constant\n      Chain.prototype[name] = new Chain(value);\n    }\n  }\n\n  Chain.createProxy = createProxy;\n\n  /**\n   * initialise the Chain prototype with all functions and constants in math\n   */\n  for (var prop in math) {\n    if (math.hasOwnProperty(prop)) {\n      createProxy(prop, math[prop]);\n    }\n  }\n\n  return Chain;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/chaining/Chain.js\n ** module id = 44\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      // take the BigNumber instance the provided math.js instance\n      BigNumber = math.type.BigNumber,\n      collection = math.collection,\n\n      isCollection = collection.isCollection,\n      isNumber = util.number.isNumber,\n      isString = util.string.isString,\n      isBoolean = util['boolean'].isBoolean;\n\n  /**\n   * Create a BigNumber, which can store numbers with arbitrary precision.\n   * When a matrix is provided, all elements will be converted to BigNumber.\n   *\n   * Syntax:\n   *\n   *    math.bignumber(x)\n   *\n   * Examples:\n   *\n   *    0.1 + 0.2;                                  // returns Number 0.30000000000000004\n   *    math.bignumber(0.1) + math.bignumber(0.2);  // returns BigNumber 0.3\n   *\n   *\n   *    7.2e500;                                    // returns Number Infinity\n   *    math.bignumber('7.2e500');                  // returns BigNumber 7.2e500\n   *\n   * See also:\n   *\n   *    boolean, complex, index, matrix, string, unit\n   *\n   * @param {Number | String | Array | Matrix | Boolean | null} [value]  Value for the big number,\n   *                                                    0 by default.\n   * @returns {BigNumber} The created bignumber\n   */\n  math.bignumber = function bignumber(value) {\n    if (arguments.length > 1) {\n      throw new math.error.ArgumentsError('bignumber', arguments.length, 0, 1);\n    }\n\n    if ((value instanceof BigNumber) || isNumber(value) || isString(value)) {\n      return new BigNumber(value);\n    }\n\n    if (isBoolean(value) || value === null) {\n      return new BigNumber(+value);\n    }\n\n    if (isCollection(value)) {\n      return collection.deepMap(value, bignumber);\n    }\n\n    if (arguments.length == 0) {\n      return new BigNumber(0);\n    }\n\n    throw new math.error.UnsupportedTypeError('bignumber', math['typeof'](value));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/construction/bignumber.js\n ** module id = 45\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      collection = math.collection,\n\n      isCollection = collection.isCollection,\n      isNumber = util.number.isNumber,\n      isString = util.string.isString;\n\n  /**\n   * Create a boolean or convert a string or number to a boolean.\n   * In case of a number, `true` is returned for non-zero numbers, and `false` in\n   * case of zero.\n   * Strings can be `'true'` or `'false'`, or can contain a number.\n   * When value is a matrix, all elements will be converted to boolean.\n   *\n   * Syntax:\n   *\n   *    math.boolean(x)\n   *\n   * Examples:\n   *\n   *    math.boolean(0);     // returns false\n   *    math.boolean(1);     // returns true\n   *    math.boolean(-3);     // returns true\n   *    math.boolean('true');     // returns true\n   *    math.boolean('false');     // returns false\n   *    math.boolean([1, 0, 1, 1]);     // returns [true, false, true, true]\n   *\n   * See also:\n   *\n   *    bignumber, complex, index, matrix, string, unit\n   *\n   * @param {String | Number | Boolean | Array | Matrix | null} value  A value of any type\n   * @return {Boolean | Array | Matrix} The boolean value\n   */\n  math['boolean'] = function bool (value) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('boolean', arguments.length, 0, 1);\n    }\n\n    if (value === 'true' || value === true) {\n      return true;\n    }\n\n    if (value === 'false' || value === false || value === null) {\n      return false;\n    }\n\n    if (value instanceof Boolean) {\n      return value == true;\n    }\n\n    if (isNumber(value)) {\n      return (value !== 0);\n    }\n\n    if (value instanceof BigNumber) {\n      return !value.isZero();\n    }\n\n    if (isString(value)) {\n      // try case insensitive\n      var lcase = value.toLowerCase();\n      if (lcase === 'true') {\n        return true;\n      }\n      else if (lcase === 'false') {\n        return false;\n      }\n\n      // test whether value is a valid number\n      var num = Number(value);\n      if (value != '' && !isNaN(num)) {\n        return (num !== 0);\n      }\n    }\n\n    if (isCollection(value)) {\n      return collection.deepMap(value, bool);\n    }\n\n    throw new SyntaxError(value.toString() + ' is no valid boolean');\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/construction/boolean.js\n ** module id = 46\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isCollection = collection.isCollection,\n      isNumber = util.number.isNumber,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex;\n\n  /**\n   * Create a complex value or convert a value to a complex value.\n   *\n   * Syntax:\n   *\n   *     math.complex()                           // creates a complex value with zero\n   *                                              // as real and imaginary part.\n   *     math.complex(re : number, im : string)   // creates a complex value with provided\n   *                                              // values for real and imaginary part.\n   *     math.complex(re : number)                // creates a complex value with provided\n   *                                              // real value and zero imaginary part.\n   *     math.complex(complex : Complex)          // clones the provided complex value.\n   *     math.complex(arg : string)               // parses a string into a complex value.\n   *     math.complex(array : Array)              // converts the elements of the array\n   *                                              // or matrix element wise into a\n   *                                              // complex value.\n   *     math.complex({re: number, im: number})   // creates a complex value with provided\n   *                                              // values for real an imaginary part.\n   *     math.complex({r: number, phi: number})   // creates a complex value with provided\n   *                                              // polar coordinates\n   *\n   * Examples:\n   *\n   *    var a = math.complex(3, -4);     // a = Complex 3 - 4i\n   *    a.re = 5;                        // a = Complex 5 - 4i\n   *    var i = a.im;                    // Number -4;\n   *    var b = math.complex('2 + 6i');  // Complex 2 + 6i\n   *    var c = math.complex();          // Complex 0 + 0i\n   *    var d = math.add(a, b);          // Complex 5 + 2i\n   *\n   * See also:\n   *\n   *    bignumber, boolean, index, matrix, number, string, unit\n   *\n   * @param {* | Array | Matrix} [args]\n   *            Arguments specifying the real and imaginary part of the complex number\n   * @return {Complex | Array | Matrix} Returns a complex value\n   */\n  math.complex = function complex(args) {\n    switch (arguments.length) {\n      case 0:\n        // no parameters. Set re and im zero\n        return new Complex(0, 0);\n\n      case 1:\n        // parse string into a complex number\n        var arg = arguments[0];\n\n        if (isNumber(arg)) {\n          return new Complex(arg, 0);\n        }\n\n        if (arg instanceof BigNumber) {\n          // convert to Number\n          return new Complex(arg.toNumber(), 0);\n        }\n\n        if (isComplex(arg)) {\n          // create a clone\n          return arg.clone();\n        }\n\n        if (isString(arg)) {\n          var c = Complex.parse(arg);\n          if (c) {\n            return c;\n          }\n          else {\n            throw new SyntaxError('String \"' + arg + '\" is no valid complex number');\n          }\n        }\n\n        if (isCollection(arg)) {\n          return collection.deepMap(arg, complex);\n        }\n\n        if (typeof arg === 'object') {\n          if('re' in arg && 'im' in arg) {\n            return new Complex(arg.re, arg.im);\n          } else if ('r' in arg && 'phi' in arg) {\n            return Complex.fromPolar(arg.r, arg.phi);\n          }\n        } \n\n        throw new TypeError('Two numbers, single string or an fitting object expected in function complex');\n\n      case 2:\n        // re and im provided\n        var re = arguments[0],\n            im = arguments[1];\n\n        // convert re to number\n        if (re instanceof BigNumber) {\n          re = re.toNumber();\n        }\n\n        // convert im to number\n        if (im instanceof BigNumber) {\n          im = im.toNumber();\n        }\n\n        if (isNumber(re) && isNumber(im)) {\n          return new Complex(re, im);\n        }\n        else {\n          throw new TypeError('Two numbers or a single string expected in function complex');\n        }\n\n      default:\n        throw new math.error.ArgumentsError('complex', arguments.length, 0, 2);\n    }\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/construction/complex.js\n ** module id = 47\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Index = require('../../type/Index');\n\n  /**\n   * Create an index. An Index can store ranges having start, step, and end\n   * for multiple dimensions.\n   * Matrix.get, Matrix.set, and math.subset accept an Index as input.\n   *\n   * Syntax:\n   *\n   *     math.index(range1, range2, ...)\n   *\n   * Where:\n   *\n   * Each range can be any of:\n   *\n   * - An array [start, end]\n   * - An array [start, end, step]\n   * - A number\n   * - An instance of `Range`\n   *\n   * The parameters start, end, and step must be integer numbers. Start and end\n   * are zero based. The start of a range is included, the end is excluded.\n   *\n   * Examples:\n   *\n   *    var math = math.js\n   *\n   *    var b = [1, 2, 3, 4, 5];\n   *    math.subset(b, math.index([1, 3]));     // returns [2, 3]\n   *\n   *    var a = math.matrix([[1, 2], [3, 4]]);\n   *    a.subset(math.index(0, 1));             // returns 2\n   *    a.subset(math.index(1, null));          // returns [3, 4]\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, matrix, number, string, unit\n   *\n   * @param {...*} ranges   Zero or more ranges or numbers.\n   * @return {Index}        Returns the created index\n   */\n  math.index = function(ranges) {\n    // downgrade BigNumber to Number\n    var args = Array.prototype.slice.apply(arguments).map(function (arg) {\n      if (arg instanceof BigNumber) {\n        return arg.toNumber();\n      }\n      else if (Array.isArray(arg)) {\n        return arg.map(function (elem) {\n          return (elem instanceof BigNumber) ? elem.toNumber() : elem;\n        });\n      }\n      else {\n        return arg;\n      }\n    });\n\n    var res = new Index();\n    Index.apply(res, args);\n    return res;\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/construction/index.js\n ** module id = 48\n ** module chunks = 0\n **/","'use strict';\n\nvar string = require('../../util/string');\n\nvar isArray = Array.isArray;\nvar isString = string.isString;\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix;\n\n  /**\n   * Create a Matrix. The function creates a new `math.type.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   *\n   * Syntax:\n   *\n   *    math.matrix()               // creates an empty matrix using default storage format (dense).\n   *    math.matrix(data)           // creates a matrix with initial data using default storage format (dense).\n   *    math.matrix('dense')        // creates an empty matrix using the given storage format.\n   *    math.matrix(data, 'dense')  // creates a matrix with initial data using the given storage format.\n   *\n   * Examples:\n   *\n   *    var m = math.matrix([[1, 2], [3, 4]]);\n   *    m.size();                        // Array [2, 2]\n   *    m.resize([3, 2], 5);\n   *    m.valueOf();                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit\n   *\n   * @param {Array | Matrix} [data]    A multi dimensional array\n   * @param {string} [format]          The Matrix storage format\n   *\n   * @return {Matrix} The created matrix\n   */\n  math.matrix = function matrix(data, format) {\n    // check arguments\n    switch (arguments.length) {\n      case 0:\n        // set data and format\n        data = [];\n        format = 'default';\n        break;\n      case 1:\n        // check data was provided\n        if (isArray(data)) {\n          // use default format\n          format = 'default';          \n        }\n        else if (data instanceof Matrix) {\n          // same format as matrix\n          format = data.storage();\n        }\n        else if (isString(data)) {\n          // set format\n          format = data;\n          // empty array\n          data = [];\n        }\n        break;\n      case 2:\n        // check data is an array\n        if (!isArray(data) && !(data instanceof Matrix)) {\n          // throw\n          throw new TypeError('data must be an array value or Matrix instance');\n        }\n        break;\n      default:\n        throw new math.error.ArgumentsError('matrix', arguments.length, 0, 2);  \n    }\n\n    // get storage format constructor\n    var constructor = Matrix.storage(format);\n\n    // create instance\n    return new constructor(data);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/construction/matrix.js\n ** module id = 49\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index');\n\n  var BigNumber = math.type.BigNumber;\n  var Unit = math.type.Unit;\n  var collection = math.collection;\n\n  var isCollection = collection.isCollection;\n  var isNumber = util.number.isNumber;\n  var isBoolean = util['boolean'].isBoolean;\n  var isString = util.string.isString;\n\n  /**\n   * Create a number or convert a string, boolean, or unit to a number.\n   * When value is a matrix, all elements will be converted to number.\n   *\n   * Syntax:\n   *\n   *    math.number(value)\n   *    math.number(unit, valuelessUnit)\n   *\n   * Examples:\n   *\n   *    math.number(2);                         // returns number 2\n   *    math.number('7.2');                     // returns number 7.2\n   *    math.number(true);                      // returns number 1\n   *    math.number([true, false, true, true]); // returns [1, 0, 1, 1]\n   *    math.number(math.unit('52cm'), 'm');    // returns 0.52\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, string, unit\n   *\n   * @param {String | Number | Boolean | Array | Matrix | Unit | null} [value]  Value to be converted\n   * @param {Unit | string} [valuelessUnit] A valueless unit, used to convert a unit to a number\n   * @return {Number | Array | Matrix} The created number\n   */\n  math.number = function number (value, valuelessUnit) {\n    switch (arguments.length) {\n      case 0:\n        return 0;\n\n      case 1:\n        if (isCollection(value)) {\n          return collection.deepMap(value, number);\n        }\n\n        if (value instanceof BigNumber) {\n          return value.toNumber();\n        }\n\n        if (isString(value)) {\n          var num = Number(value);\n          if (isNaN(num)) {\n            num = Number(value.valueOf());\n          }\n          if (isNaN(num)) {\n            throw new SyntaxError(value.toString() + ' is no valid number');\n          }\n          return num;\n        }\n\n        if (isBoolean(value) || value === null) {\n          return +value;\n        }\n\n        if (isNumber(value)) {\n          return value;\n        }\n\n        if (value instanceof Unit) {\n          throw new Error('Second argument with valueless unit expected');\n        }\n\n        throw new math.error.UnsupportedTypeError('number', math['typeof'](value));\n\n      case 2:\n        if (value instanceof Unit && isString(valuelessUnit) || valuelessUnit instanceof Unit) {\n          return value.toNumber(valuelessUnit);\n        }\n\n        throw new math.error.UnsupportedTypeError('number', math['typeof'](value), math['typeof'](valuelessUnit));\n\n\n      default:\n        throw new math.error.ArgumentsError('number', arguments.length, 0, 1);\n    }\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/construction/number.js\n ** module id = 50\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Parser = math.expression.Parser;\n\n  /**\n   * Create a parser. The function creates a new `math.expression.Parser` object.\n   *\n   * Syntax:\n   *\n   *    math.parser()\n   *\n   * Examples:\n   *\n   *     var parser = new math.parser();\n   *\n   *     // evaluate expressions\n   *     var a = parser.eval('sqrt(3^2 + 4^2)'); // 5\n   *     var b = parser.eval('sqrt(-4)');        // 2i\n   *     var c = parser.eval('2 inch in cm');    // 5.08 cm\n   *     var d = parser.eval('cos(45 deg)');     // 0.7071067811865476\n   *\n   *     // define variables and functions\n   *     parser.eval('x = 7 / 2');               // 3.5\n   *     parser.eval('x + 3');                   // 6.5\n   *     parser.eval('function f(x, y) = x^y');  // f(x, y)\n   *     parser.eval('f(2, 3)');                 // 8\n   *\n   *     // get and set variables and functions\n   *     var x = parser.get('x');                // 7\n   *     var f = parser.get('f');                // function\n   *     var g = f(3, 2);                        // 9\n   *     parser.set('h', 500);\n   *     var i = parser.eval('h / 2');           // 250\n   *     parser.set('hello', function (name) {\n   *       return 'hello, ' + name + '!';\n   *     });\n   *     parser.eval('hello(\"user\")');           // \"hello, user!\"\n   *\n   *     // clear defined functions and variables\n   *     parser.clear();\n   *\n   * See also:\n   *\n   *    eval, compile, parse\n   *\n   * @return {Parser} Parser\n   */\n  math.parser = function parser() {\n    return new Parser();\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/construction/parser.js\n ** module id = 51\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  /**\n   * Wrap any value in a chain, allowing to perform chained operations on\n   * the value.\n   *\n   * All methods available in the math.js library can be called upon the chain,\n   * and then will be evaluated with the value itself as first argument.\n   * The chain can be closed by executing `chain.done()`, which returns\n   * the final value.\n   *\n   * The chain has a number of special functions:\n   *\n   * - `done()`     Finalize the chain and return the chain's value.\n   * - `valueOf()`  The same as `done()`\n   * - `toString()` Executes `math.format()` onto the chain's value, returning\n   *                a string representation of the value.\n   *\n   * Syntax:\n   *\n   *    math.chain(value)\n   *\n   * Examples:\n   *\n   *     math.chain(3)\n   *         .add(4)\n   *         .subtract(2)\n   *         .done();     // 5\n   *\n   *     math.chain( [[1, 2], [3, 4]] )\n   *         .subset(math.index(0, 0), 8)\n   *         .multiply(3)\n   *         .done();     // [[24, 6], [9, 12]]\n   *\n   * @param {*} [value]   A value of any type on which to start a chained operation.\n   * @return {math.chaining.Chain} The created chain\n   */\n  math.chain = function(value) {\n    // TODO: check number of arguments\n    return new math.chaining.Chain(value);\n  };\n\n  // TODO: deprecate math.select in v2.0\n  math.select = function(value) {\n    // give a warning once.\n    if (console && typeof console.log === 'function') {\n      console.log('WARNING: Function \"select\" is renamed to \"chain\". It will be deprecated in v2.0.')\n    }\n\n    // replace warning function with chain function\n    math.select = math.chain;\n    math.chaining.Chain.prototype['select'] = math.select;\n\n    return math.chain(value);\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/construction/chain.js\n ** module id = 52\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      collection = math.collection,\n\n      number = util.number,\n      isNumber = util.number.isNumber,\n      isCollection = collection.isCollection;\n\n  /**\n   * Create a string or convert any object into a string.\n   * Elements of Arrays and Matrices are processed element wise.\n   *\n   * Syntax:\n   *\n   *    math.string(value)\n   *\n   * Examples:\n   *\n   *    math.string(4.2);               // returns string '4.2'\n   *    math.string(math.complex(3, 2); // returns string '3 + 2i'\n   *\n   *    var u = math.unit(5, 'km');\n   *    math.string(u.to('m'));         // returns string '5000 m'\n   *\n   *    math.string([true, false]);     // returns ['true', 'false']\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, number, unit\n   *\n   * @param {* | Array | Matrix | null} [value]  A value to convert to a string\n   * @return {String | Array | Matrix} The created string\n   */\n  math.string = function string (value) {\n    switch (arguments.length) {\n      case 0:\n        return '';\n\n      case 1:\n        if (isNumber(value)) {\n          return number.format(value);\n        }\n\n        if (isCollection(value)) {\n          return collection.deepMap(value, string);\n        }\n\n        if (value === null) {\n          return 'null';\n        }\n\n        return value.toString();\n\n      default:\n        throw new math.error.ArgumentsError('string', arguments.length, 0, 1);\n    }\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/construction/string.js\n ** module id = 53\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isCollection = collection.isCollection,\n      isString = util.string.isString;\n\n  /**\n   * Create a unit. Depending on the passed arguments, the function\n   * will create and return a new math.type.Unit object.\n   * When a matrix is provided, all elements will be converted to units.\n   *\n   * Syntax:\n   *\n   *     math.unit(unit : string)\n   *     math.unit(value : number, unit : string)\n   *\n   * Examples:\n   *\n   *    var a = math.unit(5, 'cm');    // returns Unit 50 mm\n   *    var b = math.unit('23 kg');    // returns Unit 23 kg\n   *    a.to('m');                     // returns Unit 0.05 m\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, number, string\n   *\n   * @param {* | Array | Matrix} args   A number and unit.\n   * @return {Unit | Array | Matrix}    The created unit\n   */\n  math.unit = function unit(args) {\n    switch(arguments.length) {\n      case 1:\n        // parse a string\n        var arg = arguments[0];\n\n        if (arg instanceof Unit) {\n          // create a clone of the unit\n          return arg.clone();\n        }\n\n        if (isString(arg)) {\n          if (Unit.isValuelessUnit(arg)) {\n            return new Unit(null, arg); // a pure unit\n          }\n\n          var u = Unit.parse(arg);        // a unit with value, like '5cm'\n          if (u) {\n            return u;\n          }\n\n          throw new SyntaxError('String \"' + arg + '\" is no valid unit');\n        }\n\n        if (isCollection(args)) {\n          return collection.deepMap(args, unit);\n        }\n\n        throw new TypeError('A string or a number and string expected in function unit');\n\n      case 2:\n        // a number and a unit\n\n        if (arguments[0] instanceof BigNumber) {\n          // convert value to number\n          return new Unit(arguments[0].toNumber(), arguments[1]);\n        }\n        else {\n          return new Unit(arguments[0], arguments[1]);\n        }\n\n      default:\n        throw new math.error.ArgumentsError('unit', arguments.length, 1, 2);\n    }\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/construction/unit.js\n ** module id = 54\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n      _parse = math.expression.parse,\n\n      collection = math.collection,\n\n      isString = util.string.isString,\n      isCollection = collection.isCollection;\n\n  /**\n   * Parse and compile an expression.\n   * Returns a an object with a function `eval([scope])` to evaluate the\n   * compiled expression.\n   *\n   * Syntax:\n   *\n   *     math.compile(expr)                       // returns one node\n   *     math.compile([expr1, expr2, expr3, ...]) // returns an array with nodes\n   *\n   * Examples:\n   *\n   *     var code = math.compile('sqrt(3^2 + 4^2)');\n   *     code.eval(); // 5\n   *\n   *     var scope = {a: 3, b: 4}\n   *     var code = math.compile('a * b'); // 12\n   *     code.eval(scope); // 12\n   *     scope.a = 5;\n   *     code.eval(scope); // 20\n   *\n   *     var nodes = math.compile(['a = 3', 'b = 4', 'a * b']);\n   *     nodes[2].eval(); // 12\n   *\n   * See also:\n   *\n   *    parse, eval\n   *\n   * @param {String | String[] | Matrix} expr\n   *            The expression to be compiled\n   * @return {{eval: Function} | Array.<{eval: Function}>} code\n   *            An object with the compiled expression\n   * @throws {Error}\n   */\n  math.compile = function compile (expr) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('compile', arguments.length, 1);\n    }\n\n    if (isString(expr)) {\n      // evaluate a single expression\n      return _parse(expr).compile(math);\n    }\n    else if (isCollection(expr)) {\n      // evaluate an array or matrix with expressions\n      return collection.deepMap(expr, function (elem) {\n        return _parse(elem).compile(math);\n      });\n    }\n    else {\n      // oops\n      throw new TypeError('String, array, or matrix expected');\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/expression/compile.js\n ** module id = 55\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n      _parse = math.expression.parse,\n\n      collection = math.collection,\n\n      isString = util.string.isString,\n      isCollection = collection.isCollection;\n\n  /**\n   * Evaluate an expression.\n   *\n   * Syntax:\n   *\n   *     math.eval(expr)\n   *     math.eval(expr, scope)\n   *     math.eval([expr1, expr2, expr3, ...])\n   *     math.eval([expr1, expr2, expr3, ...], scope)\n   *\n   * Example:\n   *\n   *     math.eval('(2+3)/4');                // 1.25\n   *     math.eval('sqrt(3^2 + 4^2)');        // 5\n   *     math.eval('sqrt(-4)');               // 2i\n   *     math.eval(['a=3', 'b=4', 'a*b']);,   // [3, 4, 12]\n   *\n   *     var scope = {a:3, b:4};\n   *     math.eval('a * b', scope);           // 12\n   *\n   * See also:\n   *\n   *    parse, compile\n   *\n   * @param {String | String[] | Matrix} expr   The expression to be evaluated\n   * @param {Object} [scope]                    Scope to read/write variables\n   * @return {*} The result of the expression\n   * @throws {Error}\n   */\n  math.eval = function _eval (expr, scope) {\n    if (arguments.length != 1 && arguments.length != 2) {\n      throw new math.error.ArgumentsError('eval', arguments.length, 1, 2);\n    }\n\n    // instantiate a scope\n    scope = scope || {};\n\n    if (isString(expr)) {\n      // evaluate a single expression\n      return _parse(expr)\n          .compile(math)\n          .eval(scope);\n    }\n    else if (isCollection(expr)) {\n      // evaluate an array or matrix with expressions\n      return collection.deepMap(expr, function (elem) {\n        return _parse(elem)\n            .compile(math).eval(scope);\n      });\n    }\n    else {\n      // oops\n      throw new TypeError('String, array, or matrix expected');\n    }\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/expression/eval.js\n ** module id = 56\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Help = require('../../type/Help');\n\n  /**\n   * Retrieve help on a function or data type.\n   * Help files are retrieved from the documentation in math.expression.docs.\n   *\n   * Syntax:\n   *\n   *    math.help(search)\n   *\n   * Examples:\n   *\n   *    console.log(math.help('sin').toString());\n   *    console.log(math.help(math.add).toString());\n   *    console.log(math.help(math.add).toJSON());\n   *\n   * @param {function | string | Object} search   A function or function name\n   *                                              for which to get help\n   * @return {Help} A help object\n   */\n  math.help = function help(search) {\n    if (arguments.length != 1) {\n      throw new SyntaxError('Wrong number of arguments in function help ' +\n          '(' + arguments.length + ' provided, 1 expected)');\n    }\n\n    var text = null;\n    if ((search instanceof String) || (typeof(search) === 'string')) {\n      text = search;\n    }\n    else {\n      var prop;\n      for (prop in math) {\n        // search in functions and constants\n        if (math.hasOwnProperty(prop) && (search === math[prop])) {\n          text = prop;\n          break;\n        }\n      }\n\n      /* TODO: implement help for data types\n      if (!text) {\n        // search data type\n        for (prop in math.type) {\n          if (math.type.hasOwnProperty(prop)) {\n            if (search === math.type[prop]) {\n              text = prop;\n              break;\n            }\n          }\n        }\n      }\n      */\n    }\n\n    var doc = math.expression.docs[text];\n    if (!text) {\n      throw new Error('Cannot find \"' + search + '\" in math.js');\n    } else if (!doc) {\n      throw new Error('No documentation found on \"' + text + '\"');\n    }\n    return new Help(doc);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/expression/help.js\n ** module id = 57\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var _parse = math.expression.parse;\n\n  /**\n   * Parse an expression. Returns a node tree, which can be evaluated by\n   * invoking node.eval();\n   *\n   * Syntax:\n   *\n   *     parse(expr)\n   *     parse(expr, options)\n   *     parse([expr1, expr2, expr3, ...])\n   *     parse([expr1, expr2, expr3, ...], options)\n   *\n   * Example:\n   *\n   *     var node = parse('sqrt(3^2 + 4^2)');\n   *     node.compile(math).eval(); // 5\n   *\n   *     var scope = {a:3, b:4}\n   *     var node = parse('a * b'); // 12\n   *     var code = node.compile(math);\n   *     code.eval(scope); // 12\n   *     scope.a = 5;\n   *     code.eval(scope); // 20\n   *\n   *     var nodes = math.parse(['a = 3', 'b = 4', 'a * b']);\n   *     nodes[2].compile(math).eval(); // 12\n   *\n   * @param {String | String[] | Matrix} expr          Expression to be parsed\n   * @param {{nodes: Object<String, Node>}} [options]  Available options:\n   *                                                   - `nodes` a set of custom nodes\n   * @return {Node | Node[]} node\n   * @throws {Error}\n   */\n  math.parse = function parse (expr, options) {\n    return _parse.apply(_parse, arguments);\n  }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/expression/parse.js\n ** module id = 58\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util.boolean.isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection;\n\n  /**\n   * Calculate the absolute value of a number. For matrices, the function is\n   * evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.abs(x)\n   *\n   * Examples:\n   *\n   *    math.abs(3.5);                // returns Number 3.5\n   *    math.abs(-4.2);               // returns Number 4.2\n   *\n   *    math.abs([3, -5, -1, 0, 2]);  // returns Array [3, 5, 1, 0, 2]\n   *\n   * See also:\n   *\n   *    sign\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x\n   *            A number or matrix for which to get the absolute value\n   * @return {Number | BigNumber | Complex | Array | Matrix}\n   *            Absolute value of `x`\n   */\n  math.abs = function abs(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('abs', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return Math.abs(x);\n    }\n\n    if (isComplex(x)) {\n      var re = Math.abs(x.re);\n      var im = Math.abs(x.im);\n      if (re < 1000 && im < 1000) {\n        return Math.sqrt(re * re + im * im);\n      }\n      else {\n        // prevent overflow for large numbers\n        if (re >= im) {\n          var i = im / re;\n          return re * Math.sqrt(1 + i * i);\n        }\n        else {\n          var j = re / im;\n          return im * Math.sqrt(1 + j * j);\n        }\n      }\n    }\n\n    if (x instanceof BigNumber) {\n      return x.abs();\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since abs(0) = 0\n      return collection.deepMap(x, abs, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return Math.abs(x);\n    }\n\n    throw new math.error.UnsupportedTypeError('abs', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/abs.js\n ** module id = 59\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isBoolean = util['boolean'].isBoolean,\n      isNumber = util.number.isNumber,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Add two values, `x + y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.add(x, y)\n   *\n   * Examples:\n   *\n   *    math.add(2, 3);               // returns Number 5\n   *\n   *    var a = math.complex(2, 3);\n   *    var b = math.complex(-4, 1);\n   *    math.add(a, b);               // returns Complex -2 + 4i\n   *\n   *    math.add([1, 2, 3], 4);       // returns Array [5, 6, 7]\n   *\n   *    var c = math.unit('5 cm');\n   *    var d = math.unit('2.1 mm');\n   *    math.add(c, d);               // returns Unit 52.1 mm\n   *\n   * See also:\n   *\n   *    subtract\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | String | Array | Matrix | null} x First value to add\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | String | Array | Matrix | null} y Second value to add\n   * @return {Number | BigNumber | Complex | Unit | String | Array | Matrix} Sum of `x` and `y`\n   */\n  math.add = function add(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('add', arguments.length, 2);\n    }\n\n    if (isNumber(x)) {\n      if (isNumber(y)) {\n        // number + number\n        return x + y;\n      }\n      else if (isComplex(y)) {\n        // number + complex\n        return new Complex(\n            x + y.re,\n            y.im\n        );\n      }\n    }\n\n    if (isComplex(x)) {\n      if (isComplex(y)) {\n        // complex + complex\n        return new Complex(\n            x.re + y.re,\n            x.im + y.im\n        );\n      }\n      else if (isNumber(y)) {\n        // complex + number\n        return new Complex(\n            x.re + y,\n            x.im\n        );\n      }\n    }\n\n    if (isUnit(x)) {\n      if (isUnit(y)) {\n        if (x.value == null) {\n          throw new Error('Parameter x contains a unit with undefined value');\n        }\n\n        if (y.value == null) {\n          throw new Error('Parameter y contains a unit with undefined value');\n        }\n\n        if (!x.equalBase(y)) {\n          throw new Error('Units do not match');\n        }\n\n        var res = x.clone();\n        res.value += y.value;\n        res.fixPrefix = false;\n        return res;\n      }\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y) || y === null) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        return x.plus(y);\n      }\n\n      // downgrade to Number\n      return add(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x) || x === null) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        return x.plus(y);\n      }\n\n      // downgrade to Number\n      return add(x, y.toNumber());\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, add);\n    }\n\n    if (isString(x) || isString(y)) {\n      return x + y;\n    }\n\n    if (isBoolean(x) || x === null) {\n      return add(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return add(x, +y);\n    }\n\n    throw new math.error.UnsupportedTypeError('add', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/add.js\n ** module id = 60\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isCollection =collection.isCollection,\n      isComplex = Complex.isComplex;\n\n  /**\n   * Round a value towards plus infinity\n   * If `x` is complex, both real and imaginary part are rounded towards plus infinity.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.ceil(x)\n   *\n   * Examples:\n   *\n   *    math.ceil(3.2);               // returns Number 4\n   *    math.ceil(3.8);               // returns Number 4\n   *    math.ceil(-4.2);              // returns Number -4\n   *    math.ceil(-4.7);              // returns Number -4\n   *\n   *    var c = math.complex(3.2, -2.7);\n   *    math.ceil(c);                 // returns Complex 4 - 2i\n   *\n   *    math.ceil([3.2, 3.8, -4.7]);  // returns Array [4, 4, -4]\n   *\n   * See also:\n   *\n   *    floor, fix, round\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x  Number to be rounded\n   * @return {Number | BigNumber | Complex | Array | Matrix} Rounded value\n   */\n  math.ceil = function ceil(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('ceil', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return Math.ceil(x);\n    }\n\n    if (isComplex(x)) {\n      return new Complex (\n          Math.ceil(x.re),\n          Math.ceil(x.im)\n      );\n    }\n\n    if (x instanceof BigNumber) {\n      return x.ceil();\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since ceil(0) = 0\n      return collection.deepMap(x, ceil, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return Math.ceil(x);\n    }\n\n    throw new math.error.UnsupportedTypeError('ceil', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/ceil.js\n ** module id = 61\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection;\n\n  /**\n   * Compute the cube of a value, `x * x * x`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.cube(x)\n   *\n   * Examples:\n   *\n   *    math.cube(2);            // returns Number 8\n   *    math.pow(2, 3);          // returns Number 8\n   *    math.cube(4);            // returns Number 64\n   *    4 * 4 * 4;               // returns Number 64\n   *\n   *    math.cube([1, 2, 3, 4]); // returns Array [1, 8, 27, 64]\n   *\n   * See also:\n   *\n   *    multiply, square, pow\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x  Number for which to calculate the cube\n   * @return {Number | BigNumber | Complex | Array | Matrix} Cube of x\n   */\n  math.cube = function cube(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('cube', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return x * x * x;\n    }\n\n    if (isComplex(x)) {\n      return math.multiply(math.multiply(x, x), x);\n    }\n\n    if (x instanceof BigNumber) {\n      return x.times(x).times(x);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, cube);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return cube(+x);\n    }\n\n    throw new math.error.UnsupportedTypeError('cube', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/cube.js\n ** module id = 62\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function(math) {\n  var util = require('../../util/index');\n\n  var BigNumber = math.type.BigNumber;\n  var Complex = require('../../type/Complex');\n  var Matrix = math.type.Matrix;\n  var Unit = require('../../type/Unit');\n\n  var isNumber = util.number.isNumber;\n  var isBoolean = util['boolean'].isBoolean;\n  var isComplex = Complex.isComplex;\n  var isUnit = Unit.isUnit;\n\n  /**\n   * Divide two scalar values, `x / y`.\n   * This function is meant for internal use: it is used by the public functions\n   * `divide` and `inv`.\n   *\n   * This function does not support collections (Array or Matrix), and does\n   * not validate the number of of inputs.\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | null} x   Numerator\n   * @param  {Number | BigNumber | Boolean | Complex | null} y          Denominator\n   * @return {Number | BigNumber | Complex | Unit}                      Quotient, `x / y`\n   * @private\n   */\n  math._divide = function _divide(x, y) {\n    // TODO: this is a temporary function, to be removed as soon as the library is modularized (i.e. no dependencies on math from the individual functions)\n    if (isNumber(x)) {\n      if (isNumber(y)) {\n        // number / number\n        return x / y;\n      }\n      else if (isComplex(y)) {\n        // number / complex\n        return _divideComplex(new Complex(x, 0), y);\n      }\n    }\n\n    if (isComplex(x)) {\n      if (isComplex(y)) {\n        // complex / complex\n        return _divideComplex(x, y);\n      }\n      else if (isNumber(y)) {\n        // complex / number\n        return _divideComplex(x, new Complex(y, 0));\n      }\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y) || y === null) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        return x.div(y);\n      }\n\n      // downgrade to Number\n      return _divide(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x) || x === null) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        return x.div(y)\n      }\n\n      // downgrade to Number\n      return _divide(x, y.toNumber());\n    }\n\n    if (isUnit(x)) {\n      if (isNumber(y)) {\n        var res = x.clone();\n        res.value = ((res.value === null) ? res._normalize(1) : res.value) / y;\n        return res;\n      }\n    }\n\n    if (isBoolean(x) || x === null) {\n      return _divide(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return _divide(x, +y);\n    }\n\n    throw new math.error.UnsupportedTypeError('divide', math['typeof'](x), math['typeof'](y));\n  };\n\n  /**\n   * Divide two complex numbers. x / y or divide(x, y)\n   * @param {Complex} x\n   * @param {Complex} y\n   * @return {Complex} res\n   * @private\n   */\n  function _divideComplex (x, y) {\n    var den = y.re * y.re + y.im * y.im;\n    if (den != 0) {\n      return new Complex(\n          (x.re * y.re + x.im * y.im) / den,\n          (x.im * y.re - x.re * y.im) / den\n      );\n    }\n    else {\n      // both y.re and y.im are zero\n      return new Complex(\n          (x.re != 0) ? (x.re / 0) : 0,\n          (x.im != 0) ? (x.im / 0) : 0\n      );\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/_divide.js\n ** module id = 63\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function(math) {\n  var collection = math.collection;\n  var isCollection = collection.isCollection;\n\n  /**\n   * Divide two values, `x / y`.\n   * To divide matrices, `x` is multiplied with the inverse of `y`: `x * inv(y)`.\n   *\n   * Syntax:\n   *\n   *    math.divide(x, y)\n   *\n   * Examples:\n   *\n   *    math.divide(2, 3);            // returns Number 0.6666666666666666\n   *\n   *    var a = math.complex(5, 14);\n   *    var b = math.complex(4, 1);\n   *    math.divide(a, b);            // returns Complex 2 + 3i\n   *\n   *    var c = [[7, -6], [13, -4]];\n   *    var d = [[1, 2], [4, 3]];\n   *    math.divide(c, d);            // returns Array [[-9, 4], [-11, 6]]\n   *\n   *    var e = math.unit('18 km');\n   *    math.divide(e, 4.5);          // returns Unit 4 km\n   *\n   * See also:\n   *\n   *    multiply\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x   Numerator\n   * @param  {Number | BigNumber | Boolean | Complex | Array | Matrix | null} y          Denominator\n   * @return {Number | BigNumber | Complex | Unit | Array | Matrix}                      Quotient, `x / y`\n   */\n  math.divide = function(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('divide', arguments.length, 2);\n    }\n\n    if (isCollection(x)) {\n      if (isCollection(y)) {\n        // TODO: implement matrix right division using pseudo inverse\n        // http://www.mathworks.nl/help/matlab/ref/mrdivide.html\n        // http://www.gnu.org/software/octave/doc/interpreter/Arithmetic-Ops.html\n        // http://stackoverflow.com/questions/12263932/how-does-gnu-octave-matrix-division-work-getting-unexpected-behaviour\n        return math.multiply(x, math.inv(y));\n      }\n      else {\n        // matrix / scalar\n        return collection.deepMap2(x, y, math._divide);\n      }\n    }\n\n    if (isCollection(y)) {\n      // TODO: implement matrix right division using pseudo inverse\n      return math.multiply(x, math.inv(y));\n    }\n\n    // divide two scalars\n    return math._divide(x, y);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/divide.js\n ** module id = 64\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var collection = math.collection;\n\n  /**\n   * Divide two matrices element wise. The function accepts both matrices and\n   * scalar values.\n   *\n   * Syntax:\n   *\n   *    math.dotDivide(x, y)\n   *\n   * Examples:\n   *\n   *    math.dotDivide(2, 4);   // returns 0.5\n   *\n   *    a = [[9, 5], [6, 1]];\n   *    b = [[3, 2], [5, 2]];\n   *\n   *    math.dotDivide(a, b);   // returns [[3, 2.5], [1.2, 0.5]]\n   *    math.divide(a, b);      // returns [[1.75, 0.75], [-1.75, 2.25]]\n   *\n   * See also:\n   *\n   *    divide, multiply, dotMultiply\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x Numerator\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} y Denominator\n   * @return {Number | BigNumber | Complex | Unit | Array | Matrix}                    Quotient, `x ./ y`\n   */\n  math.dotDivide = function dotDivide(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('dotDivide', arguments.length, 2);\n    }\n\n    return collection.deepMap2(x, y, math.divide);\n  };\n\n  // TODO: deprecated since version 0.23.0, clean up some day\n  math.edivide = function () {\n    throw new Error('Function edivide is renamed to dotDivide');\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/dotDivide.js\n ** module id = 65\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n      collection = math.collection;\n\n  /**\n   * Multiply two matrices element wise. The function accepts both matrices and\n   * scalar values.\n   *\n   * Syntax:\n   *\n   *    math.dotMultiply(x, y)\n   *\n   * Examples:\n   *\n   *    math.dotMultiply(2, 4); // returns 8\n   *\n   *    a = [[9, 5], [6, 1]];\n   *    b = [[3, 2], [5, 2]];\n   *\n   *    math.dotMultiply(a, b); // returns [[27, 10], [30, 2]]\n   *    math.multiply(a, b);    // returns [[52, 28], [23, 14]]\n   *\n   * See also:\n   *\n   *    multiply, divide, dotDivide\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x Left hand value\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} y Right hand value\n   * @return {Number | BigNumber | Complex | Unit | Array | Matrix}                    Multiplication of `x` and `y`\n   */\n  math.dotMultiply = function dotMultiply(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('dotMultiply', arguments.length, 2);\n    }\n\n    return collection.deepMap2(x, y, math.multiply);\n  };\n\n  // TODO: deprecated since version 0.23.0, clean up some day\n  math.emultiply = function () {\n    throw new Error('Function emultiply is renamed to dotMultiply');\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/dotMultiply.js\n ** module id = 66\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n      collection = math.collection;\n\n  /**\n   * Calculates the power of x to y element wise.\n   *\n   * Syntax:\n   *\n   *    math.dotPow(x, y)\n   *\n   * Examples:\n   *\n   *    math.dotPow(2, 3);            // returns Number 8\n   *\n   *    var a = [[1, 2], [4, 3]];\n   *    math.dotPow(a, 2);            // returns Array [[1, 4], [16, 9]]\n   *    math.pow(a, 2);               // returns Array [[9, 8], [16, 17]]\n   *\n   * See also:\n   *\n   *    pow, sqrt, multiply\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x  The base\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} y  The exponent\n   * @return {Number | BigNumber | Complex | Unit | Array | Matrix}                     The value of `x` to the power `y`\n   */\n  math.dotPow = function dotPow(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('dotPow', arguments.length, 2);\n    }\n\n    return collection.deepMap2(x, y, math.pow);\n  };\n\n  // TODO: deprecated since version 0.23.0, clean up some day\n  math.epow = function () {\n    throw new Error('Function epow is renamed to dotPow');\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/dotPow.js\n ** module id = 67\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Matrix = math.type.Matrix,\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection;\n\n  /**\n   * Calculate the exponent of a value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.exp(x)\n   *\n   * Examples:\n   *\n   *    math.exp(2);                  // returns Number 7.3890560989306495\n   *    math.pow(math.e, 2);          // returns Number 7.3890560989306495\n   *    math.log(math.exp(2));        // returns Number 2\n   *\n   *    math.exp([1, 2, 3]);\n   *    // returns Array [\n   *    //   2.718281828459045,\n   *    //   7.3890560989306495,\n   *    //   20.085536923187668\n   *    // ]\n   *\n   * See also:\n   *\n   *    log, pow\n   *\n   * @param {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x  A number or matrix to exponentiate\n   * @return {Number | BigNumber | Complex | Array | Matrix} Exponent of `x`\n   */\n  math.exp = function exp (x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('exp', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return Math.exp(x);\n    }\n\n    if (isComplex(x)) {\n      var r = Math.exp(x.re);\n      return new Complex(\n          r * Math.cos(x.im),\n          r * Math.sin(x.im)\n      );\n    }\n\n    if (x instanceof BigNumber) {\n      return x.exp();\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, exp);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return Math.exp(x);\n    }\n\n    throw new math.error.UnsupportedTypeError('exp', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/exp.js\n ** module id = 68\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection;\n\n  /**\n   * Round a value towards zero.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.fix(x)\n   *\n   * Examples:\n   *\n   *    math.fix(3.2);                // returns Number 3\n   *    math.fix(3.8);                // returns Number 3\n   *    math.fix(-4.2);               // returns Number -4\n   *    math.fix(-4.7);               // returns Number -4\n   *\n   *    var c = math.complex(3.2, -2.7);\n   *    math.fix(c);                  // returns Complex 3 - 2i\n   *\n   *    math.fix([3.2, 3.8, -4.7]);   // returns Array [3, 3, -4]\n   *\n   * See also:\n   *\n   *    ceil, floor, round\n   *\n   * @param {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x Number to be rounded\n   * @return {Number | BigNumber | Complex | Array | Matrix}            Rounded value\n   */\n  math.fix = function fix(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('fix', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return (x > 0) ? Math.floor(x) : Math.ceil(x);\n    }\n\n    if (isComplex(x)) {\n      return new Complex(\n          (x.re > 0) ? Math.floor(x.re) : Math.ceil(x.re),\n          (x.im > 0) ? Math.floor(x.im) : Math.ceil(x.im)\n      );\n    }\n\n    if (x instanceof BigNumber) {\n      return x.isNegative() ? x.ceil() : x.floor();\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since fix(0) = 0\n      return collection.deepMap(x, fix, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return fix(+x);\n    }\n\n    throw new math.error.UnsupportedTypeError('fix', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/fix.js\n ** module id = 69\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection;\n\n  /**\n   * Round a value towards minus infinity.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.floor(x)\n   *\n   * Examples:\n   *\n   *    math.floor(3.2);              // returns Number 3\n   *    math.floor(3.8);              // returns Number 3\n   *    math.floor(-4.2);             // returns Number -5\n   *    math.floor(-4.7);             // returns Number -5\n   *\n   *    var c = math.complex(3.2, -2.7);\n   *    math.floor(c);                // returns Complex 3 - 3i\n   *\n   *    math.floor([3.2, 3.8, -4.7]); // returns Array [3, 3, -5]\n   *\n   * See also:\n   *\n   *    ceil, fix, round\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x  Number to be rounded\n   * @return {Number | BigNumber | Complex | Array | Matrix} Rounded value\n   */\n  math.floor = function floor(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('floor', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return Math.floor(x);\n    }\n\n    if (isComplex(x)) {\n      return new Complex (\n          Math.floor(x.re),\n          Math.floor(x.im)\n      );\n    }\n\n    if (x instanceof BigNumber) {\n      return x.floor();\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since floor(0) = 0\n      return collection.deepMap(x, floor, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return floor(+x);\n    }\n\n    throw new math.error.UnsupportedTypeError('floor', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/floor.js\n ** module id = 70\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isInteger = util.number.isInteger,\n      isCollection = collection.isCollection;\n\n  /**\n   * Calculate the greatest common divisor for two or more values or arrays.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.gcd(a, b)\n   *    math.gcd(a, b, c, ...)\n   *\n   * Examples:\n   *\n   *    math.gcd(8, 12);              // returns 4\n   *    math.gcd(-4, 6);              // returns 2\n   *    math.gcd(25, 15, -10);        // returns 5\n   *\n   *    math.gcd([8, -4], [12, 6]);   // returns [4, 2]\n   *\n   * See also:\n   *\n   *    lcm, xgcd\n   *\n   * @param {... Number | BigNumber | Boolean | Array | Matrix | null} args  Two or more integer numbers\n   * @return {Number | BigNumber | Array | Matrix}                           The greatest common divisor\n   */\n  math.gcd = function gcd(args) {\n    var a = arguments[0],\n        b = arguments[1],\n        r; // remainder\n\n    if (arguments.length == 2) {\n      // two arguments\n      if (isNumber(a) && isNumber(b)) {\n        if (!isInteger(a) || !isInteger(b)) {\n          throw new Error('Parameters in function gcd must be integer numbers');\n        }\n\n        // http://en.wikipedia.org/wiki/Euclidean_algorithm\n        while (b != 0) {\n          r = a % b;\n          a = b;\n          b = r;\n        }\n        return (a < 0) ? -a : a;\n      }\n\n      // evaluate gcd element wise\n      if (isCollection(a) || isCollection(b)) {\n        return collection.deepMap2(a, b, gcd);\n      }\n\n      if (a instanceof BigNumber) {\n        // try to convert to big number\n        if (isNumber(b)) {\n          b = BigNumber.convert(b);\n        }\n        else if (isBoolean(b) || b === null) {\n          b = new BigNumber(b ? 1 : 0);\n        }\n\n        if (b instanceof BigNumber) {\n          return _bigGcd(a, b);\n        }\n\n        // downgrade to Number\n        return gcd(a.toNumber(), b);\n      }\n      if (b instanceof BigNumber) {\n        // try to convert to big number\n        if (isNumber(a)) {\n          a = BigNumber.convert(a);\n        }\n        else if (isBoolean(a) || a === null) {\n          a = new BigNumber(a ? 1 : 0);\n        }\n\n        if (a instanceof BigNumber) {\n          return _bigGcd(a, b);\n        }\n\n        // downgrade to Number\n        return gcd(a.toNumber(), b);\n      }\n\n      if (isBoolean(a) || a === null) {\n        return gcd(+a, b);\n      }\n      if (isBoolean(b) || b === null) {\n        return gcd(a, +b);\n      }\n\n      throw new math.error.UnsupportedTypeError('gcd', math['typeof'](a), math['typeof'](b));\n    }\n\n    if (arguments.length > 2) {\n      // multiple arguments. Evaluate them iteratively\n      for (var i = 1; i < arguments.length; i++) {\n        a = gcd(a, arguments[i]);\n      }\n      return a;\n    }\n\n    // zero or one argument\n    throw new SyntaxError('Function gcd expects two or more arguments');\n  };\n\n  /**\n   * Calculate gcd for BigNumbers\n   * @param {BigNumber} a\n   * @param {BigNumber} b\n   * @returns {BigNumber} greatest common denominator of a and b\n   * @private\n   */\n  function _bigGcd(a, b) {\n    if (!a.isInt() || !b.isInt()) {\n      throw new Error('Parameters in function gcd must be integer numbers');\n    }\n\n    // http://en.wikipedia.org/wiki/Euclidean_algorithm\n    var zero = new BigNumber(0);\n    while (!b.isZero()) {\n      var r = a.mod(b);\n      a = b;\n      b = r;\n    }\n    return a.lt(zero) ? a.neg() : a;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/gcd.js\n ** module id = 71\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isInteger = util.number.isInteger,\n      isCollection = collection.isCollection;\n\n  /**\n   * Calculate the least common multiple for two or more values or arrays.\n   *\n   * lcm is defined as:\n   *\n   *     lcm(a, b) = abs(a * b) / gcd(a, b)\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.lcm(a, b)\n   *    math.lcm(a, b, c, ...)\n   *\n   * Examples:\n   *\n   *    math.lcm(4, 6);               // returns 12\n   *    math.lcm(6, 21);              // returns 42\n   *    math.lcm(6, 21, 5);           // returns 210\n   *\n   *    math.lcm([4, 6], [6, 21]);    // returns [12, 42]\n   *\n   * See also:\n   *\n   *    gcd, xgcd\n   *\n   * @param {... Number | BigNumber | Boolean | Array | Matrix | null} args  Two or more integer numbers\n   * @return {Number | BigNumber | Array | Matrix}                           The least common multiple\n   */\n  math.lcm = function lcm(args) {\n    var a = arguments[0],\n        b = arguments[1],\n        t;\n\n    if (arguments.length == 2) {\n      // two arguments\n      if (isNumber(a) && isNumber(b)) {\n        if (!isInteger(a) || !isInteger(b)) {\n          throw new Error('Parameters in function lcm must be integer numbers');\n        }\n\n        if (a == 0 || b == 0) {\n          return 0;\n        }\n\n        // http://en.wikipedia.org/wiki/Euclidean_algorithm\n        // evaluate lcm here inline to reduce overhead\n        var prod = a * b;\n        while (b != 0) {\n          t = b;\n          b = a % t;\n          a = t;\n        }\n        return Math.abs(prod / a);\n      }\n\n      // evaluate lcm element wise\n      if (isCollection(a) || isCollection(b)) {\n        return collection.deepMap2(a, b, lcm);\n      }\n\n      if (a instanceof BigNumber) {\n        // try to convert to big number\n        if (isNumber(b)) {\n          b = BigNumber.convert(b);\n        }\n        else if (isBoolean(b) || b === null) {\n          b = new BigNumber(b ? 1 : 0);\n        }\n\n        if (b instanceof BigNumber) {\n          return _bigLcm(a, b);\n        }\n\n        // downgrade to Number\n        return lcm(a.toNumber(), b);\n      }\n      if (b instanceof BigNumber) {\n        // try to convert to big number\n        if (isNumber(a)) {\n          a = BigNumber.convert(a);\n        }\n        else if (isBoolean(a) || a === null) {\n          a = new BigNumber(a ? 1 : 0);\n        }\n\n        if (a instanceof BigNumber) {\n          return _bigLcm(a, b);\n        }\n\n        // downgrade to Number\n        return lcm(a.toNumber(), b);\n      }\n\n      if (isBoolean(a) || a === null) {\n        return lcm(+a, b);\n      }\n      if (isBoolean(b) || b === null) {\n        return lcm(a, +b);\n      }\n\n      throw new math.error.UnsupportedTypeError('lcm', math['typeof'](a), math['typeof'](b));\n    }\n\n    if (arguments.length > 2) {\n      // multiple arguments. Evaluate them iteratively\n      for (var i = 1; i < arguments.length; i++) {\n        a = lcm(a, arguments[i]);\n      }\n      return a;\n    }\n\n    // zero or one argument\n    throw new SyntaxError('Function lcm expects two or more arguments');\n  };\n\n  /**\n   * Calculate lcm for BigNumbers\n   * @param {BigNumber} a\n   * @param {BigNumber} b\n   * @returns {BigNumber} the least common multiple of a and b\n   * @private\n   */\n  function _bigLcm(a, b) {\n    if (!a.isInt() || !b.isInt()) {\n      throw new Error('Parameters in function lcm must be integer numbers');\n    }\n\n    if (a.isZero() || b.isZero()) {\n      return new BigNumber(0);\n    }\n\n    // http://en.wikipedia.org/wiki/Euclidean_algorithm\n    // evaluate lcm here inline to reduce overhead\n    var prod = a.times(b);\n    while (!b.isZero()) {\n      var t = b;\n      b = a.mod(t);\n      a = t;\n    }\n    return prod.div(a).abs();\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/lcm.js\n ** module id = 72\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection;\n\n  /**\n   * Calculate the logarithm of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.log(x)\n   *    math.log(x, base)\n   *\n   * Examples:\n   *\n   *    math.log(3.5);                  // returns 1.252762968495368\n   *    math.exp(math.log(2.4));        // returns 2.4\n   *\n   *    math.pow(10, 4);                // returns 10000\n   *    math.log(10000, 10);            // returns 4\n   *    math.log(10000) / math.log(10); // returns 4\n   *\n   *    math.log(1024, 2);              // returns 10\n   *    math.pow(2, 10);                // returns 1024\n   *\n   * See also:\n   *\n   *    exp, log10\n   *\n   * @param {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x\n   *            Value for which to calculate the logarithm.\n   * @param {Number | BigNumber | Boolean | Complex | null} [base=e]\n   *            Optional base for the logarithm. If not provided, the natural\n   *            logarithm of `x` is calculated.\n   * @return {Number | BigNumber | Complex | Array | Matrix}\n   *            Returns the logarithm of `x`\n   */\n  math.log = function log(x, base) {\n    if (arguments.length == 1) {\n      // calculate natural logarithm, log(x)\n      if (isNumber(x)) {\n        if (x >= 0) {\n          return Math.log(x);\n        }\n        else {\n          // negative value -> complex value computation\n          return log(new Complex(x, 0));\n        }\n      }\n\n      if (isComplex(x)) {\n        return new Complex (\n            Math.log(Math.sqrt(x.re * x.re + x.im * x.im)),\n            Math.atan2(x.im, x.re)\n        );\n      }\n\n      if (x instanceof BigNumber) {\n        if (x.isNegative()) {\n          // negative value -> downgrade to number to do complex value computation\n          return log(x.toNumber());\n        }\n        else {\n          return x.ln();\n        }\n      }\n\n      if (isCollection(x)) {\n        return collection.deepMap(x, log);\n      }\n\n      if (isBoolean(x) || x === null) {\n        return log(+x);\n      }\n\n      throw new math.error.UnsupportedTypeError('log', math['typeof'](x));\n    }\n    else if (arguments.length == 2) {\n      // calculate logarithm for a specified base, log(x, base)\n      return math.divide(log(x), log(base));\n    }\n    else {\n      throw new math.error.ArgumentsError('log', arguments.length, 1, 2);\n    }\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/log.js\n ** module id = 73\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection;\n\n  /**\n   * Calculate the 10-base of a value. This is the same as calculating `log(x, 10)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.log10(x)\n   *\n   * Examples:\n   *\n   *    math.log10(0.00001);            // returns -5\n   *    math.log10(10000);              // returns 4\n   *    math.log(10000) / math.log(10); // returns 4\n   *    math.pow(10, 4);                // returns 10000\n   *\n   * See also:\n   *\n   *    exp, log\n   *\n   * @param {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x\n   *            Value for which to calculate the logarithm.\n   * @return {Number | BigNumber | Complex | Array | Matrix}\n   *            Returns the 10-base logarithm of `x`\n   */\n  math.log10 = function log10(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('log10', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      if (x >= 0) {\n        return Math.log(x) / Math.LN10;\n      }\n      else {\n        // negative value -> complex value computation\n        return log10(new Complex(x, 0));\n      }\n    }\n\n    if (x instanceof BigNumber) {\n      if (x.isNegative()) {\n        // negative value -> downgrade to number to do complex value computation\n        return log10(x.toNumber());\n      }\n      else {\n        return x.log();\n      }\n    }\n\n    if (isComplex(x)) {\n      return new Complex (\n          Math.log(Math.sqrt(x.re * x.re + x.im * x.im)) / Math.LN10,\n          Math.atan2(x.im, x.re) / Math.LN10\n      );\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, log10);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return log10(+x);\n    }\n\n    throw new math.error.UnsupportedTypeError('log10', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/log10.js\n ** module id = 74\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isCollection = collection.isCollection;\n\n  /**\n   * Calculates the modulus, the remainder of an integer division.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * The modulus is defined as:\n   *\n   *     x - y * floor(x / y)\n   *\n   * See http://en.wikipedia.org/wiki/Modulo_operation.\n   *\n   * Syntax:\n   *\n   *    math.mod(x, y)\n   *\n   * Examples:\n   *\n   *    math.mod(8, 3);                // returns 2\n   *    math.mod(11, 2);               // returns 1\n   *\n   *    function isOdd(x) {\n   *      return math.mod(x, 2) != 0;\n   *    }\n   *\n   *    isOdd(2);                      // returns false\n   *    isOdd(3);                      // returns true\n   *\n   * See also:\n   *\n   *    divide\n   *\n   * @param  {Number | BigNumber | Boolean | Array | Matrix | null} x Dividend\n   * @param  {Number | BigNumber | Boolean | Array | Matrix | null} y Divisor\n   * @return {Number | BigNumber | Array | Matrix} Returns the remainder of `x` divided by `y`.\n   */\n  math.mod = function mod(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('mod', arguments.length, 2);\n    }\n\n    // see http://functions.wolfram.com/IntegerFunctions/Mod/\n\n    if (isNumber(x)) {\n      if (isNumber(y)) {\n        // number % number\n        return _mod(x, y);\n      }\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y) || y === null) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        return y.isZero() ? x : x.mod(y);\n      }\n\n      // downgrade x to Number\n      return mod(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x) || x === null) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        return y.isZero() ? x : x.mod(y);\n      }\n\n      // downgrade y to Number\n      return mod(x, y.toNumber());\n    }\n\n    // TODO: implement mod for complex values\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, mod);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return mod(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return mod(x, +y);\n    }\n\n    throw new math.error.UnsupportedTypeError('mod', math['typeof'](x), math['typeof'](y));\n  };\n\n  /**\n   * Calculate the modulus of two numbers\n   * @param {Number} x\n   * @param {Number} y\n   * @returns {number} res\n   * @private\n   */\n  function _mod(x, y) {\n    if (y > 0) {\n      // We don't use JavaScript's % operator here as this doesn't work\n      // correctly for x < 0 and x == 0\n      // see http://en.wikipedia.org/wiki/Modulo_operation\n      return x - y * Math.floor(x / y);\n    }\n    else if (y == 0) {\n      return x;\n    }\n    else { // y < 0\n      // TODO: implement mod for a negative divisor\n      throw new Error('Cannot calculate mod for a negative divisor');\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/mod.js\n ** module id = 75\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function(math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Matrix = math.type.Matrix,\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isArray = Array.isArray,\n      isUnit = Unit.isUnit;\n\n  /**\n   * Multiply two values, `x * y`. The result is squeezed.\n   * For matrices, the matrix product is calculated.\n   *\n   * Syntax:\n   *\n   *    math.multiply(x, y)\n   *\n   * Examples:\n   *\n   *    math.multiply(4, 5.2);        // returns Number 20.8\n   *\n   *    var a = math.complex(2, 3);\n   *    var b = math.complex(4, 1);\n   *    math.multiply(a, b);          // returns Complex 5 + 14i\n   *\n   *    var c = [[1, 2], [4, 3]];\n   *    var d = [[1, 2, 3], [3, -4, 7]];\n   *    math.multiply(c, d);          // returns Array [[7, -6, 17], [13, -4, 33]]\n   *\n   *    var e = math.unit('2.1 km');\n   *    math.multiply(3, e);          // returns Unit 6.3 km\n   *\n   * See also:\n   *\n   *    divide\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x First value to multiply\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} y Second value to multiply\n   * @return {Number | BigNumber | Complex | Unit | Array | Matrix} Multiplication of `x` and `y`\n   */\n  math.multiply = function multiply(x, y) {\n    var res;\n\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('multiply', arguments.length, 2);\n    }\n\n    if (isNumber(x)) {\n      if (isNumber(y)) {\n        // number * number\n        return x * y;\n      }\n      else if (isComplex(y)) {\n        // number * complex\n        return _multiplyComplex(new Complex(x, 0), y);\n      }\n      else if (isUnit(y)) {\n        res = y.clone();\n        res.value = (res.value === null) ? res._normalize(x) : (res.value * x);\n        return res;\n      }\n    }\n\n    if (isComplex(x)) {\n      if (isNumber(y)) {\n        // complex * number\n        return _multiplyComplex(x, new Complex(y, 0));\n      }\n      else if (isComplex(y)) {\n        // complex * complex\n        return _multiplyComplex(x, y);\n      }\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y) || y === null) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        return x.times(y);\n      }\n\n      // downgrade to Number\n      return multiply(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x) || x === null) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        return x.times(y);\n      }\n\n      // downgrade to Number\n      return multiply(x, y.toNumber());\n    }\n\n    if (isUnit(x)) {\n      if (isNumber(y)) {\n        res = x.clone();\n        res.value = (res.value === null) ? res._normalize(y) : (res.value * y);\n        return res;\n      }\n    }\n\n    if (isArray(x)) {\n      // create dense matrix from array\n      var m = math.matrix(x);\n      // use optimized operations in matrix\n      var r = m.multiply(y);\n      // check result\n      if (r instanceof Matrix) {\n        // check we need to return a matrix\n        if (y instanceof Matrix)\n          return r;\n        // output should be an array\n        return r.valueOf();\n      }\n      // scalar\n      return r;\n    }\n\n    if (x instanceof Matrix) {\n      // use optimized matrix implementation\n      return x.multiply(y);\n    }\n\n    if (isArray(y)) {\n      // scalar * array\n      return collection.deepMap2(x, y, multiply);\n    }\n    else if (y instanceof Matrix) {\n      // adapter function\n      var mf = function (v) {\n        return multiply(x, v);\n      };\n      // scalar * matrix\n      return collection.deepMap(y, mf, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return multiply(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return multiply(x, +y);\n    }\n\n    throw new math.error.UnsupportedTypeError('multiply', math['typeof'](x), math['typeof'](y));\n  };\n\n  /**\n   * Multiply two complex numbers. x * y or multiply(x, y)\n   * @param {Complex} x\n   * @param {Complex} y\n   * @return {Complex | Number} res\n   * @private\n   */\n  function _multiplyComplex (x, y) {\n    // Note: we test whether x or y are pure real or pure complex,\n    // to prevent unnecessary NaN values. For example, Infinity*i should\n    // result in Infinity*i, and not in NaN+Infinity*i\n\n    if (x.im == 0) {\n      // x is pure real\n      if (y.im == 0) {\n        // y is pure real\n        return new Complex(x.re * y.re, 0);\n      }\n      else if (y.re == 0) {\n        // y is pure complex\n        return new Complex(\n            0,\n            x.re * y.im\n        );\n      }\n      else {\n        // y has a real and complex part\n        return new Complex(\n            x.re * y.re,\n            x.re * y.im\n        );\n      }\n    }\n    else if (x.re == 0) {\n      // x is pure complex\n      if (y.im == 0) {\n        // y is pure real\n        return new Complex(\n            0,\n            x.im * y.re\n        );\n      }\n      else if (y.re == 0) {\n        // y is pure complex\n        return new Complex(-x.im * y.im, 0);\n      }\n      else {\n        // y has a real and complex part\n        return new Complex(\n            -x.im * y.im,\n            x.im * y.re\n        );\n      }\n    }\n    else {\n      // x has a real and complex part\n      if (y.im == 0) {\n        // y is pure real\n        return new Complex(\n            x.re * y.re,\n            x.im * y.re\n        );\n      }\n      else if (y.re == 0) {\n        // y is pure complex\n        return new Complex(\n            -x.im * y.im,\n            x.re * y.im\n        );\n      }\n      else {\n        // y has a real and complex part\n        return new Complex(\n            x.re * y.re - x.im * y.im,\n            x.re * y.im + x.im * y.re\n        );\n      }\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/multiply.js\n ** module id = 76\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n    BigNumber = math.type.BigNumber,\n    Complex = require('../../type/Complex'),\n    Matrix = math.type.Matrix,\n\n    isNumber = util.number.isNumber,\n    isBoolean = util['boolean'].isBoolean,\n    isComplex = Complex.isComplex,\n    isArray = Array.isArray;\n\n  /**\n   * Calculate the norm of a number, vector or matrix.\n   *\n   * The second parameter p is optional. If not provided, it defaults to 2.\n   *\n   * Syntax:\n   *\n   *    math.norm(x)\n   *    math.norm(x, p)\n   *\n   * Examples:\n   *\n   *    math.abs(-3.5);                         // returns 3.5\n   *    math.norm(-3.5);                        // returns 3.5\n   *\n   *    math.norm(math.complex(3, -4));         // returns 5\n   *\n   *    math.norm([1, 2, -3], Infinity);        // returns 3\n   *    math.norm([1, 2, -3], -Infinity);       // returns 1\n   *\n   *    math.norm([3, 4], 2);                   // returns 5\n   *\n   *    math.norm([[1, 2], [3, 4]], 1)          // returns 6\n   *    math.norm([[1, 2], [3, 4]], 'inf');     // returns 7\n   *    math.norm([[1, 2], [3, 4]], 'fro');     // returns 5.477225575051661\n   *\n   * See also:\n   *\n   *    abs\n   *\n   * @param  {Number | BigNumber | Complex | Boolean | Array | Matrix | null} x\n   *            Value for which to calculate the norm\n   * @param  {Number | String} [p=2]\n   *            Vector space.\n   *            Supported numbers include Infinity and -Infinity.\n   *            Supported strings are: 'inf', '-inf', and 'fro' (The Frobenius norm)\n   * @return {Number} the p-norm\n   */\n  math.norm = function norm(x, p) {\n    if (arguments.length < 1 || arguments.length > 2) {\n      throw new math.error.ArgumentsError('abs', arguments.length, 1, 2);\n    }\n\n    if (isNumber(x)) {\n      // norm(x) = abs(x)\n      return Math.abs(x);\n    }\n\n    if (isComplex(x)) {\n      // do not compute sqrt(re * re + im * im) since it will overflow with big numbers!\n      var re = Math.abs(x.re);\n      var im = Math.abs(x.im);\n      if (re >= im) {\n        var i = im / re;\n        return re * Math.sqrt(1 + i * i);\n      }\n      var j = re / im;\n      return im * Math.sqrt(1 + j * j);\n    }\n\n    if (x instanceof BigNumber) {\n      // norm(x) = abs(x)\n      return x.abs();\n    }\n\n    if (isBoolean(x) || x === null) {\n      // norm(x) = abs(x)\n      return Math.abs(x);\n    }\n\n    if (isArray(x)) {\n      // use matrix optimized operations\n      return norm(math.matrix(x), p);\n    }\n    \n    if (x instanceof Matrix) {\n      // size\n      var sizeX = x.size();\n      // missing p\n      if (p == null)\n        p = 2;\n      // check it is a Vector\n      if (sizeX.length == 1) {\n        // check p\n        if (p === Number.POSITIVE_INFINITY || p === 'inf') {\n          // norm(x, Infinity) = max(abs(x))\n          var n;\n          x.forEach(\n            function (value) {\n              var v = math.abs(value);\n              if (!n || math.larger(v, n))\n                n = v;\n            },\n            true);\n          return n;\n        }\n        if (p === Number.NEGATIVE_INFINITY || p === '-inf') {\n          // norm(x, -Infinity) = min(abs(x))\n          var n;\n          x.forEach(\n            function (value) {\n              var v = math.abs(value);\n              if (!n || math.smaller(v, n))\n                n = v;\n            },\n            true);\n          return n;\n        }\n        if (p === 'fro')\n            return norm(x);\n        if (isNumber(p) && !isNaN(p)) {\n          // check p != 0\n          if (!math.equal(p, 0)) {\n            // norm(x, p) = sum(abs(xi) ^ p) ^ 1/p\n            var n = 0;\n            x.forEach(\n              function (value) {\n                n = math.add(math.pow(math.abs(value), p), n);\n              },\n              true);\n            return math.pow(n, 1 / p);\n          }\n          return Number.POSITIVE_INFINITY;\n        }\n        // invalid parameter value\n        throw new Error('Unsupported parameter value');\n      }\n      else if (sizeX.length == 2) {\n        // check p\n        if (p == 1) {\n          // norm(x) = the largest column sum\n          var c = [];\n          x.forEach(\n            function (value, index) {\n              var j = index[1];\n              c[j] = math.add(c[j] || 0, math.abs(value));\n            },\n            true);\n          return math.max(c);\n        }\n        if (p == Number.POSITIVE_INFINITY || p === 'inf') {\n          // norm(x) = the largest row sum\n          var r = [];\n          x.forEach(\n            function (value, index) {\n              var i = index[0];\n              r[i] = math.add(r[i] || 0, math.abs(value));\n            },\n            true);\n          return math.max(r);\n        }\n        if (p === 'fro') {\n          // norm(x) = sqrt(sum(diag(x'x)))\n          return math.sqrt(x.transpose().multiply(x).trace());\n        }\n        if (p == 2) {\n          // not implemented\n          throw new Error('Unsupported parameter value, missing implementation of matrix singular value decomposition');\n        }\n        // invalid parameter value\n        throw new Error('Unsupported parameter value');\n      }\n    }\n\n    throw new math.error.UnsupportedTypeError('norm', x);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/norm.js\n ** module id = 77\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index');\n\n  var BigNumber = math.type.BigNumber;\n  var collection = math.collection;\n\n  var isNumber = util.number.isNumber;\n  var isBoolean = util['boolean'].isBoolean;\n  var isCollection = collection.isCollection;\n\n  /**\n   * Calculate the nth root of a value.\n   * The principal nth root of a positive real number A, is the positive real\n   * solution of the equation\n   *\n   *     x^root = A\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *     math.nthRoot(a, root)\n   *\n   * Examples:\n   *\n   *     math.nthRoot(9, 2);    // returns 3, as 3^2 == 9\n   *     math.sqrt(9);          // returns 3, as 3^2 == 9\n   *     math.nthRoot(64, 3);   // returns 4, as 4^3 == 64\n   *\n   * See also:\n   *\n   *     sqrt, pow\n   *\n   * @param {Number | BigNumber | Boolean | Array | Matrix | null} a\n   *              Value for which to calculate the nth root\n   * @param {Number | BigNumber | Boolean | null} [root=2]    The root.\n   * @return {Number | Complex | Array | Matrix} Returns the nth root of `a`\n   */\n  math.nthRoot = function nthRoot (a, root) {\n    if (arguments.length != 1 && arguments.length != 2) {\n      throw new math.error.ArgumentsError('nthRoot', arguments.length, 1, 2);\n    }\n\n    switch(arguments.length) {\n      case 1:\n        if (isNumber(a)) {\n          return _nthRoot(a);\n        }\n        else if (a instanceof BigNumber) {\n          return _nthRootBig(a);\n        }\n        else if (isCollection(a)) {\n          return collection.deepMap(x, nthRoot);\n        }\n\n        if (isBoolean(a) || a === null) {\n          return nthRoot(+a);\n        }\n\n        break;\n\n      case 2:\n        if (isNumber(a)) {\n          if (isNumber(root)) {\n            return _nthRoot(a, root);\n          }\n          else if (root instanceof BigNumber) {\n            // try to convert to bignumber\n            a = BigNumber.convert(a);\n\n            if (a instanceof BigNumber) {\n              return _nthRootBig(a, root);\n            }\n            else {\n              // downgrade to number\n              return _nthRoot(a, root.toNumber());\n            }\n          }\n        }\n        else if (a instanceof BigNumber) {\n          // try to convert to bignumber\n          if (isNumber(root)) {\n            root = BigNumber.convert(root);\n          }\n\n          if (root instanceof BigNumber) {\n            return _nthRootBig(a, root);\n          }\n          else {\n            // downgrade to number\n            return _nthRoot(a.toNumber(), root);\n          }\n        }\n        else if (isCollection(a) && !isCollection(root)) {\n          return collection.deepMap2(a, root, nthRoot);\n        }\n\n        if (isBoolean(a) || a === null) {\n          return nthRoot(+a, root);\n        }\n        if (isBoolean(root) || root === null) {\n          return nthRoot(a, +root);\n        }\n\n        break;\n\n      default:\n        throw new math.error.ArgumentsError('nthRoot', arguments.length, 1, 2);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return arguments.length == 2 ? nthRoot(+x, n) : nthRoot(+x);\n    }\n\n\n    throw new math.error.UnsupportedTypeError('nthRoot', math['typeof'](a), math['typeof'](root));\n  };\n\n  /**\n   * Calculate the nth root of a, solve x^root == a\n   * http://rosettacode.org/wiki/Nth_root#JavaScript\n   * @param {number} a\n   * @param {number} [root=2]\n   * @private\n   */\n  function _nthRoot(a, root) {\n    var _root = (root != undefined) ? root : 2;\n    var inv = _root < 0;\n    if (inv) _root = -_root;\n\n    if (_root == 0) throw new Error('Root must be non-zero');\n    if (a < 0 && (Math.abs(_root) % 2 != 1)) throw new Error('Root must be odd when a is negative.');\n\n    // edge cases zero and infinity\n    if (a == 0) return 0;\n    if (!Number.isFinite(a)) {\n      return inv ? 0 : a;\n    }\n\n    var epsilon = 1e-16;\n    var x = 1; // Initial guess\n    var i = 0;\n    var iMax = 100;\n    do {\n      var delta = (a / Math.pow(x, _root - 1) - x) / _root;\n      x = x + delta;\n      i++;\n    }\n    while (Math.abs(delta) > epsilon && i < iMax);\n\n    return inv ? 1 / x : x;\n  }\n\n  /**\n   * Calculate the nth root of a for BigNumbers, solve x^root == a\n   * http://rosettacode.org/wiki/Nth_root#JavaScript\n   * @param {BigNumber} a\n   * @param {BigNumber} [root=2]\n   * @private\n   */\n  function _nthRootBig(a, root) {\n    var _root = (root != undefined) ? root : new BigNumber(2);\n    var zero = new BigNumber(0);\n    var one = new BigNumber(1);\n    var inv = _root.isNegative();\n    if (inv) _root = _root.negated();\n\n    if (_root.isZero()) throw new Error('Root must be non-zero');\n    if (a.isNegative() && !_root.abs().mod(2).equals(1)) throw new Error('Root must be odd when a is negative.');\n\n    // edge cases zero and infinity\n    if (a.isZero()) return zero;\n    if (!a.isFinite())\n    {\n      return inv ? zero : a;\n    }\n\n    var x = one; // Initial guess\n    var i = 0;\n    var iMax = 100;\n    do {\n      var xPrev = x;\n      var delta = a.div(x.pow(_root.minus(1))).minus(x).div(_root);\n      x = x.plus(delta);\n      i++;\n    }\n    while (!x.equals(xPrev) && i < iMax);\n\n    return inv ? one.div(x) : x;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/nthRoot.js\n ** module id = 78\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Matrix = math.type.Matrix,\n      \n      array = util.array,\n      isNumber = util.number.isNumber,\n      isBoolean = util.boolean.isBoolean,\n      isArray = Array.isArray,\n      isInteger = util.number.isInteger,\n      isComplex = Complex.isComplex;\n\n  /**\n   * Calculates the power of x to y, `x ^ y`.\n   * Matrix exponentiation is supported for square matrices `x`, and positive\n   * integer exponents `y`.\n   *\n   * Syntax:\n   *\n   *    math.pow(x, y)\n   *\n   * Examples:\n   *\n   *    math.pow(2, 3);               // returns Number 8\n   *\n   *    var a = math.complex(2, 3);\n   *    math.pow(a, 2)                // returns Complex -5 + 12i\n   *\n   *    var b = [[1, 2], [4, 3]];\n   *    math.pow(b, 2);               // returns Array [[9, 8], [16, 17]]\n   *\n   * See also:\n   *\n   *    multiply, sqrt\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x  The base\n   * @param  {Number | BigNumber | Boolean | Complex | null} y                   The exponent\n   * @return {Number | BigNumber | Complex | Array | Matrix} The value of `x` to the power `y`\n   */\n  math.pow = function pow(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('pow', arguments.length, 2);\n    }\n\n    if (isNumber(x)) {\n      if (isNumber(y)) {\n        if (isInteger(y) || x >= 0) {\n          // real value computation\n          return Math.pow(x, y);\n        }\n        else {\n          return powComplex(new Complex(x, 0), new Complex(y, 0));\n        }\n      }\n      else if (isComplex(y)) {\n        return powComplex(new Complex(x, 0), y);\n      }\n    }\n\n    if (isComplex(x)) {\n      if (isNumber(y)) {\n        return powComplex(x, new Complex(y, 0));\n      }\n      else if (isComplex(y)) {\n        return powComplex(x, y);\n      }\n    }\n\n    if (x instanceof BigNumber) {\n      // try to upgrade y to to bignumber\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y) || y === null) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        if (y.isInteger() || !x.isNegative()) {\n          return x.pow(y);\n        }\n        else {\n          // downgrade to number to do complex valued computation\n          return pow(x.toNumber(), y.toNumber());\n        }\n      }\n      else {\n        // failed to upgrade y to bignumber, lets downgrade x to number\n        return pow(x.toNumber(), y);\n      }\n    }\n\n    if (y instanceof BigNumber) {\n      // try to convert x to bignumber\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x) || x === null) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        if (y.isInteger() && !x.isNegative()) {\n          return x.pow(y);\n        }\n        else {\n          // downgrade to number to do complex valued computation\n          return pow(x.toNumber(), y.toNumber());\n        }\n      }\n      else {\n        // failed to upgrade x to bignumber, lets downgrade y to number\n        return pow(x, y.toNumber());\n      }\n    }\n\n    if (isArray(x)) {\n      if (!isNumber(y) || !isInteger(y) || y < 0) {\n        throw new TypeError('For A^b, b must be a positive integer ' +\n            '(value is ' + y + ')');\n      }\n      // verify that A is a 2 dimensional square matrix\n      var s = array.size(x);\n      if (s.length != 2) {\n        throw new Error('For A^b, A must be 2 dimensional ' +\n            '(A has ' + s.length + ' dimensions)');\n      }\n      if (s[0] != s[1]) {\n        throw new Error('For A^b, A must be square ' +\n            '(size is ' + s[0] + 'x' + s[1] + ')');\n      }\n\n      // compute power of matrix\n      var res = math.eye(s[0]).valueOf();\n      var px = x;\n      while (y >= 1) {\n        if ((y & 1) == 1) {\n          res = math.multiply(px, res);\n        }\n        y >>= 1;\n        px = math.multiply(px, px);\n      }\n      return res;\n    }\n    else if (x instanceof Matrix) {\n      return math.matrix(pow(x.valueOf(), y));\n    }\n\n    if (isBoolean(x) || x === null) {\n      return pow(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return pow(x, +y);\n    }\n\n    throw new math.error.UnsupportedTypeError('pow', math['typeof'](x), math['typeof'](y));\n  };\n\n  /**\n   * Calculates the power of x to y, x^y, for two complex numbers.\n   * @param {Complex} x\n   * @param {Complex} y\n   * @return {Complex} res\n   * @private\n   */\n  function powComplex (x, y) {\n    // complex computation\n    // x^y = exp(log(x)*y) = exp((abs(x)+i*arg(x))*y)\n    var temp1 = math.log(x);\n    var temp2 = math.multiply(temp1, y);\n    return math.exp(temp2);\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/pow.js\n ** module id = 79\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isInteger = util.number.isInteger,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection,\n      toFixed = util.number.toFixed;\n\n  /**\n   * Round a value towards the nearest integer.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.round(x)\n   *    math.round(x, n)\n   *\n   * Examples:\n   *\n   *    math.round(3.2);              // returns Number 3\n   *    math.round(3.8);              // returns Number 4\n   *    math.round(-4.2);             // returns Number -4\n   *    math.round(-4.7);             // returns Number -5\n   *    math.round(math.pi, 3);       // returns Number 3.142\n   *    math.round(123.45678, 2);     // returns Number 123.46\n   *\n   *    var c = math.complex(3.2, -2.7);\n   *    math.round(c);                // returns Complex 3 - 3i\n   *\n   *    math.round([3.2, 3.8, -4.7]); // returns Array [3, 4, -5]\n   *\n   * See also:\n   *\n   *    ceil, fix, floor\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x   Number to be rounded\n   * @param  {Number | BigNumber | Boolean | Array | null} [n=0]                 Number of decimals\n   * @return {Number | BigNumber | Complex | Array | Matrix} Rounded value\n   */\n  math.round = function round(x, n) {\n    if (arguments.length != 1 && arguments.length != 2) {\n      throw new math.error.ArgumentsError('round', arguments.length, 1, 2);\n    }\n\n    if (n == undefined) {\n      // round (x)\n      if (isNumber(x)) {\n        return Math.round(x);\n      }\n\n      if (isComplex(x)) {\n        return new Complex (\n            Math.round(x.re),\n            Math.round(x.im)\n        );\n      }\n\n      if (x instanceof BigNumber) {\n        return x.toDecimalPlaces(0);\n      }\n\n      if (isCollection(x)) {\n        return collection.deepMap(x, round);\n      }\n\n      if (isBoolean(x) || x === null) {\n        return Math.round(x);\n      }\n\n      throw new math.error.UnsupportedTypeError('round', math['typeof'](x));\n    }\n    else {\n      // round (x, n)\n      if (!isNumber(n) || !isInteger(n)) {\n        if (n instanceof BigNumber) {\n          n = parseFloat(n.valueOf());\n        }\n        else if (isBoolean(n) || x === null) {\n          return round(x, +n);\n        }\n        else {\n          throw new TypeError('Number of decimals in function round must be an integer');\n        }\n      }\n      if (n < 0 || n > 15) {\n        throw new Error ('Number of decimals in function round must be in te range of 0-15');\n      }\n\n      if (isNumber(x)) {\n        return roundNumber(x, n);\n      }\n\n      if (isComplex(x)) {\n        return new Complex (\n            roundNumber(x.re, n),\n            roundNumber(x.im, n)\n        );\n      }\n\n      if (x instanceof BigNumber) {\n        return x.toDecimalPlaces(n);\n      }\n\n      if (isCollection(x) || isCollection(n)) {\n        return collection.deepMap2(x, n, round);\n      }\n\n      if (isBoolean(x) || x === null) {\n        return round(+x, n);\n      }\n\n      throw new math.error.UnsupportedTypeError('round', math['typeof'](x), math['typeof'](n));\n    }\n  };\n\n  /**\n   * round a number to the given number of decimals, or to zero if decimals is\n   * not provided\n   * @param {Number} value\n   * @param {Number} decimals       number of decimals, between 0 and 15 (0 by default)\n   * @return {Number} roundedValue\n   */\n  function roundNumber (value, decimals) {\n    return parseFloat(toFixed(value, decimals));\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/round.js\n ** module id = 80\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      number = util.number,\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection;\n\n  /**\n   * Compute the sign of a value. The sign of a value x is:\n   *\n   * -  1 when x > 1\n   * - -1 when x < 0\n   * -  0 when x == 0\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sign(x)\n   *\n   * Examples:\n   *\n   *    math.sign(3.5);               // returns 1\n   *    math.sign(-4.2);              // returns -1\n   *    math.sign(0);                 // returns 0\n   *\n   *    math.sign([3, 5, -2, 0, 2]);  // returns [1, 1, -1, 0, 1]\n   *\n   * See also:\n   *\n   *    abs\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x\n   *            The number for which to determine the sign\n   * @return {Number | BigNumber | Complex | Array | Matrix}e\n   *            The sign of `x`\n   */\n  math.sign = function sign(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('sign', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return number.sign(x);\n    }\n\n    if (isComplex(x)) {\n      var abs = Math.sqrt(x.re * x.re + x.im * x.im);\n      return new Complex(x.re / abs, x.im / abs);\n    }\n\n    if (x instanceof BigNumber) {\n      return new BigNumber(x.cmp(0));\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since sign(0) = 0\n      return collection.deepMap(x, sign, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return number.sign(x);\n    }\n\n    throw new math.error.UnsupportedTypeError('sign', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/sign.js\n ** module id = 81\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection;\n\n  /**\n   * Calculate the square root of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sqrt(x)\n   *\n   * Examples:\n   *\n   *    math.sqrt(25);                // returns 5\n   *    math.square(5);               // returns 25\n   *    math.sqrt(-4);                // returns Complex -2i\n   *\n   * See also:\n   *\n   *    square, multiply\n   *\n   * @param {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x\n   *            Value for which to calculate the square root.\n   * @return {Number | BigNumber | Complex | Array | Matrix}\n   *            Returns the square root of `x`\n   */\n  math.sqrt = function sqrt (x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('sqrt', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      if (x >= 0) {\n        return Math.sqrt(x);\n      }\n      else {\n        return sqrt(new Complex(x, 0));\n      }\n    }\n\n    if (isComplex(x)) {\n      var r = Math.sqrt(x.re * x.re + x.im * x.im);\n\n      var re, im;\n\n      if (x.re >= 0) {\n        re = 0.5 * Math.sqrt(2.0 * (r + x.re));\n      }\n      else {\n        re = Math.abs(x.im) / Math.sqrt(2 * (r - x.re));\n      }\n\n      if (x.re <= 0) {\n        im = 0.5 * Math.sqrt(2.0 * (r - x.re));\n      }\n      else {\n        im = Math.abs(x.im) / Math.sqrt(2 * (r + x.re));\n      }\n\n      if (x.im >= 0) {\n        return new Complex(re, im);\n      }\n      else {\n        return new Complex(re, -im);\n      }\n    }\n\n    if (x instanceof BigNumber) {\n      if (x.isNegative()) {\n        // negative value -> downgrade to number to do complex value computation\n        return sqrt(x.toNumber());\n      }\n      else {\n        return x.sqrt();\n      }\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since sqrt(0) = 0\n      return collection.deepMap(x, sqrt, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return sqrt(+x);\n    }\n\n    throw new math.error.UnsupportedTypeError('sqrt', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/sqrt.js\n ** module id = 82\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection;\n\n  /**\n   * Compute the square of a value, `x * x`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.square(x)\n   *\n   * Examples:\n   *\n   *    math.square(2);           // returns Number 4\n   *    math.square(3);           // returns Number 9\n   *    math.pow(3, 2);           // returns Number 9\n   *    math.multiply(3, 3);      // returns Number 9\n   *\n   *    math.square([1, 2, 3, 4]);  // returns Array [1, 4, 9, 16]\n   *\n   * See also:\n   *\n   *    multiply, cube, sqrt, pow\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x\n   *            Number for which to calculate the square\n   * @return {Number | BigNumber | Complex | Array | Matrix}\n   *            Squared value\n   */\n  math.square = function square(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('square', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return x * x;\n    }\n\n    if (isComplex(x)) {\n      return math.multiply(x, x);\n    }\n\n    if (x instanceof BigNumber) {\n      return x.times(x);\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since square(0) = 0\n      return collection.deepMap(x, square, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return x * x;\n    }\n\n    throw new math.error.UnsupportedTypeError('square', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/square.js\n ** module id = 83\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Matrix = math.type.Matrix,\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isBoolean = util['boolean'].isBoolean,\n      isNumber = util.number.isNumber,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Subtract two values, `x - y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.subtract(x, y)\n   *\n   * Examples:\n   *\n   *    math.subtract(5.3, 2);        // returns Number 3.3\n   *\n   *    var a = math.complex(2, 3);\n   *    var b = math.complex(4, 1);\n   *    math.subtract(a, b);          // returns Complex -2 + 2i\n   *\n   *    math.subtract([5, 7, 4], 4);  // returns Array [1, 3, 0]\n   *\n   *    var c = math.unit('2.1 km');\n   *    var d = math.unit('500m');\n   *    math.subtract(c, d);          // returns Unit 1.6 km\n   *\n   * See also:\n   *\n   *    add\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x\n   *            Initial value\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} y\n   *            Value to subtract from `x`\n   * @return {Number | BigNumber | Complex | Unit | Array | Matrix}\n   *            Subtraction of `x` and `y`\n   */\n  math.subtract = function subtract(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('subtract', arguments.length, 2);\n    }\n\n    if (isNumber(x)) {\n      if (isNumber(y)) {\n        // number - number\n        return x - y;\n      }\n      else if (isComplex(y)) {\n        // number - complex\n        return new Complex (\n            x - y.re,\n            - y.im\n        );\n      }\n    }\n    else if (isComplex(x)) {\n      if (isNumber(y)) {\n        // complex - number\n        return new Complex (\n            x.re - y,\n            x.im\n        )\n      }\n      else if (isComplex(y)) {\n        // complex - complex\n        return new Complex (\n            x.re - y.re,\n            x.im - y.im\n        )\n      }\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y) || y === null) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        return x.minus(y);\n      }\n\n      // downgrade to Number\n      return subtract(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x) || x === null) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        return x.minus(y)\n      }\n\n      // downgrade to Number\n      return subtract(x, y.toNumber());\n    }\n\n    if (isUnit(x)) {\n      if (isUnit(y)) {\n        if (x.value == null) {\n          throw new Error('Parameter x contains a unit with undefined value');\n        }\n\n        if (y.value == null) {\n          throw new Error('Parameter y contains a unit with undefined value');\n        }\n\n        if (!x.equalBase(y)) {\n          throw new Error('Units do not match');\n        }\n\n        var res = x.clone();\n        res.value -= y.value;\n        res.fixPrefix = false;\n\n        return res;\n      }\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, subtract);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return subtract(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return subtract(x, +y);\n    }\n\n    throw new math.error.UnsupportedTypeError('subtract', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/subtract.js\n ** module id = 84\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Inverse the sign of a value, apply a unary minus operation.\n   *\n   * For matrices, the function is evaluated element wise. Boolean values and\n   * strings will be converted to a number. For complex numbers, both real and\n   * complex value are inverted.\n   *\n   * Syntax:\n   *\n   *    math.unaryMinus(x)\n   *\n   * Examples:\n   *\n   *    math.unaryMinus(3.5);      // returns -3.5\n   *    math.unaryMinus(-4.2);     // returns 4.2\n   *\n   * See also:\n   *\n   *    add, subtract, unaryPlus\n   *\n   * @param  {Number | BigNumber | Boolean | String | Complex | Unit | Array | Matrix | null} x Number to be inverted.\n   * @return {Number | BigNumber | Complex | Unit | Array | Matrix} Returns the value with inverted sign.\n   */\n  math.unaryMinus = function unaryMinus(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('unaryMinus', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return -x;\n    }\n\n    if (isComplex(x)) {\n      return new Complex(\n          -x.re,\n          -x.im\n      );\n    }\n\n    if (x instanceof BigNumber) {\n      return x.neg();\n    }\n\n    if (isUnit(x)) {\n      var res = x.clone();\n      res.value = -x.value;\n      return res;\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since unaryMinus(0) = 0\n      return collection.deepMap(x, unaryMinus, true);\n    }\n\n    if (isBoolean(x) || isString(x) || x === null) {\n      // convert to a number or bignumber\n      return (config.number == 'bignumber') ? new BigNumber(-x): -x;\n    }\n\n    throw new math.error.UnsupportedTypeError('unaryMinus', math['typeof'](x));\n  };\n\n  // TODO: function unary is renamed to unaryMinus since version 0.23.0. Cleanup some day\n  math.unary = function unary() {\n    throw new Error('Function unary is deprecated. Use unaryMinus instead.');\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/unaryMinus.js\n ** module id = 85\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Unary plus operation.\n   * Boolean values and strings will be converted to a number, numeric values will be returned as is.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.unaryPlus(x)\n   *\n   * Examples:\n   *\n   *    math.unaryPlus(3.5);      // returns 3.5\n   *    math.unaryPlus(1);     // returns 1\n   *\n   * See also:\n   *\n   *    unaryMinus, add, subtract\n   *\n   * @param  {Number | BigNumber | Boolean | String | Complex | Unit | Array | Matrix | null} x\n   *            Input value\n   * @return {Number | BigNumber | Complex | Unit | Array | Matrix}\n   *            Returns the input value when numeric, converts to a number when input is non-numeric.\n   */\n  math.unaryPlus = function unaryPlus(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('unaryPlus', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return x;\n    }\n\n    if (isComplex(x)) {\n      return x.clone();\n    }\n\n    if (x instanceof BigNumber) {\n      return x;\n    }\n\n    if (isUnit(x)) {\n      return x.clone();\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since unaryPlus(0) = 0\n      return collection.deepMap(x, unaryPlus, true);\n    }\n\n    if (isBoolean(x) || isString(x) || x === null) {\n      // convert to a number or bignumber\n      return (config.number == 'bignumber') ? new BigNumber(+x): +x;\n    }\n\n    throw new math.error.UnsupportedTypeError('unaryPlus', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/unaryPlus.js\n ** module id = 86\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      Matrix = math.type.Matrix,\n      BigNumber = math.type.BigNumber,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isInteger = util.number.isInteger;\n\n  /**\n   * Calculate the extended greatest common divisor for two values.\n   * See http://en.wikipedia.org/wiki/Extended_Euclidean_algorithm.\n   *\n   * Syntax:\n   *\n   *    math.xgcd(a, b)\n   *\n   * Examples:\n   *\n   *    math.xgcd(8, 12);             // returns [4, -1, 1]\n   *    math.gcd(8, 12);              // returns 4\n   *    math.xgcd(36163, 21199);      // returns [1247, -7, 12]\n   *\n   * See also:\n   *\n   *    gcd, lcm\n   *\n   * @param {Number | BigNumber | Boolean} a  An integer number\n   * @param {Number | BigNumber | Boolean} b  An integer number\n   * @return {Array}              Returns an array containing 3 integers `[div, m, n]`\n   *                              where `div = gcd(a, b)` and `a*m + b*n = div`\n   */\n  math.xgcd = function xgcd(a, b) {\n    if (arguments.length == 2) {\n      // two arguments\n      if (isNumber(a) && isNumber(b)) {\n        if (!isInteger(a) || !isInteger(b)) {\n          throw new Error('Parameters in function xgcd must be integer numbers');\n        }\n\n        return _xgcd(a, b);\n      }\n\n      if (a instanceof BigNumber) {\n        // try to convert to big number\n        if (isNumber(b)) {\n          b = BigNumber.convert(b);\n        }\n        else if (isBoolean(b) || b === null) {\n          b = new BigNumber(b ? 1 : 0);\n        }\n\n        if (b instanceof BigNumber) {\n          return _bigXgcd(a, b);\n        }\n\n        // downgrade to Number\n        return xgcd(a.toNumber(), b);\n      }\n      if (b instanceof BigNumber) {\n        // try to convert to big number\n        if (isNumber(a)) {\n          a = BigNumber.convert(a);\n        }\n        else if (isBoolean(a) || a === null) {\n          a = new BigNumber(a ? 1 : 0);\n        }\n\n        if (a instanceof BigNumber) {\n          return _bigXgcd(a, b);\n        }\n\n        // downgrade to Number\n        return xgcd(a.toNumber(), b);\n      }\n\n      if (isBoolean(a) || a === null) {\n        return xgcd(+a, b);\n      }\n      if (isBoolean(b) || b === null) {\n        return xgcd(a, +b);\n      }\n\n      throw new math.error.UnsupportedTypeError('xgcd', math['typeof'](a), math['typeof'](b));\n    }\n\n    // zero or one argument\n    throw new SyntaxError('Function xgcd expects two arguments');\n  };\n\n  /**\n   * Calculate xgcd for two numbers\n   * @param {Number} a\n   * @param {Number} b\n   * @return {Number} result\n   * @private\n   */\n  function _xgcd(a, b) {\n    // source: http://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\n    var t, // used to swap two variables\n        q, // quotient\n        r, // remainder\n        x = 0, lastx = 1,\n        y = 1, lasty = 0;\n\n    while (b) {\n      q = Math.floor(a / b);\n      r = a % b;\n\n      t = x;\n      x = lastx - q * x;\n      lastx = t;\n\n      t = y;\n      y = lasty - q * y;\n      lasty = t;\n\n      a = b;\n      b = r;\n    }\n\n    var res;\n    if (a < 0) {\n      res = [-a, -lastx, -lasty];\n    }\n    else {\n      res = [a, a ? lastx : 0, lasty];\n    }\n    return (config.matrix === 'array') ? res : math.matrix(res);\n  }\n\n  /**\n   * Calculate xgcd for two BigNumbers\n   * @param {BigNumber} a\n   * @param {BigNumber} b\n   * @return {BigNumber[]} result\n   * @private\n   */\n  function _bigXgcd(a, b) {\n    // source: http://en.wikipedia.org/wiki/Extended_Euclidean_algorithm\n    var t, // used to swap two variables\n        q, // quotient\n        r, // remainder\n        zero = new BigNumber(0),\n        x = new BigNumber(0), lastx = new BigNumber(1),\n        y = new BigNumber(1), lasty = new BigNumber(0);\n\n    while (!b.isZero()) {\n      q = a.div(b).floor();\n      r = a.mod(b);\n\n      t = x;\n      x = lastx.minus(q.times(x));\n      lastx = t;\n\n      t = y;\n      y = lasty.minus(q.times(y));\n      lasty = t;\n\n      a = b;\n      b = r;\n    }\n\n    var res;\n    if (a.lt(zero)) {\n      res = [a.neg(), lastx.neg(), lasty.neg()];\n    }\n    else {\n      res = [a, !a.isZero() ? lastx : 0, lasty];\n    }\n    return (config.matrix === 'array') ? res : math.matrix(res);\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/arithmetic/xgcd.js\n ** module id = 87\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix,\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isBoolean = util['boolean'].isBoolean,\n      isInteger = util.number.isInteger,\n      isNumber = util.number.isNumber,\n      isCollection = collection.isCollection,\n      \n      bigBitAnd = util.bignumber.and;\n\n  /**\n   * Bitwise AND two values, `x & y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.bitAnd(x, y)\n   *\n   * Examples:\n   *\n   *    math.bitAnd(53, 131);               // returns Number 1\n   *\n   *    math.bitAnd([1, 12, 31], 42);       // returns Array [0, 8, 10]\n   *\n   * See also:\n   *\n   *    bitNot, bitOr, bitXor, leftShift, rightArithShift, rightLogShift\n   *\n   * @param  {Number | BigNumber | Boolean | Array | Matrix | null} x First value to and\n   * @param  {Number | BigNumber | Boolean | Array | Matrix | null} y Second value to and\n   * @return {Number | BigNumber | Array | Matrix} AND of `x` and `y`\n   */\n  math.bitAnd = function bitAnd(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('bitAnd', arguments.length, 2);\n    }\n\n    if (isNumber(x) && isNumber(y)) {\n      if (!isInteger(x) || !isInteger(y)) {\n        throw new Error('Parameters in function bitAnd must be integer numbers');\n      }\n\n      return x & y;\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, bitAnd);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return bitAnd(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return bitAnd(x, +y);\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n\n      if (y instanceof BigNumber) {\n        return bigBitAnd(x, y);\n      }\n\n      // downgrade to Number\n      return bitAnd(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n\n      if (x instanceof BigNumber) {\n        return bigBitAnd(x, y);\n      }\n\n      // downgrade to Number\n      return bitAnd(x, y.toNumber());\n    }\n\n    throw new math.error.UnsupportedTypeError('bitAnd', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/bitwise/bitAnd.js\n ** module id = 88\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix,\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isBoolean = util['boolean'].isBoolean,\n      isInteger = util.number.isInteger,\n      isNumber = util.number.isNumber,\n      isCollection = collection.isCollection,\n\n      bigBitNot = util.bignumber.not;\n\n  /**\n   * Bitwise NOT value, `~x`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the best prefix base.\n   *\n   * Syntax:\n   *\n   *    math.bitNot(x)\n   *\n   * Examples:\n   *\n   *    math.bitNot(1);               // returns Number -2\n   *\n   *    math.bitNot([2, -3, 4]);      // returns Array [-3, 2, 5]\n   *\n   * See also:\n   *\n   *    bitAnd, bitOr, bitXor, leftShift, rightArithShift, rightLogShift\n   *\n   * @param  {Number | BigNumber | Boolean | Array | Matrix | null} x Value to not\n   * @return {Number | BigNumber | Array | Matrix} NOT of `x`\n   */\n  math.bitNot = function bitNot(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('bitNot', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      if (!isInteger(x)) {\n        throw new Error('Parameter in function bitNot must be integer numbers');\n      }\n\n      return ~x;\n    }\n\n    if (x instanceof BigNumber) {\n      return bigBitNot(x);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, bitNot);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return bitNot(+x);\n    }\n\n    throw new math.error.UnsupportedTypeError('bitNot', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/bitwise/bitNot.js\n ** module id = 89\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix,\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isBoolean = util['boolean'].isBoolean,\n      isInteger = util.number.isInteger,\n      isNumber = util.number.isNumber,\n      isCollection = collection.isCollection,\n\n      bigBitOr = util.bignumber.or;\n\n  /**\n   * Bitwise OR two values, `x | y`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the lowest print base.\n   *\n   * Syntax:\n   *\n   *    math.bitOr(x, y)\n   *\n   * Examples:\n   *\n   *    math.bitOr(1, 2);               // returns Number 3\n   *\n   *    math.bitOr([1, 2, 3], 4);       // returns Array [5, 6, 7]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitXor, leftShift, rightArithShift, rightLogShift\n   *\n   * @param  {Number | BigNumber | Boolean | Array | Matrix | null} x First value to or\n   * @param  {Number | BigNumber | Boolean | Array | Matrix | null} y Second value to or\n   * @return {Number | BigNumber | Array | Matrix} OR of `x` and `y`\n   */\n  math.bitOr = function bitOr(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('bitOr', arguments.length, 2);\n    }\n\n    if (isNumber(x) && isNumber(y)) {\n      if (!isInteger(x) || !isInteger(y)) {\n        throw new Error('Parameters in function bitOr must be integer numbers');\n      }\n\n      return x | y;\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, bitOr);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return bitOr(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return bitOr(x, +y);\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n\n      if (y instanceof BigNumber) {\n        return bigBitOr(x, y);\n      }\n\n      // downgrade to Number\n      return bitOr(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n\n      if (x instanceof BigNumber) {\n        return bigBitOr(x, y);\n      }\n\n      // downgrade to Number\n      return bitOr(x, y.toNumber());\n    }\n\n    throw new math.error.UnsupportedTypeError('bitOr', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/bitwise/bitOr.js\n ** module id = 90\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix,\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isBoolean = util['boolean'].isBoolean,\n      isInteger = util.number.isInteger,\n      isNumber = util.number.isNumber,\n      isCollection = collection.isCollection,\n\n      bigBitXor = util.bignumber.xor;\n\n  /**\n   * Bitwise XOR two values, `x ^ y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.bitXor(x, y)\n   *\n   * Examples:\n   *\n   *    math.bitXor(1, 2);               // returns Number 3\n   *\n   *    math.bitXor([2, 3, 4], 4);       // returns Array [6, 7, 0]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitOr, leftShift, rightArithShift, rightLogShift\n   *\n   * @param  {Number | BigNumber | Boolean | Array | Matrix | null} x First value to xor\n   * @param  {Number | BigNumber | Boolean | Array | Matrix | null} y Second value to xor\n   * @return {Number | BigNumber | Array | Matrix} XOR of `x` and `y`\n   */\n  math.bitXor = function bitXor(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('bitXor', arguments.length, 2);\n    }\n\n    if (isNumber(x) && isNumber(y)) {\n      if (!isInteger(x) || !isInteger(y)) {\n        throw new Error('Parameters in function bitXor must be integer numbers');\n      }\n\n      return x ^ y;\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, bitXor);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return bitXor(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return bitXor(x, +y);\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n\n      if (y instanceof BigNumber) {\n        return bigBitXor(x, y);\n      }\n\n      // downgrade to Number\n      return bitXor(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n\n      if (x instanceof BigNumber) {\n        return bigBitXor(x, y);\n      }\n\n      // downgrade to Number\n      return bitXor(x, y.toNumber());\n    }\n\n    throw new math.error.UnsupportedTypeError('bitXor', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/bitwise/bitXor.js\n ** module id = 91\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix,\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isBoolean = util['boolean'].isBoolean,\n      isInteger = util.number.isInteger,\n      isNumber = util.number.isNumber,\n      isCollection = collection.isCollection,\n\n      bigLeftShift = util.bignumber.leftShift;\n\n  /**\n   * Bitwise left logical shift of a value x by y number of bits, `x << y`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the best prefix base.\n   *\n   * Syntax:\n   *\n   *    math.leftShift(x, y)\n   *\n   * Examples:\n   *\n   *    math.leftShift(1, 2);               // returns Number 4\n   *\n   *    math.leftShift([1, 2, 3], 4);       // returns Array [16, 32, 64]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitOr, bitXor, rightArithShift, rightLogShift\n   *\n   * @param  {Number | BigNumber | Boolean | Array | Matrix | null} x Value to be shifted\n   * @param  {Number | BigNumber | Boolean | null} y Amount of shifts\n   * @return {Number | BigNumber | Array | Matrix} `x` shifted left `y` times\n   */\n  math.leftShift = function leftShift(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('leftShift', arguments.length, 2);\n    }\n\n    if (isNumber(x)) {\n      if (isNumber(y)) {\n        if (!isInteger(x) || !isInteger(y)) {\n          throw new Error('Parameters in function leftShift must be integer numbers');\n        }\n\n        return x << y;\n      }\n\n      if (y instanceof BigNumber) {\n        return bigLeftShift(BigNumber.convert(x), y);\n      }\n    }\n    if (isNumber(y)) {\n      if (isFinite(y) && !isInteger(y)) {\n        throw new Error('Parameters in function leftShift must be integer numbers');\n      }\n\n      if (x instanceof BigNumber) {\n        if (x.isFinite() && !x.isInteger()) {\n          throw new Error('Parameters in function leftShift must be integer numbers');\n        }\n\n        if (x.isNaN() || isNaN(y) || y < 0) {\n          return new BigNumber(NaN);\n        }\n\n        if (y == 0 || x.isZero()) {\n          return x;\n        }\n        if (y == Infinity && !x.isFinite()) {\n          return new BigNumber(NaN);\n        }\n\n        // Math.pow(2, y) is fully precise for y < 55, and fast\n        if (y < 55) {\n          return x.times(Math.pow(2, y) + '');\n        }\n\n        y = BigNumber.convert(y);\n        return bigLeftShift(x, y);\n      }\n    }\n\n    if (isCollection(x) && isNumber(y)) {\n      return collection.deepMap2(x, y, leftShift);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return leftShift(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return leftShift(x, +y);\n    }\n\n    if (x instanceof BigNumber) {\n      if (y instanceof BigNumber) {\n        return bigLeftShift(x, y);\n      }\n\n      // downgrade to Number\n      return leftShift(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // x is probably incompatible with BigNumber\n      return leftShift(x, y.toNumber());\n    }\n\n    throw new math.error.UnsupportedTypeError('leftShift', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/bitwise/leftShift.js\n ** module id = 92\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix,\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isBoolean = util['boolean'].isBoolean,\n      isInteger = util.number.isInteger,\n      isNumber = util.number.isNumber,\n      isCollection = collection.isCollection,\n\n      bigRightShift = util.bignumber.rightShift;\n\n  /**\n   * Bitwise right arithmetic shift of a value x by y number of bits, `x >> y`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the best prefix base.\n   *\n   * Syntax:\n   *\n   *    math.rightArithShift(x, y)\n   *\n   * Examples:\n   *\n   *    math.rightArithShift(4, 2);               // returns Number 1\n   *\n   *    math.rightArithShift([16, -32, 64], 4);   // returns Array [1, -2, 3]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitOr, bitXor, leftShift, rightLogShift\n   *\n   * @param  {Number | BigNumber | Boolean | Array | Matrix | null} x Value to be shifted\n   * @param  {Number | BigNumber | Boolean | null} y Amount of shifts\n   * @return {Number | BigNumber | Array | Matrix} `x` sign-filled shifted right `y` times\n   */\n  math.rightArithShift = function rightArithShift(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('rightArithShift', arguments.length, 2);\n    }\n\n    if (isNumber(x)) {\n      if (isNumber(y)) {\n        if (!isInteger(x) || !isInteger(y)) {\n          throw new Error('Parameters in function rightArithShift must be integer numbers');\n        }\n\n        return x >> y;\n      }\n\n      if (y instanceof BigNumber) {\n        return bigRightShift(BigNumber.convert(x), y);\n      }\n    }\n    if (isNumber(y)) {\n      if (isFinite(y) && !isInteger(y)) {\n        throw new Error('Parameters in function rightArithShift must be integer numbers');\n      }\n\n      if (x instanceof BigNumber) {\n        if (x.isFinite() && !x.isInteger()) {\n          throw new Error('Parameters in function rightArithShift must be integer numbers');\n        }\n\n        if (x.isNaN() || isNaN(y) || y < 0) {\n          return new BigNumber(NaN);\n        }\n        if (y == Infinity) {\n          if (x.isNegative()) {\n            return new BigNumber(-1);\n          }\n          if (!x.isFinite()) {\n            return new BigNumber(NaN);\n          }\n          return new BigNumber(0);\n        }\n\n        // Math.pow(2, y) is fully precise for y < 55, and fast\n        if (y < 55) {\n          return x.div(Math.pow(2, y) + '').floor();\n        }\n\n        y = BigNumber.convert(y);\n        return bigRightShift(x, y);\n      }\n    }\n\n    if (isCollection(x) && isNumber(y)) {\n      return collection.deepMap2(x, y, rightArithShift);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return rightArithShift(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return rightArithShift(x, +y);\n    }\n\n    if (x instanceof BigNumber) {\n      if (y instanceof BigNumber) {\n        return bigRightShift(x, y);\n      }\n\n      // downgrade to Number\n      return rightArithShift(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // x is probably incompatible with BigNumber\n      return rightArithShift(x, y.toNumber());\n    }\n\n    throw new math.error.UnsupportedTypeError('rightArithShift', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/bitwise/rightArithShift.js\n ** module id = 93\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      Matrix = math.type.Matrix,\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isBoolean = util['boolean'].isBoolean,\n      isInteger = util.number.isInteger,\n      isNumber = util.number.isNumber,\n      isCollection = collection.isCollection;\n\n  /**\n   * Bitwise right logical shift of value x by y number of bits, `x >>> y`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the best prefix base.\n   *\n   * Syntax:\n   *\n   *    math.rightLogShift(x, y)\n   *\n   * Examples:\n   *\n   *    math.rightLogShift(4, 2);               // returns Number 1\n   *\n   *    math.rightLogShift([16, -32, 64], 4);   // returns Array [1, 2, 3]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitOr, bitXor, leftShift, rightArithShift\n   *\n   * @param  {Number | Boolean | Array | Matrix | null} x Value to be shifted\n   * @param  {Number | Boolean | null} y Amount of shifts\n   * @return {Number | Array | Matrix} `x` zero-filled shifted right `y` times\n   */\n  math.rightLogShift = function rightLogShift(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('rightLogShift', arguments.length, 2);\n    }\n\n    if (isNumber(x) && isNumber(y)) {\n      if (!isInteger(x) || !isInteger(y)) {\n        throw new Error('Parameters in function rightLogShift must be integer numbers');\n      }\n\n      return x >>> y;\n    }\n\n    if (isCollection(x) && isNumber(y)) {\n      return collection.deepMap2(x, y, rightLogShift);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return rightLogShift(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return rightLogShift(x, +y);\n    }\n\n    throw new math.error.UnsupportedTypeError('rightLogShift', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/bitwise/rightLogShift.js\n ** module id = 94\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isCollection = collection.isCollection,\n      isComplex = Complex.isComplex;\n\n  /**\n   * Compute the argument of a complex value.\n   * For a complex number `a + bi`, the argument is computed as `atan2(b, a)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.arg(x)\n   *\n   * Examples:\n   *\n   *    var a = math.complex(2, 2);\n   *    math.arg(a) / math.pi;          // returns Number 0.25\n   *\n   *    var b = math.complex('2 + 3i');\n   *    math.arg(b);                    // returns Number 0.982793723247329\n   *    math.atan2(3, 2);               // returns Number 0.982793723247329\n   *\n   * See also:\n   *\n   *    re, im, conj, abs\n   *\n   * @param {Number | Complex | Array | Matrix | Boolean | null} x\n   *            A complex number or array with complex numbers\n   * @return {Number | Array | Matrix} The argument of x\n   */\n  math.arg = function arg(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('arg', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return Math.atan2(0, x);\n    }\n\n    if (isComplex(x)) {\n      return Math.atan2(x.im, x.re);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, arg);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return arg(+x);\n    }\n\n    if (x instanceof BigNumber) {\n      // downgrade to Number\n      // TODO: implement BigNumber support\n      return arg(x.toNumber());\n    }\n\n    throw new math.error.UnsupportedTypeError('arg', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/complex/arg.js\n ** module id = 95\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      object = util.object,\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isCollection =collection.isCollection,\n      isComplex = Complex.isComplex;\n\n  /**\n   * Compute the complex conjugate of a complex value.\n   * If `x = a+bi`, the complex conjugate of `x` is `a - bi`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.conj(x)\n   *\n   * Examples:\n   *\n   *    math.conj(math.complex('2 + 3i'));  // returns Complex 2 - 3i\n   *    math.conj(math.complex('2 - 3i'));  // returns Complex 2 + 3i\n   *    math.conj(math.complex('-5.2i'));  // returns Complex 5.2i\n   *\n   * See also:\n   *\n   *    re, im, arg, abs\n   *\n   * @param {Number | BigNumber | Complex | Array | Matrix | Boolean | null} x\n   *            A complex number or array with complex numbers\n   * @return {Number | BigNumber | Complex | Array | Matrix}\n   *            The complex conjugate of x\n   */\n  math.conj = function conj(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('conj', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return x;\n    }\n\n    if (x instanceof BigNumber) {\n      return new BigNumber(x);\n    }\n\n    if (isComplex(x)) {\n      return new Complex(x.re, -x.im);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, conj);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return +x;\n    }\n\n    // return a clone of the value for non-complex values\n    return object.clone(x);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/complex/conj.js\n ** module id = 96\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      object = util.object,\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isCollection = collection.isCollection,\n      isComplex = Complex.isComplex;\n\n  /**\n   * Get the real part of a complex number.\n   * For a complex number `a + bi`, the function returns `a`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.re(x)\n   *\n   * Examples:\n   *\n   *    var a = math.complex(2, 3);\n   *    math.re(a);                     // returns Number 2\n   *    math.im(a);                     // returns Number 3\n   *\n   *    math.re(math.complex('-5.2i')); // returns Number 0\n   *    math.re(math.complex(2.4));     // returns Number 2.4\n   *\n   * See also:\n   *\n   *    im, conj, abs, arg\n   *\n   * @param {Number | BigNumber | Complex | Array | Matrix | Boolean | null} x\n   *            A complex number or array with complex numbers\n   * @return {Number | BigNumber | Array | Matrix} The real part of x\n   */\n  math.re = function re(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('re', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return x;\n    }\n\n    if (x instanceof BigNumber) {\n      return new BigNumber(x);\n    }\n\n    if (isComplex(x)) {\n      return x.re;\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, re);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return +x;\n    }\n\n    // return a clone of the value itself for all non-complex values\n    return object.clone(x);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/complex/re.js\n ** module id = 97\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isCollection =collection.isCollection,\n      isComplex = Complex.isComplex;\n\n  /**\n   * Get the imaginary part of a complex number.\n   * For a complex number `a + bi`, the function returns `b`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.im(x)\n   *\n   * Examples:\n   *\n   *    var a = math.complex(2, 3);\n   *    math.re(a);                     // returns Number 2\n   *    math.im(a);                     // returns Number 3\n   *\n   *    math.re(math.complex('-5.2i')); // returns Number -5.2\n   *    math.re(math.complex(2.4));     // returns Number 0\n   *\n   * See also:\n   *\n   *    re, conj, abs, arg\n   *\n   * @param {Number | BigNumber | Complex | Array | Matrix | Boolean | null} x\n   *            A complex number or array with complex numbers\n   * @return {Number | BigNumber | Array | Matrix} The imaginary part of x\n   */\n  math.im = function im(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('im', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return 0;\n    }\n\n    if (x instanceof BigNumber) {\n      return new BigNumber(0);\n    }\n\n    if (isComplex(x)) {\n      return x.im;\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, im);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return 0;\n    }\n\n    // return 0 for all non-complex values\n    return 0;\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/complex/im.js\n ** module id = 98\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Logical `and`. Test whether two values are both defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.and(x, y)\n   *\n   * Examples:\n   *\n   *    math.and(2, 4);   // returns true\n   *\n   *    a = [2, 0, 0];\n   *    b = [3, 7, 0];\n   *    c = 0;\n   *\n   *    math.and(a, b);   // returns [true, false, false]\n   *    math.and(a, c);   // returns [false, false, false]\n   *\n   * See also:\n   *\n   *    not, or, xor\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x First value to check\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} y Second value to check\n   * @return {Boolean | Array | Matrix}\n   *            Returns true when both inputs are defined with a nonzero/nonempty value.\n   */\n  math.and = function and(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('and', arguments.length, 2);\n    }\n\n    if ((isNumber(x) || isBoolean(x) || x === null) &&\n        (isNumber(y) || isBoolean(y) || y === null)) {\n      return !!(x && y);\n    }\n\n    if (isComplex(x)) {\n      if (x.re == 0 && x.im == 0) {\n        return false;\n      }\n\n      return and(true, y);\n    }\n    if (isComplex(y)) {\n      if (y.re == 0 && y.im == 0) {\n        return false;\n      }\n\n      return and(x, true);\n    }\n\n    if (x instanceof BigNumber) {\n      if (x.isZero() || x.isNaN()) {\n        return false;\n      }\n\n      return and(true, y);\n    }\n    if (y instanceof BigNumber) {\n      if (y.isZero() || y.isNaN()) {\n        return false;\n      }\n\n      return and(x, true);\n    }\n\n    if (isUnit(x)) {\n      if (x.value === null || x.value == 0) {\n        return false;\n      }\n\n      return and(true, y);\n    }\n    if (isUnit(y)) {\n      if (y.value === null || y.value == 0) {\n        return false;\n      }\n\n      return and(x, true);\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, and);\n    }\n\n    throw new math.error.UnsupportedTypeError('and', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/logical/and.js\n ** module id = 99\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Logical `not`. Flips boolean value of a given parameter.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.not(x)\n   *\n   * Examples:\n   *\n   *    math.not(2);      // returns false\n   *    math.not(0);      // returns true\n   *    math.not(true);   // returns false\n   *\n   *    a = [2, -7, 0];\n   *    math.not(a);      // returns [false, false, true]\n   *\n   * See also:\n   *\n   *    and, or, xor\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x First value to check\n   * @return {Boolean | Array | Matrix}\n   *            Returns true when input is a zero or empty value.\n   */\n  math.not = function not(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('not', arguments.length, 1);\n    }\n\n    if (isNumber(x) || isBoolean(x) || x === null) {\n      return !x;\n    }\n\n    if (isComplex(x)) {\n      return x.re == 0 && x.im == 0;\n    }\n\n    if (x instanceof BigNumber) {\n      return x.isZero() || x.isNaN();\n    }\n\n    if (isUnit(x)) {\n      return x.value === null || x.value == 0;\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, not);\n    }\n\n    throw new math.error.UnsupportedTypeError('not', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/logical/not.js\n ** module id = 100\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Logical `or`. Test if at least one value is defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.or(x, y)\n   *\n   * Examples:\n   *\n   *    math.or(2, 4);   // returns true\n   *\n   *    a = [2, 5, 0];\n   *    b = [0, 22, 0];\n   *    c = 0;\n   *\n   *    math.or(a, b);   // returns [true, true, false]\n   *    math.or(b, c);   // returns [false, true, false]\n   *\n   * See also:\n   *\n   *    and, not, xor\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x First value to check\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} y Second value to check\n   * @return {Boolean | Array | Matrix}\n   *            Returns true when one of the inputs is defined with a nonzero/nonempty value.\n   */\n  math.or = function or(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('or', arguments.length, 2);\n    }\n\n    if ((isNumber(x) || isBoolean(x) || x === null) &&\n        (isNumber(y) || isBoolean(y) || y === null)) {\n      return !!(x || y);\n    }\n\n    if (isComplex(x)) {\n      if (x.re == 0 && x.im == 0) {\n        return or(false, y);\n      }\n      return true;\n    }\n    if (isComplex(y)) {\n      if (y.re == 0 && y.im == 0) {\n        return or(x, false);\n      }\n      return true;\n    }\n\n    if (x instanceof BigNumber) {\n      if (x.isZero() || x.isNaN()) {\n        return or(false, y);\n      }\n      return true;\n    }\n    if (y instanceof BigNumber) {\n      if (y.isZero() || y.isNaN()) {\n        return or(x, false);\n      }\n      return true;\n    }\n\n    if (isUnit(x)) {\n      if (x.value === null || x.value == 0) {\n        return or(false, y);\n      }\n      return true;\n    }\n    if (isUnit(y)) {\n      if (y.value === null || y.value == 0) {\n        return or(x, false);\n      }\n      return true;\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, or);\n    }\n\n    throw new math.error.UnsupportedTypeError('or', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/logical/or.js\n ** module id = 101\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Logical `xor`. Test whether one and only one value is defined with a nonzero/nonempty value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.xor(x, y)\n   *\n   * Examples:\n   *\n   *    math.xor(2, 4);   // returns false\n   *\n   *    a = [2, 0, 0];\n   *    b = [2, 7, 0];\n   *    c = 0;\n   *\n   *    math.xor(a, b);   // returns [false, true, false]\n   *    math.xor(a, c);   // returns [true, false, false]\n   *\n   * See also:\n   *\n   *    and, not, or\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x First value to check\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} y Second value to check\n   * @return {Boolean | Array | Matrix}\n   *            Returns true when one and only one input is defined with a nonzero/nonempty value.\n   */\n  math.xor = function xor(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('xor', arguments.length, 2);\n    }\n\n    if ((isNumber(x) || isBoolean(x) || x === null) &&\n        (isNumber(y) || isBoolean(y) || y === null)) {\n      return !!(!!x ^ !!y);\n    }\n\n    if (isComplex(x)) {\n      return xor(!(x.re == 0 && x.im == 0), y);\n    }\n    if (isComplex(y)) {\n      return xor(x, !(y.re == 0 && y.im == 0));\n    }\n\n    if (x instanceof BigNumber) {\n      return xor(!(x.isZero() || x.isNaN()), y);\n    }\n    if (y instanceof BigNumber) {\n      return xor(x, !(y.isZero() || y.isNaN()));\n    }\n\n    if (isUnit(x)) {\n      return xor(!(x.value === null || x.value == 0), y);\n    }\n    if (isUnit(y)) {\n      return xor(x, !(y.value === null || y.value == 0));\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, xor);\n    }\n\n    throw new math.error.UnsupportedTypeError('xor', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/logical/xor.js\n ** module id = 102\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index');\n\n  var BigNumber = require('../../type/BigNumber');\n  var Matrix = math.type.Matrix;\n  var collection = math.collection;\n\n  var object = util.object;\n  var array = util.array;\n  var isNumber = util.number.isNumber;\n  var isInteger = util.number.isInteger;\n  var isCollection = collection.isCollection;\n\n  /**\n   * Concatenate two or more matrices.\n   *\n   * Syntax:\n   *\n   *     math.concat(A, B, C, ...)\n   *     math.concat(A, B, C, ..., dim)\n   *\n   * Where:\n   *\n   * - `dim: number` is a zero-based dimension over which to concatenate the matrices.\n   *   By default the last dimension of the matrices.\n   *\n   * Examples:\n   *\n   *    var A = [[1, 2], [5, 6]];\n   *    var B = [[3, 4], [7, 8]];\n   *\n   *    math.concat(A, B);      // returns [[1, 2, 3, 4], [5, 6, 7, 8]]\n   *    math.concat(A, B, 0);   // returns [[1, 2], [5, 6], [3, 4], [7, 8]]\n   *\n   * See also:\n   *\n   *    size, squeeze, subset, transpose\n   *\n   * @param {... Array | Matrix} args     Two or more matrices\n   * @return {Array | Matrix} Concatenated matrix\n   */\n  math.concat = function concat (args) {\n    var i,\n        len = arguments.length,\n        dim = -1,  // zero-based dimension\n        prevDim,\n        asMatrix = false,\n        matrices = [];  // contains multi dimensional arrays\n\n    for (i = 0; i < len; i++) {\n      var arg = arguments[i];\n\n      // test whether we need to return a Matrix (if not we return an Array)\n      if (arg instanceof Matrix) {\n        asMatrix = true;\n      }\n\n      if ((i == len - 1) && (isNumber(arg) || arg instanceof BigNumber)) {\n        // last argument contains the dimension on which to concatenate\n        prevDim = dim;\n        dim = arg.valueOf(); // change bignumber to number\n\n        if (!isInteger(dim)) {\n          throw new TypeError('Integer number expected for dimension');\n        }\n\n        if (dim < 0) {\n          // TODO: would be more clear when throwing a DimensionError here\n          throw new math.error.IndexError(dim);\n        }\n        if (i > 0 && dim > prevDim) {\n          // TODO: would be more clear when throwing a DimensionError here\n          throw new math.error.IndexError(dim, prevDim + 1);\n        }\n      }\n      else if (isCollection(arg)) {\n        // this is a matrix or array\n        var matrix = object.clone(arg).valueOf();\n        var size = array.size(arg.valueOf());\n        matrices[i] = matrix;\n        prevDim = dim;\n        dim = size.length - 1;\n\n        // verify whether each of the matrices has the same number of dimensions\n        if (i > 0 && dim != prevDim) {\n          throw new math.error.DimensionError(prevDim + 1, dim + 1);\n        }\n      }\n      else {\n        throw new math.error.UnsupportedTypeError('concat', math['typeof'](arg));\n      }\n    }\n\n    if (matrices.length == 0) {\n      throw new SyntaxError('At least one matrix expected');\n    }\n\n    var res = matrices.shift();\n    while (matrices.length) {\n      res = _concat(res, matrices.shift(), dim, 0);\n    }\n\n    return asMatrix ? math.matrix(res) : res;\n  };\n\n  /**\n   * Recursively concatenate two matrices.\n   * The contents of the matrices is not cloned.\n   * @param {Array} a             Multi dimensional array\n   * @param {Array} b             Multi dimensional array\n   * @param {Number} concatDim    The dimension on which to concatenate (zero-based)\n   * @param {Number} dim          The current dim (zero-based)\n   * @return {Array} c            The concatenated matrix\n   * @private\n   */\n  function _concat(a, b, concatDim, dim) {\n    if (dim < concatDim) {\n      // recurse into next dimension\n      if (a.length != b.length) {\n        throw new math.error.DimensionError(a.length, b.length);\n      }\n\n      var c = [];\n      for (var i = 0; i < a.length; i++) {\n        c[i] = _concat(a[i], b[i], concatDim, dim + 1);\n      }\n      return c;\n    }\n    else {\n      // concatenate this dimension\n      return a.concat(b);\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/concat.js\n ** module id = 103\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function(math) {\n  var array = require('../../util/array');\n  var Matrix = math.type.Matrix;\n\n  /**\n   * Calculate the cross product for two vectors in three dimensional space.\n   * The cross product of `A = [a1, a2, a3]` and `B =[b1, b2, b3]` is defined\n   * as:\n   *\n   *    cross(A, B) = [\n   *      a2 * b3 - a3 * b2,\n   *      a3 * b1 - a1 * b3,\n   *      a1 * b2 - a2 * b1\n   *    ]\n   *\n   * Syntax:\n   *\n   *    math.cross(x, y)\n   *\n   * Examples:\n   *\n   *    math.cross([1, 1, 0],  [0, 1, 1]);  // Returns [1, -1, 1]\n   *    math.cross([3, -3, 1], [4, 9, 2]);  // Returns [-15, -2, 39]\n   *    math.cross([2, 3, 4],  [5, 6, 7]);  // Returns [-3, 6, -3]\n   *\n   * See also:\n   *\n   *    dot, multiply\n   *\n   * @param  {Array | Matrix} x   First vector\n   * @param  {Array | Matrix} y   Second vector\n   * @return {Array | Matrix}     Returns the cross product of `x` and `y`\n   */\n  math.cross = function cross(x, y) {\n    if (x instanceof Matrix) {\n      if (y instanceof Matrix) {\n        return math.matrix(_cross(x.toArray(), y.toArray()));\n      }\n      else if (Array.isArray(y)) {\n        return math.matrix(_cross(x.toArray(), y));\n      }\n    }\n    else if (Array.isArray(x)) {\n      if (y instanceof Matrix) {\n        return math.matrix(_cross(x, y.toArray()));\n      }\n      else if (Array.isArray(y)) {\n        return _cross(x, y);\n      }\n    }\n\n    throw new math.error.UnsupportedTypeError('cross', math['typeof'](x), math['typeof'](y));\n  };\n\n  /**\n   * Calculate the cross product for two arrays\n   * @param {Array} x  First vector\n   * @param {Array} y  Second vector\n   * @returns {Array} Returns the cross product of x and y\n   * @private\n   */\n  function _cross(x, y) {\n    var xSize= array.size(x);\n    var ySize = array.size(y);\n\n    if (xSize.length != 1 || ySize.length != 1 || xSize[0] != 3 || ySize[0] != 3) {\n      throw new RangeError('Vectors with length 3 expected ' +\n      '(Size A = [' + xSize.join(', ') + '], B = [' + ySize.join(', ') + '])');\n    }\n\n    return [\n      math.subtract(math.multiply(x[1], y[2]), math.multiply(x[2], y[1])),\n      math.subtract(math.multiply(x[2], y[0]), math.multiply(x[0], y[2])),\n      math.subtract(math.multiply(x[0], y[1]), math.multiply(x[1], y[0]))\n    ];\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/cross.js\n ** module id = 104\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      Matrix = math.type.Matrix,\n\n      object = util.object,\n      string = util.string;\n\n  /**\n   * Calculate the determinant of a matrix.\n   *\n   * Syntax:\n   *\n   *    math.det(x)\n   *\n   * Examples:\n   *\n   *    math.det([[1, 2], [3, 4]]); // returns -2\n   *\n   *    var A = [\n   *      [-2, 2, 3],\n   *      [-1, 1, 3],\n   *      [2, 0, -1]\n   *    ]\n   *    math.det(A); // returns 6\n   *\n   * See also:\n   *\n   *    inv\n   *\n   * @param {Array | Matrix} x  A matrix\n   * @return {Number} The determinant of `x`\n   */\n  math.det = function det (x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('det', arguments.length, 1);\n    }\n\n    var size;\n    if (x instanceof Matrix) {\n      size = x.size();\n    }\n    else if (x instanceof Array) {\n      x = math.matrix(x);\n      size = x.size();\n    }\n    else {\n      // a scalar\n      size = [];\n    }\n\n    switch (size.length) {\n      case 0:\n        // scalar\n        return object.clone(x);\n\n      case 1:\n        // vector\n        if (size[0] == 1) {\n          return object.clone(x.valueOf()[0]);\n        }\n        else {\n          throw new RangeError('Matrix must be square ' +\n              '(size: ' + string.format(size) + ')');\n        }\n\n      case 2:\n        // two dimensional array\n        var rows = size[0];\n        var cols = size[1];\n        if (rows == cols) {\n          return _det(x.clone().valueOf(), rows, cols);\n        }\n        else {\n          throw new RangeError('Matrix must be square ' +\n              '(size: ' + string.format(size) + ')');\n        }\n\n      default:\n        // multi dimensional array\n        throw new RangeError('Matrix must be two dimensional ' +\n            '(size: ' + string.format(size) + ')');\n    }\n  };\n\n  /**\n   * Calculate the determinant of a matrix\n   * @param {Array[]} matrix  A square, two dimensional matrix\n   * @param {Number} rows     Number of rows of the matrix (zero-based)\n   * @param {Number} cols     Number of columns of the matrix (zero-based)\n   * @returns {Number} det\n   * @private\n   */\n  function _det (matrix, rows, cols) {\n    if (rows == 1) {\n      // this is a 1 x 1 matrix\n      return object.clone(matrix[0][0]);\n    }\n    else if (rows == 2) {\n      // this is a 2 x 2 matrix\n      // the determinant of [a11,a12;a21,a22] is det = a11*a22-a21*a12\n      return math.subtract(\n          math.multiply(matrix[0][0], matrix[1][1]),\n          math.multiply(matrix[1][0], matrix[0][1])\n      );\n    }\n    else {\n      // this is an n x n matrix\n      var compute_mu = function (matrix) {\n        var i, j;\n\n        // Compute the matrix with zero lower triangle, same upper triangle,\n        // and diagonals given by the negated sum of the below diagonal\n        // elements.\n        var mu = new Array(matrix.length);\n        var sum = 0;\n        for (i = 1; i < matrix.length; i++) {\n          sum = math.add(sum, matrix[i][i]);\n        }\n\n        for (i = 0; i < matrix.length; i++) {\n          mu[i] = new Array(matrix.length);\n          mu[i][i] = math.unaryMinus(sum);\n\n          for (j = 0; j < i; j++) {\n            mu[i][j] = 0; // TODO: make bignumber 0 in case of bignumber computation\n          }\n\n          for (j = i + 1; j < matrix.length; j++) {\n            mu[i][j] = matrix[i][j];\n          }\n\n          if (i+1 < matrix.length) {\n            sum = math.subtract(sum, matrix[i + 1][i + 1]);\n          }\n        }\n\n        return mu;\n      };\n\n      var fa = matrix;\n      for (var i = 0; i < rows - 1; i++) {\n        fa = math.multiply(compute_mu(fa), matrix);\n      }\n\n      if (rows % 2 == 0) {\n        return math.unaryMinus(fa[0][0]);\n      } else {\n        return fa[0][0];\n      }\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/det.js\n ** module id = 105\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix,\n\n      object = util.object,\n      array = util.array,\n      isArray = array.isArray,\n      isNumber = util.number.isNumber,\n      isString = util.string.isString,\n      isInteger = util.number.isInteger;\n\n  /**\n   * Create a diagonal matrix or retrieve the diagonal of a matrix\n   *\n   * When `x` is a vector, a matrix with vector `x` on the diagonal will be returned.\n   * When `x` is a two dimensional matrix, the matrixes `k`th diagonal will be returned as vector.\n   * When k is positive, the values are placed on the super diagonal.\n   * When k is negative, the values are placed on the sub diagonal.\n   *\n   * Syntax:\n   *\n   *     math.diag(X)\n   *     math.diag(X, format)\n   *     math.diag(X, k)\n   *     math.diag(X, k, format)\n   *\n   * Examples:\n   *\n   *     // create a diagonal matrix\n   *     math.diag([1, 2, 3]);      // returns [[1, 0, 0], [0, 2, 0], [0, 0, 3]]\n   *     math.diag([1, 2, 3], 1);   // returns [[0, 1, 0, 0], [0, 0, 2, 0], [0, 0, 0, 3]]\n   *     math.diag([1, 2, 3], -1);  // returns [[0, 0, 0], [1, 0, 0], [0, 2, 0], [0, 0, 3]]\n   *\n   *    // retrieve the diagonal from a matrix\n   *    var a = [[1, 2, 3], [4, 5, 6], [7, 8, 9]];\n   *    math.diag(a);   // returns [1, 5, 9]\n   *\n   * See also:\n   *\n   *     ones, zeros, eye\n   *\n   * @param {Matrix | Array} x          A two dimensional matrix or a vector\n   * @param {Number | BigNumber} [k=0]  The diagonal where the vector will be filled\n   *                                    in or retrieved.\n   * @param {string} [format='dense']   The matrix storage format.\n   *\n   * @returns {Matrix | Array}          Diagonal matrix from input vector, or diagonal from input matrix.\n   */\n  math.diag = function diag (x, k, format) {\n    if (arguments.length === 0 || arguments.length > 3) {\n      throw new math.error.ArgumentsError('diag', arguments.length, 1, 3);\n    }\n    \n    // process args\n    switch (arguments.length) {\n      case 1:\n        // defaults\n        k = 0;\n        format = undefined;\n        break;\n      case 2:\n        // check second arg\n        if (isString(arguments[1])) {\n          // use arg as format\n          format = arguments[1];\n          // defaults\n          k = 0;\n        }\n        break;\n    }\n    \n    // verify x\n    if (!(x instanceof Matrix) && !isArray(x)) {\n      // throw\n      throw new TypeError ('First parameter in function diag must be a Matrix or Array');\n    }\n\n    // convert BigNumber to a number if needed\n    if (k instanceof BigNumber) \n      k = k.toNumber();\n\n    // verify k\n    if (!isNumber(k) || !isInteger(k)) {\n      throw new TypeError ('Second parameter in function diag must be an integer');\n    }\n    \n    // verify format\n    if (format && !isString(format)) {\n      // throw\n      throw new TypeError ('Third parameter in function diag must be a String');\n    }\n    \n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    var s, defaultValue, vector, d, i, iMax;\n    \n    // process matrix\n    if (x instanceof Matrix) {\n      // matrix data\n      d = x.valueOf();\n      // set format if needed\n      format = format || x.storage();\n      // matrix size\n      s = x.size();\n    }\n    else {\n      // data (array)\n      d = x;\n      // get size    \n      s = array.size(x);\n    }\n     \n    // check we need to return a matrix\n    if (format) {\n      // check length\n      if (s.length === 1) {\n        // default value\n        defaultValue = (d[0] instanceof BigNumber) ? new BigNumber(0) : 0;\n        // matrix size\n        var ms = [d.length + kSub, d.length + kSuper];\n        // get matrix constructor\n        var F = Matrix.storage(format);\n        // create diagonal matrix\n        return F.diagonal(ms, d, k, defaultValue);\n      }\n      // check a two dimensional matrix was provided\n      if (s.length === 2) {\n        // return kth diagonal\n        vector = x.diagonal(k);\n        // return matrix\n        return math.matrix(vector, format);\n      }\n      throw new RangeError('Matrix for function diag must be 2 dimensional');\n    }\n    \n    // process array length\n    switch (s.length) {\n      case 1:\n        // default value\n        defaultValue = (d[0] instanceof BigNumber) ? new BigNumber(0) : 0;\n        // data\n        var data = [];\n        // resize array\n        array.resize(data, [d.length + kSub, d.length + kSuper], defaultValue);\n        // set diagonal\n        iMax = d.length;\n        for (i = 0; i < iMax; i++) {\n          data[i + kSub][i + kSuper] = object.clone(d[i]);\n        }\n        return data;\n\n      case 2:\n        // x is a matrix get diagonal from matrix\n        vector = [];\n        iMax = Math.min(s[0] - kSub, s[1] - kSuper);\n        for (i = 0; i < iMax; i++) {\n          vector[i] = object.clone(d[i + kSub][i + kSuper]);\n        }\n        return vector;\n\n      default:\n        throw new RangeError('Matrix for function diag must be 2 dimensional');\n    }\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/diag.js\n ** module id = 106\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function(math) {\n  var array = require('../../util/array');\n  var Matrix = math.type.Matrix;\n\n  /**\n   * Calculate the dot product of two vectors. The dot product of\n   * `A = [a1, a2, a3, ..., an]` and `B = [b1, b2, b3, ..., bn]` is defined as:\n   *\n   *    dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn\n   *\n   * Syntax:\n   *\n   *    math.dot(x, y)\n   *\n   * Examples:\n   *\n   *    math.dot([2, 4, 1], [2, 2, 3]);       // returns Number 15\n   *    math.multiply([2, 4, 1], [2, 2, 3]);  // returns Number 15\n   *\n   * See also:\n   *\n   *    multiply, cross\n   *\n   * @param  {Array | Matrix} x     First vector\n   * @param  {Array | Matrix} y     Second vector\n   * @return {Number}               Returns the dot product of `x` and `y`\n   */\n  math.dot = function dot(x, y) {\n    if (x instanceof Matrix) {\n      if (y instanceof Matrix) {\n        return _dot(x.toArray(), y.toArray());\n      }\n      else if (Array.isArray(y)) {\n        return _dot(x.toArray(), y);\n      }\n    }\n    else if (Array.isArray(x)) {\n      if (y instanceof Matrix) {\n        return _dot(x, y.toArray());\n      }\n      else if (Array.isArray(y)) {\n        return _dot(x, y);\n      }\n    }\n\n    throw new math.error.UnsupportedTypeError('dot', math['typeof'](x), math['typeof'](y));\n  };\n\n  /**\n   * Calculate the dot product for two arrays\n   * @param {Array} x  First vector\n   * @param {Array} y  Second vector\n   * @returns {Number} Returns the dot product of x and y\n   * @private\n   */\n  // TODO: double code with math.multiply\n  function _dot(x, y) {\n    var xSize= array.size(x);\n    var ySize = array.size(y);\n    var len = xSize[0];\n\n    if (xSize.length !== 1 || ySize.length !== 1) throw new RangeError('Vector expected'); // TODO: better error message\n    if (xSize[0] != ySize[0]) throw new RangeError('Vectors must have equal length (' + xSize[0] + ' != ' + ySize[0] + ')');\n    if (len == 0) throw new RangeError('Cannot calculate the dot product of empty vectors');\n\n    var prod = 0;\n    for (var i = 0; i < len; i++) {\n      prod = math.add(prod, math.multiply(x[i], y[i]));\n    }\n\n    return prod;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/dot.js\n ** module id = 107\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix,\n      collection = math.collection,\n      array = util.array,\n\n      isNumber = util.number.isNumber,\n      isInteger = util.number.isInteger,\n      isString = util.string.isString,\n      isArray = Array.isArray;\n\n  /**\n   * Create a 2-dimensional identity matrix with size m x n or n x n.\n   * The matrix has ones on the diagonal and zeros elsewhere.\n   *\n   * Syntax:\n   *\n   *    math.eye(n)\n   *    math.eye(n, format)\n   *    math.eye(m, n)\n   *    math.eye(m, n, format)\n   *    math.eye([m, n])\n   *    math.eye([m, n], format)\n   *\n   * Examples:\n   *\n   *    math.eye(3);                    // returns [[1, 0, 0], [0, 1, 0], [0, 0, 1]]\n   *    math.eye(3, 2);                 // returns [[1, 0], [0, 1], [0, 0]]\n   *\n   *    var A = [[1, 2, 3], [4, 5, 6]];\n   *    math.eye(math.size(b));         // returns [[1, 0, 0], [0, 1, 0]]\n   *\n   * See also:\n   *\n   *    diag, ones, zeros, size, range\n   *\n   * @param {...Number | Matrix | Array} size   The size for the matrix\n   * @param {string} [format]                   The Matrix storage format\n   *\n   * @return {Matrix | Array | Number} A matrix with ones on the diagonal.\n   */\n  math.eye = function eye (size, format) {\n    // process arguments\n    var args = collection.argsToArray(arguments);    \n    // matrix storage format\n    var f;\n    // check format was provided\n    if (args.length > 0 && isString(args[args.length - 1])) {\n      // set format\n      f = args[args.length - 1];\n      // re-process arguments, ignore last one\n      args = collection.argsToArray(args.slice(0, args.length - 1));\n    }\n    else if (size instanceof Matrix) {\n      // use matrix format\n      f = size.storage();\n    }\n    else if (!isArray(size) && config.matrix === 'matrix') {\n      // use default matrix format\n      f = 'default';\n    }\n\n    // check a single arg was provided\n    if (args.length == 1) {\n      // change to a 2-dimensional square\n      args[1] = args[0];\n    }\n    else if (args.length > 2) {\n      // error in case of an n-dimensional size\n      throw new math.error.ArgumentsError('eye', args.length, 0, 2);\n    }\n    \n    // convert arguments from bignumber to numbers if needed\n    var asBigNumber = false;\n    // map arguments & validate\n    args = args.map(function (value) {\n      // check it is a big number\n      if (value instanceof BigNumber) {\n        // set flag\n        asBigNumber = true;\n        // convert it\n        value = value.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(value) || !isInteger(value) || value < 0) {\n        throw new Error('Parameters in function eye must be positive integers');\n      } \n      return value;\n    });\n\n    // one\n    var one = asBigNumber ? new BigNumber(1) : 1;\n    // default value\n    var defaultValue = asBigNumber ? new BigNumber(0) : 0;\n\n    // check we need to return a matrix\n    if (f) {      \n      // check dimensions\n      if (args.length === 0) {\n        // empty matrix\n        return math.matrix(f);\n      }\n      // get matrix storage constructor\n      var F = Matrix.storage(f);\n      // create diagonal matrix (use optimized implementation for storage format)\n      return F.diagonal(args, one, 0, defaultValue);\n    }\n\n    // empty array\n    var res = [];\n    // check we need to resize array\n    if (args.length > 0) {\n      // resize array\n      res = array.resize(res, args, defaultValue);\n      // fill in ones on the diagonal\n      var minimum = math.min(args);\n      // fill diagonal\n      for (var d = 0; d < minimum; d++) {\n        res[d][d] = one;\n      }\n    }\n    return res;\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/eye.js\n ** module id = 108\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index');\n\n  var Matrix = math.type.Matrix;\n\n  var object = util.object;\n  var array = util.array;\n  var isArray = Array.isArray;\n\n  /**\n   * Flatten a multi dimensional matrix into a single dimensional matrix.\n   *\n   * Syntax:\n   *\n   *    math.flatten(x)\n   *\n   * Examples:\n   *\n   *    math.flatten([[1,2], [3,4]]);   // returns [1, 2, 3, 4]\n   *\n   * See also:\n   *\n   *    concat, resize, size, squeeze\n   *\n   * @param {Matrix | Array} x   Matrix to be flattened\n   * @return {Matrix | Array} Returns the flattened matrix\n   */\n  math.flatten = function flatten (x) {\n    if (arguments.length !== 1) {\n      throw new math.error.ArgumentsError('flatten', arguments.length, 1);\n    }\n\n    if (x instanceof Matrix) {\n      var clone = object.clone(x.toArray());\n      var flat = array.flatten(clone);\n      return math.matrix(flat);\n    }\n\n    if (isArray(x)) {\n      return array.flatten(object.clone(x));\n    }\n\n    throw new math.error.UnsupportedTypeError('flatten', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/flatten.js\n ** module id = 109\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index');\n  var Matrix = math.type.Matrix;\n\n  /**\n   * Calculate the inverse of a square matrix.\n   *\n   * Syntax:\n   *\n   *     math.inv(x)\n   *\n   * Examples:\n   *\n   *     math.inv([[1, 2], [3, 4]]);  // returns [[-2, 1], [1.5, -0.5]]\n   *     math.inv(4);                 // returns 0.25\n   *     1 / 4;                       // returns 0.25\n   *\n   * See also:\n   *\n   *     det, transpose\n   *\n   * @param {Number | Complex | Array | Matrix} x     Matrix to be inversed\n   * @return {Number | Complex | Array | Matrix} The inverse of `x`.\n   */\n  math.inv = function inv (x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('inv', arguments.length, 1);\n    }\n    var size = math.size(x).valueOf();\n    switch (size.length) {\n      case 0:\n        // scalar\n        return math._divide(1, x);\n\n      case 1:\n        // vector\n        if (size[0] == 1) {\n          if (x instanceof Matrix) {\n            return math.matrix([\n              math._divide(1, x.valueOf()[0])\n            ]);\n          }\n          else {\n            return [\n              math._divide(1, x[0])\n            ];\n          }\n        }\n        else {\n          throw new RangeError('Matrix must be square ' +\n              '(size: ' + util.string.format(size) + ')');\n        }\n\n      case 2:\n        // two dimensional array\n        var rows = size[0];\n        var cols = size[1];\n        if (rows == cols) {\n          if (x instanceof Matrix) {\n            return math.matrix(\n              _inv(x.valueOf(), rows, cols),\n              x.storage()\n            );\n          }\n          else {\n            // return an Array\n            return _inv(x, rows, cols);\n          }\n        }\n        else {\n          throw new RangeError('Matrix must be square ' +\n              '(size: ' + util.string.format(size) + ')');\n        }\n\n      default:\n        // multi dimensional array\n        throw new RangeError('Matrix must be two dimensional ' +\n            '(size: ' + util.string.format(size) + ')');\n    }\n  };\n\n  /**\n   * Calculate the inverse of a square matrix\n   * @param {Array[]} matrix  A square matrix\n   * @param {Number} rows     Number of rows\n   * @param {Number} cols     Number of columns, must equal rows\n   * @return {Array[]} inv    Inverse matrix\n   * @private\n   */\n  function _inv (matrix, rows, cols){\n    var r, s, f, value, temp;\n\n    if (rows == 1) {\n      // this is a 1 x 1 matrix\n      value = matrix[0][0];\n      if (value == 0) {\n        throw Error('Cannot calculate inverse, determinant is zero');\n      }\n      return [[\n        math._divide(1, value)\n      ]];\n    }\n    else if (rows == 2) {\n      // this is a 2 x 2 matrix\n      var d = math.det(matrix);\n      if (d == 0) {\n        throw Error('Cannot calculate inverse, determinant is zero');\n      }\n      return [\n        [\n          math._divide(matrix[1][1], d),\n          math._divide(math.unaryMinus(matrix[0][1]), d)\n        ],\n        [\n          math._divide(math.unaryMinus(matrix[1][0]), d),\n          math._divide(matrix[0][0], d)\n        ]\n      ];\n    }\n    else {\n      // this is a matrix of 3 x 3 or larger\n      // calculate inverse using gauss-jordan elimination\n      //      http://en.wikipedia.org/wiki/Gaussian_elimination\n      //      http://mathworld.wolfram.com/MatrixInverse.html\n      //      http://math.uww.edu/~mcfarlat/inverse.htm\n\n      // make a copy of the matrix (only the arrays, not of the elements)\n      var A = matrix.concat();\n      for (r = 0; r < rows; r++) {\n        A[r] = A[r].concat();\n      }\n\n      // create an identity matrix which in the end will contain the\n      // matrix inverse\n      var B = math.eye(rows).valueOf();\n\n      // loop over all columns, and perform row reductions\n      for (var c = 0; c < cols; c++) {\n        // element Acc should be non zero. if not, swap content\n        // with one of the lower rows\n        r = c;\n        while (r < rows && A[r][c] == 0) {\n          r++;\n        }\n        if (r == rows || A[r][c] == 0) {\n          // TODO: in case of zero det, just return a matrix wih Infinity values? (like octave)\n          throw Error('Cannot calculate inverse, determinant is zero');\n        }\n        if (r != c) {\n          temp = A[c]; A[c] = A[r]; A[r] = temp;\n          temp = B[c]; B[c] = B[r]; B[r] = temp;\n        }\n\n        // eliminate non-zero values on the other rows at column c\n        var Ac = A[c],\n            Bc = B[c];\n        for (r = 0; r < rows; r++) {\n          var Ar = A[r],\n              Br = B[r];\n          if(r != c) {\n            // eliminate value at column c and row r\n            if (Ar[c] != 0) {\n              f = math._divide(math.unaryMinus(Ar[c]), Ac[c]);\n\n              // add (f * row c) to row r to eliminate the value\n              // at column c\n              for (s = c; s < cols; s++) {\n                Ar[s] = math.add(Ar[s], math.multiply(f, Ac[s]));\n              }\n              for (s = 0; s < cols; s++) {\n                Br[s] = math.add(Br[s],  math.multiply(f, Bc[s]));\n              }\n            }\n          }\n          else {\n            // normalize value at Acc to 1,\n            // divide each value on row r with the value at Acc\n            f = Ac[c];\n            for (s = c; s < cols; s++) {\n              Ar[s] = math._divide(Ar[s], f);\n            }\n            for (s = 0; s < cols; s++) {\n              Br[s] = math._divide(Br[s], f);\n            }\n          }\n        }\n      }\n      return B;\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/inv.js\n ** module id = 110\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix,\n      collection = math.collection,\n\n      array = util.array,\n      isNumber = util.number.isNumber,\n      isInteger = util.number.isInteger,\n      isString = util.string.isString,\n      isArray = Array.isArray;\n\n  /**\n   * Create a matrix filled with ones. The created matrix can have one or\n   * multiple dimensions.\n   *\n   * Syntax:\n   *\n   *    math.ones(m)\n   *    math.ones(m, format)\n   *    math.ones(m, n)\n   *    math.ones(m, n, format)\n   *    math.ones([m, n])\n   *    math.ones([m, n], format)\n   *    math.ones([m, n, p, ...])\n   *    math.ones([m, n, p, ...], format)\n   *\n   * Examples:\n   *\n   *    math.ones(3);                   // returns [1, 1, 1]\n   *    math.ones(3, 2);                // returns [[1, 1], [1, 1], [1, 1]]\n   *    math.ones(3, 2, 'dense');       // returns Dense Matrix [[1, 1], [1, 1], [1, 1]]\n   *\n   *    var A = [[1, 2, 3], [4, 5, 6]];\n   *    math.zeros(math.size(A));       // returns [[1, 1, 1], [1, 1, 1]]\n   *\n   * See also:\n   *\n   *    zeros, eye, size, range\n   *\n   * @param {...Number | Array} size    The size of each dimension of the matrix\n   * @param {string} [format]           The Matrix storage format\n   *\n   * @return {Array | Matrix | Number}  A matrix filled with ones\n   */\n  math.ones = function ones (size, format) {\n    // process arguments\n    var args = collection.argsToArray(arguments);    \n    // matrix storage format\n    var f;\n    // check format was provided\n    if (args.length > 0 && isString(args[args.length - 1])) {\n      // set format\n      f = args[args.length - 1];\n      // re-process arguments, ignore last one\n      args = collection.argsToArray(args.slice(0, args.length - 1));\n    }\n    else if (size instanceof Matrix) {\n      // use matrix format\n      f = size.storage();\n    }\n    else if (!isArray(size) && config.matrix === 'matrix') {\n      // use default matrix format\n      f = 'default';\n    }\n\n    // convert arguments from bignumber to numbers if needed\n    var asBigNumber = false;\n    // map arguments & validate\n    args = args.map(function (value) {\n      // check it is a big number\n      if (value instanceof BigNumber) {\n        // set flag\n        asBigNumber = true;\n        // convert it\n        value = value.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(value) || !isInteger(value) || value < 0) {\n        throw new Error('Parameters in function eye must be positive integers');\n      } \n      return value;\n    });\n    \n    // default value\n    var defaultValue = asBigNumber ? new BigNumber(1) : 1;\n\n    // check we need to return a matrix\n    if (f) {\n      // create empty matrix\n      var m = math.matrix(f);\n      // check we need to resize matrix\n      if (args.length > 0) {\n        // resize it to correct size\n        return m.resize(args, defaultValue);\n      }\n      return m;\n    }\n    // empty array\n    var res = [];\n    // check we need to resize array\n    if (args.length > 0) {\n      // resize array\n      return array.resize(res, args, defaultValue);\n    }\n    return res;\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/ones.js\n ** module id = 111\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix,\n      collection = math.collection,\n\n      isBoolean = util['boolean'].isBoolean,\n      isString = util.string.isString,\n      isNumber = util.number.isNumber;\n\n  /**\n   * Create an array from a range.\n   * By default, the range end is excluded. This can be customized by providing\n   * an extra parameter `includeEnd`.\n   *\n   * Syntax:\n   *\n   *     math.range(str [, includeEnd])               // Create a range from a string,\n   *                                                  // where the string contains the\n   *                                                  // start, optional step, and end,\n   *                                                  // separated by a colon.\n   *     math.range(start, end [, includeEnd])        // Create a range with start and\n   *                                                  // end and a step size of 1.\n   *     math.range(start, end, step [, includeEnd])  // Create a range with start, step,\n   *                                                  // and end.\n   *\n   * Where:\n   *\n   * - `str: String`\n   *   A string 'start:end' or 'start:step:end'\n   * - `start: {Number | BigNumber}`\n   *   Start of the range\n   * - `end: Number | BigNumber`\n   *   End of the range, excluded by default, included when parameter includeEnd=true\n   * - `step: Number | BigNumber`\n   *   Step size. Default value is 1.\n   * - `includeEnd: boolean`\n   *   Option to specify whether to include the end or not. False by default.\n   *\n   * Examples:\n   *\n   *     math.range(2, 6);        // [2, 3, 4, 5]\n   *     math.range(2, -3, -1);   // [2, 1, 0, -1, -2]\n   *     math.range('2:1:6');     // [2, 3, 4, 5]\n   *     math.range(2, 6, true);  // [2, 3, 4, 5, 6]\n   *\n   * See also:\n   *\n   *     ones, zeros, size, subset\n   *\n   * @param {*} args   Parameters describing the ranges `start`, `end`, and optional `step`.\n   * @return {Array | Matrix} range\n   */\n  math.range = function range(args) {\n    var params = Array.prototype.slice.call(arguments),\n        start,\n        end,\n        step,\n        includeEnd = false;\n\n    // read the includeEnd parameter\n    if (isBoolean(params[params.length - 1])) {\n      includeEnd = params.pop() ? true : false;\n    }\n\n    switch (params.length) {\n      case 1:\n        // range(str)\n        // parse string into a range\n        if (isString(params[0])) {\n          var r = _parse(params[0]);\n          if (!r){\n            throw new SyntaxError('String \"' + params[0] + '\" is no valid range');\n          }\n\n          start = r.start;\n          end = r.end;\n          step = r.step;\n        }\n        else {\n          throw new TypeError('Two or three numbers or a single string expected in function range');\n        }\n        break;\n\n      case 2:\n        // range(str, end)\n        // range(start, end)\n        start = params[0];\n        end = params[1];\n        step = 1;\n        break;\n\n      case 3:\n        // range(start, end, step)\n        start = params[0];\n        end = params[1];\n        step = params[2];\n        break;\n\n      case 4:\n        throw new TypeError('Parameter includeEnd must be a boolean');\n\n      default:\n        throw new math.error.ArgumentsError('range', arguments.length, 2, 4);\n    }\n\n    // verify type of parameters\n    if (!isNumber(start) && !(start instanceof BigNumber)) {\n      throw new TypeError('Parameter start must be a number');\n    }\n    if (!isNumber(end) && !(end instanceof BigNumber)) {\n      throw new TypeError('Parameter end must be a number');\n    }\n    if (!isNumber(step) && !(step instanceof BigNumber)) {\n      throw new TypeError('Parameter step must be a number');\n    }\n\n    // go big\n    if (start instanceof BigNumber || end instanceof BigNumber || step instanceof BigNumber) {\n      // create a range with big numbers\n      var asBigNumber = true;\n\n      // convert start, end, step to BigNumber\n      if (!(start instanceof BigNumber)) start = BigNumber.convert(start);\n      if (!(end instanceof BigNumber))   end   = BigNumber.convert(end);\n      if (!(step instanceof BigNumber))  step  = BigNumber.convert(step);\n\n      if (!(start instanceof BigNumber) || !(end instanceof BigNumber) || !(step instanceof BigNumber)) {\n        // not all values can be converted to big number :(\n        // fall back to numbers\n        asBigNumber = false;\n        if (start instanceof BigNumber) start = start.toNumber();\n        if (end instanceof BigNumber)   end   = end.toNumber();\n        if (step instanceof BigNumber)  step  = step.toNumber();\n      }\n    }\n\n    // generate the range\n    var fn = asBigNumber ?\n        (includeEnd ? _bigRangeInc : _bigRange) :\n        (includeEnd ? _rangeInc    : _range);\n    var array = fn(start, end, step);\n\n    // return as array or matrix\n    return (config.matrix === 'array') ? array : math.matrix(array);\n  };\n\n  /**\n   * Create a range with numbers. End is excluded\n   * @param {Number} start\n   * @param {Number} end\n   * @param {Number} step\n   * @returns {Array} range\n   * @private\n   */\n  function _range (start, end, step) {\n    var array = [],\n        x = start;\n    if (step > 0) {\n      while (x < end) {\n        array.push(x);\n        x += step;\n      }\n    }\n    else if (step < 0) {\n      while (x > end) {\n        array.push(x);\n        x += step;\n      }\n    }\n\n    return array;\n  }\n\n  /**\n   * Create a range with numbers. End is included\n   * @param {Number} start\n   * @param {Number} end\n   * @param {Number} step\n   * @returns {Array} range\n   * @private\n   */\n  function _rangeInc (start, end, step) {\n    var array = [],\n        x = start;\n    if (step > 0) {\n      while (x <= end) {\n        array.push(x);\n        x += step;\n      }\n    }\n    else if (step < 0) {\n      while (x >= end) {\n        array.push(x);\n        x += step;\n      }\n    }\n\n    return array;\n  }\n\n  /**\n   * Create a range with big numbers. End is excluded\n   * @param {BigNumber} start\n   * @param {BigNumber} end\n   * @param {BigNumber} step\n   * @returns {Array} range\n   * @private\n   */\n  function _bigRange (start, end, step) {\n    var array = [],\n        x = start.clone(),\n        zero = new BigNumber(0);\n    if (step.gt(zero)) {\n      while (x.lt(end)) {\n        array.push(x);\n        x = x.plus(step);\n      }\n    }\n    else if (step.lt(zero)) {\n      while (x.gt(end)) {\n        array.push(x);\n        x = x.plus(step);\n      }\n    }\n\n    return array;\n  }\n\n  /**\n   * Create a range with big numbers. End is included\n   * @param {BigNumber} start\n   * @param {BigNumber} end\n   * @param {BigNumber} step\n   * @returns {Array} range\n   * @private\n   */\n  function _bigRangeInc (start, end, step) {\n    var array = [],\n        x = start.clone(),\n        zero = new BigNumber(0);\n    if (step.gt(zero)) {\n      while (x.lte(end)) {\n        array.push(x);\n        x = x.plus(step);\n      }\n    }\n    else if (step.lt(zero)) {\n      while (x.gte(end)) {\n        array.push(x);\n        x = x.plus(step);\n      }\n    }\n\n    return array;\n  }\n\n  /**\n   * Parse a string into a range,\n   * The string contains the start, optional step, and end, separated by a colon.\n   * If the string does not contain a valid range, null is returned.\n   * For example str='0:2:11'.\n   * @param {String} str\n   * @return {Object | null} range Object containing properties start, end, step\n   * @private\n   */\n  function _parse (str) {\n    var args = str.split(':'),\n        nums = null;\n\n    if (config.number === 'bignumber') {\n      // bignumber\n      try {\n        nums = args.map(function (arg) {\n          return new BigNumber(arg);\n        });\n      }\n      catch (err) {\n        return null;\n      }\n    }\n    else {\n      // number\n      nums = args.map(function (arg) {\n        // use Number and not parseFloat as Number returns NaN on invalid garbage in the string\n        return Number(arg);\n      });\n\n      var invalid = nums.some(function (num) {\n        return isNaN(num);\n      });\n      if(invalid) {\n        return null;\n      }\n    }\n\n    switch (nums.length) {\n      case 2:\n        return {\n          start: nums[0],\n          end: nums[1],\n          step: 1\n        };\n\n      case 3:\n        return {\n          start: nums[0],\n          end: nums[2],\n          step: nums[1]\n        };\n\n      default:\n        return null;\n    }\n  }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/range.js\n ** module id = 112\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix,\n\n      array = util.array,\n      clone = util.object.clone,\n      string = util.string,\n      isString = util.string.isString,\n      isNumber = util.number.isNumber,\n      isInteger = util.number.isInteger,\n      isArray = array.isArray;\n\n  /**\n   * Resize a matrix\n   *\n   * Syntax:\n   *\n   *     math.resize(x, size)\n   *     math.resize(x, size, defaultValue)\n   *\n   * Examples:\n   *\n   *     math.resize([1, 2, 3, 4, 5], [3]); // returns Array  [1, 2, 3]\n   *     math.resize([1, 2, 3], [5], 0);    // returns Array  [1, 2, 3, 0, 0]\n   *     math.resize(2, [2, 3], 0);         // returns Matrix [[2, 0, 0], [0, 0, 0]]\n   *     math.resize(\"hello\", [8], \"!\");    // returns String 'hello!!!'\n   *\n   * See also:\n   *\n   *     size, squeeze, subset\n   *\n   * @param {* | Array | Matrix} x             Matrix to be resized\n   * @param {Array | Matrix} size              One dimensional array with numbers\n   * @param {Number | String} [defaultValue=0] Zero by default, except in\n   *                                           case of a string, in that case\n   *                                           defaultValue = ' '\n   * @return {* | Array | Matrix} A resized clone of matrix `x`\n   */\n  math.resize = function resize (x, size, defaultValue) {\n    if (arguments.length != 2 && arguments.length != 3) {\n      throw new math.error.ArgumentsError('resize', arguments.length, 2, 3);\n    }\n\n    if (size instanceof Matrix) {\n      size = size.valueOf(); // get Array\n    }\n\n    if (size.length && size[0] instanceof BigNumber) {\n      // convert bignumbers to numbers\n      size = size.map(function (value) {\n        return (value instanceof BigNumber) ? value.toNumber() : value;\n      });\n    }\n    \n    // check x is a Matrix\n    if (x instanceof Matrix) {\n      // use optimized matrix implementation, return copy\n      return x.resize(size, defaultValue, true);\n    }\n    \n    if (isString(x)) {\n      // resize string\n      return _resizeString(x, size, defaultValue);\n    }\n    \n    // check result should be a matrix\n    var asMatrix = isArray(x) ? false : (config.matrix !== 'array');\n\n    if (size.length == 0) {\n      // output a scalar\n      while (isArray(x)) {\n        x = x[0];\n      }\n\n      return clone(x);\n    }\n    else {\n      // output an array/matrix\n      if (!isArray(x)) {\n        x = [x];\n      }\n      x = clone(x);\n\n      var res = array.resize(x, size, defaultValue);\n      return asMatrix ? math.matrix(res) : res;\n    }\n  };\n\n  /**\n   * Resize a string\n   * @param {String} str\n   * @param {Number[]} size\n   * @param {string} [defaultChar=' ']\n   * @private\n   */\n  function _resizeString(str, size, defaultChar) {\n    if (defaultChar !== undefined) {\n      if (!isString(defaultChar) || defaultChar.length !== 1) {\n        throw new TypeError('Single character expected as defaultValue');\n      }\n    }\n    else {\n      defaultChar = ' ';\n    }\n\n    if (size.length !== 1) {\n      throw new math.error.DimensionError(size.length, 1);\n    }\n    var len = size[0];\n    if (!isNumber(len) || !isInteger(len)) {\n      throw new TypeError('Invalid size, must contain positive integers ' +\n          '(size: ' + string.format(size) + ')');\n    }\n\n    if (str.length > len) {\n      return str.substring(0, len);\n    }\n    else if (str.length < len) {\n      var res = str;\n      for (var i = 0, ii = len - str.length; i < ii; i++) {\n        res += defaultChar;\n      }\n      return res;\n    }\n    else {\n      return str;\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/resize.js\n ** module id = 113\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      Matrix = math.type.Matrix,\n\n      array = util.array,\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit;\n\n  /**\n   * Calculate the size of a matrix or scalar.\n   *\n   * Syntax:\n   *\n   *     math.size(x)\n   *\n   * Examples:\n   *\n   *     math.size(2.3);                  // returns []\n   *     math.size('hello world');        // returns [11]\n   *\n   *     var A = [[1, 2, 3], [4, 5, 6]];\n   *     math.size(A);                    // returns [2, 3]\n   *     math.size(math.range(1,6));      // returns [5]\n   *\n   * See also:\n   *\n   *     resize, squeeze, subset\n   *\n   * @param {Boolean | Number | Complex | Unit | String | Array | Matrix} x  A matrix\n   * @return {Array | Matrix} A vector with size of `x`.\n   */\n  math.size = function size (x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('size', arguments.length, 1);\n    }\n\n    var asArray = (config.matrix === 'array');\n\n    if (isNumber(x) || isComplex(x) || isUnit(x) || isBoolean(x) ||\n        x == null || x instanceof BigNumber) {\n      return asArray ? [] : math.matrix([]);\n    }\n\n    if (isString(x)) {\n      return asArray ? [x.length] : math.matrix([x.length]);\n    }\n\n    if (Array.isArray(x)) {\n      return array.size(x);\n    }\n\n    if (x instanceof Matrix) {\n      return math.matrix(x.size());\n    }\n\n    throw new math.error.UnsupportedTypeError('size', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/size.js\n ** module id = 114\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      Matrix = math.type.Matrix,\n\n      object = util.object,\n      array = util.array,\n      isArray = Array.isArray;\n\n  /**\n   * Squeeze a matrix, remove inner and outer singleton dimensions from a matrix.\n   *\n   * Syntax:\n   *\n   *     math.squeeze(x)\n   *\n   * Examples:\n   *\n   *     math.squeeze([3]);           // returns 3\n   *     math.squeeze([[3]]);         // returns 3\n   *\n   *     var A = math.zeros(3, 1);    // returns [[0], [0], [0]] (size 3x1)\n   *     math.squeeze(A);             // returns [0, 0, 0] (size 3)\n   *\n   *     var B = math.zeros(1, 3);    // returns [[0, 0, 0]] (size 1x3)\n   *     math.squeeze(B);             // returns [0, 0, 0] (size 3)\n   *\n   *     // only inner and outer dimensions are removed\n   *     var C = math.zeros(2, 1, 3); // returns [[[0, 0, 0]], [[0, 0, 0]]] (size 2x1x3)\n   *     math.squeeze(C);             // returns [[[0, 0, 0]], [[0, 0, 0]]] (size 2x1x3)\n   *\n   * See also:\n   *\n   *     subset\n   *\n   * @param {Matrix | Array} x      Matrix to be squeezed\n   * @return {Matrix | Array} Squeezed matrix\n   */\n  math.squeeze = function squeeze (x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('squeeze', arguments.length, 1);\n    }\n\n    if (isArray(x)) {\n      return array.squeeze(object.clone(x));\n    }\n    else if (x instanceof Matrix) {\n      var res = array.squeeze(x.toArray());\n      return isArray(res) ? math.matrix(res) : res;\n    }\n    else {\n      // scalar\n      return object.clone(x);\n    }\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/squeeze.js\n ** module id = 115\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n\n  var util = require('../../util/index'),\n\n      Matrix = math.type.Matrix,\n      Index = require('../../type/Index'),\n\n      array = util.array,\n      isString = util.string.isString,\n      isArray = Array.isArray;\n\n  /**\n   * Get or set a subset of a matrix or string.\n   *\n   * Syntax:\n   *     math.subset(value, index)                                // retrieve a subset\n   *     math.subset(value, index, replacement [, defaultValue])  // replace a subset\n   *\n   * Examples:\n   *\n   *     // get a subset\n   *     var d = [[1, 2], [3, 4]];\n   *     math.subset(d, math.index(1, 0));        // returns 3\n   *     math.subset(d, math.index([0, 2], 1));   // returns [[2], [4]]\n   *\n   *     // replace a subset\n   *     var e = [];\n   *     var f = math.subset(e, math.index(0, [0, 2]), [5, 6]);  // f = [[5, 6]]\n   *     var g = math.subset(f, math.index(1, 1), 7, 0);         // g = [[5, 6], [0, 7]]\n   *\n   * See also:\n   *\n   *     size, resize, squeeze, index\n   *\n   * @param {Array | Matrix | String} matrix  An array, matrix, or string\n   * @param {Index} index                     An index containing ranges for each\n   *                                          dimension\n   * @param {*} [replacement]                 An array, matrix, or scalar.\n   *                                          If provided, the subset is replaced with replacement.\n   *                                          If not provided, the subset is returned\n   * @param {*} [defaultValue=undefined]      Default value, filled in on new entries when\n   *                                          the matrix is resized. If not provided,\n   *                                          math.matrix elements will be left undefined.\n   * @return {Array | Matrix | String} Either the retrieved subset or the updated matrix.\n   */\n  math.subset = function subset (matrix, index, replacement, defaultValue) {\n    switch (arguments.length) {\n      case 2: // get subset\n        return _getSubset(arguments[0], arguments[1]);\n\n      // intentional fall through\n      case 3: // set subset\n      case 4: // set subset with default value\n        return _setSubset(arguments[0], arguments[1], arguments[2], arguments[3]);\n\n      default: // wrong number of arguments\n        throw new math.error.ArgumentsError('subset', arguments.length, 2, 4);\n    }\n  };\n\n  /**\n   * Retrieve a subset of an value such as an Array, Matrix, or String\n   * @param {Array | Matrix | String} value Object from which to get a subset\n   * @param {Index} index                   An index containing ranges for each\n   *                                        dimension\n   * @returns {Array | Matrix | *} subset\n   * @private\n   */\n  function _getSubset(value, index) {\n    var m, subset;\n\n    if (isArray(value)) {\n      m = math.matrix(value);\n      subset = m.subset(index);           // returns a Matrix\n      return subset && subset.valueOf();  // return an Array (like the input)\n    }\n    else if (value instanceof Matrix) {\n      return value.subset(index);\n    }\n    else if (isString(value)) {\n      return _getSubstring(value, index);\n    }\n    else {\n      throw new math.error.UnsupportedTypeError('subset', math['typeof'](value));\n    }\n  }\n\n  /**\n   * Retrieve a subset of a string\n   * @param {String} str            String from which to get a substring\n   * @param {Index} index           An index containing ranges for each dimension\n   * @returns {string} substring\n   * @private\n   */\n  function _getSubstring(str, index) {\n    if (!(index instanceof Index)) {\n      // TODO: better error message\n      throw new TypeError('Index expected');\n    }\n    if (index.size().length != 1) {\n      throw new math.error.DimensionError(index.size().length, 1);\n    }\n\n    // validate whether the range is out of range\n    var strLen = str.length;\n    array.validateIndex(index.min()[0], strLen);\n    array.validateIndex(index.max()[0], strLen);\n\n    var range = index.range(0);\n\n    var substr = '';\n    range.forEach(function (v) {\n      substr += str.charAt(v);\n    });\n\n    return substr;\n  }\n\n  /**\n   * Replace a subset in an value such as an Array, Matrix, or String\n   * @param {Array | Matrix | String} value Object to be replaced\n   * @param {Index} index                   An index containing ranges for each\n   *                                        dimension\n   * @param {Array | Matrix | *} replacement\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  math.matrix elements will be filled with zeros.\n   * @returns {*} result\n   * @private\n   */\n  function _setSubset(value, index, replacement, defaultValue) {\n    var m;\n\n    if (isArray(value)) {\n      m = math.matrix(math.clone(value));\n      m.subset(index, replacement, defaultValue);\n      return m.valueOf();\n    }\n    else if (value instanceof Matrix) {\n      return value.clone().subset(index, replacement, defaultValue);\n    }\n    else if (isString(value)) {\n      return _setSubstring(value, index, replacement, defaultValue);\n    }\n    else {\n      throw new math.error.UnsupportedTypeError('subset', math['typeof'](value));\n    }\n  }\n\n  /**\n   * Replace a substring in a string\n   * @param {String} str            String to be replaced\n   * @param {Index} index           An index containing ranges for each dimension\n   * @param {String} replacement    Replacement string\n   * @param {String} [defaultValue] Default value to be uses when resizing\n   *                                the string. is ' ' by default\n   * @returns {string} result\n   * @private\n   */\n  function _setSubstring(str, index, replacement, defaultValue) {\n    if (!(index instanceof Index)) {\n      // TODO: better error message\n      throw new TypeError('Index expected');\n    }\n    if (index.size().length != 1) {\n      throw new math.error.DimensionError(index.size().length, 1);\n    }\n    if (defaultValue !== undefined) {\n      if (!isString(defaultValue) || defaultValue.length !== 1) {\n        throw new TypeError('Single character expected as defaultValue');\n      }\n    }\n    else {\n      defaultValue = ' ';\n    }\n\n    var range = index.range(0);\n    var len = range.size()[0];\n\n    if (len != replacement.length) {\n      throw new math.error.DimensionError(range.size()[0], replacement.length);\n    }\n\n    // validate whether the range is out of range\n    var strLen = str.length;\n    array.validateIndex(index.min()[0]);\n    array.validateIndex(index.max()[0]);\n\n    // copy the string into an array with characters\n    var chars = [];\n    for (var i = 0; i < strLen; i++) {\n      chars[i] = str.charAt(i);\n    }\n\n    range.forEach(function (v, i) {\n      chars[v] = replacement.charAt(i);\n    });\n\n    // initialize undefined characters with a space\n    if (chars.length > strLen) {\n      for (i = strLen - 1, len = chars.length; i < len; i++) {\n        if (!chars[i]) {\n          chars[i] = defaultValue;\n        }\n      }\n    }\n\n    return chars.join('');\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/subset.js\n ** module id = 116\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      Matrix = math.type.Matrix,\n\n      object = util.object,\n      array = util.array,\n      string = util.string;\n\n  /**\n   * Calculate the trace of a matrix: the sum of the elements on the main\n   * diagonal of a square matrix.\n   *\n   * Syntax:\n   *\n   *    math.trace(x)\n   *\n   * Examples:\n   *\n   *    math.trace([[1, 2], [3, 4]]); // returns 5\n   *\n   *    var A = [\n   *      [1, 2, 3],\n   *      [-1, 2, 3],\n   *      [2, 0, 3]\n   *    ]\n   *    math.trace(A); // returns 6\n   *\n   * See also:\n   *\n   *    diag\n   *\n   * @param {Array | Matrix} x  A matrix\n   *\n   * @return {Number} The trace of `x`\n   */\n  math.trace = function trace (x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('trace', arguments.length, 1);\n    }\n\n    // check x is a matrix\n    if (x instanceof Matrix) {\n      // use optimized operation for the matrix storage format\n      return x.trace();\n    }\n    \n    // size\n    var size;\n    if (x instanceof Array) {\n      // calculate sixe\n      size = array.size(x);\n    }\n    else {\n      // a scalar\n      size = [];\n    }\n\n    switch (size.length) {\n      case 0:\n        // scalar\n        return object.clone(x);\n\n      case 1:\n        // vector\n        if (size[0] == 1) {\n          // clone value\n          return object.clone(x[0]);\n        }\n        throw new RangeError('Array must be square (size: ' + string.format(size) + ')');\n\n      case 2:\n        // two dimensional array\n        var rows = size[0];\n        var cols = size[1];\n        // check array is square\n        if (rows == cols) {\n          // diagonal sum\n          var sum = 0;\n          // loop diagonal\n          for (var i = 0; i < x.length; i++) {\n            // sum\n            sum = math.add(sum, x[i][i]);\n          }\n          return sum;\n        }\n        throw new RangeError('Array must be square (size: ' + string.format(size) + ')');\n\n      default:\n        // multi dimensional array\n        throw new RangeError('Matrix must be two dimensional (size: ' + string.format(size) + ')');\n    }\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/trace.js\n ** module id = 117\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      Matrix = math.type.Matrix,\n\n      object = util.object,\n      string = util.string;\n\n  /**\n   * Transpose a matrix. All values of the matrix are reflected over its\n   * main diagonal. Only two dimensional matrices are supported.\n   *\n   * Syntax:\n   *\n   *     math.transpose(x)\n   *\n   * Examples:\n   *\n   *     var A = [[1, 2, 3], [4, 5, 6]];\n   *     math.transpose(A);               // returns [[1, 4], [2, 5], [3, 6]]\n   *\n   * See also:\n   *\n   *     diag, inv, subset, squeeze\n   *\n   * @param {Array | Matrix} x  Matrix to be transposed\n   * @return {Array | Matrix}   The transposed matrix\n   */\n  math.transpose = function transpose (x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('transpose', arguments.length, 1);\n    }\n\n    var size = math.size(x).valueOf();\n    switch (size.length) {\n      case 0:\n        // scalar\n        return object.clone(x);\n\n      case 1:\n        // vector\n        return object.clone(x);\n\n      case 2:\n        // check it is a matrix\n        if (x instanceof Matrix) {\n          // use optimized matrix implementation if available\n          return x.transpose();\n        }\n        // two dimensional array\n        var rows = size[1],\n            cols = size[0],\n            data = x.valueOf(),\n            transposed = [],\n            transposedRow,\n            clone = object.clone;\n\n        if (rows === 0) {\n          // whoops\n          throw new RangeError('Cannot transpose a 2D matrix with no rows' +\n              '(size: ' + string.format(size) + ')');\n        }\n\n        for (var r = 0; r < rows; r++) {\n          transposedRow = transposed[r] = [];\n          for (var c = 0; c < cols; c++) {\n            transposedRow[c] = clone(data[c][r]);\n          }\n        }\n\n        return transposed;\n\n      default:\n        // multi dimensional array\n        throw new RangeError('Matrix must be two dimensional ' +\n            '(size: ' + string.format(size) + ')');\n    }\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/transpose.js\n ** module id = 118\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Matrix = math.type.Matrix,\n      collection = math.collection,\n\n      array = util.array,\n      isNumber = util.number.isNumber,\n      isInteger = util.number.isInteger,\n      isString = util.string.isString,\n      isArray = Array.isArray;\n\n  /**\n   * Create a matrix filled with zeros. The created matrix can have one or\n   * multiple dimensions.\n   *\n   * Syntax:\n   *\n   *    math.zeros(m)\n   *    math.zeros(m, format)\n   *    math.zeros(m, n)\n   *    math.zeros(m, n, format)\n   *    math.zeros([m, n])\n   *    math.zeros([m, n], format)\n   *\n   * Examples:\n   *\n   *    math.zeros(3);                  // returns [0, 0, 0]\n   *    math.zeros(3, 2);               // returns [[0, 0], [0, 0], [0, 0]]\n   *    math.zeros(3, 'dense');         // returns [0, 0, 0]\n   *\n   *    var A = [[1, 2, 3], [4, 5, 6]];\n   *    math.zeros(math.size(A));       // returns [[0, 0, 0], [0, 0, 0]]\n   *\n   * See also:\n   *\n   *    ones, eye, size, range\n   *\n   * @param {...Number | Array} size    The size of each dimension of the matrix\n   * @param {string} [format]           The Matrix storage format\n   *\n   * @return {Array | Matrix}           A matrix filled with zeros\n   */\n  math.zeros = function zeros (size) {\n    // process arguments\n    var args = collection.argsToArray(arguments);    \n    // matrix storage format\n    var f;\n    // check format was provided\n    if (args.length > 0 && isString(args[args.length - 1])) {\n      // set format\n      f = args[args.length - 1];\n      // re-process arguments, ignore last one\n      args = collection.argsToArray(args.slice(0, args.length - 1));\n    }\n    else if (size instanceof Matrix) {\n      // use matrix format\n      f = size.storage();\n    }\n    else if (!isArray(size) && config.matrix === 'matrix') {\n      // use default matrix format\n      f = 'default';\n    }\n\n    // convert arguments from bignumber to numbers if needed\n    var asBigNumber = false;\n    // map arguments & validate\n    args = args.map(function (value) {\n      // check it is a big number\n      if (value instanceof BigNumber) {\n        // set flag\n        asBigNumber = true;\n        // convert it\n        value = value.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(value) || !isInteger(value) || value < 0) {\n        throw new Error('Parameters in function eye must be positive integers');\n      } \n      return value;\n    });\n        \n    // default value\n    var defaultValue = asBigNumber ? new BigNumber(0) : 0;\n    \n    // check we need to return a matrix\n    if (f) {\n      // create empty matrix\n      var m = math.matrix(f);\n      // check we need to resize matrix\n      if (args.length > 0) {\n        // resize it to correct size\n        return m.resize(args, defaultValue);\n      }\n      return m;\n    }\n    // empty array\n    var res = [];\n    // check we need to resize array\n    if (args.length > 0) {\n      // resize array\n      return array.resize(res, args, defaultValue);\n    }\n    return res;\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/matrix/zeros.js\n ** module id = 119\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isInteger = util.number.isInteger,\n      isCollection = collection.isCollection;\n\n  /**\n   * Compute the factorial of a value\n   *\n   * Factorial only supports an integer value as argument.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.factorial(n)\n   *\n   * Examples:\n   *\n   *    math.factorial(5);    // returns 120\n   *    math.factorial(3);    // returns 6\n   *\n   * See also:\n   *\n   *    combinations, gamma, permutations\n   *\n   * @param {Number | BigNumber | Array | Matrix | Boolean | null} n   An integer number\n   * @return {Number | BigNumber | Array | Matrix}    The factorial of `n`\n   */\n  math.factorial = function factorial (n) {\n    var value, res, preciseFacs;\n\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('factorial', arguments.length, 1);\n    }\n\n    if (isNumber(n)) {\n      return n !== Number.POSITIVE_INFINITY\n        ? math.gamma(n + 1)\n        : Math.sqrt(2*Math.PI);\n    }\n\n    if (n instanceof BigNumber) {\n      if (!(isNonNegativeInteger(n))) {\n        return n.isNegative() || n.isFinite()\n          ? math.gamma(n.plus(1))\n          : util.bignumber.tau(config.precision).sqrt();\n      }\n\n      n = n.toNumber();   // should definitely be below Number.MAX_VALUE\n      if (n < smallBigFacs.length) {\n        return BigNumber.convert(smallBigFacs[n]).toSD(config.precision);\n      }\n\n      // be wary of round-off errors\n      var precision = config.precision + (Math.log(n) | 0);\n      var Big = BigNumber.constructor({precision: precision});\n\n      // adjust n do align with the precision specific tables\n      n -= smallBigFacs.length;\n      if (preciseFacs = bigBigFacs[precision]) {\n        if (preciseFacs[n]) {\n          return new BigNumber(preciseFacs[n].toPrecision(config.precision));\n        }\n        res = preciseFacs[preciseFacs.length-1];\n      } else {\n        preciseFacs = bigBigFacs[precision] = [];\n        res = new Big(smallBigFacs[smallBigFacs.length-1])\n          .toSD(precision);\n      }\n\n      var one = new Big(1);\n      value = new Big(preciseFacs.length + smallBigFacs.length);\n      for (var i = preciseFacs.length; i < n; ++i) {\n        preciseFacs[i] = res = res.times(value);\n        value = value.plus(one);\n      }\n\n      preciseFacs[n] = res.times(value);\n      return new BigNumber(preciseFacs[n].toPrecision(config.precision));\n    }\n\n    if (isBoolean(n) || n === null) {\n      return 1;           // factorial(1) = 1, factorial(0) = 1\n    }\n\n    if (isCollection(n)) {\n      return collection.deepMap(n, factorial);\n    }\n\n    throw new math.error.UnsupportedTypeError('factorial', math['typeof'](n));\n  };\n\n  /**\n   * Test whether BigNumber n is a non-negative integer\n   * @param {BigNumber} n\n   * @returns {boolean} isNonNegativeInteger\n   */\n  var isNonNegativeInteger = function(n) {\n    return n.isInteger() && (!n.isNegative() || n.isZero());\n  };\n\n  // 21! >= values for each precision\n  var bigBigFacs = [];\n\n  // 0-20! values\n  var smallBigFacs = [\n    1,\n    1,\n    2,\n    6,\n    24,\n    120,\n    720,\n    5040,\n    40320,\n    362880,\n    3628800,\n    39916800,\n    479001600,\n    6227020800,\n    87178291200,\n    1307674368000,\n    20922789888000,\n    355687428096000,\n    6402373705728000,\n    121645100408832000,\n    2432902008176640000\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/probability/factorial.js\n ** module id = 120\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isNumber = util.number.isNumber,\n      isInteger = util.number.isInteger,\n      isCollection = collection.isCollection;\n\n  /**\n   * Compute the gamma function of a value using Lanczos approximation for\n   * small values, and an extended Stirling approximation for large values.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.gamma(n)\n   *\n   * Examples:\n   *\n   *    math.gamma(5);       // returns 24\n   *    math.gamma(-0.5);    // returns -3.5449077018110335\n   *    math.gamma(math.i);  // returns -0.15494982830180973 - 0.49801566811835596i\n   *\n   * See also:\n   *\n   *    combinations, factorial, permutations\n   *\n   * @param {Number | Array | Matrix | Boolean | null} n   A real or complex number\n   * @return {Number | Array | Matrix}    The gamma of `n`\n   */\n  math.gamma = function gamma (n) {\n    var t, x;\n    var g = 4.7421875;\n\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('gamma', arguments.length, 1);\n    }\n\n    if (isNumber(n)) {\n      if (isInteger(n)) {\n        if (n <= 0) {\n          return isFinite(n)\n            ? Infinity\n            : NaN;\n        }\n\n        if (n > 171) {\n          return Infinity;                  // Will overflow\n        }\n\n        var value = n - 2;\n        var res = n - 1;\n        while (value > 1) {\n          res *= value;\n          value--;\n        }\n\n        if (res == 0) {\n          res = 1;                          // 0! is per definition 1\n        }\n\n        return res;\n      }\n\n      if (n < 0.5) {\n        return Math.PI / (Math.sin(Math.PI*n) * gamma(1-n));\n      }\n\n      if (n >= 171.35) {\n        return Infinity;                    // will overflow\n      }\n\n      if (n > 85.0) {                       // Extended Stirling Approx\n        var twoN = n*n;\n        var threeN = twoN*n;\n        var fourN = threeN*n;\n        var fiveN = fourN*n;\n        return Math.sqrt(2*Math.PI/n) * Math.pow((n/Math.E), n) *\n          (1 + 1/(12*n) + 1/(288*twoN) - 139/(51840*threeN) -\n           571/(2488320*fourN) + 163879/(209018880*fiveN) +\n           5246819/(75246796800*fiveN*n));\n      }\n\n      --n;\n      x = p[0];\n      for (var i = 1; i < p.length; ++i) {\n        x += p[i] / (n+i);\n      }\n\n      t = n + g + 0.5;\n      return Math.sqrt(2*Math.PI) * Math.pow(t, n+0.5) * Math.exp(-t) * x;\n    }\n\n    if (isComplex(n)) {\n      if (n.im == 0) {\n        return gamma(n.re);\n      }\n\n      n = new Complex(n.re - 1, n.im);\n      x = new Complex(p[0], 0);\n      for (var i = 1; i < p.length; ++i) {\n        var real = n.re + i;                // x += p[i]/(n+i)\n        var den = real*real + n.im*n.im;\n        if (den != 0) {\n          x.re += p[i] * real / den;\n          x.im += -(p[i] * n.im) / den;\n        } else {\n          x.re = p[i] < 0\n            ? -Infinity\n            :  Infinity;\n        }\n      }\n\n      t = new Complex(n.re + g + 0.5, n.im);\n      var twoPiSqrt = Math.sqrt(2*Math.PI);\n\n      n.re += 0.5;\n      var result = math.pow(t, n);\n      if (result.im == 0) {                 // sqrt(2*PI)*result\n        result.re *= twoPiSqrt;\n      } else if (result.re == 0) {\n        result.im *= twoPiSqrt;\n      } else {\n        result.re *= twoPiSqrt;\n        result.im *= twoPiSqrt;\n      }\n\n      var r = Math.exp(-t.re);              // exp(-t)\n      t.re = r * Math.cos(-t.im);\n      t.im = r * Math.sin(-t.im);\n\n      return math.multiply(math.multiply(result, t), x);\n    }\n\n    if (n instanceof BigNumber) {\n      if (n.isInteger()) {\n        return n.isNegative() || n.isZero()\n          ? new BigNumber(Infinity)\n          : math.factorial(n.minus(1));\n      }\n\n      if (!n.isFinite()) {\n        return new BigNumber(n.isNegative()\n          ? NaN\n          : Infinity);\n      }\n    }\n\n    if (isBoolean(n) || n === null) {\n      return n\n        ? 1\n        : Infinity;\n    }\n\n    if (isCollection(n)) {\n      return collection.deepMap(n, gamma);\n    }\n\n    throw new math.error.UnsupportedTypeError('gamma', math['typeof'](n));\n  };\n\n  var p = [\n     0.99999999999999709182,\n     57.156235665862923517,\n    -59.597960355475491248,\n     14.136097974741747174,\n    -0.49191381609762019978,\n     0.33994649984811888699e-4,\n     0.46523628927048575665e-4,\n    -0.98374475304879564677e-4,\n     0.15808870322491248884e-3,\n    -0.21026444172410488319e-3,\n     0.21743961811521264320e-3,\n    -0.16431810653676389022e-3,\n     0.84418223983852743293e-4,\n    -0.26190838401581408670e-4,\n     0.36899182659531622704e-5\n  ];\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/probability/gamma.js\n ** module id = 121\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var distribution = require('./distribution')(math);\n\n  /**\n   * Return a random number larger or equal to `min` and smaller than `max`\n   * using a uniform distribution.\n   *\n   * Syntax:\n   *\n   *     math.random()                // generate a random number between 0 and 1\n   *     math.random(max)             // generate a random number between 0 and max\n   *     math.random(min, max)        // generate a random number between min and max\n   *     math.random(size)            // generate a matrix with random numbers between 0 and 1\n   *     math.random(size, max)       // generate a matrix with random numbers between 0 and max\n   *     math.random(size, min, max)  // generate a matrix with random numbers between min and max\n   *\n   * Examples:\n   *\n   *     math.random();       // returns a random number between 0 and 1\n   *     math.random(100);    // returns a random number between 0 and 100\n   *     math.random(30, 40); // returns a random number between 30 and 40\n   *     math.random([2, 3]); // returns a 2x3 matrix with random numbers between 0 and 1\n   *\n   * See also:\n   *\n   *     randomInt, pickRandom\n   *\n   * @param {Array | Matrix} [size] If provided, an array or matrix with given\n   *                                size and filled with random values is returned\n   * @param {Number} [min]  Minimum boundary for the random value, included\n   * @param {Number} [max]  Maximum boundary for the random value, excluded\n   * @return {Number | Array | Matrix} A random number\n   */\n  math.random = distribution('uniform').random;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/probability/random.js\n ** module id = 122\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var distribution = require('./distribution')(math);\n\n  /**\n   * Return a random integer number larger or equal to `min` and smaller than `max`\n   * using a uniform distribution.\n   *\n   * Syntax:\n   *\n   *     math.randomInt()                // generate a random integer between 0 and 1\n   *     math.randomInt(max)             // generate a random integer between 0 and max\n   *     math.randomInt(min, max)        // generate a random integer between min and max\n   *     math.randomInt(size)            // generate a matrix with random integer between 0 and 1\n   *     math.randomInt(size, max)       // generate a matrix with random integer between 0 and max\n   *     math.randomInt(size, min, max)  // generate a matrix with random integer between min and max\n   *\n   * Examples:\n   *\n   *     math.randomInt();       // returns a random integer between 0 and 1\n   *     math.randomInt(100);    // returns a random integer between 0 and 100\n   *     math.randomInt(30, 40); // returns a random integer between 30 and 40\n   *     math.randomInt([2, 3]); // returns a 2x3 matrix with random integers between 0 and 1\n   *\n   * See also:\n   *\n   *     random, pickRandom\n   *\n   * @param {Array | Matrix} [size] If provided, an array or matrix with given\n   *                                size and filled with random values is returned\n   * @param {Number} [min]  Minimum boundary for the random value, included\n   * @param {Number} [max]  Maximum boundary for the random value, excluded\n   * @return {Number | Array | Matrix} A random integer value\n   */\n  math.randomInt = distribution('uniform').randomInt;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/probability/randomInt.js\n ** module id = 123\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var distribution = require('./distribution')(math);\n\n  /**\n   * Random pick a value from a one dimensional array.\n   * Array element is picked using a random function with uniform distribution.\n   *\n   * Syntax:\n   *\n   *     math.pickRandom(array)\n   *\n   * Examples:\n   *\n   *     math.pickRandom([3, 6, 12, 2]);       // returns one of the values in the array\n   *\n   * See also:\n   *\n   *     random, randomInt\n   *\n   * @param {Array} array     A one dimensional array\n   * @return {Number} One of the elements of the provided input array\n   */\n  math.pickRandom = distribution('uniform').pickRandom;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/probability/pickRandom.js\n ** module id = 124\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n\n      isNumber = util.number.isNumber,\n      isInteger = util.number.isInteger;\n\n  /**\n   * Compute the number of ways of obtaining an ordered subset of `k` elements\n   * from a set of `n` elements.\n   *\n   * Permutations only takes integer arguments.\n   * The following condition must be enforced: k <= n.\n   *\n   * Syntax:\n   *\n   *     math.permutations(n)\n   *     math.permutations(n, k)\n   *\n   * Examples:\n   *\n   *    math.permutations(5);     // 120\n   *    math.permutations(5, 3);  // 60\n   *\n   * See also:\n   *\n   *    combinations, factorial\n   *\n   * @param {Number | BigNumber} n  The number of objects in total\n   * @param {Number | BigNumber} k  The number of objects in the subset\n   * @return {Number | BigNumber}   The number of permutations\n   */\n  math.permutations = function permutations (n, k) {\n    var result, i;\n\n    var arity = arguments.length;\n    if (arity > 2) {\n      throw new math.error.ArgumentsError('permutations', arguments.length, 2);\n    }\n\n    if (isNumber(n)) {\n      if (!isInteger(n) || n < 0) {\n        throw new TypeError('Positive integer value expected in function permutations');\n      }\n      \n      // Permute n objects\n      if (arity == 1) {\n        return math.factorial(n);\n      }\n      \n      // Permute n objects, k at a time\n      if (arity == 2) {\n        if (isNumber(k)) {\n          if (!isInteger(k) || k < 0) {\n            throw new TypeError('Positive integer value expected in function permutations');\n          }\n          if (k > n) {\n            throw new TypeError('second argument k must be less than or equal to first argument n');\n          }\n\n          result = 1;\n          for (i = n - k + 1; i <= n; i++) {\n            result = result * i;\n          }\n          return result;\n        }\n      }\n    }\n\n    if (n instanceof BigNumber) {\n      if (k === undefined && isPositiveInteger(n)) {\n        return math.factorial(n);\n      }\n\n      // make sure k is a BigNumber as well\n      // not all numbers can be converted to BigNumber\n      k = BigNumber.convert(k);\n\n      if (!(k instanceof BigNumber) || !isPositiveInteger(n) || !isPositiveInteger(k)) {\n        throw new TypeError('Positive integer value expected in function permutations');\n      }\n      if (k.gt(n)) {\n        throw new TypeError('second argument k must be less than or equal to first argument n');\n      }\n\n      result = new BigNumber(1);\n      for (i = n.minus(k).plus(1); i.lte(n); i = i.plus(1)) {\n        result = result.times(i);\n      }\n      return result;\n    }\n\n    throw new math.error.UnsupportedTypeError('permutations', math['typeof'](n));\n  };\n\n  /**\n   * Test whether BigNumber n is a positive integer\n   * @param {BigNumber} n\n   * @returns {boolean} isPositiveInteger\n   */\n  var isPositiveInteger = function(n) {\n    return n.isInteger() && n.gte(0);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/probability/permutations.js\n ** module id = 125\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isInteger = util.number.isInteger;\n\n  /**\n   * Compute the number of ways of picking `k` unordered outcomes from `n`\n   * possibilities.\n   *\n   * Combinations only takes integer arguments.\n   * The following condition must be enforced: k <= n.\n   *\n   * Syntax:\n   *\n   *     math.combinations(n, k)\n   *\n   * Examples:\n   *\n   *    math.combinations(7, 5); // returns 21\n   *\n   * See also:\n   *\n   *    permutations, factorial\n   *\n   * @param {Number | BigNumber} n    Total number of objects in the set\n   * @param {Number | BigNumber} k    Number of objects in the subset\n   * @return {Number | BigNumber}     Number of possible combinations.\n   */\n  math.combinations = function combinations (n, k) {\n    var max, result, i,ii;\n\n    var arity = arguments.length;\n    if (arity != 2) {\n      throw new math.error.ArgumentsError('combinations', arguments.length, 2);\n    }\n\n    if (isNumber(n)) {\n      if (!isInteger(n) || n < 0) {\n        throw new TypeError('Positive integer value enpected in function combinations');\n      }\n      if (k > n) {\n        throw new TypeError('k must be less than or equal to n');\n      }\n\n      max = Math.max(k, n - k);\n      result = 1;\n      for (i = 1; i <= n - max; i++) {\n        result = result * (max + i) / i;\n      }\n      return result;\n    }\n\n    if (n instanceof BigNumber) {\n      // make sure k is a BigNumber as well\n      // not all numbers can be converted to BigNumber\n      k = BigNumber.convert(k);\n\n      if (!(k instanceof BigNumber) || !isPositiveInteger(n) || !isPositiveInteger(k)) {\n        throw new TypeError('Positive integer value expected in function combinations');\n      }\n      if (k.gt(n)) {\n        throw new TypeError('k must be less than n in function combinations');\n      }\n\n      max = n.minus(k);\n      if (k.lt(max)) max = k;\n      result = new BigNumber(1);\n      for (i = new BigNumber(1), ii = n.minus(max); i.lte(ii); i = i.plus(1)) {\n        result = result.times(max.plus(i)).dividedBy(i);\n      }\n      return result;\n    }\n\n    throw new math.error.UnsupportedTypeError('combinations', math['typeof'](n));\n  };\n\n  /**\n   * Test whether BigNumber n is a positive integer\n   * @param {BigNumber} n\n   * @returns {boolean} isPositiveInteger\n   */\n  var isPositiveInteger = function(n) {\n    return n.isInteger() && n.gte(0);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/probability/combinations.js\n ** module id = 126\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      nearlyEqual = util.number.nearlyEqual,\n      isBoolean = util['boolean'].isBoolean,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.\n   *\n   * x and y are considered equal when the relative difference between x and y\n   * is smaller than the configured epsilon. The function cannot be used to\n   * compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.compare(x, y)\n   *\n   * Examples:\n   *\n   *    math.compare(6, 1);           // returns 1\n   *    math.compare(2, 3);           // returns -1\n   *    math.compare(7, 7);           // returns 0\n   *\n   *    var a = math.unit('5 cm');\n   *    var b = math.unit('40 mm');\n   *    math.compare(a, b);           // returns 1\n   *\n   *    math.compare(2, [1, 2, 3]);   // returns [1, 0, -1]\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, smallerEq, larger, largerEq\n   *\n   * @param  {Number | BigNumber | Boolean | Unit | String | Array | Matrix | null} x First value to compare\n   * @param  {Number | BigNumber | Boolean | Unit | String | Array | Matrix | null} y Second value to compare\n   * @return {Number | BigNumber | Array | Matrix} Returns the result of the comparison: 1, 0 or -1.\n   */\n  math.compare = function compare(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('compare', arguments.length, 2);\n    }\n\n    if (isNumber(x) && isNumber(y)) {\n      return nearlyEqual(x, y, config.epsilon) ? 0 : (x > y ? 1 : -1);\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y) || y === null) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        return new BigNumber(x.cmp(y));\n      }\n\n      // downgrade to Number\n      return compare(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x) || x === null) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        return new BigNumber(x.cmp(y));\n      }\n\n      // downgrade to Number\n      return compare(x, y.toNumber());\n    }\n\n    if ((isUnit(x)) && (isUnit(y))) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return (x.value > y.value) ? 1 : ((x.value < y.value) ? -1 : 0);\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, compare);\n    }\n\n    // Note: test strings after testing collections,\n    // else we can't compare a string with a matrix\n    if (isString(x) || isString(y)) {\n      return (x > y) ? 1 : ((x < y) ? -1 : 0);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return compare(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return compare(x, +y);\n    }\n\n    if (isComplex(x) || isComplex(y)) {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    }\n\n    throw new math.error.UnsupportedTypeError('compare', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/relational/compare.js\n ** module id = 127\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var collection = math.collection,\n\n      isCollection = collection.isCollection,\n      isArray = Array.isArray;\n\n  /**\n   * Test element wise whether two matrices are equal.\n   * The function accepts both matrices and scalar values.\n   *\n   * Syntax:\n   *\n   *    math.deepEqual(x, y)\n   *\n   * Examples:\n   *\n   *    math.deepEqual(2, 4);   // returns false\n   *\n   *    a = [2, 5, 1];\n   *    b = [2, 7, 1];\n   *\n   *    math.deepEqual(a, b);   // returns false\n   *    math.equal(a, b);       // returns [true, false, true]\n   *\n   * See also:\n   *\n   *    equal, unequal\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x First matrix to compare\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} y Second matrix to compare\n   * @return {Number | BigNumber | Complex | Unit | Array | Matrix}\n   *            Returns true when the input matrices have the same size and each of their elements is equal.\n   */\n  math.deepEqual = function deepEqual(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('deepEqual', arguments.length, 2);\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return _deepEqual(x.valueOf(), y.valueOf());\n    }\n\n    return math.equal(x, y);\n  };\n\n  /**\n   * Test whether two arrays have the same size and all elements are equal\n   * @param {Array | *} x\n   * @param {Array | *} y\n   * @return {boolean} Returns true if both arrays are deep equal\n   */\n  function _deepEqual(x, y) {\n    if (isArray(x)) {\n      if (isArray(y)) {\n        var len = x.length;\n        if (len !== y.length) return false;\n\n        for (var i = 0; i < len; i++) {\n          if (!_deepEqual(x[i], y[i])) return false;\n        }\n\n        return true;\n      }\n      else {\n        return false;\n      }\n    }\n    else {\n      if (isArray(y)) {\n        return false;\n      }\n      else {\n        return math.equal(x, y);\n      }\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/relational/deepEqual.js\n ** module id = 128\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      nearlyEqual = util.number.nearlyEqual,\n      isBoolean = util['boolean'].isBoolean,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Test whether two values are equal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * smaller than the configured epsilon. The function cannot be used to\n   * compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must equal y.re, and x.im must equal y.im.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is only\n   * equal to `null` and nothing else, and `undefined` is only equal to\n   * `undefined` and nothing else.\n   *\n   * Syntax:\n   *\n   *    math.equal(x, y)\n   *\n   * Examples:\n   *\n   *    math.equal(2 + 2, 3);         // returns false\n   *    math.equal(2 + 2, 4);         // returns true\n   *\n   *    var a = math.unit('50 cm');\n   *    var b = math.unit('5 m');\n   *    math.equal(a, b);             // returns true\n   *\n   *    var c = [2, 5, 1];\n   *    var d = [2, 7, 1];\n   *\n   *    math.equal(c, d);             // returns [true, false, true]\n   *    math.deepEqual(c, d);         // returns false\n   *\n   *    math.equal(0, null);          // returns false\n   *\n   * See also:\n   *\n   *    unequal, smaller, smallerEq, larger, largerEq, compare, deepEqual\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | String | Array | Matrix | null | undefined} x First value to compare\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | String | Array | Matrix | null | undefined} y Second value to compare\n   * @return {Boolean | Array | Matrix} Returns true when the compared values are equal, else returns false\n   */\n  math.equal = function equal(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('equal', arguments.length, 2);\n    }\n\n    if (isNumber(x)) {\n      if (isNumber(y)) {\n        return nearlyEqual(x, y, config.epsilon);\n      }\n      else if (isComplex(y)) {\n        return nearlyEqual(x, y.re, config.epsilon) && nearlyEqual(y.im, 0, config.epsilon);\n      }\n    }\n\n    if (isComplex(x)) {\n      if (isNumber(y)) {\n        return nearlyEqual(x.re, y, config.epsilon) && nearlyEqual(x.im, 0, config.epsilon);\n      }\n      else if (isComplex(y)) {\n        return nearlyEqual(x.re, y.re, config.epsilon) && nearlyEqual(x.im, y.im, config.epsilon);\n      }\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y)) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        return x.eq(y);\n      }\n\n      // downgrade to Number\n      return equal(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x)) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        return x.eq(y);\n      }\n\n      // downgrade to Number\n      return equal(x, y.toNumber());\n    }\n\n    if ((isUnit(x)) && (isUnit(y))) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return x.value == y.value;\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, equal);\n    }\n\n    // Note: test strings after testing collections,\n    // else we can accidentally compare a stringified array with a string\n    if (isString(x) || isString(y)) {\n      return x == y;\n    }\n\n    if (isBoolean(x)) {\n      return equal(+x, y);\n    }\n    if (isBoolean(y)) {\n      return equal(x, +y);\n    }\n\n    if (x === null) {\n      return y === null;\n    }\n    if (y === null) {\n      return x === null;\n    }\n\n    if (x === undefined) {\n      return y === undefined;\n    }\n    if (y === undefined) {\n      return x === undefined;\n    }\n\n    throw new math.error.UnsupportedTypeError('equal', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/relational/equal.js\n ** module id = 129\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      nearlyEqual = util.number.nearlyEqual,\n      isBoolean = util['boolean'].isBoolean,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Test whether value x is larger than y.\n   *\n   * The function returns true when x is larger than y and the relative\n   * difference between x and y is larger than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.larger(x, y)\n   *\n   * Examples:\n   *\n   *    math.larger(2, 3);             // returns false\n   *    math.larger(5, 2 + 2);         // returns true\n   *\n   *    var a = math.unit('5 cm');\n   *    var b = math.unit('2 inch');\n   *    math.larger(a, b);             // returns false\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, smallerEq, largerEq, compare\n   *\n   * @param  {Number | BigNumber | Boolean | Unit | String | Array | Matrix | null} x First value to compare\n   * @param  {Number | BigNumber | Boolean | Unit | String | Array | Matrix | null} y Second value to compare\n   * @return {Boolean | Array | Matrix} Returns true when the x is larger than y, else returns false\n   */\n  math.larger = function larger(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('larger', arguments.length, 2);\n    }\n\n    if (isNumber(x) && isNumber(y)) {\n      return !nearlyEqual(x, y, config.epsilon) && x > y;\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y) || y === null) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        return x.gt(y);\n      }\n\n      // downgrade to Number\n      return larger(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x) || x === null) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        return x.gt(y)\n      }\n\n      // downgrade to Number\n      return larger(x, y.toNumber());\n    }\n\n    if ((isUnit(x)) && (isUnit(y))) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return x.value > y.value;\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, larger);\n    }\n\n    // Note: test strings after testing collections,\n    // else we can't compare a string with a matrix\n    if (isString(x) || isString(y)) {\n      return x > y;\n    }\n\n    if (isBoolean(x) || x === null) {\n      return larger(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return larger(x, +y);\n    }\n\n    if (isComplex(x) || isComplex(y)) {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    }\n\n    throw new math.error.UnsupportedTypeError('larger', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/relational/larger.js\n ** module id = 130\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      nearlyEqual = util.number.nearlyEqual,\n      isBoolean = util['boolean'].isBoolean,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Test whether value x is larger or equal to y.\n   *\n   * The function returns true when x is larger than y or the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.largerEq(x, y)\n   *\n   * Examples:\n   *\n   *    math.larger(2, 1 + 1);         // returns false\n   *    math.largerEq(2, 1 + 1);       // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, smallerEq, larger, compare\n   *\n   * @param  {Number | BigNumber | Boolean | Unit | String | Array | Matrix | null} x First value to compare\n   * @param  {Number | BigNumber | Boolean | Unit | String | Array | Matrix | null} y Second value to compare\n   * @return {Boolean | Array | Matrix} Returns true when the x is larger or equal to y, else returns false\n   */\n  math.largerEq = function largerEq(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('largerEq', arguments.length, 2);\n    }\n\n    if (isNumber(x) && isNumber(y)) {\n      return nearlyEqual(x, y, config.epsilon) || x > y;\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y) || y === null) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        return x.gte(y);\n      }\n\n      // downgrade to Number\n      return largerEq(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x) || x === null) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        return x.gte(y)\n      }\n\n      // downgrade to Number\n      return largerEq(x, y.toNumber());\n    }\n\n    if ((isUnit(x)) && (isUnit(y))) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return x.value >= y.value;\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, largerEq);\n    }\n\n    // Note: test strings after testing collections,\n    // else we can't compare a string with a matrix\n    if (isString(x) || isString(y)) {\n      return x >= y;\n    }\n\n    if (isBoolean(x) || x === null) {\n      return largerEq(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return largerEq(x, +y);\n    }\n\n    if (isComplex(x) || isComplex(y)) {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    }\n\n    throw new math.error.UnsupportedTypeError('largerEq', math['typeof'](x), math['typeof'](y));\n  };\n\n  // TODO: deprecated since version 0.23.0, cleanup some day\n  math.largereq = function () {\n    throw new Error('Function largereq is renamed to largerEq');\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/relational/largerEq.js\n ** module id = 131\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      nearlyEqual = util.number.nearlyEqual,\n      isBoolean = util['boolean'].isBoolean,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Test whether value x is smaller than y.\n   *\n   * The function returns true when x is smaller than y and the relative\n   * difference between x and y is larger than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.smaller(x, y)\n   *\n   * Examples:\n   *\n   *    math.smaller(2, 3);            // returns true\n   *    math.smaller(5, 2 * 2);        // returns false\n   *\n   *    var a = math.unit('5 cm');\n   *    var b = math.unit('2 inch');\n   *    math.smaller(a, b);            // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smallerEq, larger, largerEq, compare\n   *\n   * @param  {Number | BigNumber | Boolean | Unit | String | Array | Matrix | null} x First value to compare\n   * @param  {Number | BigNumber | Boolean | Unit | String | Array | Matrix | null} y Second value to compare\n   * @return {Boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false\n   */\n  math.smaller = function smaller(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('smaller', arguments.length, 2);\n    }\n\n    if (isNumber(x) && isNumber(y)) {\n      return !nearlyEqual(x, y, config.epsilon) && x < y;\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y) || y === null) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        return x.lt(y);\n      }\n\n      // downgrade to Number\n      return smaller(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x) || x === null) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        return x.lt(y)\n      }\n\n      // downgrade to Number\n      return smaller(x, y.toNumber());\n    }\n\n    if ((isUnit(x)) && (isUnit(y))) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return x.value < y.value;\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, smaller);\n    }\n\n    // Note: test strings after testing collections,\n    // else we can't compare a string with a matrix\n    if (isString(x) || isString(y)) {\n      return x < y;\n    }\n\n    if (isBoolean(x) || x === null) {\n      return smaller(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return smaller(x, +y);\n    }\n\n    if (isComplex(x) || isComplex(y)) {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    }\n\n    throw new math.error.UnsupportedTypeError('smaller', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/relational/smaller.js\n ** module id = 132\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      nearlyEqual = util.number.nearlyEqual,\n      isBoolean = util['boolean'].isBoolean,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Test whether value x is smaller or equal to y.\n   *\n   * The function returns true when x is smaller than y or the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.smallerEq(x, y)\n   *\n   * Examples:\n   *\n   *    math.smaller(1 + 2, 3);        // returns false\n   *    math.smallerEq(1 + 2, 3);      // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, larger, largerEq, compare\n   *\n   * @param  {Number | BigNumber | Boolean | Unit | String | Array | Matrix | null} x First value to compare\n   * @param  {Number | BigNumber | Boolean | Unit | String | Array | Matrix | null} y Second value to compare\n   * @return {Boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false\n   */\n  math.smallerEq = function smallerEq(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('smallerEq', arguments.length, 2);\n    }\n\n    if (isNumber(x) && isNumber(y)) {\n      return nearlyEqual(x, y, config.epsilon) || x < y;\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y) || y === null) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        return x.lte(y);\n      }\n\n      // downgrade to Number\n      return smallerEq(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x) || x === null) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        return x.lte(y)\n      }\n\n      // downgrade to Number\n      return smallerEq(x, y.toNumber());\n    }\n\n    if ((isUnit(x)) && (isUnit(y))) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return x.value <= y.value;\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, smallerEq);\n    }\n\n    // Note: test strings after testing collections,\n    // else we can't compare a string with a matrix\n    if (isString(x) || isString(y)) {\n      return x <= y;\n    }\n\n    if (isBoolean(x) || x === null) {\n      return smallerEq(+x, y);\n    }\n    if (isBoolean(y) || y === null) {\n      return smallerEq(x, +y);\n    }\n\n    if (isComplex(x) || isComplex(y)) {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    }\n\n    throw new math.error.UnsupportedTypeError('smallerEq', math['typeof'](x), math['typeof'](y));\n  };\n\n  // TODO: deprecated since version 0.23.0, cleanup some day\n  math.smallereq = function () {\n    throw new Error('Function smallereq is renamed to smallerEq');\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/relational/smallerEq.js\n ** module id = 133\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      nearlyEqual = util.number.nearlyEqual,\n      isBoolean = util['boolean'].isBoolean,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Test whether two values are unequal.\n   *\n   * The function tests whether the relative difference between x and y is\n   * larger than the configured epsilon. The function cannot be used to compare\n   * values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   * In case of complex numbers, x.re must unequal y.re, or x.im must unequal y.im.\n   *\n   * Values `null` and `undefined` are compared strictly, thus `null` is unequal\n   * with everything except `null`, and `undefined` is unequal with everying\n   * except. `undefined`.\n   *\n   * Syntax:\n   *\n   *    math.unequal(x, y)\n   *\n   * Examples:\n   *\n   *    math.unequal(2 + 2, 3);       // returns true\n   *    math.unequal(2 + 2, 4);       // returns false\n   *\n   *    var a = math.unit('50 cm');\n   *    var b = math.unit('5 m');\n   *    math.unequal(a, b);           // returns false\n   *\n   *    var c = [2, 5, 1];\n   *    var d = [2, 7, 1];\n   *\n   *    math.unequal(c, d);           // returns [false, true, false]\n   *    math.deepEqual(c, d);         // returns false\n   *\n   *    math.unequal(0, null);        // returns true\n   * See also:\n   *\n   *    equal, deepEqual, smaller, smallerEq, larger, largerEq, compare\n   *\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | String | Array | Matrix | null | undefined} x First value to compare\n   * @param  {Number | BigNumber | Boolean | Complex | Unit | String | Array | Matrix | null | undefined} y Second value to compare\n   * @return {Boolean | Array | Matrix} Returns true when the compared values are unequal, else returns false\n   */\n  math.unequal = function unequal(x, y) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('unequal', arguments.length, 2);\n    }\n\n    if (isNumber(x)) {\n      if (isNumber(y)) {\n        return !nearlyEqual(x, y, config.epsilon);\n      }\n      else if (isComplex(y)) {\n        return !nearlyEqual(x, y.re, config.epsilon) || !nearlyEqual(y.im, 0, config.epsilon);\n      }\n    }\n\n    if (isComplex(x)) {\n      if (isNumber(y)) {\n        return !nearlyEqual(x.re, y, config.epsilon) || !nearlyEqual(x.im, 0, config.epsilon);\n      }\n      else if (isComplex(y)) {\n        return !nearlyEqual(x.re, y.re, config.epsilon) || !nearlyEqual(x.im, y.im, config.epsilon);\n      }\n    }\n\n    if (x instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(y)) {\n        y = BigNumber.convert(y);\n      }\n      else if (isBoolean(y)) {\n        y = new BigNumber(y ? 1 : 0);\n      }\n\n      if (y instanceof BigNumber) {\n        return !x.eq(y);\n      }\n\n      // downgrade to Number\n      return unequal(x.toNumber(), y);\n    }\n    if (y instanceof BigNumber) {\n      // try to convert to big number\n      if (isNumber(x)) {\n        x = BigNumber.convert(x);\n      }\n      else if (isBoolean(x)) {\n        x = new BigNumber(x ? 1 : 0);\n      }\n\n      if (x instanceof BigNumber) {\n        return !x.eq(y)\n      }\n\n      // downgrade to Number\n      return unequal(x, y.toNumber());\n    }\n\n    if ((isUnit(x)) && (isUnit(y))) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return x.value != y.value;\n    }\n\n    if (isCollection(x) || isCollection(y)) {\n      return collection.deepMap2(x, y, unequal);\n    }\n\n    // Note: test strings after testing collections,\n    // else we can accidentally compare a stringified array with a string\n    if (isString(x) || isString(y)) {\n      return x != y;\n    }\n\n    if (isBoolean(x)) {\n      return unequal(+x, y);\n    }\n    if (isBoolean(y)) {\n      return unequal(x, +y);\n    }\n\n    if (x === null) {\n      return y !== null;\n    }\n    if (y === null) {\n      return x !== null;\n    }\n\n    if (x === undefined) {\n      return y !== undefined;\n    }\n    if (y === undefined) {\n      return x !== undefined;\n    }\n\n    throw new math.error.UnsupportedTypeError('unequal', math['typeof'](x), math['typeof'](y));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/relational/unequal.js\n ** module id = 134\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix,\n      collection = math.collection,\n\n      isCollection = collection.isCollection;\n\n  /**\n   * Compute the maximum value of a matrix or a  list of values.\n   * In case of a multi dimensional array, the maximum of the flattened array\n   * will be calculated. When `dim` is provided, the maximum over the selected\n   * dimension will be calculated. Parameter `dim` is zero-based.\n   *\n   * Syntax:\n   *\n   *     math.min(a, b, c, ...)\n   *     math.min(A)\n   *     math.min(A, dim)\n   *\n   * Examples:\n   *\n   *     math.min(2, 1, 4, 3);                  // returns 1\n   *     math.min([2, 1, 4, 3]);                // returns 1\n   *\n   *     // maximum over a specified dimension (zero-based)\n   *     math.min([[2, 5], [4, 3], [1, 7]], 0); // returns [1, 3]\n   *     math.min([[2, 5], [4, 3], [1, 7]], 1); // returns [2, 3, 1]\n   *\n   *     math.max(2.7, 7.1, -4.5, 2.0, 4.1);    // returns 7.1\n   *     math.min(2.7, 7.1, -4.5, 2.0, 4.1);    // returns -4.5\n   *\n   * See also:\n   *\n   *    mean, median, max, prod, std, sum, var\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The minimum value\n   */\n  math.min = function min(args) {\n    if (arguments.length == 0) {\n      throw new SyntaxError('Function min requires one or more parameters (0 provided)');\n    }\n\n    if (isCollection(args)) {\n      if (arguments.length == 1) {\n        // min([a, b, c, d, ...])\n        return _min(args);\n      }\n      else if (arguments.length == 2) {\n        // min([a, b, c, d, ...], dim)\n        return collection.reduce(arguments[0], arguments[1], _getSmaller);\n      }\n      else {\n        throw new SyntaxError('Wrong number of parameters');\n      }\n    }\n    else {\n      // min(a, b, c, d, ...)\n      return _min(arguments);\n    }\n  };\n\n  function _getSmaller(x, y){\n\t  return math.smaller(x, y)  ? x : y;\n  }\n\n  /**\n   * Recursively calculate the minimum value in an n-dimensional array\n   * @param {Array} array\n   * @return {Number} min\n   * @private\n   */\n  function _min(array) {\n    var min = undefined;\n\n    collection.deepForEach(array, function (value) {\n      if (min === undefined || math.smaller(value, min)) {\n        min = value;\n      }\n    });\n\n    if (min === undefined) {\n      throw new Error('Cannot calculate min of an empty array');\n    }\n\n    return min;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/statistics/min.js\n ** module id = 135\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix,\n      collection = math.collection,\n\n      isCollection = collection.isCollection;\n\n  /**\n   * Compute the maximum value of a matrix or a  list with values.\n   * In case of a multi dimensional array, the maximum of the flattened array\n   * will be calculated. When `dim` is provided, the maximum over the selected\n   * dimension will be calculated. Parameter `dim` is zero-based.\n   *\n   * Syntax:\n   *\n   *     math.max(a, b, c, ...)\n   *     math.max(A)\n   *     math.max(A, dim)\n   *\n   * Examples:\n   *\n   *     math.max(2, 1, 4, 3);                  // returns 4\n   *     math.max([2, 1, 4, 3]);                // returns 4\n   *\n   *     // maximum over a specified dimension (zero-based)\n   *     math.max([[2, 5], [4, 3], [1, 7]], 0); // returns [4, 7]\n   *     math.max([[2, 5], [4, 3]], [1, 7], 1); // returns [5, 4, 7]\n   *\n   *     math.max(2.7, 7.1, -4.5, 2.0, 4.1);    // returns 7.1\n   *     math.min(2.7, 7.1, -4.5, 2.0, 4.1);    // returns -4.5\n   *\n   * See also:\n   *\n   *    mean, median, min, prod, std, sum, var\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The maximum value\n   */\n  math.max = function max(args) {\n    if (arguments.length == 0) {\n      throw new SyntaxError('Function max requires one or more parameters (0 provided)');\n    }\n\n    if (isCollection(args)) {\n      if (arguments.length == 1) {\n        // max([a, b, c, d, ...])\n        return _max(args);\n      }\n      else if (arguments.length == 2) {\n        // max([a, b, c, d, ...], dim)\n        return collection.reduce(arguments[0], arguments[1], _getLarger);\n      }\n      else {\n        throw new SyntaxError('Wrong number of parameters');\n      }\n    }\n    else {\n      // max(a, b, c, d, ...)\n      return _max(arguments);\n    }\n  };\n\n  function _getLarger(x, y){\n\t  return math.larger(x, y) ? x : y;\n  }\n\n  /**\n   * Recursively calculate the maximum value in an n-dimensional array\n   * @param {Array} array\n   * @return {Number} max\n   * @private\n   */\n  function _max(array) {\n    var max = undefined;\n\n    collection.deepForEach(array, function (value) {\n      if (max === undefined || math.larger(value, max)) {\n        max = value;\n      }\n    });\n\n    if (max === undefined) {\n      throw new Error('Cannot calculate max of an empty array');\n    }\n\n    return max;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/statistics/max.js\n ** module id = 136\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix,\n      collection = math.collection,\n\n      isCollection = collection.isCollection,\n\n      size = require('../../util/array').size,\n      isArray = Array.isArray;\n\n  /**\n   * Compute the mean value of matrix or a list with values.\n   * In case of a multi dimensional array, the mean of the flattened array\n   * will be calculated. When `dim` is provided, the maximum over the selected\n   * dimension will be calculated. Parameter `dim` is zero-based.\n   *\n   * Syntax:\n   *\n   *     math.mean(a, b, c, ...)\n   *     math.mean(A)\n   *     math.mean(A, dim)\n   *\n   * Examples:\n   *\n   *     math.mean(2, 1, 4, 3);                     // returns 2.5\n   *     math.mean([1, 2.7, 3.2, 4]);               // returns 2.725\n   *\n   *     math.mean([[2, 5], [6, 3], [1, 7]], 0);    // returns [3, 5]\n   *     math.mean([[2, 5], [6, 3], [1, 7]], 1);    // returns [3.5, 4.5, 4]\n   *\n   * See also:\n   *\n   *     median, min, max, sum, prod, std, var\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The mean of all values\n   */\n  math.mean = function mean(args) {\n    if (arguments.length == 0) {\n      throw new SyntaxError('Function mean requires one or more parameters (0 provided)');\n    }\n\n    if (isCollection(args)) {\n      if (arguments.length == 1) {\n        // mean([a, b, c, d, ...])\n        return _mean(args);\n      }\n      else if (arguments.length == 2) {\n        // mean([a, b, c, d, ...], dim)\n        return _nmean(arguments[0], arguments[1]);\n      }\n      else {\n        throw new SyntaxError('Wrong number of parameters');\n      }\n    }\n    else {\n      // mean(a, b, c, d, ...)\n      return _mean(arguments);\n    }\n  };\n\n  /**\n   * Calculate the mean value in an n-dimensional array, returning a\n   * n-1 dimensional array\n   * @param {Array} array\n   * @param {Number} dim\n   * @return {Number} mean\n   * @private\n   */\n  function _nmean(array, dim){\n\t  var sum = collection.reduce(array, dim, math.add);\n    var s = isArray(array) ? size(array) : array.size();\n    return math.divide(sum, s[dim]);\n  }\n\n  /**\n   * Recursively calculate the mean value in an n-dimensional array\n   * @param {Array} array\n   * @return {Number} mean\n   * @private\n   */\n  function _mean(array) {\n    var sum = 0;\n    var num = 0;\n\n    collection.deepForEach(array, function (value) {\n      sum = math.add(sum, value);\n      num++;\n    });\n\n    if (num === 0) {\n      throw new Error('Cannot calculate mean of an empty array');\n    }\n\n    return math.divide(sum, num);\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/statistics/mean.js\n ** module id = 137\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix,\n      Unit = require('../../type/Unit'),\n      BigNumber = math.type.BigNumber,\n      collection = math.collection,\n\n      isNumber = require('../../util/number').isNumber,\n      isCollection = collection.isCollection,\n\n      flatten = require('../../util/array').flatten;\n\n  /**\n   * Compute the median of a matrix or a list with values. The values are\n   * sorted and the middle value is returned. In case of an even number of\n   * values, the average of the two middle values is returned.\n   * Supported types of values are: Number, BigNumber, Unit\n   *\n   * In case of a (multi dimensional) array or matrix, the median of all\n   * elements will be calculated.\n   *\n   * Syntax:\n   *\n   *     math.median(a, b, c, ...)\n   *     math.median(A)\n   *\n   * Examples:\n   *\n   *     math.median(5, 2, 7);        // returns 5\n   *     math.median([3, -1, 5, 7]);  // returns 4\n   *\n   * See also:\n   *\n   *     mean, min, max, sum, prod, std, var\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The median\n   */\n  math.median = function median(args) {\n    if (arguments.length == 0) {\n      throw new SyntaxError('Function median requires one or more parameters (0 provided)');\n    }\n\n    if (isCollection(args)) {\n      if (arguments.length == 1) {\n        // median([a, b, c, d, ...])\n        return _median(args.valueOf());\n      }\n      else if (arguments.length == 2) {\n        // median([a, b, c, d, ...], dim)\n        // TODO: implement median(A, dim)\n        throw new Error('median(A, dim) is not yet supported');\n        //return collection.reduce(arguments[0], arguments[1], ...);\n      }\n      else {\n        throw new SyntaxError('Wrong number of parameters');\n      }\n    }\n    else {\n      // median(a, b, c, d, ...)\n      return _median(Array.prototype.slice.call(arguments));\n    }\n  };\n\n  /**\n   * Recursively calculate the median of an n-dimensional array\n   * @param {Array} array\n   * @return {Number} median\n   * @private\n   */\n  function _median(array) {\n    var flat = flatten(array);\n\n    flat.sort(math.compare);\n\n    var num = flat.length;\n\n    if (num == 0) {\n      throw new Error('Cannot calculate median of an empty array');\n    }\n\n    if (num % 2 == 0) {\n      // even: return the average of the two middle values\n      var left = flat[num / 2 - 1];\n      var right = flat[num / 2];\n\n      if (!isNumber(left) && !(left instanceof BigNumber) && !(left instanceof Unit)) {\n        throw new math.error.UnsupportedTypeError('median', math['typeof'](left));\n      }\n      if (!isNumber(right) && !(right instanceof BigNumber) && !(right instanceof Unit)) {\n        throw new math.error.UnsupportedTypeError('median', math['typeof'](right));\n      }\n\n      return math.divide(math.add(left, right), 2);\n    }\n    else {\n      // odd: return the middle value\n      var middle = flat[(num - 1) / 2];\n\n      if (!isNumber(middle) && !(middle instanceof BigNumber) && !(middle instanceof Unit)) {\n        throw new math.error.UnsupportedTypeError('median', math['typeof'](middle));\n      }\n\n      return middle;\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/statistics/median.js\n ** module id = 138\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix,\n      collection = math.collection,\n\n      isCollection = collection.isCollection;\n\n  /**\n   * Compute the product of a matrix or a list with values.\n   * In case of a (multi dimensional) array or matrix, the sum of all\n   * elements will be calculated.\n   *\n   * Syntax:\n   *\n   *     math.prod(a, b, c, ...)\n   *     math.prod(A)\n   *\n   * Examples:\n   *\n   *     math.multiply(2, 3);           // returns 6\n   *     math.prod(2, 3);               // returns 6\n   *     math.prod(2, 3, 4);            // returns 24\n   *     math.prod([2, 3, 4]);          // returns 24\n   *     math.prod([[2, 5], [4, 3]]);   // returns 120\n   *\n   * See also:\n   *\n   *    mean, median, min, max, sum, std, var\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The product of all values\n   */\n  math.prod = function prod(args) {\n    if (arguments.length == 0) {\n      throw new SyntaxError('Function prod requires one or more parameters (0 provided)');\n    }\n\n    if (isCollection(args)) {\n      if (arguments.length == 1) {\n        // prod([a, b, c, d, ...])\n        return _prod(args);\n      }\n      else if (arguments.length == 2) {\n        // prod([a, b, c, d, ...], dim)\n        // TODO: implement prod(A, dim)\n        throw new Error('prod(A, dim) is not yet supported');\n        //return collection.reduce(arguments[0], arguments[1], math.prod);\n      }\n      else {\n        throw new SyntaxError('Wrong number of parameters');\n      }\n    }\n    else {\n      // prod(a, b, c, d, ...)\n      return _prod(arguments);\n    }\n  };\n\n  /**\n   * Recursively calculate the product of an n-dimensional array\n   * @param {Array} array\n   * @return {Number} prod\n   * @private\n   */\n  function _prod(array) {\n    var prod = undefined;\n\n    collection.deepForEach(array, function (value) {\n      prod = (prod === undefined) ? value : math.multiply(prod, value);\n    });\n\n    if (prod === undefined) {\n      throw new Error('Cannot calculate prod of an empty array');\n    }\n\n    return prod;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/statistics/prod.js\n ** module id = 139\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n\n\n  /**\n   * Compute the standard deviation of a matrix or a  list with values.\n   * The standard deviations is defined as the square root of the variance:\n   * `std(A) = sqrt(var(A))`.\n   * In case of a (multi dimensional) array or matrix, the standard deviation\n   * over all elements will be calculated.\n   *\n   * Optionally, the type of normalization can be specified as second\n   * parameter. The parameter `normalization` can be one of the following values:\n   *\n   * - 'unbiased' (default) The sum of squared errors is divided by (n - 1)\n   * - 'uncorrected'        The sum of squared errors is divided by n\n   * - 'biased'             The sum of squared errors is divided by (n + 1)\n   *\n   * Syntax:\n   *\n   *     math.std(a, b, c, ...)\n   *     math.std(A)\n   *     math.std(A, normalization)\n   *\n   * Examples:\n   *\n   *     math.std(2, 4, 6);                     // returns 2\n   *     math.std([2, 4, 6, 8]);                // returns 2.581988897471611\n   *     math.std([2, 4, 6, 8], 'uncorrected'); // returns 2.23606797749979\n   *     math.std([2, 4, 6, 8], 'biased');      // returns 2\n   *\n   *     math.std([[1, 2, 3], [4, 5, 6]]);      // returns 1.8708286933869707\n   *\n   * See also:\n   *\n   *    mean, median, max, min, prod, sum, var\n   *\n   * @param {Array | Matrix} array\n   *                        A single matrix or or multiple scalar values\n   * @param {String} [normalization='unbiased']\n   *                        Determines how to normalize the variance.\n   *                        Choose 'unbiased' (default), 'uncorrected', or 'biased'.\n   * @return {*} The standard deviation\n   */\n  math.std = function std(array, normalization) {\n    if (arguments.length == 0) {\n      throw new SyntaxError('Function std requires one or more parameters (0 provided)');\n    }\n\n    var variance = math['var'].apply(null, arguments);\n    return math.sqrt(variance);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/statistics/std.js\n ** module id = 140\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix,\n      collection = math.collection,\n\n      isCollection = collection.isCollection;\n\n  /**\n   * Compute the sum of a matrix or a list with values.\n   * In case of a (multi dimensional) array or matrix, the sum of all\n   * elements will be calculated.\n   *\n   * Syntax:\n   *\n   *     math.sum(a, b, c, ...)\n   *     math.sum(A)\n   *\n   * Examples:\n   *\n   *     math.sum(2, 1, 4, 3);               // returns 10\n   *     math.sum([2, 1, 4, 3]);             // returns 10\n   *     math.sum([[2, 5], [4, 3], [1, 7]]); // returns 22\n   *\n   * See also:\n   *\n   *    mean, median, min, max, prod, std, var\n   *\n   * @param {... *} args  A single matrix or or multiple scalar values\n   * @return {*} The sum of all values\n   */\n  math.sum = function sum(args) {\n    if (arguments.length == 0) {\n      throw new SyntaxError('Function sum requires one or more parameters (0 provided)');\n    }\n\n    if (isCollection(args)) {\n      if (arguments.length == 1) {\n        // sum([a, b, c, d, ...])\n        return _sum(args);\n      }\n      else if (arguments.length == 2) {\n        // sum([a, b, c, d, ...], dim)\n        // TODO: implement sum(A, dim)\n        throw new Error('sum(A, dim) is not yet supported');\n        //return collection.reduce(arguments[0], arguments[1], math.add);\n      }\n      else {\n        throw new SyntaxError('Wrong number of parameters');\n      }\n    }\n    else {\n      // sum(a, b, c, d, ...)\n      return _sum(arguments);\n    }\n  };\n\n  /**\n   * Recursively calculate the sum of an n-dimensional array\n   * @param {Array} array\n   * @return {Number} sum\n   * @private\n   */\n  function _sum(array) {\n    var sum = undefined;\n\n    collection.deepForEach(array, function (value) {\n      sum = (sum === undefined) ? value : math.add(sum, value);\n    });\n\n    if (sum === undefined) {\n      throw new Error('Cannot calculate sum of an empty array');\n    }\n\n    return sum;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/statistics/sum.js\n ** module id = 141\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix,\n      BigNumber = math.type.BigNumber,\n      collection = math.collection,\n\n      isCollection = collection.isCollection,\n      isString = require('../../util/string').isString,\n\n      DEFAULT_NORMALIZATION = 'unbiased';\n\n  /**\n   * Compute the variance of a matrix or a  list with values.\n   * In case of a (multi dimensional) array or matrix, the variance over all\n   * elements will be calculated.\n   *\n   * Optionally, the type of normalization can be specified as second\n   * parameter. The parameter `normalization` can be one of the following values:\n   *\n   * - 'unbiased' (default) The sum of squared errors is divided by (n - 1)\n   * - 'uncorrected'        The sum of squared errors is divided by n\n   * - 'biased'             The sum of squared errors is divided by (n + 1)\n\n   * Note that older browser may not like the variable name `var`. In that\n   * case, the function can be called as `math['var'](...)` instead of\n   * `math.var(...)`.\n   *\n   * Syntax:\n   *\n   *     math.var(a, b, c, ...)\n   *     math.var(A)\n   *     math.var(A, normalization)\n   *\n   * Examples:\n   *\n   *     math.var(2, 4, 6);                     // returns 4\n   *     math.var([2, 4, 6, 8]);                // returns 6.666666666666667\n   *     math.var([2, 4, 6, 8], 'uncorrected'); // returns 5\n   *     math.var([2, 4, 6, 8], 'biased');      // returns 4\n   *\n   *     math.var([[1, 2, 3], [4, 5, 6]]);      // returns 3.5\n   *\n   * See also:\n   *\n   *    mean, median, max, min, prod, std, sum\n   *\n   * @param {Array | Matrix} array\n   *                        A single matrix or or multiple scalar values\n   * @param {String} [normalization='unbiased']\n   *                        Determines how to normalize the variance.\n   *                        Choose 'unbiased' (default), 'uncorrected', or 'biased'.\n   * @return {*} The variance\n   */\n  math['var'] = function variance(array, normalization) {\n    if (arguments.length == 0) {\n      throw new SyntaxError('Function var requires one or more parameters (0 provided)');\n    }\n\n    if (isCollection(array)) {\n      if (arguments.length == 1) {\n        // var([a, b, c, d, ...])\n        return _var(array, DEFAULT_NORMALIZATION);\n      }\n      else if (arguments.length == 2) {\n        // var([a, b, c, d, ...], normalization)\n\n        if (!isString(normalization)) {\n          throw new Error('String expected for parameter normalization');\n        }\n\n        return _var(array, normalization);\n      }\n      /* TODO: implement var(A [, normalization], dim)\n      else if (arguments.length == 3) {\n        // var([a, b, c, d, ...], dim)\n        // var([a, b, c, d, ...], normalization, dim)\n        //return collection.reduce(arguments[0], arguments[1], ...);\n      }\n      */\n      else {\n        throw new SyntaxError('Wrong number of parameters');\n      }\n    }\n    else {\n      // var(a, b, c, d, ...)\n      return _var(arguments, DEFAULT_NORMALIZATION);\n    }\n  };\n\n  /**\n   * Recursively calculate the variance of an n-dimensional array\n   * @param {Array} array\n   * @param {String} normalization\n   *                        Determines how to normalize the variance:\n   *                        - 'unbiased'    The sum of squared errors is divided by (n - 1)\n   *                        - 'uncorrected' The sum of squared errors is divided by n\n   *                        - 'biased'      The sum of squared errors is divided by (n + 1)\n   * @return {Number | BigNumber} variance\n   * @private\n   */\n  function _var(array, normalization) {\n    var sum = 0;\n    var num = 0;\n\n    // calculate the mean and number of elements\n    collection.deepForEach(array, function (value) {\n      sum = math.add(sum, value);\n      num++;\n    });\n    if (num === 0) throw new Error('Cannot calculate var of an empty array');\n\n    var mean = math.divide(sum, num);\n\n    // calculate the variance\n    sum = 0;\n    collection.deepForEach(array, function (value) {\n      var diff = math.subtract(value, mean);\n      sum = math.add(sum, math.multiply(diff, diff));\n    });\n\n    switch (normalization) {\n      case 'uncorrected':\n        return math.divide(sum, num);\n\n      case 'biased':\n        return math.divide(sum, num + 1);\n\n      case 'unbiased':\n        var zero = (sum instanceof BigNumber) ? new BigNumber(0) : 0;\n        return (num == 1) ? zero : math.divide(sum, num - 1);\n\n      default:\n        throw new Error('Unknown normalization \"' + normalization + '\". ' +\n            'Choose \"unbiased\" (default), \"uncorrected\", or \"biased\".');\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/statistics/var.js\n ** module id = 142\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection,\n\n      bigArcCos = util.bignumber.arccos_arcsec;\n\n  /**\n   * Calculate the inverse cosine of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acos(x)\n   *\n   * Examples:\n   *\n   *    math.acos(0.5);           // returns Number 1.0471975511965979\n   *    math.acos(math.cos(1.5)); // returns Number 1.5\n   *\n   *    math.acos(2);             // returns Complex 0 + 1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    cos, atan, asin\n   *\n   * @param {Number | BigNumber Boolean | Complex | Array | Matrix | null} x  Function input\n   * @return {Number | BigNumber | Complex | Array | Matrix} The arc cosine of x\n   */\n  math.acos = function acos(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('acos', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      if (x >= -1 && x <= 1) {\n        return Math.acos(x);\n      }\n      else {\n        return acos(new Complex(x, 0));\n      }\n    }\n\n    if (isComplex(x)) {\n      // acos(z) = 0.5*pi + i*log(iz + sqrt(1-z^2))\n      var temp1 = new Complex(\n          x.im * x.im - x.re * x.re + 1.0,\n          -2.0 * x.re * x.im\n      );\n      var temp2 = math.sqrt(temp1);\n      var temp3 = new Complex(\n          temp2.re - x.im,\n          temp2.im + x.re\n      );\n      var temp4 = math.log(temp3);\n\n      // 0.5*pi = 1.5707963267948966192313216916398\n      return new Complex(\n          1.57079632679489661923 - temp4.im,\n          temp4.re\n      );\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, acos);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return Math.acos(x);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigArcCos(x, BigNumber, false);\n    }\n\n    throw new math.error.UnsupportedTypeError('acos', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/acos.js\n ** module id = 143\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection,\n\n      bigAcosh = util.bignumber.acosh_asinh_asech_acsch;\n\n  /**\n   * Calculate the hyperbolic arccos of a value,\n   * defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acosh(x)\n   *\n   * Examples:\n   *\n   *    math.acosh(1.5);       // returns 0.9624236501192069\n   *\n   * See also:\n   *\n   *    cosh, asinh, atanh\n   *\n   * @param {Number | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\n   * @return {Number | Complex | Array | Matrix} Hyperbolic arccosine of x\n   */\n  math.acosh = function acosh(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('acosh', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      if (x >= 1) {\n        return Math.log(Math.sqrt(x*x - 1) + x);\n      }\n      if (x <= -1) { \n        return new Complex(Math.log(Math.sqrt(x*x - 1) - x), Math.PI);\n      }\n      return acosh(new Complex(x, 0));\n    }\n\n    if (isComplex(x)) {\n      // acosh(z) = (-acos(z).im,  acos(z).re)   for acos(z).im <= 0\n      //            ( acos(z).im, -acos(z).re)   otherwise\n      var temp;\n      var acos = math.acos(x);\n      if (acos.im <= 0) {\n        temp = acos.re;\n        acos.re = -acos.im;\n        acos.im = temp;\n      } else {\n        temp = acos.im;\n        acos.im = -acos.re;\n        acos.re = temp;\n      }\n\n      return acos;\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, acosh);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return (x) ? 0 : new Complex(0, 1.5707963267948966);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigAcosh(x, BigNumber, false, false);\n    }\n\n    throw new math.error.UnsupportedTypeError('acosh', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/acosh.js\n ** module id = 144\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection,\n\n      bigArcCot = util.bignumber.arctan_arccot;\n\n  /**\n   * Calculate the inverse cotangent of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acot(x)\n   *\n   * Examples:\n   *\n   *    math.acot(0.5);           // returns Number 0.4636476090008061\n   *    math.acot(math.cot(1.5)); // returns Number 1.5\n   *\n   *    math.acot(2);             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    cot, atan\n   *\n   * @param {Number | Boolean | Complex | Array | Matrix | null} x   Function input\n   * @return {Number | Complex | Array | Matrix} The arc cotangent of x\n   */\n  math.acot = function acot(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('acot', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return (x) ? Math.atan(1 / x) : halfPi;\n    }\n\n    if (isComplex(x)) {\n      if (x.im == 0) {\n        return new Complex(x.re ? Math.atan(1 / x.re) : halfPi, 0);\n      }\n\n      var den = x.re*x.re + x.im*x.im;\n      x = (den != 0)\n        ? new Complex(\n            x.re =  x.re / den,\n            x.im = -x.im / den)\n        : new Complex(\n            (x.re != 0) ?  (x.re / 0) : 0,\n            (x.im != 0) ? -(x.im / 0) : 0);\n\n      return math.atan(x);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, acot);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return (x) ? 0.7853981633974483 : halfPi;\n    }\n\n    if (x instanceof BigNumber) {\n      return bigArcCot(x, BigNumber, true);\n    }\n\n    throw new math.error.UnsupportedTypeError('acot', math['typeof'](x));\n  };\n\n  var halfPi = 1.5707963267948966;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/acot.js\n ** module id = 145\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection,\n\n      bigAcoth = util.bignumber.atanh_acoth;\n\n  /**\n   * Calculate the hyperbolic arccotangent of a value,\n   * defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acoth(x)\n   *\n   * Examples:\n   *\n   *    math.acoth(0.5);       // returns 0.8047189562170503\n   *\n   * See also:\n   *\n   *    acsch, asech\n   *\n   * @param {Number | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\n   * @return {Number | Complex | Array | Matrix} Hyperbolic arccotangent of x\n   */\n  math.acoth = function acoth(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('acoth', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      if (x >= 1 || x <= -1) {\n        return isFinite(x) ? (Math.log((x+1)/x) + Math.log(x/(x-1))) / 2 : 0;\n      }\n      return (x) ? acoth(new Complex(x, 0)) : new Complex(0, halfPi);\n    }\n\n    if (isComplex(x)) {\n      if (x.re == 0 && x.im == 0) {\n        return new Complex(0, halfPi);\n      }\n\n      // acoth(z) = -i*atanh(1/z)\n      var den = x.re*x.re + x.im*x.im;\n      x = (den != 0)\n        ? new Complex(\n            x.re / den,\n           -x.im / den\n          )\n        : new Complex(\n            (x.re != 0) ?  (x.re / 0) : 0,\n            (x.im != 0) ? -(x.im / 0) : 0\n          );\n\n      return math.atanh(x);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, acoth);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return (x) ? Infinity : new Complex(0, halfPi);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigAcoth(x, BigNumber, true);\n    }\n\n    throw new math.error.UnsupportedTypeError('acoth', math['typeof'](x));\n  };\n\n  var halfPi = 1.5707963267948966;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/acoth.js\n ** module id = 146\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection,\n\n      bigArcCsc = util.bignumber.arcsin_arccsc;\n\n  /**\n   * Calculate the inverse cosecant of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acsc(x)\n   *\n   * Examples:\n   *\n   *    math.acsc(0.5);           // returns Number 0.5235987755982989\n   *    math.acsc(math.csc(1.5)); // returns Number ~1.5\n   *\n   *    math.acsc(2);             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    csc, asin, asec\n   *\n   * @param {Number | Boolean | Complex | Array | Matrix | null} x   Function input\n   * @return {Number | Complex | Array | Matrix} The arc cosecant of x\n   */\n  math.acsc = function acsc(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('acsc', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      if (x <= -1 || x >= 1) {\n        return Math.asin(1 / x);\n      }\n      return acsc(new Complex(x, 0));\n    }\n\n    if (isComplex(x)) {\n      if (x.re == 0 && x.im == 0) {\n        return new Complex(halfPi, Infinity);\n      }\n\n      var den = x.re*x.re + x.im*x.im;\n      x = (den != 0)\n        ? new Complex(\n            x.re =  x.re / den,\n            x.im = -x.im / den)\n        : new Complex(\n            (x.re != 0) ?  (x.re / 0) : 0,\n            (x.im != 0) ? -(x.im / 0) : 0);\n\n      return math.asin(x);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, acsc);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return (x) ? halfPi : new Complex(halfPi, Infinity);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigArcCsc(x, BigNumber, true);\n    }\n\n    throw new math.error.UnsupportedTypeError('acsc', math['typeof'](x));\n  };\n\n  var halfPi = 1.5707963267948966;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/acsc.js\n ** module id = 147\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection,\n\n      bigAcsch = util.bignumber.acosh_asinh_asech_acsch;\n\n  /**\n   * Calculate the hyperbolic arccosecant of a value,\n   * defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acsch(x)\n   *\n   * Examples:\n   *\n   *    math.acsch(0.5);       // returns 1.4436354751788103\n   *\n   * See also:\n   *\n   *    asech, acoth\n   *\n   * @param {Number | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\n   * @return {Number | Complex | Array | Matrix} Hyperbolic arccosecant of x\n   */\n  math.acsch = function acsch(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('acsch', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      x = 1 / x;\n      return Math.log(x + Math.sqrt(x*x + 1));\n    }\n\n    if (isComplex(x)) {\n      if (x.im == 0) {\n        x = (x.re != 0)\n          ? Math.log(x.re + Math.sqrt(x.re*x.re + 1))\n          : Infinity;\n        return new Complex(x, 0);\n      }\n\n      // acsch(z) = -i*asinh(1/z)\n      var den = x.re*x.re + x.im*x.im;\n      x = (den != 0) \n        ? new Complex(\n            x.re / den,\n           -x.im / den\n          )\n        : new Complex(\n            (x.re != 0) ?  (x.re / 0) : 0,\n            (x.im != 0) ? -(x.im / 0) : 0\n          );\n\n      return math.asinh(x);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, acsch);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return (x) ? 0.881373587019543 : Infinity;\n    }\n\n    if (x instanceof BigNumber) {\n      return bigAcsch(x, BigNumber, true, true);\n    }\n\n    throw new math.error.UnsupportedTypeError('acsch', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/acsch.js\n ** module id = 148\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection,\n\n      bigArcSec = util.bignumber.arccos_arcsec;\n\n  /**\n   * Calculate the inverse secant of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.asec(x)\n   *\n   * Examples:\n   *\n   *    math.asec(0.5);           // returns 1.0471975511965979\n   *    math.asec(math.sec(1.5)); // returns 1.5\n   *\n   *    math.asec(2);             // returns 0 + 1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    acos, acot, acsc\n   *\n   * @param {Number | Boolean | Complex | Array | Matrix | null} x  Function input\n   * @return {Number | Complex | Array | Matrix} The arc secant of x\n   */\n  math.asec = function asec(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('asec', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      if (x <= -1 || x >= 1) {\n        return Math.acos(1 / x);\n      }\n      return asec(new Complex(x, 0));\n    }\n\n    if (isComplex(x)) {\n      if (x.re == 0 && x.im == 0) {\n        return new Complex(0, Infinity);\n      }\n\n      var den = x.re*x.re + x.im*x.im;\n      x = (den != 0)\n        ? new Complex(\n            x.re =  x.re / den,\n            x.im = -x.im / den)\n        : new Complex(\n            (x.re != 0) ?  (x.re / 0) : 0,\n            (x.im != 0) ? -(x.im / 0) : 0);\n\n      return math.acos(x);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, asec);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return (x) ? 0 : new Complex(0, Infinity);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigArcSec(x, BigNumber, true);\n    }\n\n    throw new math.error.UnsupportedTypeError('asec', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/asec.js\n ** module id = 149\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection,\n\n      bigAsech = util.bignumber.acosh_asinh_asech_acsch;\n\n  /**\n   * Calculate the hyperbolic arccos of a value,\n   * defined as `asech(x) = ln(sqrt(1/x^2 - 1) + 1/x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.asech(x)\n   *\n   * Examples:\n   *\n   *    math.asech(0.5);       // returns 1.3169578969248166\n   *\n   * See also:\n   *\n   *    acsch, acoth\n   *\n   * @param {Number | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\n   * @return {Number | Complex | Array | Matrix} Hyperbolic arcsecant of x\n   */\n  math.asech = function asech(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('asech', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      if (x <= 1 && x >= -1) {\n        x = 1 / x;\n\n        var ret = Math.sqrt(x*x - 1);\n        if (x > 0) {\n          return Math.log(ret + x);\n        }\n\n        return new Complex(Math.log(ret - x), Math.PI);\n      }\n\n      return asech(new Complex(x, 0));\n    }\n\n    if (isComplex(x)) {\n      if (x.re == 0 && x.im == 0) {\n        return new Complex(Infinity, 0);\n      }\n\n      // acsch(z) = -i*asinh(1/z)\n      var den = x.re*x.re + x.im*x.im;\n      x = (den != 0)\n        ? new Complex(\n            x.re / den,\n           -x.im / den\n          )\n        : new Complex(\n            (x.re != 0) ?  (x.re / 0) : 0,\n            (x.im != 0) ? -(x.im / 0) : 0\n          );\n\n      return math.acosh(x);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, asech);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return (x) ? 0 : Infinity;\n    }\n\n    if (x instanceof BigNumber) {\n      return bigAsech(x, BigNumber, false, true);\n    }\n\n    throw new math.error.UnsupportedTypeError('asech', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/asech.js\n ** module id = 150\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection,\n\n      bigArcSin = util.bignumber.arcsin_arccsc;\n\n  /**\n   * Calculate the inverse sine of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.asin(x)\n   *\n   * Examples:\n   *\n   *    math.asin(0.5);           // returns Number 0.5235987755982989\n   *    math.asin(math.sin(1.5)); // returns Number ~1.5\n   *\n   *    math.asin(2);             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    sin, atan, acos\n   *\n   * @param {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x   Function input\n   * @return {Number | BigNumber | Complex | Array | Matrix} The arc sine of x\n   */\n  math.asin = function asin(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('asin', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      if (x >= -1 && x <= 1) {\n        return Math.asin(x);\n      }\n      else {\n        return asin(new Complex(x, 0));\n      }\n    }\n\n    if (isComplex(x)) {\n      // asin(z) = -i*log(iz + sqrt(1-z^2))\n      var re = x.re;\n      var im = x.im;\n      var temp1 = new Complex(\n          im * im - re * re + 1.0,\n          -2.0 * re * im\n      );\n      var temp2 = math.sqrt(temp1);\n      var temp3 = new Complex(\n          temp2.re - im,\n          temp2.im + re\n      );\n      var temp4 = math.log(temp3);\n\n      return new Complex(temp4.im, -temp4.re);\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since asin(0) = 0\n      return collection.deepMap(x, asin, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return Math.asin(x);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigArcSin(x, BigNumber, false);\n    }\n\n    throw new math.error.UnsupportedTypeError('asin', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/asin.js\n ** module id = 151\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection,\n\n      bigAsinh = util.bignumber.acosh_asinh_asech_acsch;\n\n  /**\n   * Calculate the hyperbolic arcsine of a value,\n   * defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.asinh(x)\n   *\n   * Examples:\n   *\n   *    math.asinh(0.5);       // returns 0.48121182505960347\n   *\n   * See also:\n   *\n   *    acosh, atanh\n   *\n   * @param {Number | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\n   * @return {Number | Complex | Array | Matrix} Hyperbolic arcsine of x\n   */\n  math.asinh = function asinh(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('asinh', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return Math.log(Math.sqrt(x*x + 1) + x);\n    }\n\n    if (isComplex(x)) {\n      // asinh(z) = (-asin((z.im, -z.re)).im, asin((z.im, -z.re)).re)\n      var temp = x.im;\n      x.im = -x.re;\n      x.re = temp;\n\n      var asin = math.asin(x);\n\n      // restore original values\n      x.re = -x.im;\n      x.im = temp;\n\n      temp = asin.re;\n      asin.re = -asin.im;\n      asin.im = temp;\n\n      return asin;\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since asinh(0) = 0\n      return collection.deepMap(x, asinh, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return (x) ? 0.881373587019543 : 0;\n    }\n\n    if (x instanceof BigNumber) {\n      return bigAsinh(x, BigNumber, true, false);\n    }\n\n    throw new math.error.UnsupportedTypeError('asinh', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/asinh.js\n ** module id = 152\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection,\n\n      bigArcTan = util.bignumber.arctan_arccot;\n\n  /**\n   * Calculate the inverse tangent of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atan(x)\n   *\n   * Examples:\n   *\n   *    math.atan(0.5);           // returns Number 0.4636476090008061\n   *    math.atan(math.tan(1.5)); // returns Number 1.5\n   *\n   *    math.atan(2);             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    tan, asin, acos\n   *\n   * @param {Number | BigNumber | Boolean | Complex | Array | Matrix | null} x   Function input\n   * @return {Number | BigNumber | Complex | Array | Matrix} The arc tangent of x\n   */\n  math.atan = function atan(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('atan', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return Math.atan(x);\n    }\n\n    if (isComplex(x)) {\n      if (x.re == 0) {\n        if (x.im == 1) {\n          return new Complex(0, Infinity);\n        }\n        if (x.im == -1) {\n          return new Complex(0, -Infinity);\n        }\n      }\n\n      // atan(z) = 1/2 * i * (ln(1-iz) - ln(1+iz))\n      var re = x.re;\n      var im = x.im;\n      var den = re * re + (1.0 - im) * (1.0 - im);\n\n      var temp1 = new Complex(\n          (1.0 - im * im - re * re) / den,\n          (-2.0 * re) / den\n      );\n      var temp2 = math.log(temp1);\n\n      return new Complex(\n          -0.5 * temp2.im,\n          0.5 * temp2.re\n      );\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since atan(0) = 0\n      return collection.deepMap(x, atan, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return Math.atan(x);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigArcTan(x, BigNumber, false);\n    }\n\n    throw new math.error.UnsupportedTypeError('atan', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/atan.js\n ** module id = 153\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isCollection = collection.isCollection,\n\n      atan2Big = util.bignumber.arctan2;\n\n  /**\n   * Calculate the inverse tangent function with two arguments, y/x.\n   * By providing two arguments, the right quadrant of the computed angle can be\n   * determined.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atan2(y, x)\n   *\n   * Examples:\n   *\n   *    math.atan2(2, 2) / math.pi;       // returns number 0.25\n   *\n   *    var angle = math.unit(60, 'deg'); // returns Unit 60 deg\n   *    var x = math.cos(angle);\n   *    var y = math.sin(angle);\n   *\n   *    math.atan(2);             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    tan, atan, sin, cos\n   *\n   * @param {Number | Boolean | Complex | Array | Matrix | null} y  Second dimension\n   * @param {Number | Boolean | Complex | Array | Matrix | null} x  First dimension\n   * @return {Number | Complex | Array | Matrix} Four-quadrant inverse tangent\n   */\n  math.atan2 = function atan2(y, x) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('atan2', arguments.length, 2);\n    }\n\n    if (isNumber(y)) {\n      if (isNumber(x)) {\n        return Math.atan2(y, x);\n      }\n\n      if (x instanceof BigNumber) {\n        return atan2Big(new BigNumber(y), x, BigNumber);\n      }\n    }\n\n    if (isCollection(y) || isCollection(x)) {\n      return collection.deepMap2(y, x, atan2);\n    }\n\n    if (isBoolean(y) || y === null) {\n      return atan2(y ? 1 : 0, x);\n    }\n    if (isBoolean(x) || x === null) {\n      return atan2(y, x ? 1 : 0);\n    }\n\n    if (y instanceof BigNumber) {\n      if (isNumber(x)) {\n        return atan2Big(y, new BigNumber(x), BigNumber);\n      }\n\n      if (x instanceof BigNumber) {\n        return atan2Big(y, x, BigNumber);\n      }\n\n      return atan2(y.toNumber(), x);\n    }\n    if (x instanceof BigNumber) {\n      if (y instanceof BigNumber) {\n        return atan2Big(y, x, BigNumber);\n      }\n\n      return atan2(y, x.toNumber());\n    }\n\n    // TODO: support for complex computation of atan2\n\n    throw new math.error.UnsupportedTypeError('atan2', math['typeof'](y), math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/atan2.js\n ** module id = 154\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection,\n\n      bigAtanh = util.bignumber.atanh_acoth;\n\n  /**\n   * Calculate the hyperbolic arctangent of a value,\n   * defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atanh(x)\n   *\n   * Examples:\n   *\n   *    math.atanh(0.5);       // returns 0.5493061443340549\n   *\n   * See also:\n   *\n   *    acosh, asinh\n   *\n   * @param {Number | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\n   * @return {Number | Complex | Array | Matrix} Hyperbolic arctangent of x\n   */\n  math.atanh = function atanh(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('atanh', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      if (x <= 1 && x >= -1) {\n        return Math.log((1 + x)/(1 - x)) / 2;\n      }\n      return atanh(new Complex(x, 0));\n    }\n\n    if (isComplex(x)) {\n      // x.im should equal -pi / 2 in this case\n      var noIM = x.re > 1 && x.im == 0;\n\n      var oneMinus = 1 - x.re;\n      var onePlus = 1 + x.re;\n      var den = oneMinus*oneMinus + x.im*x.im;\n      x = (den != 0)\n        ? new Complex(\n            (onePlus*oneMinus - x.im*x.im) / den,\n            (x.im*oneMinus + onePlus*x.im) / den\n          )\n        : new Complex(\n            (x.re != -1) ? (x.re / 0) : 0,\n            (x.im != 0) ? (x.im / 0) : 0\n          );\n\n      var temp = x.re;\n      x.re = Math.log(Math.sqrt(x.re*x.re + x.im*x.im)) / 2;\n      x.im = Math.atan2(x.im, temp) / 2;\n\n      if (noIM) {\n        x.im = -x.im;\n      }\n      return x;\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since atanh(0) = 0\n      return collection.deepMap(x, atanh, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return (x) ? Infinity : 0;\n    }\n\n    if (x instanceof BigNumber) {\n      return bigAtanh(x, BigNumber, false);\n    }\n\n    throw new math.error.UnsupportedTypeError('atanh', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/atanh.js\n ** module id = 155\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection,\n\n      bigCos = util.bignumber.cos_sin_sec_csc;\n\n  /**\n   * Calculate the cosine of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.cos(x)\n   *\n   * Examples:\n   *\n   *    math.cos(2);                      // returns Number -0.4161468365471422\n   *    math.cos(math.pi / 4);            // returns Number  0.7071067811865475\n   *    math.cos(math.unit(180, 'deg'));  // returns Number -1\n   *    math.cos(math.unit(60, 'deg'));   // returns Number  0.5\n   *\n   *    var angle = 0.2;\n   *    math.pow(math.sin(angle), 2) + math.pow(math.cos(angle), 2); // returns Number ~1\n   *\n   * See also:\n   *\n   *    cos, tan\n   *\n   * @param {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\n   * @return {Number | BigNumber | Complex | Array | Matrix} Cosine of x\n   */\n  math.cos = function cos(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('cos', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return Math.cos(x);\n    }\n\n    if (isComplex(x)) {\n      // cos(z) = (exp(iz) + exp(-iz)) / 2\n      return new Complex(\n          Math.cos(x.re) * math.cosh(-x.im),\n          Math.sin(x.re) * math.sinh(-x.im)\n      );\n    }\n\n    if (isUnit(x)) {\n      if (!x.hasBase(Unit.BASE_UNITS.ANGLE)) {\n        throw new TypeError ('Unit in function cos is no angle');\n      }\n      return Math.cos(x.value);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, cos);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return Math.cos(x);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigCos(x, BigNumber, 0, false);\n    }\n\n    throw new math.error.UnsupportedTypeError('cos', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/cos.js\n ** module id = 156\n ** module chunks = 0\n **/","'use strict';\r\n\r\nmodule.exports = function (math) {\r\n  var util = require('../../util/index'),\r\n\r\n      BigNumber = math.type.BigNumber,\r\n      Complex = require('../../type/Complex'),\r\n      Unit = require('../../type/Unit'),\r\n      collection = math.collection,\r\n\r\n      isNumber = util.number.isNumber,\r\n      isBoolean = util['boolean'].isBoolean,\r\n      isComplex = Complex.isComplex,\r\n      isUnit = Unit.isUnit,\r\n      isCollection = collection.isCollection,\r\n\r\n      bigCosh = util.bignumber.cosh_sinh_csch_sech;\r\n\r\n  /**\r\n   * Calculate the hyperbolic cosine of a value,\r\n   * defined as `cosh(x) = 1/2 * (exp(x) + exp(-x))`.\r\n   *\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.cosh(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.cosh(0.5);       // returns Number 1.1276259652063807\r\n   *\r\n   * See also:\r\n   *\r\n   *    sinh, tanh\r\n   *\r\n   * @param {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\r\n   * @return {Number | BigNumber | Complex | Array | Matrix} Hyperbolic cosine of x\r\n   */\r\n  math.cosh = function cosh(x) {\r\n    if (arguments.length != 1) {\r\n      throw new math.error.ArgumentsError('cosh', arguments.length, 1);\r\n    }\r\n\r\n    if (isNumber(x)) {\r\n      return (Math.exp(x) + Math.exp(-x)) / 2;\r\n    }\r\n\r\n    if (isComplex(x)) {\r\n      var ep = Math.exp(x.re);\r\n      var en = Math.exp(-x.re);\r\n      return new Complex(Math.cos(x.im) * (ep + en) / 2, Math.sin(x.im) * (ep - en) / 2);\r\n    }\r\n\r\n    if (isUnit(x)) {\r\n      if (!x.hasBase(Unit.BASE_UNITS.ANGLE)) {\r\n        throw new TypeError ('Unit in function cosh is no angle');\r\n      }\r\n      return cosh(x.value);\r\n    }\r\n\r\n    if (isCollection(x)) {\r\n      return collection.deepMap(x, cosh);\r\n    }\r\n\r\n    if (isBoolean(x) || x === null) {\r\n      return cosh(x ? 1 : 0);\r\n    }\r\n\r\n    if (x instanceof BigNumber) {\r\n      return bigCosh(x, BigNumber, false, false);\r\n    }\r\n\r\n    throw new math.error.UnsupportedTypeError('cosh', math['typeof'](x));\r\n  };\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/cosh.js\n ** module id = 157\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection,\n\n      bigCot = util.bignumber.tan_cot;\n\n  /**\n   * Calculate the cotangent of a value. `cot(x)` is defined as `1 / tan(x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.cot(x)\n   *\n   * Examples:\n   *\n   *    math.cot(2);      // returns Number -0.45765755436028577\n   *    1 / math.tan(2);  // returns Number -0.45765755436028577\n   *\n   * See also:\n   *\n   *    tan, sec, csc\n   *\n   * @param {Number | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\n   * @return {Number | Complex | Array | Matrix} Cotangent of x\n   */\n  math.cot = function cot(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('cot', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return 1 / Math.tan(x);\n    }\n\n    if (isComplex(x)) {\n      var den = Math.exp(-4.0 * x.im) -\n          2.0 * Math.exp(-2.0 * x.im) * Math.cos(2.0 * x.re) + 1.0;\n\n      return new Complex(\n          2.0 * Math.exp(-2.0 * x.im) * Math.sin(2.0 * x.re) / den,\n          (Math.exp(-4.0 * x.im) - 1.0) / den\n      );\n    }\n\n    if (isUnit(x)) {\n      if (!x.hasBase(Unit.BASE_UNITS.ANGLE)) {\n        throw new TypeError ('Unit in function cot is no angle');\n      }\n      return 1 / Math.tan(x.value);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, cot);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return cot(+x);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigCot(x, BigNumber, true);\n    }\n\n    throw new math.error.UnsupportedTypeError('cot', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/cot.js\n ** module id = 158\n ** module chunks = 0\n **/","'use strict';\r\n\r\nmodule.exports = function (math) {\r\n  var util = require('../../util/index'),\r\n\r\n      BigNumber = math.type.BigNumber,\r\n      Complex = require('../../type/Complex'),\r\n      Unit = require('../../type/Unit'),\r\n      collection = math.collection,\r\n\r\n      isNumber = util.number.isNumber,\r\n      isBoolean = util['boolean'].isBoolean,\r\n      isComplex = Complex.isComplex,\r\n      isUnit = Unit.isUnit,\r\n      isCollection = collection.isCollection,\r\n\r\n      bigCoth = util.bignumber.tanh_coth;\r\n\r\n  /**\r\n   * Calculate the hyperbolic cotangent of a value,\r\n   * defined as `coth(x) = 1 / tanh(x)`.\r\n   *\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.coth(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    // coth(x) = 1 / tanh(x)\r\n   *    math.coth(2);         // returns 1.0373147207275482\r\n   *    1 / math.tanh(2);     // returns 1.0373147207275482\r\n   *\r\n   * See also:\r\n   *\r\n   *    sinh, tanh, cosh\r\n   *\r\n   * @param {Number | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\r\n   * @return {Number | Complex | Array | Matrix} Hyperbolic cotangent of x\r\n   */\r\n  math.coth = function coth(x) {\r\n    if (arguments.length != 1) {\r\n      throw new math.error.ArgumentsError('coth', arguments.length, 1);\r\n    }\r\n\r\n    if (isNumber(x)) {\r\n      var e = Math.exp(2 * x);\r\n      return (e + 1) / (e - 1);\r\n    }\r\n\r\n    if (isComplex(x)) {\r\n      var r = Math.exp(2 * x.re);\r\n      var re = r * Math.cos(2 * x.im);\r\n      var im = r * Math.sin(2 * x.im);\r\n      var den = (re - 1) * (re - 1) + im * im;\r\n      return new Complex(\r\n        ((re + 1) * (re - 1) + im * im) / den,\r\n        -2 * im / den\r\n      );\r\n    }\r\n\r\n    if (isUnit(x)) {\r\n      if (!x.hasBase(Unit.BASE_UNITS.ANGLE)) {\r\n        throw new TypeError ('Unit in function coth is no angle');\r\n      }\r\n      return coth(x.value);\r\n    }\r\n\r\n    if (isCollection(x)) {\r\n      return collection.deepMap(x, coth);\r\n    }\r\n\r\n    if (isBoolean(x) || x === null) {\r\n      return coth(x ? 1 : 0);\r\n    }\r\n\r\n    if (x instanceof BigNumber) {\r\n      return bigCoth(x, BigNumber, true);\r\n    }\r\n\r\n    throw new math.error.UnsupportedTypeError('coth', math['typeof'](x));\r\n  };\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/coth.js\n ** module id = 159\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection,\n\n      bigCsc = util.bignumber.cos_sin_sec_csc;\n\n  /**\n   * Calculate the cosecant of a value, defined as `csc(x) = 1/sin(x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.csc(x)\n   *\n   * Examples:\n   *\n   *    math.csc(2);      // returns Number 1.099750170294617\n   *    1 / math.sin(2);  // returns Number 1.099750170294617\n   *\n   * See also:\n   *\n   *    sin, sec, cot\n   *\n   * @param {Number | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\n   * @return {Number | Complex | Array | Matrix} Cosecant of x\n   */\n  math.csc = function csc(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('csc', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return 1 / Math.sin(x);\n    }\n\n    if (isComplex(x)) {\n      // csc(z) = 1/sin(z) = (2i) / (exp(iz) - exp(-iz))\n      var den = 0.25 * (Math.exp(-2.0 * x.im) + Math.exp(2.0 * x.im)) -\n          0.5 * Math.cos(2.0 * x.re);\n\n      return new Complex (\n          0.5 * Math.sin(x.re) * (Math.exp(-x.im) + Math.exp(x.im)) / den,\n          0.5 * Math.cos(x.re) * (Math.exp(-x.im) - Math.exp(x.im)) / den\n      );\n    }\n\n    if (isUnit(x)) {\n      if (!x.hasBase(Unit.BASE_UNITS.ANGLE)) {\n        throw new TypeError ('Unit in function csc is no angle');\n      }\n      return 1 / Math.sin(x.value);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, csc);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return csc(+x);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigCsc(x, BigNumber, 1, true);\n    }\n\n    throw new math.error.UnsupportedTypeError('csc', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/csc.js\n ** module id = 160\n ** module chunks = 0\n **/","'use strict';\r\n\r\nmodule.exports = function (math) {\r\n  var util = require('../../util/index'),\r\n\r\n      BigNumber = math.type.BigNumber,\r\n      Complex = require('../../type/Complex'),\r\n      Unit = require('../../type/Unit'),\r\n      collection = math.collection,\r\n      number = util.number,\r\n      \r\n      isNumber = util.number.isNumber,\r\n      isBoolean = util['boolean'].isBoolean,\r\n      isComplex = Complex.isComplex,\r\n      isUnit = Unit.isUnit,\r\n      isCollection = collection.isCollection,\r\n\r\n      bigCsch = util.bignumber.cosh_sinh_csch_sech;\r\n\r\n  /**\r\n   * Calculate the hyperbolic cosecant of a value,\r\n   * defined as `csch(x) = 1 / sinh(x)`.\r\n   *\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.csch(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    // csch(x) = 1/ sinh(x)\r\n   *    math.csch(0.5);       // returns 1.9190347513349437\r\n   *    1 / math.sinh(0.5);   // returns 1.9190347513349437\r\n   *\r\n   * See also:\r\n   *\r\n   *    sinh, sech, coth\r\n   *\r\n   * @param {Number | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\r\n   * @return {Number | Complex | Array | Matrix} Hyperbolic cosecant of x\r\n   */\r\n  math.csch = function csch(x) {\r\n    if (arguments.length != 1) {\r\n      throw new math.error.ArgumentsError('csch', arguments.length, 1);\r\n    }\r\n\r\n    if (isNumber(x)) {\r\n      // x == 0\r\n      if (x == 0) return Number.POSITIVE_INFINITY;\r\n      // consider values close to zero (+/-)\r\n      return Math.abs(2 / (Math.exp(x) - Math.exp(-x))) * number.sign(x);\r\n    }\r\n\r\n    if (isComplex(x)) {\r\n      var ep = Math.exp(x.re);\r\n      var en = Math.exp(-x.re);\r\n      var re = Math.cos(x.im) * (ep - en);\r\n      var im = Math.sin(x.im) * (ep + en);\r\n      var den = re * re + im * im;\r\n      return new Complex(2 * re / den, -2 * im /den);\r\n    }\r\n\r\n    if (isUnit(x)) {\r\n      if (!x.hasBase(Unit.BASE_UNITS.ANGLE)) {\r\n        throw new TypeError ('Unit in function csch is no angle');\r\n      }\r\n      return csch(x.value);\r\n    }\r\n\r\n    if (isCollection(x)) {\r\n      return collection.deepMap(x, csch);\r\n    }\r\n\r\n    if (isBoolean(x) || x === null) {\r\n      return csch(x ? 1 : 0);\r\n    }\r\n\r\n    if (x instanceof BigNumber) {\r\n      return bigCsch(x, BigNumber, true, true);\r\n    }\r\n\r\n    throw new math.error.UnsupportedTypeError('csch', math['typeof'](x));\r\n  };\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/csch.js\n ** module id = 161\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection,\n\n      bigSec = util.bignumber.cos_sin_sec_csc;\n\n  /**\n   * Calculate the secant of a value, defined as `sec(x) = 1/cos(x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sec(x)\n   *\n   * Examples:\n   *\n   *    math.sec(2);      // returns Number -2.4029979617223822\n   *    1 / math.cos(2);  // returns Number -2.4029979617223822\n   *\n   * See also:\n   *\n   *    cos, csc, cot\n   *\n   * @param {Number | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\n   * @return {Number | Complex | Array | Matrix} Secant of x\n   */\n  math.sec = function sec(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('sec', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return 1 / Math.cos(x);\n    }\n\n    if (isComplex(x)) {\n      // sec(z) = 1/cos(z) = 2 / (exp(iz) + exp(-iz))\n      var den = 0.25 * (Math.exp(-2.0 * x.im) + Math.exp(2.0 * x.im)) +\n          0.5 * Math.cos(2.0 * x.re);\n\n      return new Complex(\n          0.5 * Math.cos(x.re) * (Math.exp(-x.im) + Math.exp( x.im)) / den,\n          0.5 * Math.sin(x.re) * (Math.exp( x.im) - Math.exp(-x.im)) / den\n      );\n    }\n\n    if (isUnit(x)) {\n      if (!x.hasBase(Unit.BASE_UNITS.ANGLE)) {\n        throw new TypeError ('Unit in function sec is no angle');\n      }\n      return 1 / Math.cos(x.value);\n    }\n\n    if (isCollection(x)) {\n      return collection.deepMap(x, sec);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return sec(+x);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigSec(x, BigNumber, 0, true);\n    }\n\n    throw new math.error.UnsupportedTypeError('sec', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/sec.js\n ** module id = 162\n ** module chunks = 0\n **/","'use strict';\r\n\r\nmodule.exports = function (math) {\r\n  var util = require('../../util/index'),\r\n\r\n      BigNumber = math.type.BigNumber,\r\n      Complex = require('../../type/Complex'),\r\n      Unit = require('../../type/Unit'),\r\n      collection = math.collection,\r\n\r\n      isNumber = util.number.isNumber,\r\n      isBoolean = util['boolean'].isBoolean,\r\n      isComplex = Complex.isComplex,\r\n      isUnit = Unit.isUnit,\r\n      isCollection = collection.isCollection,\r\n\r\n      bigSech = util.bignumber.cosh_sinh_csch_sech;\r\n\r\n  /**\r\n   * Calculate the hyperbolic secant of a value,\r\n   * defined as `sech(x) = 1 / cosh(x)`.\r\n   *\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.sech(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    // sech(x) = 1/ cosh(x)\r\n   *    math.sech(0.5);       // returns 0.886818883970074\r\n   *    1 / math.cosh(0.5);   // returns 0.886818883970074\r\n   *\r\n   * See also:\r\n   *\r\n   *    cosh, csch, coth\r\n   *\r\n   * @param {Number | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\r\n   * @return {Number | Complex | Array | Matrix} Hyperbolic secant of x\r\n   */\r\n  math.sech = function sech(x) {\r\n    if (arguments.length != 1) {\r\n      throw new math.error.ArgumentsError('sech', arguments.length, 1);\r\n    }\r\n\r\n    if (isNumber(x)) {\r\n      return 2 / (Math.exp(x) + Math.exp(-x));\r\n    }\r\n\r\n    if (isComplex(x)) {\r\n      var ep = Math.exp(x.re);\r\n      var en = Math.exp(-x.re);\r\n      var re = Math.cos(x.im) * (ep + en);\r\n      var im = Math.sin(x.im) * (ep - en);\r\n      var den = re * re + im * im;\r\n      return new Complex(2 * re / den, -2 * im / den);\r\n    }\r\n\r\n    if (isUnit(x)) {\r\n      if (!x.hasBase(Unit.BASE_UNITS.ANGLE)) {\r\n        throw new TypeError ('Unit in function sech is no angle');\r\n      }\r\n      return sech(x.value);\r\n    }\r\n\r\n    if (isCollection(x)) {\r\n      return collection.deepMap(x, sech);\r\n    }\r\n\r\n    if (isBoolean(x) || x === null) {\r\n      return sech(x ? 1 : 0);\r\n    }\r\n\r\n    if (x instanceof BigNumber) {\r\n      return bigSech(x, BigNumber, false, true);\r\n    }\r\n\r\n    throw new math.error.UnsupportedTypeError('sech', math['typeof'](x));\r\n  };\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/sech.js\n ** module id = 163\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection,\n\n      bigSin = util.bignumber.cos_sin_sec_csc;\n\n  /**\n   * Calculate the sine of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.sin(x)\n   *\n   * Examples:\n   *\n   *    math.sin(2);                      // returns Number 0.9092974268256813\n   *    math.sin(math.pi / 4);            // returns Number 0.7071067811865475\n   *    math.sin(math.unit(90, 'deg'));   // returns Number 1\n   *    math.sin(math.unit(30, 'deg'));   // returns Number 0.5\n   *\n   *    var angle = 0.2;\n   *    math.pow(math.sin(angle), 2) + math.pow(math.cos(angle), 2); // returns Number ~1\n   *\n   * See also:\n   *\n   *    cos, tan\n   *\n   * @param {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\n   * @return {Number | BigNumber | Complex | Array | Matrix} Sine of x\n   */\n  math.sin = function sin(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('sin', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return Math.sin(x);\n    }\n\n    if (isComplex(x)) {\n      return new Complex(\n          Math.sin(x.re) * math.cosh(-x.im),\n          Math.cos(x.re) * math.sinh(x.im)\n      );\n    }\n\n    if (isUnit(x)) {\n      if (!x.hasBase(Unit.BASE_UNITS.ANGLE)) {\n        throw new TypeError ('Unit in function sin is no angle');\n      }\n      return Math.sin(x.value);\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since sin(0) = 0\n      return collection.deepMap(x, sin, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return Math.sin(x);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigSin(x, BigNumber, 1, false);\n    }\n\n    throw new math.error.UnsupportedTypeError('sin', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/sin.js\n ** module id = 164\n ** module chunks = 0\n **/","'use strict';\r\n\r\nmodule.exports = function (math) {\r\n  var util = require('../../util/index'),\r\n\r\n      BigNumber = math.type.BigNumber,\r\n      Complex = require('../../type/Complex'),\r\n      Unit = require('../../type/Unit'),\r\n      collection = math.collection,\r\n\r\n      isNumber = util.number.isNumber,\r\n      isBoolean = util['boolean'].isBoolean,\r\n      isComplex = Complex.isComplex,\r\n      isUnit = Unit.isUnit,\r\n      isCollection = collection.isCollection,\r\n\r\n      bigSinh = util.bignumber.cosh_sinh_csch_sech;\r\n\r\n  /**\r\n   * Calculate the hyperbolic sine of a value,\r\n   * defined as `sinh(x) = 1/2 * (exp(x) - exp(-x))`.\r\n   *\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.sinh(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    math.sinh(0.5);       // returns Number 0.5210953054937474\r\n   *\r\n   * See also:\r\n   *\r\n   *    cosh, tanh\r\n   *\r\n   * @param {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\r\n   * @return {Number | BigNumber | Complex | Array | Matrix} Hyperbolic sine of x\r\n   */\r\n  math.sinh = function sinh(x) {\r\n    if (arguments.length != 1) {\r\n      throw new math.error.ArgumentsError('sinh', arguments.length, 1);\r\n    }\r\n\r\n    if (isNumber(x)) {\r\n      if (Math.abs(x) < 1) {\r\n        return x + (x * x * x) / 6 + (x * x * x * x * x) / 120;\r\n      } else {\r\n        return (Math.exp(x) - Math.exp(-x)) / 2;\r\n      }\r\n    }\r\n\r\n    if (isComplex(x)) {\r\n      var cim = Math.cos(x.im);\r\n      var sim = Math.sin(x.im);\r\n      var ep = Math.exp(x.re);\r\n      var en = Math.exp(-x.re);\r\n      return new Complex(cim * (ep - en) / 2, sim * (ep + en) / 2);\r\n    }\r\n\r\n    if (isUnit(x)) {\r\n      if (!x.hasBase(Unit.BASE_UNITS.ANGLE)) {\r\n        throw new TypeError ('Unit in function sinh is no angle');\r\n      }\r\n      return sinh(x.value);\r\n    }\r\n\r\n    if (isCollection(x)) {\r\n      // deep map collection, skip zeros since sinh(0) = 0\r\n      return collection.deepMap(x, sinh, true);\r\n    }\r\n\r\n    if (isBoolean(x) || x === null) {\r\n      return sinh(x ? 1 : 0);\r\n    }\r\n\r\n    if (x instanceof BigNumber) {\r\n      return bigSinh(x, BigNumber, true, false);\r\n    }\r\n\r\n    throw new math.error.UnsupportedTypeError('sinh', math['typeof'](x));\r\n  };\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/sinh.js\n ** module id = 165\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math, config) {\n  var util = require('../../util/index'),\n\n      BigNumber = math.type.BigNumber,\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isNumber = util.number.isNumber,\n      isBoolean = util['boolean'].isBoolean,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection,\n\n      bigTan = util.bignumber.tan_cot;\n\n  /**\n   * Calculate the tangent of a value. `tan(x)` is equal to `sin(x) / cos(x)`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.tan(x)\n   *\n   * Examples:\n   *\n   *    math.tan(0.5);                    // returns Number 0.5463024898437905\n   *    math.sin(0.5) / math.cos(0.5);    // returns Number 0.5463024898437905\n   *    math.tan(math.pi / 4);            // returns Number 1\n   *    math.tan(math.unit(45, 'deg'));   // returns Number 1\n   *\n   * See also:\n   *\n   *    atan, sin, cos\n   *\n   * @param {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\n   * @return {Number | BigNumber | Complex | Array | Matrix} Tangent of x\n   */\n  math.tan = function tan(x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('tan', arguments.length, 1);\n    }\n\n    if (isNumber(x)) {\n      return Math.tan(x);\n    }\n\n    if (isComplex(x)) {\n      var den = Math.exp(-4.0 * x.im) +\n          2.0 * Math.exp(-2.0 * x.im) * Math.cos(2.0 * x.re) +\n          1.0;\n\n      return new Complex(\n          2.0 * Math.exp(-2.0 * x.im) * Math.sin(2.0 * x.re) / den,\n          (1.0 - Math.exp(-4.0 * x.im)) / den\n      );\n    }\n\n    if (isUnit(x)) {\n      if (!x.hasBase(Unit.BASE_UNITS.ANGLE)) {\n        throw new TypeError ('Unit in function tan is no angle');\n      }\n      return Math.tan(x.value);\n    }\n\n    if (isCollection(x)) {\n      // deep map collection, skip zeros since tan(0) = 0\n      return collection.deepMap(x, tan, true);\n    }\n\n    if (isBoolean(x) || x === null) {\n      return Math.tan(x);\n    }\n\n    if (x instanceof BigNumber) {\n      return bigTan(x, BigNumber, false);\n    }\n\n    throw new math.error.UnsupportedTypeError('tan', math['typeof'](x));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/tan.js\n ** module id = 166\n ** module chunks = 0\n **/","'use strict';\r\n\r\nmodule.exports = function (math) {\r\n  var util = require('../../util/index'),\r\n\r\n      BigNumber = math.type.BigNumber,\r\n      Complex = require('../../type/Complex'),\r\n      Unit = require('../../type/Unit'),\r\n      collection = math.collection,\r\n\r\n      isNumber = util.number.isNumber,\r\n      isBoolean = util['boolean'].isBoolean,\r\n      isComplex = Complex.isComplex,\r\n      isUnit = Unit.isUnit,\r\n      isCollection = collection.isCollection,\r\n\r\n      bigTanh = util.bignumber.tanh_coth;\r\n\r\n  /**\r\n   * Calculate the hyperbolic tangent of a value,\r\n   * defined as `tanh(x) = (exp(2 * x) - 1) / (exp(2 * x) + 1)`.\r\n   *\r\n   * For matrices, the function is evaluated element wise.\r\n   *\r\n   * Syntax:\r\n   *\r\n   *    math.tanh(x)\r\n   *\r\n   * Examples:\r\n   *\r\n   *    // tanh(x) = sinh(x) / cosh(x) = 1 / coth(x)\r\n   *    math.tanh(0.5);                   // returns 0.46211715726000974\r\n   *    math.sinh(0.5) / math.cosh(0.5);  // returns 0.46211715726000974\r\n   *    1 / math.coth(0.5);               // returns 0.46211715726000974\r\n   *\r\n   * See also:\r\n   *\r\n   *    sinh, cosh, coth\r\n   *\r\n   * @param {Number | BigNumber | Boolean | Complex | Unit | Array | Matrix | null} x  Function input\r\n   * @return {Number | BigNumber | Complex | Array | Matrix} Hyperbolic tangent of x\r\n   */\r\n  math.tanh = function tanh(x) {\r\n    if (arguments.length != 1) {\r\n      throw new math.error.ArgumentsError('tanh', arguments.length, 1);\r\n    }\r\n\r\n    if (isNumber(x)) {\r\n      var e = Math.exp(2 * x);\r\n      return (e - 1) / (e + 1);\r\n    }\r\n\r\n    if (isComplex(x)) {\r\n      var r = Math.exp(2 * x.re);\r\n      var re = r * Math.cos(2 * x.im);\r\n      var im = r * Math.sin(2 * x.im);\r\n      var den = (re + 1) * (re + 1) + im * im;\r\n      return new Complex(\r\n        ((re - 1) * (re + 1) + im * im) / den,\r\n        im * 2 / den\r\n      );\r\n    }\r\n\r\n    if (isUnit(x)) {\r\n      if (!x.hasBase(Unit.BASE_UNITS.ANGLE)) {\r\n        throw new TypeError ('Unit in function tanh is no angle');\r\n      }\r\n      return tanh(x.value);\r\n    }\r\n\r\n    if (isCollection(x)) {\r\n      // deep map collection, skip zeros since tanh(0) = 0\r\n      return collection.deepMap(x, tanh, true);\r\n    }\r\n\r\n    if (isBoolean(x) || x === null) {\r\n      return tanh(x ? 1 : 0);\r\n    }\r\n\r\n    if (x instanceof BigNumber) {\r\n      return bigTanh(x, BigNumber, false);\r\n    }\r\n\r\n    throw new math.error.UnsupportedTypeError('tanh', math['typeof'](x));\r\n  };\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/trigonometry/tanh.js\n ** module id = 167\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      Unit = require('../../type/Unit'),\n      collection = math.collection,\n\n      isString = util.string.isString,\n      isUnit = Unit.isUnit,\n      isCollection = collection.isCollection;\n\n  /**\n   * Change the unit of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.to(x, unit)\n   *\n   * Examples:\n   *\n   *    math.to(math.unit('2 inch'), 'cm');                   // returns Unit 5.08 cm\n   *    math.to(math.unit('2 inch'), math.unit(null, 'cm'));  // returns Unit 5.08 cm\n   *    math.to(math.unit(16, 'bytes'), 'bits');              // returns Unit 128 bits\n   *\n   * See also:\n   *\n   *    unit\n   *\n   * @param {Unit | Array | Matrix} x     The unit to be converted.\n   * @param {Unit | Array | Matrix} unit  New unit. Can be a string like \"cm\"\n   *                                      or a unit without value.\n   * @return {Unit | Array | Matrix} value with changed, fixed unit.\n   */\n  math.to = function to(x, unit) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('to', arguments.length, 2);\n    }\n\n    if (isUnit(x)) {\n      if (isUnit(unit) || isString(unit)) {\n        return x.to(unit);\n      }\n    }\n\n    // TODO: add support for string, in that case, convert to unit\n\n    if (isCollection(x) || isCollection(unit)) {\n      return collection.deepMap2(x, unit, to);\n    }\n\n    throw new math.error.UnsupportedTypeError('to', math['typeof'](x), math['typeof'](unit));\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/units/to.js\n ** module id = 168\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n      object = util.object;\n\n  /**\n   * Clone an object.\n   *\n   * Syntax:\n   *\n   *     math.clone(x)\n   *\n   * Examples:\n   *\n   *    math.clone(3.5);                   // returns number 3.5\n   *    math.clone(math.complex('2 - 4i'); // returns Complex 2 - 4i\n   *    math.clone(math.unit(45, 'deg'));  // returns Unit 45 deg\n   *    math.clone([[1, 2], [3, 4]]);      // returns Array [[1, 2], [3, 4]]\n   *    math.clone(\"hello world\");         // returns string \"hello world\"\n   *\n   * @param {*} x   Object to be cloned\n   * @return {*} A clone of object x\n   */\n  math.clone = function clone (x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('clone', arguments.length, 1);\n    }\n\n    return object.clone(x);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/utils/clone.js\n ** module id = 169\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix;\n\n  /**\n   * Sort the items in a matrix.\n   *\n   * Syntax:\n   *\n   *    math.filter(x, test)\n   *\n   * Examples:\n   *\n   *    function isPositive (x) {\n   *      return x > 0;\n   *    }\n   *    math.filter([6, -2, -1, 4, 3], isPositive); // returns [6, 4, 3]\n   *\n   *    math.filter([\"23\", \"foo\", \"100\", \"55\", \"bar\"], /[0-9]+/); // returns [\"23\", \"100\", \"55\"]\n   *\n   * See also:\n   *\n   *    forEach, map, sort\n   *\n   * @param {Matrix | Array} x    A one dimensional matrix or array to filter\n   * @param {Function | RegExp} test\n   *        A function or regular expression to test items.\n   *        When `test` is a function, it must return a boolean.\n   *        All entries for which `test` returns true are returned.\n   * @return {Matrix | Array} Returns the filtered matrix.\n   */\n  math.filter = function (x, test) {\n    if (arguments.length !== 2) {\n      throw new math.error.ArgumentsError('filter', arguments.length, 2);\n    }\n\n    if (x instanceof Matrix) {\n      var size = x.size();\n      if (size.length > 1) {\n        throw new Error('Only one dimensional matrices supported');\n      }\n      return math.matrix(_filter(x.toArray(), test));\n    }\n    else if (Array.isArray(x)) {\n      return _filter(x, test);\n    }\n    else {\n      throw new math.error.UnsupportedTypeError('filter', math['typeof'](x), math['typeof'](compare));\n    }\n  };\n\n  /**\n   *\n   * @param {Array} x\n   * @param {function | RegExp} test\n   * @return {Array} Returns the filtered array\n   * @private\n   */\n  function _filter(x, test) {\n    if (typeof test === 'function') {\n      return x.filter(function (entry) {\n        return test(entry);\n      });\n    }\n    else if (test instanceof RegExp) {\n      return x.filter(function (entry) {\n        return test.test(entry);\n      });\n    }\n    else {\n      throw new TypeError('Function or RegExp expected');\n    }\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/utils/filter.js\n ** module id = 170\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n      string = util.string;\n\n  /**\n   * Format a value of any type into a string.\n   *\n   * Syntax:\n   *\n   *    math.format(value)\n   *    math.format(value, options)\n   *    math.format(value, precision)\n   *    math.format(value, fn)\n   *\n   * Where:\n   *\n   *  - `value: *`\n   *    The value to be formatted\n   *  - `options: Object`\n   *    An object with formatting options. Available options:\n   *    - `notation: String`\n   *      Number notation. Choose from:\n   *      - 'fixed'\n   *        Always use regular number notation.\n   *        For example '123.40' and '14000000'\n   *      - 'exponential'\n   *        Always use exponential notation.\n   *        For example '1.234e+2' and '1.4e+7'\n   *      - 'auto' (default)\n   *        Regular number notation for numbers having an absolute value between\n   *        `lower` and `upper` bounds, and uses exponential notation elsewhere.\n   *        Lower bound is included, upper bound is excluded.\n   *        For example '123.4' and '1.4e7'.\n   *    - `precision: Number`\n   *      A number between 0 and 16 to round the digits of the number. In case\n   *      of notations 'exponential' and 'auto', `precision` defines the total\n   *      number of significant digits returned and is undefined by default.\n   *      In case of notation 'fixed', `precision` defines the number of\n   *      significant digits after the decimal point, and is 0 by default.\n   *    - `exponential: Object`\n   *      An object containing two parameters, {Number} lower and {Number} upper,\n   *      used by notation 'auto' to determine when to return exponential\n   *      notation. Default values are `lower=1e-3` and `upper=1e5`. Only\n   *      applicable for notation `auto`.\n   * - `fn: Function`\n   *   A custom formatting function. Can be used to override the built-in notations.\n   *   Function `fn` is called with `value` as parameter and must return a string.\n   *   Is useful for example to format all values inside a matrix in a particular way.\n   *\n   * Examples:\n   *\n   *    math.format(6.4);                                        // returns '6.4'\n   *    math.format(1240000);                                    // returns '1.24e6'\n   *    math.format(1/3);                                        // returns '0.3333333333333333'\n   *    math.format(1/3, 3);                                     // returns '0.333'\n   *    math.format(21385, 2);                                   // returns '21000'\n   *    math.format(12.071, {notation: 'fixed'});                // returns '12'\n   *    math.format(2.3,    {notation: 'fixed', precision: 2});  // returns '2.30'\n   *    math.format(52.8,   {notation: 'exponential'});          // returns '5.28e+1'\n   *\n   * See also:\n   *\n   *    print\n   *\n   * @param {*} value                               Value to be stringified\n   * @param {Object | Function | Number} [options]  Formatting options\n   * @return {String} The formatted value\n   */\n  math.format = function format (value, options) {\n    var num = arguments.length;\n    if (num !== 1 && num !== 2) {\n      throw new math.error.ArgumentsError('format', num, 1, 2);\n    }\n\n    return string.format(value, options);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/utils/format.js\n ** module id = 171\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      Complex = require('../../type/Complex'),\n      Unit = require('../../type/Unit'),\n\n      isNumber = util.number.isNumber,\n      isString = util.string.isString,\n      isComplex = Complex.isComplex,\n      isUnit = Unit.isUnit;\n\n  /**\n   * Import functions from an object or a module\n   *\n   * Syntax:\n   *\n   *    math.import(object)\n   *    math.import(object, options)\n   *\n   * Where:\n   *\n   * - `object: Object`\n   *   An object with functions to be imported.\n   * - `options: Object` An object with import options. Available options:\n   *   - `override: boolean`\n   *     If true, existing functions will be overwritten. False by default.\n   *   - `wrap: boolean`\n   *     If true, the functions will be wrapped in a wrapper function\n   *     which converts data types like Matrix to primitive data types like Array.\n   *     The wrapper is needed when extending math.js with libraries which do not\n   *     support these data types. False by default.\n   *\n   * Examples:\n   *\n   *    // define new functions and variables\n   *    math.import({\n   *      myvalue: 42,\n   *      hello: function (name) {\n   *        return 'hello, ' + name + '!';\n   *      }\n   *    });\n   *\n   *    // use the imported function and variable\n   *    math.myvalue * 2;               // 84\n   *    math.hello('user');             // 'hello, user!'\n   *\n   *    // import the npm module numbers\n   *    // (must be installed first with `npm install numbers`)\n   *    math.import('numbers', {wrap: true});\n   *\n   *    math.fibonacci(7); // returns 13\n   *\n   * @param {String | Object} object  Object with functions to be imported.\n   * @param {Object} [options]        Import options.\n   */\n  // TODO: return status information\n  math['import'] = function math_import(object, options) {\n    var num = arguments.length;\n    if (num != 1 && num != 2) {\n      throw new math.error.ArgumentsError('import', num, 1, 2);\n    }\n\n    var name;\n    var opts = {\n      override: options && options.override || false,\n      wrap:     options && options.wrap || false\n    };\n\n    if (isString(object)) {\n      // a string with a filename\n\n      // istanbul ignore else (we cannot unit test the else case in a node.js environment)\n      if (typeof (require) !== 'undefined') {\n        // load the file using require\n        var _module = require(object);\n        math_import(_module, options);\n      }\n      else {\n        throw new Error('Cannot load module: require not available.');\n      }\n    }\n    else if (typeof object === 'object') {\n      // a map with functions\n      for (name in object) {\n        if (object.hasOwnProperty(name)) {\n          var value = object[name];\n          if (isSupportedType(value)) {\n            _import(name, value, opts);\n          }\n          else {\n            math_import(value, options);\n          }\n        }\n      }\n    }\n    else {\n      throw new TypeError('Object or module name expected');\n    }\n  };\n\n  /**\n   * Add a property to the math namespace and create a chain proxy for it.\n   * @param {String} name\n   * @param {*} value\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n  function _import(name, value, options) {\n    if (options.override || math[name] === undefined) {\n      // add to math namespace\n      if (options.wrap && typeof value === 'function') {\n        // create a wrapper around the function\n        math[name] = function () {\n          var args = [];\n          for (var i = 0, len = arguments.length; i < len; i++) {\n            var arg = arguments[i];\n            args[i] = arg && arg.valueOf();\n          }\n          return value.apply(math, args);\n        };\n        if (value && value.transform) {\n          math[name].transform = value.transform;\n        }\n      }\n      else {\n        // just create a link to the function or value\n        math[name] = value;\n      }\n\n      // register the transform function if any\n      if (value && value.transform) {\n        math.expression.transform[name] = value.transform;\n      }\n\n      // create a proxy for the chain\n      math.chaining.Chain.createProxy(name, value);\n    }\n  }\n\n  /**\n   * Check whether given object is a supported type\n   * @param object\n   * @return {Boolean}\n   * @private\n   */\n  function isSupportedType(object) {\n    return (typeof object == 'function') ||\n        isNumber(object) || isString(object) ||\n        isComplex(object) || isUnit(object);\n    // TODO: add boolean?\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/utils/import.js\n ** module id = 172\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix;\n\n\n  /**\n   * Create a math.matrix or array with the results of the callback function executed on\n   * each entry of the matrix/array.\n   *\n   * Syntax:\n   *\n   *    math.map(x, callback)\n   *\n   * Examples:\n   *\n   *    math.map([1, 2, 3], function(value) {\n   *      return value * value;\n   *    });  // returns [1, 4, 9]\n   *\n   * See also:\n   *\n   *    filter, forEach, sort\n   *\n   * @param {Matrix | Array} x    The matrix to iterate on.\n   * @param {Function} callback   The callback method is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the matrix being traversed.\n   * @return {Matrix | array}     Transformed map of x\n   */\n  math.map = function (x, callback) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('map', arguments.length, 2);\n    }\n\n    if (Array.isArray(x)) {\n      return _mapArray(x, callback);\n    } else if (x instanceof Matrix) {\n      return x.map(callback);\n    } else {\n      throw new math.error.UnsupportedTypeError('map', math['typeof'](x));\n    }\n  };\n\n  function _mapArray (arrayIn, callback) {\n    var recurse = function (value, index) {\n      if (Array.isArray(value)) {\n        return value.map(function (child, i) {\n          // we create a copy of the index array and append the new index value\n          return recurse(child, index.concat(i));\n        });\n      }\n      else {\n        return callback(value, index, arrayIn);\n      }\n    };\n\n    return recurse(arrayIn, []);\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/utils/map.js\n ** module id = 173\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var util = require('../../util/index'),\n\n      isString = util.string.isString;\n\n  /**\n   * Interpolate values into a string template.\n   *\n   * Syntax:\n   *\n   *     math.print(template, values)\n   *     math.print(template, values, precision)\n   *\n   * Example usage:\n   *\n   *     // the following outputs: 'Lucy is 5 years old'\n   *     math.print('Lucy is $age years old', {age: 5});\n   *\n   *     // the following outputs: 'The value of pi is 3.141592654'\n   *     math.print('The value of pi is $pi', {pi: math.pi}, 10);\n   *\n   *     // the following outputs: 'hello Mary! The date is 2013-03-23'\n   *     math.print('Hello $user.name! The date is $date', {\n   *       user: {\n   *         name: 'Mary',\n   *       },\n   *       date: new Date(2013, 2, 23).toISOString().substring(0, 10)\n   *     });\n   *\n   * See also:\n   *\n   *     format\n   *\n   * @param {String} template     A string containing variable placeholders.\n   * @param {Object} values       An object containing variables which will\n   *                              be filled in in the template.\n   * @param {Number} [precision]  Number of digits to format numbers.\n   *                              If not provided, the value will not be rounded.\n   * @return {String} Interpolated string\n   */\n  math.print = function print (template, values, precision) {\n    var num = arguments.length;\n    if (num != 2 && num != 3) {\n      throw new math.error.ArgumentsError('print', num, 2, 3);\n    }\n\n    if (!isString(template)) {\n      throw new TypeError('String expected as first parameter in function format');\n    }\n    if (!(values instanceof Object)) {\n      throw new TypeError('Object expected as second parameter in function format');\n    }\n\n    // format values into a string\n    return template.replace(/\\$([\\w\\.]+)/g, function (original, key) {\n          var keys = key.split('.');\n          var value = values[keys.shift()];\n          while (keys.length && value !== undefined) {\n            var k = keys.shift();\n            value = k ? value[k] : value + '.';\n          }\n\n          if (value !== undefined) {\n            if (!isString(value)) {\n              return math.format(value, precision);\n            }\n            else {\n              return value;\n            }\n          }\n\n          return original;\n        }\n    );\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/utils/print.js\n ** module id = 174\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix;\n\n  /**\n   * Sort the items in a matrix.\n   *\n   * Syntax:\n   *\n   *    math.sort(x)\n   *    math.sort(x, compare)\n   *\n   * Examples:\n   *\n   *    math.sort([5, 10, 1]); // returns [1, 5, 10]\n   *    math.sort(['C', 'B', 'A', 'D']); // returns ['A', 'B', 'C', 'D']\n   *\n   *    function sortByLength (a, b) {\n   *      return a.length - b.length;\n   *    }\n   *    math.sort(['Langdon', 'Tom', 'Sara'], sortByLength); // returns ['Tom', 'Sara', 'Langdon']\n   *\n   * See also:\n   *\n   *    filter, forEach, map\n   *\n   * @param {Matrix | Array} x    A one dimensional matrix or array to sort\n   * @param {Function | 'asc' | 'desc'} [compare='asc']\n   *        An optional comparator function. The function is called as\n   *        `compare(a, b)`, and must return 1 when a > b, -1 when a < b,\n   *        and 0 when a == b.\n   * @return {Matrix | Array} Returns the sorted matrix.\n   */\n  math.sort = function (x, compare) {\n    var _compare = null;\n\n    if (arguments.length === 1) {\n      _compare = math.compare;\n    }\n    else if (arguments.length === 2) {\n      if (typeof compare === 'function') {\n        _compare = compare;\n      }\n      else if (compare === 'asc') {\n        _compare = math.compare;\n      }\n      else if (compare === 'desc') {\n        _compare = function (a, b) {\n          return -math.compare(a, b);\n        }\n      }\n      else {\n        throw new math.error.UnsupportedTypeError('sort', math['typeof'](x), math['typeof'](compare));\n      }\n    }\n    else {\n      throw new math.error.ArgumentsError('sort', arguments.length, 1, 2);\n    }\n\n    if (x instanceof Matrix) {\n      var size = x.size();\n      if (size.length > 1) {\n        throw new Error('Only one dimensional matrices supported');\n      }\n      return math.matrix(x.toArray().sort(_compare));\n    }\n    else if (Array.isArray(x)) {\n      return x.sort(_compare);\n    }\n    else {\n      throw new math.error.UnsupportedTypeError('sort', math['typeof'](x), math['typeof'](compare));\n    }\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/utils/sort.js\n ** module id = 175\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var types = require('../../util/types'),\n\n      Complex = require('../../type/Complex'),\n      Matrix = math.type.Matrix,\n      Unit = require('../../type/Unit'),\n      Index = require('../../type/Index'),\n      Range = require('../../type/Range'),\n      Help = require('../../type/Help');\n\n  /**\n   * Determine the type of a variable.\n   *\n   * Function `typeof` recognizes the following types of objects:\n   *\n   * Object                 | Returns       | Example\n   * ---------------------- | ------------- | ------------------------------------------\n   * Array                  | `'array'`     | `math.typeof ([1, 2, 3])`\n   * boolean                | `'boolean'`   | `math.typeof (true)`\n   * Date                   | `'date'`      | `math.typeof (new Date())`\n   * null                   | `'null'`      | `math.typeof(null)`\n   * number                 | `'number'`    | `math.typeof(3.5)`\n   * Object                 | `'object'`    | `math.typeof ({a: 2, b: 3})`\n   * RegExp                 | `'regexp'`    | `math.typeof (/a regexp/)`\n   * string                 | `'string'`    | `math.typeof ('hello world')`\n   * undefined              | `'undefined'` | `math.typeof(undefined)`\n   * math.chaining.Chain    | `'chain'`     | `math.typeof (math.chain(2))`\n   * math.type.BigNumber    | `'bignumber'` | `math.typeof (math.bignumber('2.3e500'))`\n   * math.type.Complex      | `'complex'`   | `math.typeof (math.complex(2, 3))`\n   * math.type.Help         | `'help'`      | `math.typeof (math.help('sqrt'))`\n   * math.type.Index        | `'index'`     | `math.typeof (math.index(1, 3))`\n   * math.type.Matrix       | `'matrix'`    | `math.typeof (math.matrix([[1,2], [3, 4]]))`\n   * math.type.Range        | `'range'`     | `math.typeof (math.range(0, 10))`\n   * math.type.Unit         | `'unit'`      | `math.typeof (math.unit('45 deg'))`\n   *\n   * Syntax:\n   *\n   *    math.typeof(x)\n   *\n   * Examples:\n   *\n   *    math.typeof(3.5);                     // returns 'number'\n   *    math.typeof(math.complex('2 - 4i'));  // returns 'complex'\n   *    math.typeof(math.unit('45 deg'));     // returns 'unit'\n   *    math.typeof('hello world');           // returns 'string'\n   *\n   * @param {*} x  The variable for which to test the type.\n   * @return {String} Lower case type, for example 'number', 'string', 'array'.\n   */\n  math['typeof'] = function _typeof (x) {\n    if (arguments.length != 1) {\n      throw new math.error.ArgumentsError('typeof', arguments.length, 1);\n    }\n\n    // JavaScript types\n    var type = types.type(x);\n\n    // math.js types\n    if (type === 'object') {\n      if (x instanceof Complex) return 'complex';\n      if (x instanceof Matrix) return 'matrix';\n      if (x instanceof Unit) return 'unit';\n      if (x instanceof Index) return 'index';\n      if (x instanceof Range) return 'range';\n      if (x instanceof Help) return 'help';\n\n      // the following types are different instances per math.js instance\n      if (x instanceof math.type.BigNumber) return 'bignumber';\n      if (x instanceof math.chaining.Chain) return 'chain';\n    }\n\n    return type;\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/utils/typeof.js\n ** module id = 176\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix;\n\n  /**\n   * Iterate over all elements of a matrix/array, and executes the given callback function.\n   *\n   * Syntax:\n   *\n   *    math.forEach(x, callback)\n   *\n   * Examples:\n   *\n   *    math.forEach([1, 2, 3], function(value) {\n   *      console.log(value);\n   *    });\n   *    // outputs 1, 2, 3\n   *\n   * See also:\n   *\n   *    filter, map, sort\n   *\n   * @param {Matrix | Array} x    The matrix to iterate on.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix/array being traversed.\n   */\n  math.forEach = function (x, callback) {\n    if (arguments.length != 2) {\n      throw new math.error.ArgumentsError('forEach', arguments.length, 2);\n    }\n\n    if (Array.isArray(x)) {\n      return _forEachArray(x, callback);\n    } else if (x instanceof Matrix) {\n      return x.forEach(callback);\n    } else {\n      throw new math.error.UnsupportedTypeError('forEach', math['typeof'](x));\n    }\n  };\n\n  function _forEachArray (array, callback) {\n    var recurse = function (value, index) {\n      if (Array.isArray(value)) {\n        value.forEach(function (child, i) {\n          // we create a copy of the index array and append the new index value\n          recurse(child, index.concat(i));\n        });\n      }\n      else {\n        callback(value, index, array);\n      }\n    };\n    recurse(array, []);\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/utils/forEach.js\n ** module id = 177\n ** module chunks = 0\n **/","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction arrayCopy(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayCopy;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/arrayCopy.js\n ** module id = 178\n ** module chunks = 0\n **/","/**\n * A specialized version of `_.forEach` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/arrayEach.js\n ** module id = 179\n ** module chunks = 0\n **/","var baseCopy = require('./baseCopy'),\n    getSymbols = require('./getSymbols'),\n    isNative = require('../lang/isNative'),\n    keys = require('../object/keys');\n\n/** Native method references. */\nvar preventExtensions = isNative(Object.preventExtensions = Object.preventExtensions) && preventExtensions;\n\n/** Used as `baseAssign`. */\nvar nativeAssign = (function() {\n  // Avoid `Object.assign` in Firefox 34-37 which have an early implementation\n  // with a now defunct try/catch behavior. See https://bugzilla.mozilla.org/show_bug.cgi?id=1103344\n  // for more details.\n  //\n  // Use `Object.preventExtensions` on a plain object instead of simply using\n  // `Object('x')` because Chrome and IE fail to throw an error when attempting\n  // to assign values to readonly indexes of strings in strict mode.\n  var object = { '1': 0 },\n      func = preventExtensions && isNative(func = Object.assign) && func;\n\n  try { func(preventExtensions(object), 'xo'); } catch(e) {}\n  return !object[1] && func;\n}());\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nvar baseAssign = nativeAssign || function(object, source) {\n  return source == null\n    ? object\n    : baseCopy(source, getSymbols(source), baseCopy(source, keys(source), object));\n};\n\nmodule.exports = baseAssign;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/baseAssign.js\n ** module id = 180\n ** module chunks = 0\n **/","var baseFor = require('./baseFor'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/baseForOwn.js\n ** module id = 181\n ** module chunks = 0\n **/","/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add array properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/initCloneArray.js\n ** module id = 182\n ** module chunks = 0\n **/","var bufferClone = require('./bufferClone');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return bufferClone(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      var buffer = object.buffer;\n      return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      var result = new Ctor(object.source, reFlags.exec(object));\n      result.lastIndex = object.lastIndex;\n  }\n  return result;\n}\n\nmodule.exports = initCloneByTag;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/initCloneByTag.js\n ** module id = 183\n ** module chunks = 0\n **/","/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  var Ctor = object.constructor;\n  if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n    Ctor = Object;\n  }\n  return new Ctor;\n}\n\nmodule.exports = initCloneObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/initCloneObject.js\n ** module id = 184\n ** module chunks = 0\n **/","var isLength = require('../internal/isLength'),\n    isNative = require('./isNative'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lang/isArray.js\n ** module id = 185\n ** module chunks = 0\n **/","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type == 'function' || (!!value && type == 'object');\n}\n\nmodule.exports = isObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lang/isObject.js\n ** module id = 186\n ** module chunks = 0\n **/","/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/utility/identity.js\n ** module id = 187\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Format a number using methods toPrecision, toFixed, toExponential.\n * @param {number | string} value\n * @constructor\n */\nfunction NumberFormatter (value) {\n  // parse the input value\n  var match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);\n  if (!match) {\n    throw new SyntaxError('Invalid number');\n  }\n\n  var sign         = match[1];\n  var coefficients = match[2];\n  var exponent     = parseFloat(match[4] || '0');\n\n  var dot = coefficients.indexOf('.');\n  exponent += (dot !== -1) ? (dot - 1) : (coefficients.length - 1);\n\n  this.sign = sign;\n  this.coefficients = coefficients\n      .replace('.', '')  // remove the dot (must be removed before removing leading zeros)\n      .replace(/^0*/, function (zeros) {\n        // remove leading zeros, add their count to the exponent\n        exponent -= zeros.length;\n        return '';\n      })\n      .replace(/0*$/, '') // remove trailing zeros\n      .split('')\n      .map(function (d) {\n        return parseInt(d);\n      });\n\n  if (this.coefficients.length === 0) {\n    this.coefficients.push(0);\n    exponent++;\n  }\n\n  this.exponent = exponent;\n}\n\n/**\n * Format a number with fixed notation.\n * @param {Number} [precision=0]        Optional number of decimals after the\n *                                      decimal point. Zero by default.\n */\nNumberFormatter.prototype.toFixed = function (precision) {\n  var rounded = this.roundDigits(this.exponent + 1 + (precision || 0));\n  var c = rounded.coefficients;\n  var p = rounded.exponent + 1; // exponent may have changed\n\n  // append zeros if needed\n  var pp = p + (precision || 0);\n  if (c.length < pp) {\n    c = c.concat(zeros(pp - c.length));\n  }\n\n  // prepend zeros if needed\n  if (p < 0) {\n    c = zeros(-p + 1).concat(c);\n    p = 1;\n  }\n\n  // insert a dot if needed\n  if (precision) {\n    c.splice(p, 0, (p === 0) ? '0.' : '.');\n  }\n\n  return this.sign + c.join('');\n};\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {Number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n */\nNumberFormatter.prototype.toExponential = function (precision) {\n  // round if needed, else create a clone\n  var rounded = precision ? this.roundDigits(precision) : this.clone();\n  var c = rounded.coefficients;\n  var e = rounded.exponent;\n\n  // append zeros if needed\n  if (c.length < precision) {\n    c = c.concat(zeros(precision - c.length));\n  }\n\n  // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n  var first = c.shift();\n  return this.sign + first + (c.length > 0 ? ('.' + c.join('')) : '') +\n      'e' + (e >= 0 ? '+' : '') + e;\n};\n\n/**\n * Format a number with a certain precision\n * @param {Number} [precision=undefined] Optional number of digits.\n * @param {{lower: number | undefined, upper: number | undefined}} [options]\n *                                       By default:\n *                                         lower = 1e-3 (excl)\n *                                         upper = 1e+5 (incl)\n * @return {string}\n */\nNumberFormatter.prototype.toPrecision = function(precision, options) {\n  // determine lower and upper bound for exponential notation.\n  var lower = (options && options.lower !== undefined) ? options.lower : 1e-3;\n  var upper = (options && options.upper !== undefined) ? options.upper : 1e+5;\n\n  var abs = Math.abs(Math.pow(10, this.exponent));\n  if (abs < lower || abs >= upper) {\n    // exponential notation\n    return this.toExponential(precision);\n  }\n  else {\n    var rounded = precision ? this.roundDigits(precision) : this.clone();\n    var c = rounded.coefficients;\n    var e = rounded.exponent;\n\n    // append trailing zeros\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length));\n    }\n\n    // append trailing zeros\n    // TODO: simplify the next statement\n    c = c.concat(zeros(e - c.length + 1 +\n        (c.length < precision ? precision - c.length : 0)));\n\n    // prepend zeros\n    c = zeros(-e).concat(c);\n\n    var dot = e > 0 ? e : 0;\n    if (dot < c.length - 1) {\n      c.splice(dot + 1, 0, '.');\n    }\n\n    return this.sign + c.join('');\n  }\n};\n\n/**\n * Crete a clone of the NumberFormatter\n * @return {NumberFormatter} Returns a clone of the NumberFormatter\n */\nNumberFormatter.prototype.clone = function () {\n  var clone = new NumberFormatter('0');\n  clone.sign = this.sign;\n  clone.coefficients = this.coefficients.slice(0);\n  clone.exponent = this.exponent;\n  return clone;\n};\n\n/**\n * Round the number of digits of a number *\n * @param {number} precision  A positive integer\n * @return {NumberFormatter}  Returns a new NumberFormatter with the rounded\n *                            digits\n */\nNumberFormatter.prototype.roundDigits = function (precision) {\n  var rounded = this.clone();\n  var c = rounded.coefficients;\n\n  // prepend zeros if needed\n  while (precision <= 0) {\n    c.unshift(0);\n    rounded.exponent++;\n    precision++;\n  }\n\n  if (c.length > precision) {\n    var removed = c.splice(precision);\n\n    if (removed[0] >= 5) {\n      var i = precision - 1;\n      c[i]++;\n      while (c[i] === 10) {\n        c.pop();\n        if (i === 0) {\n          c.unshift(0);\n          rounded.exponent++;\n          i++;\n        }\n        i--;\n        c[i]++;\n      }\n    }\n  }\n\n  return rounded;\n};\n\n/**\n * Create an array filled with zeros.\n * @param {number} length\n * @return {Array}\n */\nfunction zeros(length) {\n  var arr = [];\n  for (var i = 0; i < length; i++) {\n    arr.push(0);\n  }\n  return arr;\n}\n\nmodule.exports = NumberFormatter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/util/NumberFormatter.js\n ** module id = 188\n ** module chunks = 0\n **/","'use strict';\n\nvar BigNumber = require('../type/BigNumber');\nvar isNumber = require('./number').isNumber;\nvar digits = require('./number').digits;\nvar memoize = require('./function').memoize;\n\n/**\n * Test whether value is a BigNumber\n * @param {*} value\n * @return {Boolean} isBigNumber\n */\nexports.isBigNumber = function (value) {\n  return (value instanceof BigNumber);\n};\n\n\n/************************************* \n *             Constants             *\n *************************************/\n\n/**\n * Calculate BigNumber e\n * @param {Number} precision\n * @returns {BigNumber} Returns e\n */\nexports.e = memoize(function (precision) {\n  var Big = BigNumber.constructor({precision: precision});\n\n  return new Big(1).exp();\n});\n\n/**\n * Calculate BigNumber golden ratio, phi = (1+sqrt(5))/2\n * @param {Number} precision\n * @returns {BigNumber} Returns phi\n */\nexports.phi = memoize(function (precision) {\n  var Big = BigNumber.constructor({precision: precision});\n\n  return new Big(1).plus(new Big(5).sqrt()).div(2);\n});\n\n/**\n * Calculate BigNumber pi.\n *\n * Uses Machin's formula: pi / 4 = 4 * arctan(1 / 5) - arctan(1 / 239)\n * http://milan.milanovic.org/math/english/pi/machin.html\n * @param {Number} precision\n * @returns {BigNumber} Returns pi\n */\nexports.pi = memoize(function (precision) {\n  // we calculate pi with a few decimal places extra to prevent round off issues\n  var Big = BigNumber.constructor({precision: precision + 4});\n  var pi4th = new Big(4).times(arctan_taylor(new Big(1).div(5)))\n      .minus(arctan_taylor(new Big(1).div(239)));\n\n  Big.config({precision: precision});\n\n  // the final pi has the requested number of decimals\n  return new Big(4).times(pi4th);\n});\n\n/**\n * Calculate BigNumber tau, tau = 2 * pi\n * @param {Number} precision\n * @returns {BigNumber} Returns tau\n */\nexports.tau = memoize(function (precision) {\n  // we calculate pi at a slightly higher precision than configured to prevent round off errors\n  // when multiplying by two in the end\n\n  var pi = exports.pi(precision + 2);\n\n  var Big = BigNumber.constructor({precision: precision});\n\n  return new Big(2).times(pi);\n});\n\n\n/*************************************\n *         Bitwise functions         *\n *************************************/\n\n/*\n * Special Cases:\n *   N &  n =  N\n *   n &  0 =  0\n *   n & -1 =  n\n *   n &  n =  n\n *   I &  I =  I\n *  -I & -I = -I\n *   I & -I =  0\n *   I &  n =  n\n *   I & -n =  I\n *  -I &  n =  0\n *  -I & -n = -I\n *\n * @param {BigNumber} value\n * @param {BigNumber} value\n * @return {BigNumber} Result of `x` & `y`, is fully precise\n *\n */\nexports.and = function(x, y) {\n  if ((x.isFinite() && !x.isInteger()) || (y.isFinite() && !y.isInteger())) {\n    throw new Error('Parameters in function bitAnd must be integer numbers');\n  }\n\n  var BigNumber = x.constructor;\n  if (x.isNaN() || y.isNaN()) {\n    return new BigNumber(NaN);\n  }\n\n  if (x.isZero() || y.eq(-1) || x.eq(y)) {\n    return x;\n  }\n  if (y.isZero() || x.eq(-1)) {\n    return y;\n  }\n\n  if (!x.isFinite() || !y.isFinite()) {\n    if (!x.isFinite() && !y.isFinite()) {\n      if (x.isNegative() == y.isNegtive()) {\n        return x;\n      }\n      return new BigNumber(0);\n    }\n    if (!x.isFinite()) {\n      if (y.isNegative()) {\n        return x;\n      }\n      if (x.isNegative()) {\n        return new BigNumber(0);\n      }\n      return y;\n    }\n    if (!y.isFinite()) {\n      if (x.isNegative()) {\n        return y;\n      }\n      if (y.isNegative()) {\n        return new BigNumber(0);\n      }\n      return x;\n    }\n  }\n  return bitwise(x, y, function (a, b) { return a & b });\n};\n\n/*\n * Special Cases:\n *  n << -n = N\n *  n <<  N = N\n *  N <<  n = N\n *  n <<  0 = n\n *  0 <<  n = 0\n *  I <<  I = N\n *  I <<  n = I\n *  n <<  I = I\n *\n * @param {BigNumber} value\n * @param {BigNumber} value\n * @return {BigNumber} Result of `x` << `y`\n *\n */\nexports.leftShift = function (x, y) {\n  if ((x.isFinite() && !x.isInteger()) || (y.isFinite() && !y.isInteger())) {\n    throw new Error('Parameters in function leftShift must be integer numbers');\n  }\n\n  var BigNumber = x.constructor;\n  if (x.isNaN() || y.isNaN() || (y.isNegative() && !y.isZero())) {\n    return new BigNumber(NaN);\n  }\n  if (x.isZero() || y.isZero()) {\n    return x;\n  }\n  if (!x.isFinite() && !y.isFinite()) {\n    return new BigNumber(NaN);\n  }\n\n  // Math.pow(2, y) is fully precise for y < 55, and fast\n  if (y.lt(55)) {\n    return x.times(Math.pow(2, y.toNumber()) + '');\n  }\n  return x.times(new BigNumber(2).pow(y));\n};\n\n/*\n * @param {BigNumber} value\n * @return {BigNumber} Result of ~`x`, fully precise\n *\n */\nexports.not = function (x) {\n  if (x.isFinite() && !x.isInteger()) {\n    throw new Error('Parameter in function bitNot must be integer numbers');\n  }\n\n  var BigNumber = x.constructor;\n  var prevPrec = BigNumber.precision;\n  BigNumber.config({precision: 1E9});\n\n  var x = x.plus(BigNumber.ONE);\n  x.s = -x.s || null;\n\n  BigNumber.config({precision: prevPrec});\n  return x;\n};\n\n/*\n * Special Cases:\n *   N |  n =  N\n *   n |  0 =  n\n *   n | -1 = -1\n *   n |  n =  n\n *   I |  I =  I\n *  -I | -I = -I\n *   I | -n = -1\n *   I | -I = -1\n *   I |  n =  I\n *  -I |  n = -I\n *  -I | -n = -n\n *\n * @param {BigNumber} value\n * @param {BigNumber} value\n * @return {BigNumber} Result of `x` | `y`, fully precise\n *\n */\nexports.or = function (x, y) {\n  if ((x.isFinite() && !x.isInteger()) || (y.isFinite() && !y.isInteger())) {\n    throw new Error('Parameters in function bitOr must be integer numbers');\n  }\n\n  var BigNumber = x.constructor;\n  if (x.isNaN() || y.isNaN()) {\n    return new BigNumber(NaN);\n  }\n\n  var negOne = new BigNumber(-1);\n  if (x.isZero() || y.eq(negOne) || x.eq(y)) {\n    return y;\n  }\n  if (y.isZero() || x.eq(negOne)) {\n    return x;\n  }\n\n  if (!x.isFinite() || !y.isFinite()) {\n    if ((!x.isFinite() && !x.isNegative() && y.isNegative()) ||\n           (x.isNegative() && !y.isNegative() && !y.isFinite())) {\n      return negOne;\n    }\n    if (x.isNegative() && y.isNegative()) {\n      return x.isFinite() ? x : y;\n    }\n    return x.isFinite() ? y : x;\n  }\n  return bitwise(x, y, function (a, b) { return a | b });\n};\n\n/*\n * Special Cases:\n *   n >> -n =  N\n *   n >>  N =  N\n *   N >>  n =  N\n *   I >>  I =  N\n *   n >>  0 =  n\n *   I >>  n =  I\n *  -I >>  n = -I\n *  -I >>  I = -I\n *   n >>  I =  I\n *  -n >>  I = -1\n *   0 >>  n =  0\n *\n * @param {BigNumber} value\n * @param {BigNumber} value\n * @return {BigNumber} Result of `x` >> `y`\n *\n */\nexports.rightShift = function (x, y) {\n  if ((x.isFinite() && !x.isInteger()) || (y.isFinite() && !y.isInteger())) {\n    throw new Error('Parameters in function rightArithShift must be integer numbers');\n  }\n\n  var BigNumber = x.constructor;\n  if (x.isNaN() || y.isNaN() || (y.isNegative() && !y.isZero())) {\n    return new BigNumber(NaN);\n  }\n  if (x.isZero() || y.isZero()) {\n    return x;\n  }\n  if (!y.isFinite()) {\n    if (x.isNegative()) {\n      return new BigNumber(-1);\n    }\n    if (!x.isFinite()) {\n      return new BigNumber(NaN);\n    }\n    return new BigNumber(0);\n  }\n\n  // Math.pow(2, y) is fully precise for y < 55, and fast\n  if (y.lt(55)) {\n    return x.div(Math.pow(2, y.toNumber()) + '').floor();\n  }\n  return x.div(new BigNumber(2).pow(y)).floor();\n};\n\n/*\n * Special Cases:\n *   N ^  n =  N\n *   n ^  0 =  n\n *   n ^  n =  0\n *   n ^ -1 = ~n\n *   I ^  n =  I\n *   I ^ -n = -I\n *   I ^ -I = -1\n *  -I ^  n = -I\n *  -I ^ -n =  I\n *\n * @param {BigNumber} value\n * @param {BigNumber} value\n * @return {BigNumber} Result of `x` ^ `y`, fully precise\n *\n */\nexports.xor = function (x, y) {\n  if ((x.isFinite() && !x.isInteger()) || (y.isFinite() && !y.isInteger())) {\n    throw new Error('Parameters in function bitXor must be integer numbers');\n  }\n\n  var BigNumber = x.constructor;\n  if (x.isNaN() || y.isNaN()) {\n    return new BigNumber(NaN);\n  }\n  if (x.isZero()) {\n    return y;\n  }\n  if (y.isZero()) {\n    return x;\n  }\n\n  if (x.eq(y)) {\n    return new BigNumber(0);\n  }\n\n  var negOne = new BigNumber(-1);\n  if (x.eq(negOne)) {\n    return exports.not(y);\n  }\n  if (y.eq(negOne)) {\n    return exports.not(x);\n  }\n\n  if (!x.isFinite() || !y.isFinite()) {\n    if (!x.isFinite() && !y.isFinite()) {\n      return negOne;\n    }\n    return new BigNumber(x.isNegative() == y.isNegative()\n      ?  Infinity\n      : -Infinity);\n  }\n  return bitwise(x, y, function (a, b) { return a ^ b });\n};\n\n/* Applies bitwise function to numbers. */\nfunction bitwise(x, y, func) {\n  var BigNumber = x.constructor;\n\n  var xBits, yBits;\n  var xSign = +(x.s < 0);\n  var ySign = +(y.s < 0);\n  if (xSign) {\n    xBits = decCoefficientToBinaryString(exports.not(x));\n    for (var i = 0; i < xBits.length; ++i) {\n      xBits[i] ^= 1;\n    }\n  } else {\n    xBits = decCoefficientToBinaryString(x);\n  }\n  if (ySign) {\n    yBits = decCoefficientToBinaryString(exports.not(y));\n    for (var i = 0; i < yBits.length; ++i) {\n      yBits[i] ^= 1;\n    }\n  } else {\n    yBits = decCoefficientToBinaryString(y);\n  }\n\n  var minBits, maxBits, minSign;\n  if (xBits.length <= yBits.length) {\n    minBits = xBits;\n    maxBits = yBits;\n    minSign = xSign;\n  } else {\n    minBits = yBits;\n    maxBits = xBits;\n    minSign = ySign;\n  }\n\n  var shortLen = minBits.length;\n  var longLen = maxBits.length;\n  var expFuncVal = func(xSign, ySign) ^ 1;\n  var outVal = new BigNumber(expFuncVal ^ 1);\n  var twoPower = BigNumber.ONE;\n  var two = new BigNumber(2);\n\n  var prevPrec = BigNumber.precision;\n  BigNumber.config({precision: 1E9});\n\n  while (shortLen > 0) {\n    if (func(minBits[--shortLen], maxBits[--longLen]) == expFuncVal) {\n      outVal = outVal.plus(twoPower);\n    }\n    twoPower = twoPower.times(two);\n  }\n  while (longLen > 0) {\n    if (func(minSign, maxBits[--longLen]) == expFuncVal) {\n      outVal = outVal.plus(twoPower);\n    }\n    twoPower = twoPower.times(two);\n  }\n\n  BigNumber.config({precision: prevPrec});\n\n  if (expFuncVal == 0) {\n    outVal.s = -outVal.s;\n  }\n  return outVal;\n}\n\n/* Extracted from decimal.js, and edited to specialize. */\nfunction decCoefficientToBinaryString(x) {\n  // Convert to string\n  var a = x.c;\n  var r = a[0] + '';\n\n  for (var i = 1; i < a.length; ++i) {\n    var s = a[i] + '';\n    for (var z = 7 - s.length; z--; ) {\n      s = '0' + s;\n    }\n\n    r += s;\n  }\n\n  var j;\n  for (j = r.length - 1; r.charAt(j) == '0'; --j);\n\n  var xe = x.e;\n  var str = r.slice(0, j + 1 || 1);\n  var strL = str.length;\n  if (xe > 0) {\n    if (++xe > strL) {\n      // Append zeros.\n      for (xe -= strL; xe--; str += '0');\n    } else if (xe < strL) {\n      str = str.slice(0, xe) + '.' + str.slice(xe);\n    }\n  }\n\n  // Convert from base 10 (decimal) to base 2\n  var arr = [0];\n  for (var i = 0; i < str.length; ) {\n    for (var arrL = arr.length; arrL--; arr[arrL] *= 10);\n\n    arr[0] += str.charAt(i++) << 0;  // convert to int\n    for (var j = 0; j < arr.length; ++j) {\n      if (arr[j] > 1) {\n        if (arr[j + 1] == null) {\n          arr[j + 1] = 0;\n        }\n\n        arr[j + 1] += arr[j] >> 1;\n        arr[j] &= 1;\n      }\n    }\n  }\n\n  return arr.reverse();\n}\n\n\n/*************************************\n *      Trigonometric functions      *\n *************************************/\n\n/**\n * Calculate the arccosine or arcsecant of x\n *\n * acos(x) = 2*atan(sqrt(1-x^2)/(1+x))\n *\n * asec(x) = acos(1/x)\n *\n * @param {BigNumber} x\n * @param {DecimalFactory} Big   current BigNumber constructor\n * @param {Boolean} reciprocal   is sec\n * @returns {BigNumber} arccosine or arcsecant of x\n */\nexports.arccos_arcsec = function (x, Big, reciprocal) {\n  var precision = Big.precision;\n  if (reciprocal) {\n    if (x.abs().lt(Big.ONE)) {\n      throw new Error('asec() only has non-complex values for |x| >= 1.');\n    }\n  } else if (x.abs().gt(Big.ONE)) {\n    throw new Error('acos() only has non-complex values for |x| <= 1.');\n  }\n  if (x.eq(-1)) {\n    return exports.pi(precision);\n  }\n\n  Big.config({precision: precision + 4});\n\n  if (reciprocal) {\n    x = Big.ONE.div(x);\n  }\n\n  var acos = exports.arctan_arccot(Big.ONE.minus(x.times(x)).sqrt()\n                                      .div(x.plus(Big.ONE)), Big).times(2);\n\n  Big.config({precision: precision});\n  return acos.toDP(precision - 1);\n};\n\n/**\n * Calculate the arcsine or arccosecant of x\n *\n * @param {BigNumber} x\n * @param {DecimalFactory} Big   current BigNumber constructor\n * @param {Boolean} reciprocal   is csc\n * @returns {BigNumber} arcsine or arccosecant of x\n */\nexports.arcsin_arccsc = function (x, Big, reciprocal) {\n  if (x.isNaN()) {\n    return new Big(NaN);\n  }\n\n  var precision = Big.precision;\n  var absX = x.abs();\n  if (reciprocal) {\n    if (absX.lt(Big.ONE)) {\n      throw new Error('acsc() only has non-complex values for |x| >= 1.');\n    }\n\n    Big.config({precision: precision + 2});\n    x = Big.ONE.div(x); \n    Big.config({precision: precision});\n\n    absX = x.abs();\n  } else if (absX.gt(Big.ONE)) {\n    throw new Error('asin() only has non-complex values for |x| <= 1.');\n  }\n\n  // Get x below 0.58\n  if (absX.gt(0.8)) {\n    Big.config({precision: precision + 4});\n\n    // arcsin(x) = sign(x)*(Pi/2 - arcsin(sqrt(1 - x^2)))\n    var sign = x.s;\n    var halfPi = exports.pi(precision + 4).div(2);\n    x = halfPi.minus(exports.arcsin_arccsc(Big.ONE.minus(x.times(x)).sqrt(), Big));\n    x.s = sign;\n\n    x.constructor = Big;\n    Big.config({precision: precision});\n    return x.toDP(precision - 1);\n  }\n  var wasReduced = absX.gt(0.58);\n  if (wasReduced) {\n    Big.config({precision: precision + 8});\n\n    // arcsin(x) = 2*arcsin(x / (sqrt(2)*sqrt(sqrt(1 - x^2) + 1)))\n    x = x.div(new Big(2).sqrt().times(Big.ONE.minus(x.times(x)).sqrt()\n          .plus(Big.ONE).sqrt()));\n\n    Big.config({precision: precision});\n  }\n\n  // Avoid overhead of Newton's Method if feasible\n  var ret = (precision <= 60 || ((x.dp() <= Math.log(precision)) && x.lt(0.05)))\n    ? arcsin_taylor(x, precision)\n    : arcsin_newton(x, Big);\n\n  if (wasReduced) {\n    return ret.times(2);\n  }\n  return ret;\n};\n\n/**\n * Calculate the arctangent or arccotangent of x\n *\n * @param {BigNumber} x\n * @param {DecimalFactory} Big   current BigNumber constructor\n * @param {Boolean} reciprocal   is cot\n * @returns {BigNumber} arctangent or arccotangent of x\n */\nexports.arctan_arccot = function (x, Big, reciprocal) {\n  if (x.isNaN()) {\n    return new Big(NaN);\n  }\n  if ((!reciprocal && x.isZero()) || (reciprocal && !x.isFinite())) {\n    return new Big(0);\n  }\n\n  var precision = Big.precision;\n  if ((!reciprocal && !x.isFinite()) || (reciprocal && x.isZero())) {\n    var halfPi = exports.pi(precision + 2).div(2).toDP(precision - 1);\n    halfPi.constructor = Big;\n    halfPi.s = x.s;\n\n    return halfPi;\n  }\n\n  Big.config({precision: precision + 4});\n\n  if (reciprocal) {\n    x = Big.ONE.div(x);\n  }\n\n  var absX = x.abs();\n  if (absX.lte(0.875)) {\n    var ret = arctan_taylor(x);\n\n    ret.constructor = Big;\n    Big.config({precision: precision});\n    return ret.toDP(Big.precision - 1);\n  }\n  if (absX.gte(1.143)) {\n    // arctan(x) = sign(x)*((PI / 2) - arctan(1 / |x|))\n    var halfPi = exports.pi(precision + 4).div(2);\n    var ret = halfPi.minus(arctan_taylor(Big.ONE.div(absX)));\n    ret.s = x.s;\n\n    ret.constructor = Big;\n    Big.config({precision: precision});\n    return ret.toDP(Big.precision - 1);\n  }\n\n  // arctan(x) = arcsin(x / [sqrt(1 + x^2)])\n  x = x.div(x.times(x).plus(1).sqrt());\n\n  Big.config({precision: precision});\n  return exports.arcsin_arccsc(x, Big);\n};\n\n/**\n * Calculate the arctangent of y, x\n *\n * @param {BigNumber} y\n * @param {BigNumber} x\n * @param {DecimalFactory} Big   current BigNumber constructor\n * @returns {BigNumber} arctangent of y, x\n */\nexports.arctan2 = function (y, x, Big) {\n  var precision = Big.precision;\n  if (x.isZero()) {\n    if (y.isZero()) {\n      return new Big(NaN);\n    }\n\n    var halfPi = exports.pi(precision + 2).div(2).toDP(precision - 1);\n    halfPi.constructor = Big;\n    halfPi.s = y.s;\n\n    return halfPi;\n  }\n\n  Big.config({precision: precision + 2});\n\n  var ret = exports.arctan_arccot(y.div(x), Big, false);\n  if (x.isNegative()) {\n    var pi = exports.pi(precision + 2);\n    ret = y.isNegative() ? ret.minus(pi) : ret.plus(pi);\n  }\n\n  ret.constructor = Big;\n  Big.config({precision: precision});\n  return ret.toDP(precision - 1);\n};\n\n/**\n * Calculate the hyperbolic arccosine, arcsine, arcsecant, or arccosecant of x\n *\n * acosh(x) = ln(x + sqrt(x^2 - 1))\n *\n * asinh(x) = ln(x + sqrt(x^2 + 1))\n *\n * asech(x) = acosh(1 / x)\n *\n * acsch(x) = asinh(1 / x)\n *\n * @param {BigNumber} x\n * @param {DecimalFactory} Big   current BigNumber constructor\n * @param {Boolean} mode         sine function if true, cosine function if false\n * @param {Boolean} reciprocal   is sec or csc\n * @returns {BigNumber} hyperbolic arccosine, arcsine, arcsecant, or arccosecant of x\n */\nexports.acosh_asinh_asech_acsch = function (x, Big, mode, reciprocal) {\n  if (x.isNaN()) {\n    return new Big(NaN);\n  }\n  if (reciprocal && x.isZero()) {\n    return new Big(Infinity);\n  }\n  if (!mode) {\n    if (reciprocal) {\n      if (x.isNegative() || x.gt(Big.ONE)) {\n        throw new Error('asech() only has non-complex values for 0 <= x <= 1.');\n      }\n    } else if (x.lt(Big.ONE)) {\n      throw new Error('acosh() only has non-complex values for x >= 1.');\n    }\n  }\n\n  var precision = Big.precision;\n  Big.config({precision: precision + 4});\n\n  var y = new Big(x);\n  y.constructor = Big;\n\n  if (reciprocal) {\n    y = Big.ONE.div(y);\n  }\n\n  var x2PlusOrMinus = (mode) ? y.times(y).plus(Big.ONE) : y.times(y).minus(Big.ONE);\n  var ret = y.plus(x2PlusOrMinus.sqrt()).ln();\n\n  Big.config({precision: precision});\n  return new Big(ret.toPrecision(precision));\n};\n\n/**\n * Calculate the hyperbolic arctangent or arccotangent of x\n *\n * atanh(x) = ln((1 + x)/(1 - x)) / 2\n *\n * acoth(x) = atanh(1 / x)\n *\n * @param {BigNumber} x\n * @param {DecimalFactory} Big   current BigNumber constructor\n * @param {Boolean} reciprocal   is sec or csc\n * @returns {BigNumber} hyperbolic arctangent or arccotangent of x\n */\nexports.atanh_acoth = function (x, Big, reciprocal) {\n  if (x.isNaN()) {\n    return new Big(NaN);\n  }\n\n  var absX = x.abs();\n  if (absX.eq(Big.ONE)) {\n    return new Big(x.isNegative() ? -Infinity : Infinity);\n  }\n  if (absX.gt(Big.ONE)) {\n    if (!reciprocal) {\n      throw new Error('atanh() only has non-complex values for |x| <= 1.');\n    }\n  } else if (reciprocal) {\n    throw new Error('acoth() has complex values for |x| < 1.');\n  }\n\n  if (x.isZero()) {\n    return new Big(0);\n  }\n\n  var precision = Big.precision;\n  Big.config({precision: precision + 4});\n\n  var y = new Big(x);\n  y.constructor = Big;\n\n  if (reciprocal) {\n    y = Big.ONE.div(y);\n  }\n  var ret = Big.ONE.plus(y).div(Big.ONE.minus(y)).ln().div(2);\n\n  Big.config({precision: precision});\n  return new Big(ret.toPrecision(precision));\n};\n\n/**\n * Calculate the cosine/sine of x using the multiple angle identity:\n *\n * cos(4x) = 8[cos(x)^4 - cos(x)^2] + 1\n *\n * sin(5x) = 16sin(x)^5 - 20sin(x)^3 + 5sin(x)\n * http://www.tc.umn.edu/~ringx004/sidebar.html\n *\n * @param {BigNumber} x\n * @param {DecimalFactory} Big   current BigNumber constructor\n * @param {Number} mode          cosine function if 0, sine function if 1\n * @param {Boolean} reciprocal   is sec or csc\n * @returns {BigNumber} cosine, sine, secant, or cosecant of x\n */\nexports.cos_sin_sec_csc = function (x, Big, mode, reciprocal) {\n  if (x.isNaN() || !x.isFinite()) {\n    return new Big(NaN);\n  }\n  var precision = Big.precision;\n\n  // Avoid changing the original value\n  var y = new Big(x);\n\n  // sin(-x) == -sin(x), cos(-x) == cos(x)\n  var isNeg = y.isNegative();\n  if (isNeg) {\n    y.s = -y.s;\n  }\n\n  // Apply ~log(precision) guard bits\n  var precPlusGuardDigits = precision + (Math.log(precision) | 0) + 3;\n  Big.config({precision: precPlusGuardDigits});\n\n  y = reduceToPeriod(y, precPlusGuardDigits, mode);  // Make this destructive\n  y[0].constructor = Big;\n  if (y[1]) {\n    y = y[0];\n    if (reciprocal && y.isZero()) {\n      y = new Big(Infinity);\n    }\n\n    Big.config({precision: precision});\n    return y;\n  }\n\n  var ret;\n  y = y[0];\n  if (mode) {\n    ret = cos_sin_taylor(y.div(3125), mode);\n    Big.config({precision: Math.min(precPlusGuardDigits, precision + 15)});\n\n    var five = new Big(5);\n    var sixteen = new Big(16);\n    var twenty = new Big(20);\n    for (var i = 0; i < 5; ++i) {\n      var ret2 = ret.times(ret);\n      var ret3 = ret2.times(ret);\n      var ret5 = ret3.times(ret2);\n      ret = sixteen.times(ret5).minus(\n              twenty.times(ret3)).plus(\n                five.times(ret));\n    }\n\n    if (isNeg) {\n      ret.s = -ret.s;\n    }\n  } else {\n    var div_factor, loops;\n    if (y.abs().lt(Big.ONE)) {\n      div_factor = 64;\n      loops = 3;\n    } else {\n      div_factor = 256;\n      loops = 4;\n    }\n\n    ret = cos_sin_taylor(y.div(div_factor), mode);\n    Big.config({precision: Math.min(precPlusGuardDigits, precision + 8)});\n\n    var eight = new Big(8);\n    for (; loops > 0; --loops) {\n      var ret2 = ret.times(ret);\n      var ret4 = ret2.times(ret2);\n      ret = eight.times(ret4.minus(ret2)).plus(Big.ONE);\n    }\n  }\n\n  if (reciprocal) {\n    ret = (ret.e <= -precision)\n      ? new Big(Infinity)\n      : Big.ONE.div(ret);\n  }\n\n  Big.config({precision: precision});\n  return ret.toDP(precision - 1);\n};\n\n/**\n * Calculate the tangent of x\n *\n * tan(x) = sin(x) / cos(x)\n *\n * cot(x) = cos(x) / sin(x)\n *\n * @param {BigNumber} x\n * @param {DecimalFactory} Big   current BigNumber constructor\n * @param {Boolean} reciprocal   is cot\n * @returns {BigNumber} tangent or cotangent of x\n */\nexports.tan_cot = function (x, Big, reciprocal) {\n  if (x.isNaN()) {\n    return new Big(NaN);\n  }\n\n  var precision = Big.precision;\n  var pi = exports.pi(precision + 2);\n  var halfPi = pi.div(2).toDP(precision - 1);\n  pi = pi.toDP(precision - 1);\n\n  var y = reduceToPeriod(x, precision, 1)[0];\n  if (y.abs().eq(pi)) {\n    return new Big(Infinity);\n  }\n\n  Big.config({precision: precision + 4});\n  var sin = exports.cos_sin_sec_csc(y, Big, 1, false);\n  var cos = sinToCos(sin);\n\n  sin = sin.toDP(precision);\n  cos = cos.toDP(precision);\n\n  // Make sure sign for cosine is correct\n  if (y.eq(x)) {\n    if (y.gt(halfPi)) {\n      cos.s = -cos.s;\n    }\n  } else if (pi.minus(y.abs()).gt(halfPi)) {\n    cos.s = -cos.s;\n  }\n\n  var tan = (reciprocal) ? cos.div(sin) : sin.div(cos);\n\n  Big.config({precision: precision});\n  return new Big(tan.toPrecision(precision));\n};\n\n/**\n * Calculate the hyperbolic sine, cosine, secant, or cosecant of x\n *\n * cosh(x) = (exp(x) + exp(-x)) / 2\n *         = (e^x + 1/e^x) / 2\n *\n * sinh(x) = (exp(x) - exp(-x)) / 2\n *         = (e^x - 1/e^x) / 2\n *\n * sech(x) = 2 / (exp(x) + exp(-x))\n *         = 2 / (e^x + 1/e^x)\n *\n * csch(x) = 2 / (exp(x) - exp(-x))\n *         = 2 / (e^x - 1/e^x)\n *\n * @param {BigNumber} x\n * @param {DecimalFactory} Big   current BigNumber constructor\n * @param {Boolean} mode         sinh function if true, cosh function if false\n * @param {Boolean} reciprocal   is sech or csch\n * @returns {BigNumber} hyperbolic cosine, sine, secant. or cosecant of x\n */\nexports.cosh_sinh_csch_sech = function (x, Big, mode, reciprocal) {\n  if (x.isNaN()) {\n    return new Big(NaN);\n  }\n  if (!x.isFinite()) {\n    if (reciprocal) {\n      return new Big(0);\n    }\n    return new Big((mode) ? x : Infinity);\n  }\n\n  var precision = Big.precision;\n  Big.config({precision: precision + 4});\n\n  var y = new Big(x);\n  y.constructor = Big;\n\n  y = y.exp();\n  y = (mode) ? y.minus(Big.ONE.div(y)) : y.plus(Big.ONE.div(y));\n  y = (reciprocal) ? new Big(2).div(y) : y.div(2);\n\n  Big.config({precision: precision});\n  return new Big(y.toPrecision(precision));\n};\n\n/**\n * Calculate the hyperbolic tangent of x\n *\n * tanh(x) = (exp(x) + exp(-x)) / (exp(x) - exp(-x))\n *         = (exp(2x) - 1) / (exp(2x) + 1)\n *         = (e^x - 1/e^x) / (e^x + 1/e^x)\n *\n * coth(x) = (exp(x) - exp(-x)) / (exp(x) + exp(-x))\n *         = (exp(2x) + 1) / (exp(2x) - 1)\n *         = (e^x + 1/e^x) / (e^x - 1/e^x)\n *\n * @param {BigNumber} x\n * @param {DecimalFactory} Big   current BigNumber constructor\n * @param {Boolean} reciprocal   is coth\n * @returns {BigNumber} hyperbolic tangent or cotangent of x\n */\nexports.tanh_coth = function (x, Big, reciprocal) {\n  if (x.isNaN()) {\n    return new Big(NaN);\n  }\n  if (!x.isFinite()) {\n    return new Big(x.s);\n  }\n\n  var precision = Big.precision;\n  Big.config({precision: precision + 4});\n\n  var y = new Big(x);\n  y.constructor = Big;\n\n  var posExp = y.exp();\n  var negExp = Big.ONE.div(posExp);\n  var ret = posExp.minus(negExp);\n  ret = (reciprocal) ? posExp.plus(negExp).div(ret) : ret.div(posExp.plus(negExp));\n\n  Big.config({precision: precision});\n  return ret.toDP(precision - 1);\n};\n\n/**\n * Calculate the arc sine of x using Newton's method\n *\n * f(x) = sin(x) = N  =>  f(x)  = sin(x) - N\n *                        f'(x) = cos(x)\n *\n * Thus we solve each step as follows:\n *     x_(i+1) = x_i - (sin(x_i) - N)/cos(x_i)\n *\n * @param {BigNumber} x\n * @param {DecimalFactory} Big   current BigNumber constructor\n * @returns {BigNumber} arc sine of x\n */\nfunction arcsin_newton(x, Big) {\n  var oldPrecision = Big.precision;\n\n  // Calibration variables, adjusted from MAPM\n  var tolerance = -(oldPrecision + 4);\n  var maxp = oldPrecision + 8 - x.e;\n  var localPrecision = 25 - x.e;\n  var maxIter = Math.max(Math.log(oldPrecision + 2) * 1.442695 | 0 + 5, 5);\n  Big.config({precision: localPrecision});\n\n  var i = 0;\n  var curr = new Big(Math.asin(x.toNumber()) + '');\n  do {\n    var tmp0 = exports.cos_sin_sec_csc(curr, Big, 1, false);\n    var tmp1 = sinToCos(tmp0);\n    if (!tmp0.isZero()) {\n      tmp0.s = curr.s;\n    }\n\n    var tmp2 = tmp0.minus(x).div(tmp1);\n    curr = curr.minus(tmp2);\n\n    localPrecision = Math.min(2*localPrecision, maxp);\n    Big.config({precision: localPrecision});\n  } while ((2*tmp2.e >= tolerance) && !tmp2.isZero() && (++i <= maxIter))\n\n  if (i == maxIter) {\n    throw new Error('asin() failed to converge to the requested accuracy.' +\n                    'Try with a higher precision.');\n  }\n\n  Big.config({precision: oldPrecision});\n  return curr.toDP(oldPrecision - 1);\n}\n\n/**\n * Calculate the arc sine of x\n *\n * arcsin(x) = x + (1/2)*x^3/3 + (3/8)*x^5/5 + (15/48)*x^7/7 ...\n *           = x + (1/2)*x^2*x^1/3 + [(1*3)/(2*4)]*x^2*x^3/5 + [(1*3*5)/(2*4*6)]*x^2*x^5/7 ...\n *\n * @param {BigNumber} x\n * @param {Number} precision\n * @returns {BigNumber} arc sine of x\n */\nfunction arcsin_taylor(x, precision) {\n  var Big = x.constructor;\n  Big.config({precision: precision + Math.log(precision) | 0 + 4});\n\n  var one = new Big(1);\n  var y = x;\n  var yPrev = NaN;\n  var x2 = x.times(x);\n  var polyNum = x;\n  var constNum = new Big(one);\n  var constDen = new Big(one);\n\n  var bigK = new Big(one); \n  for (var k = 3; !y.equals(yPrev); k += 2) {\n    polyNum = polyNum.times(x2);\n\n    constNum = constNum.times(bigK);\n    constDen = constDen.times(bigK.plus(one));\n\n    yPrev = y;\n    bigK = new Big(k);\n    y = y.plus(polyNum.times(constNum).div(bigK.times(constDen)));\n  }\n\n  Big.config({precision: precision});\n  return y.toDP(precision - 1);\n}\n\n/**\n * Calculate the arc tangent of x using a Taylor expansion\n *\n * arctan(x) = x - x^3/3 + x^5/5 - x^7/7 + x^9/9 - ...\n *           = x - x^2*x^1/3 + x^2*x^3/5 - x^2*x^5/7 + x^2*x^7/9 - ...\n *\n * @param {BigNumber} x\n * @returns {BigNumber} arc tangent of x\n */\nfunction arctan_taylor(x) {\n  var y = x;\n  var yPrev = NaN;\n  var x2 = x.times(x);\n  var num = x;\n  var add = true;\n\n  for (var k = 3; !y.equals(yPrev); k += 2) {\n    num = num.times(x2);\n\n    yPrev = y;\n    add = !add;\n    y = (add) ? y.plus(num.div(k)) : y.minus(num.div(k));\n  }\n\n  return y;\n}\n\n/**\n * Calculate the cosine or sine of x using Taylor Series.\n *\n * cos(x) = 1 - x^2/2! + x^4/4! - x^6/6! + x^8/8! - ...\n *        = 1 - 1*x^2/2! + x^2*x^2/4! - x^2*x^4/6! + x^2*x^6/8! - ...\n *\n * sin(x) = x - x^3/3! + x^5/5! - x^7/7! + x^9/9! - ...\n *        = x - x^2*x^1/3! + x^2*x^3/5! - x^2*x^5/7! + x^2*x^7/9! - ...\n *\n * @param {BigNumber} x     reduced argument\n * @param {Number} mode     sine function if 1, cosine function if 0\n * @returns {BigNumber} sine or cosine of x\n */\nfunction cos_sin_taylor(x, mode) {\n  var one = x.constructor.ONE;\n\n  var y = x;\n  var yPrev = NaN;\n  var x2 = x.times(x);\n  var num = (mode) ? y : y = one;\n  var den = one;\n  var add = true;\n\n  for (var k = mode; !y.equals(yPrev); k += 2) {\n    num = num.times(x2);\n    den = den.times(k+1).times(k+2);\n\n    yPrev = y;\n    add = !add;\n    y = (add) ? y.plus(num.div(den)) : y.minus(num.div(den));\n  }\n\n  return y;\n}\n\n/**\n * Reduce x within a period of pi (0, pi] with guard digits.\n *\n * @param {BigNumber} x\n * @param {Number} precision\n * @param {Number} mode\n * @returns {Array} [Reduced x, is tau multiple?]\n */\nfunction reduceToPeriod(x, precision, mode) {\n  var pi = exports.pi(precision + 2);\n  var tau = exports.tau(precision);\n  if (x.abs().lte(pi.toDP(x.dp()))) {\n    return [x, false];\n  }\n\n  var Big = x.constructor;\n  // Catch if input is tau multiple using pi's precision\n  if (x.div(pi.toDP(x.dp())).toNumber() % 2 == 0) {\n    return [new Big(mode ^ 1), true];\n  }\n\n  var y = x.mod(tau);\n\n  // Catch if tau multiple with tau's precision\n  if (y.toDP(x.dp(), 1).isZero()) {\n    return [new Big(mode ^ 1), true];\n  }\n\n  if (y.gt(pi)) {\n    if (mode) {\n      // sin(x + pi) = -sin(x)\n      y = y.minus(pi);\n      y.s = -y.s;\n    } else {\n      // cos(x) = cos(tau - x)\n      y = tau.minus(y);\n    }\n  }\n\n  y.constructor = Big;\n  return [y, false];\n}\n\n/**\n * Convert from sine to cosine\n *\n * |cos(x)| = sqrt(1 - sin(x)^2)\n *\n * @param {BigNumber} sine of x\n * @returns {BigNumber} sine as cosine\n */\nfunction sinToCos(sinVal) {\n  var Big = sinVal.constructor;\n  var precision = Big.precision;\n  Big.config({precision: precision + 2});\n\n  var ret = Big.ONE.minus(sinVal.times(sinVal)).sqrt();\n\n  Big.config({precision: precision});\n  return ret.toDP(precision - 1);\n}\n\n\n/************************************\n *         Format functions         *\n ************************************/\n\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {Number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {String} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {Number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential' and\n *                                          'auto', `precision` defines the total\n *                                          number of significant digits returned\n *                                          and is undefined by default.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point, and is 0 by default.\n *                     {Object} exponential An object containing two parameters,\n *                                          {Number} lower and {Number} upper,\n *                                          used by notation 'auto' to determine\n *                                          when to return exponential notation.\n *                                          Default values are `lower=1e-3` and\n *                                          `upper=1e5`.\n *                                          Only applicable for notation `auto`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4);                                        // '6.4'\n *    format(1240000);                                    // '1.24e6'\n *    format(1/3);                                        // '0.3333333333333333'\n *    format(1/3, 3);                                     // '0.333'\n *    format(21385, 2);                                   // '21000'\n *    format(12.071, {notation: 'fixed'});                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2});  // '2.30'\n *    format(52.8,   {notation: 'exponential'});          // '5.28e+1'\n *\n * @param {BigNumber} value\n * @param {Object | Function | Number} [options]\n * @return {String} str The formatted value\n */\nexports.format = function(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  }\n\n  // handle special cases\n  if (!value.isFinite()) {\n    return value.isNaN() ? 'NaN' : (value.gt(0) ? 'Infinity' : '-Infinity');\n  }\n\n  // default values for options\n  var notation = 'auto';\n  var precision = undefined;\n\n  if (options !== undefined) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    }\n\n    // determine precision from options\n    if (isNumber(options)) {\n      precision = options;\n    }\n    else if (options.precision) {\n      precision = options.precision;\n    }\n  }\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return exports.toFixed(value, precision);\n\n    case 'exponential':\n      return exports.toExponential(value, precision);\n\n    case 'auto':\n      // determine lower and upper bound for exponential notation.\n        // TODO: implement support for upper and lower to be BigNumbers themselves\n      var lower = 1e-3;\n      var upper = 1e5;\n      if (options && options.exponential) {\n        if (options.exponential.lower !== undefined) {\n          lower = options.exponential.lower;\n        }\n        if (options.exponential.upper !== undefined) {\n          upper = options.exponential.upper;\n        }\n      }\n\n      // adjust the configuration of the BigNumber constructor (yeah, this is quite tricky...)\n      var oldConfig = {\n        toExpNeg: value.constructor.toExpNeg,\n        toExpPos: value.constructor.toExpPos\n      };\n\n      value.constructor.config({\n        toExpNeg: Math.round(Math.log(lower) / Math.LN10),\n        toExpPos: Math.round(Math.log(upper) / Math.LN10)\n      });\n\n      // handle special case zero\n      if (value.isZero()) return '0';\n\n      // determine whether or not to output exponential notation\n      var str;\n      var abs = value.abs();\n      if (abs.gte(lower) && abs.lt(upper)) {\n        // normal number notation\n        str = value.toSignificantDigits(precision).toFixed();\n      }\n      else {\n        // exponential notation\n        str = exports.toExponential(value, precision);\n      }\n\n      // remove trailing zeros after the decimal point\n      return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        var digits = arguments[2];\n        var e = arguments[4];\n        return (digits !== '.') ? digits + e : e;\n      });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' +\n          'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n};\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {Number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\nexports.toExponential = function(value, precision) {\n  if (precision !== undefined) {\n    return value.toExponential(precision - 1); // Note the offset of one\n  }\n  else {\n    return value.toExponential();\n  }\n};\n\n/**\n * Format a number with fixed notation.\n * @param {BigNumber} value\n * @param {Number} [precision=0]        Optional number of decimals after the\n *                                      decimal point. Zero by default.\n */\nexports.toFixed = function(value, precision) {\n  return value.toFixed(precision || 0);\n  // Note: the (precision || 0) is needed as the toFixed of BigNumber has an\n  // undefined default precision instead of 0.\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/util/bignumber.js\n ** module id = 189\n ** module chunks = 0\n **/","'use strict';\n\nvar number = require('./number'),\n    string = require('./string'),\n    object = require('./object'),\n    types = require('./types'),\n\n    DimensionError = require('../error/DimensionError'),\n    IndexError = require('../error/IndexError'),\n\n    isArray = Array.isArray;\n\n/**\n * Calculate the size of a multi dimensional array.\n * @param {Array} x\n * @Return {Number[]} size\n * @private\n */\nfunction _size(x) {\n  var size = [];\n\n  while (isArray(x)) {\n    size.push(x.length);\n    x = x[0];\n  }\n\n  return size;\n}\n\n/**\n * Calculate the size of a multi dimensional array.\n * All elements in the array are checked for matching dimensions using the\n * method validate\n * @param {Array} x\n * @Return {Number[]} size\n * @throws RangeError\n */\nexports.size = function(x) {\n  // calculate the size\n  var s = _size(x);\n\n  // verify the size\n  exports.validate(x, s);\n  // TODO: don't validate here? only in a Matrix constructor?\n\n  return s;\n};\n\n/**\n * Recursively validate whether each element in a multi dimensional array\n * has a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {Number[]} size  Array with the size of each dimension\n * @param {Number} dim   Current dimension\n * @throws DimensionError\n * @private\n */\nfunction _validate(array, size, dim) {\n  var i;\n  var len = array.length;\n\n  if (len != size[dim]) {\n    throw new DimensionError(len, size[dim]);\n  }\n\n  if (dim < size.length - 1) {\n    // recursively validate each child array\n    var dimNext = dim + 1;\n    for (i = 0; i < len; i++) {\n      var child = array[i];\n      if (!isArray(child)) {\n        throw new DimensionError(size.length - 1, size.length, '<');\n      }\n      _validate(array[i], size, dimNext);\n    }\n  }\n  else {\n    // last dimension. none of the childs may be an array\n    for (i = 0; i < len; i++) {\n      if (isArray(array[i])) {\n        throw new DimensionError(size.length + 1, size.length, '>');\n      }\n    }\n  }\n}\n\n/**\n * Validate whether each element in a multi dimensional array has\n * a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {Number[]} size  Array with the size of each dimension\n * @throws DimensionError\n */\nexports.validate = function(array, size) {\n  var isScalar = (size.length == 0);\n  if (isScalar) {\n    // scalar\n    if (isArray(array)) {\n      throw new DimensionError(array.length, 0);\n    }\n  }\n  else {\n    // array\n    _validate(array, size, 0);\n  }\n};\n\n/**\n * Test whether index is an integer number with index >= 0 and index < length\n * @param {Number} index    Zero-based index\n * @param {Number} [length] Length of the array\n */\nexports.validateIndex = function(index, length) {\n  if (!number.isNumber(index) || !number.isInteger(index)) {\n    throw new TypeError('Index must be an integer (value: ' + index + ')');\n  }\n  if (index < 0) {\n    throw new IndexError(index);\n  }\n  if (length !== undefined && index >= length) {\n    throw new IndexError(index, length);\n  }\n};\n\n// a constant used to specify an undefined defaultValue\nexports.UNINITIALIZED = {};\n\n/**\n * Resize a multi dimensional array. The resized array is returned.\n * @param {Array} array         Array to be resized\n * @param {Array.<Number>} size Array with the size of each dimension\n * @param {*} [defaultValue=0]  Value to be filled in in new entries,\n *                              zero by default. To leave new entries undefined,\n *                              specify array.UNINITIALIZED as defaultValue\n * @return {Array} array         The resized array\n */\nexports.resize = function(array, size, defaultValue) {\n  // TODO: add support for scalars, having size=[] ?\n\n  // check the type of the arguments\n  if (!isArray(array) || !isArray(size)) {\n    throw new TypeError('Array expected');\n  }\n  if (size.length === 0) {\n    throw new Error('Resizing to scalar is not supported');\n  }\n\n  // check whether size contains positive integers\n  size.forEach(function (value) {\n    if (!number.isNumber(value) || !number.isInteger(value) || value < 0) {\n      throw new TypeError('Invalid size, must contain positive integers ' +\n          '(size: ' + string.format(size) + ')');\n    }\n  });\n\n  // recursively resize the array\n  var _defaultValue = (defaultValue !== undefined) ? defaultValue : 0;\n  _resize(array, size, 0, _defaultValue);\n\n  return array;\n};\n\n/**\n * Recursively resize a multi dimensional array\n * @param {Array} array         Array to be resized\n * @param {Number[]} size       Array with the size of each dimension\n * @param {Number} dim          Current dimension\n * @param {*} [defaultValue]    Value to be filled in in new entries,\n *                              undefined by default.\n * @private\n */\nfunction _resize (array, size, dim, defaultValue) {\n  var i;\n  var elem;\n  var oldLen = array.length;\n  var newLen = size[dim];\n  var minLen = Math.min(oldLen, newLen);\n\n  // apply new length\n  array.length = newLen;\n\n  if (dim < size.length - 1) {\n    // non-last dimension\n    var dimNext = dim + 1;\n\n    // resize existing child arrays\n    for (i = 0; i < minLen; i++) {\n      // resize child array\n      elem = array[i];\n      if (!isArray(elem)) {\n        elem = [elem]; // add a dimension\n        array[i] = elem;\n      }\n      _resize(elem, size, dimNext, defaultValue);\n    }\n\n    // create new child arrays\n    for (i = minLen; i < newLen; i++) {\n      // get child array\n      elem = [];\n      array[i] = elem;\n\n      // resize new child array\n      _resize(elem, size, dimNext, defaultValue);\n    }\n  }\n  else {\n    // last dimension\n\n    // remove dimensions of existing values\n    for (i = 0; i < minLen; i++) {\n      while (isArray(array[i])) {\n        array[i] = array[i][0];\n      }\n    }\n\n    if(defaultValue !== exports.UNINITIALIZED) {\n      // fill new elements with the default value\n      for (i = minLen; i < newLen; i++) {\n        array[i] = object.clone(defaultValue);\n      }\n    }\n  }\n}\n\n/**\n * Squeeze a multi dimensional array\n * @param {Array} array\n * @param {Array} [size]\n * @returns {Array} returns the array itself\n * @private\n */\nexports.squeeze = function(array, size) {\n  var s = size || exports.size(array);\n\n  // squeeze outer dimensions\n  while (isArray(array) && array.length === 1) {\n    array = array[0];\n    s.shift();\n  }\n\n  // find the first dimension to be squeezed\n  var dims = s.length;\n  while (s[dims - 1] === 1) {\n    dims--;\n  }\n\n  // squeeze inner dimensions\n  if (dims < s.length) {\n    array = _squeeze(array, dims, 0);\n    s.length = dims;\n  }\n\n  return array;\n};\n\n/**\n * Recursively squeeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _squeeze (array, dims, dim) {\n  var i, ii;\n\n  if (dim < dims) {\n    var next = dim + 1;\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _squeeze(array[i], dims, next);\n    }\n  }\n  else {\n    while (isArray(array)) {\n      array = array[0];\n    }\n  }\n\n  return array;\n}\n\n/**\n * Unsqueeze a multi dimensional array: add dimensions when missing\n * @param {Array} array\n * @param {Number} dims     Desired number of dimensions of the array\n * @param {Number} [outer]  Number of outer dimensions to be added\n * @param {Array} [size]    Current size of array\n * @returns {Array} returns the array itself\n * @private\n */\nexports.unsqueeze = function(array, dims, outer, size) {\n  var s = size || exports.size(array);\n\n  // unsqueeze outer dimensions\n  if (outer) {\n    for (var i = 0; i < outer; i++) {\n      array = [array];\n      s.unshift(1);\n    }\n  }\n\n  // unsqueeze inner dimensions\n  array = _unsqueeze(array, dims, 0);\n  while (s.length < dims) {\n    s.push(1);\n  }\n\n  return array;\n};\n\n/**\n * Recursively unsqueeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _unsqueeze (array, dims, dim) {\n  var i, ii;\n\n  if (isArray(array)) {\n    var next = dim + 1;\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _unsqueeze(array[i], dims, next);\n    }\n  }\n  else {\n    for (var d = dim; d < dims; d++) {\n      array = [array];\n    }\n  }\n\n  return array;\n}\n/**\n * Flatten a multi dimensional array, put all elements in a one dimensional\n * array\n * @param {Array} array   A multi dimensional array\n * @return {Array}        The flattened array (1 dimensional)\n * @private\n */\nexports.flatten = function(array) {\n  var flat = array,\n      isArray = Array.isArray;\n\n  while (isArray(flat[0])) {\n    var next = [];\n    for (var i = 0, ii = flat.length; i < ii; i++) {\n      next = next.concat.apply(next, flat[i]);\n    }\n    flat = next;\n  }\n\n  return flat;\n};\n\n/**\n * Convert function arguments to an array.\n * @param {Arguments} args\n * @returns {Array} array\n */\nexports.argsToArray = function(args) {\n  var array = [];\n  for (var i = 0, len = args.length; i < len; i++) {\n    array[i] = args[i];\n  }\n  return array;\n};\n\n/**\n * Test whether an object is an array\n * @param {*} value\n * @return {Boolean} isArray\n */\nexports.isArray = isArray;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/util/array.js\n ** module id = 190\n ** module chunks = 0\n **/","module.exports = '1.6.0';\n// Note: This file is automatically generated when building math.js.\n// Changes made in this file will be overwritten.\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/version.js\n ** module id = 191\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {String} fn     Function name\n * @param {Number} count  Actual argument count\n * @param {Number} min    Minimum required argument count\n * @param {Number} [max]  Maximum required argument count\n * @extends Error\n */\nfunction ArgumentsError(fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.fn = fn;\n  this.count = count;\n  this.min = min;\n  this.max = max;\n\n  this.message = 'Wrong number of arguments in function ' + fn +\n      ' (' + count + ' provided, ' +\n      min + ((max != undefined) ? ('-' + max) : '') + ' expected)';\n\n  this.stack = (new Error()).stack;\n}\n\nArgumentsError.prototype = new Error();\nArgumentsError.prototype.constructor = Error;\nArgumentsError.prototype.name = 'ArgumentsError';\n\nmodule.exports = ArgumentsError;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/error/ArgumentsError.js\n ** module id = 192\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Create a range error with the message:\n *     'Dimension mismatch (<actual size> != <expected size>)'\n * @param {number | number[]} actual        The actual size\n * @param {number | number[]} expected      The expected size\n * @param {string} [relation='!=']          Optional relation between actual\n *                                          and expected size: '!=', '<', etc.\n * @extends RangeError\n */\nfunction DimensionError(actual, expected, relation) {\n  if (!(this instanceof DimensionError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.actual   = actual;\n  this.expected = expected;\n  this.relation = relation;\n\n  this.message = 'Dimension mismatch (' +\n      (Array.isArray(actual) ? ('[' + actual.join(', ') + ']') : actual) +\n      ' ' + (this.relation || '!=') + ' ' +\n      (Array.isArray(expected) ? ('[' + expected.join(', ') + ']') : expected) +\n      ')';\n\n  this.stack = (new Error()).stack;\n}\n\nDimensionError.prototype = new RangeError();\nDimensionError.prototype.constructor = RangeError;\nDimensionError.prototype.name = 'DimensionError';\n\nmodule.exports = DimensionError;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/error/DimensionError.js\n ** module id = 193\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nfunction IndexError(index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.index = index;\n  if (arguments.length < 3) {\n    this.min = 0;\n    this.max = min;\n  }\n  else {\n    this.min = min;\n    this.max = max;\n  }\n\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n  }\n  else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n  }\n  else {\n    this.message = 'Index out of range (' + this.index + ')';\n  }\n\n  this.stack = (new Error()).stack;\n}\n\nIndexError.prototype = new RangeError();\nIndexError.prototype.constructor = RangeError;\nIndexError.prototype.name = 'IndexError';\n\nmodule.exports = IndexError;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/error/IndexError.js\n ** module id = 194\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Create a TypeError with message:\n *      'Function <fn> does not support a parameter of type <type>';\n * @param {String} fn     Function name\n * @param {*...} [types]  The types of the function arguments\n * @extends TypeError\n */\nfunction UnsupportedTypeError(fn, types) {\n  if (!(this instanceof UnsupportedTypeError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.fn = fn;\n  this.types = Array.prototype.splice.call(arguments, 1);\n\n  if (!fn) {\n    this.message = 'Unsupported type of argument';\n  }\n  else {\n    if (this.types.length == 0) {\n      this.message = 'Unsupported type of argument in function ' + fn;\n    }\n    else {\n      this.message = 'Function ' + fn + '(' + this.types.join(', ') + ') not supported';\n    }\n  }\n\n  this.stack = (new Error()).stack;\n}\n\nUnsupportedTypeError.prototype = new TypeError();\nUnsupportedTypeError.prototype.constructor = TypeError;\nUnsupportedTypeError.prototype.name = 'UnsupportedTypeError';\n\nmodule.exports = UnsupportedTypeError;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/error/UnsupportedTypeError.js\n ** module id = 195\n ** module chunks = 0\n **/","'use strict';\n\nexports.array = require('./array');\nexports['boolean'] = require('./boolean');\nexports.number = require('./number');\nexports.bignumber = require('./bignumber');\nexports.object = require('./object');\nexports.string = require('./string');\nexports.types = require('./types');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/util/index.js\n ** module id = 196\n ** module chunks = 0\n **/","'use strict';\n\nvar number = require('./number');\nvar bignumber = require('./bignumber');\nvar BigNumber = require('../type/BigNumber');\n\n/**\n * Test whether value is a String\n * @param {*} value\n * @return {Boolean} isString\n */\nexports.isString = function(value) {\n  return (value instanceof String) || (typeof value == 'string');\n};\n\n/**\n * Check if a text ends with a certain string.\n * @param {String} text\n * @param {String} search\n */\nexports.endsWith = function(text, search) {\n  var start = text.length - search.length;\n  var end = text.length;\n  return (text.substring(start, end) === search);\n};\n\n/**\n * Format a value of any type into a string.\n *\n * Usage:\n *     math.format(value)\n *     math.format(value, precision)\n *\n * If value is a function, the returned string is 'function' unless the function\n * has a property `description`, in that case this properties value is returned.\n *\n * Example usage:\n *     math.format(2/7);                // '0.2857142857142857'\n *     math.format(math.pi, 3);         // '3.14'\n *     math.format(new Complex(2, 3));  // '2 + 3i'\n *     math.format('hello');            // '\"hello\"'\n *\n * @param {*} value             Value to be stringified\n * @param {Object | Number | Function} [options]  Formatting options. See\n *                                                lib/util/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {String} str\n */\nexports.format = function(value, options) {\n  if (number.isNumber(value)) {\n    return number.format(value, options);\n  }\n\n  if (value instanceof BigNumber) {\n    return bignumber.format(value, options);\n  }\n\n  if (Array.isArray(value)) {\n    return formatArray(value, options);\n  }\n\n  if (exports.isString(value)) {\n    return '\"' + value + '\"';\n  }\n\n  if (typeof value === 'function') {\n    return value.syntax ? value.syntax + '' : 'function';\n  }\n\n  if (value instanceof Object) {\n    if (typeof value.format === 'function') {\n      return value.format(options);\n    }\n    else {\n      return value.toString();\n    }\n  }\n\n  return String(value);\n};\n\n/**\n * Recursively format an n-dimensional matrix\n * Example output: \"[[1, 2], [3, 4]]\"\n * @param {Array} array\n * @param {Object | Number | Function} [options]  Formatting options. See\n *                                                lib/util/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {String} str\n */\nfunction formatArray (array, options) {\n  if (Array.isArray(array)) {\n    var str = '[';\n    var len = array.length;\n    for (var i = 0; i < len; i++) {\n      if (i != 0) {\n        str += ', ';\n      }\n      str += formatArray(array[i], options);\n    }\n    str += ']';\n    return str;\n  }\n  else {\n    return exports.format(array, options);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/util/string.js\n ** module id = 197\n ** module chunks = 0\n **/","'use strict';\n\nvar Node = require('./Node'),\n    string = require('../../util/string'),\n\n    isArray = Array.isArray,\n    isNode = Node.isNode;\n\n/**\n * @constructor ArrayNode\n * @extends {Node}\n * Holds an 1-dimensional array with nodes\n * @param {Node[]} [nodes]   1 dimensional array with nodes\n */\nfunction ArrayNode(nodes) {\n  if (!(this instanceof ArrayNode)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.nodes = nodes || [];\n\n  // validate input\n  if (!isArray(this.nodes) || !this.nodes.every(isNode)) {\n    throw new TypeError('Array containing Nodes expected');\n  }\n}\n\nArrayNode.prototype = new Node();\n\nArrayNode.prototype.type = 'ArrayNode';\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          or constants globally available for the compiled\n *                          expression\n * @private\n */\nArrayNode.prototype._compile = function (defs) {\n  var asMatrix = (defs.math.config().matrix !== 'array');\n\n  var nodes = this.nodes.map(function (node) {\n    return node._compile(defs);\n  });\n\n  return (asMatrix ? 'math.matrix([' : '[') +\n      nodes.join(',') +\n      (asMatrix ? '])' : ']');\n};\n\n/**\n * Execute a callback for each of the child nodes of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nArrayNode.prototype.forEach = function (callback) {\n  for (var i = 0; i < this.nodes.length; i++) {\n    var node = this.nodes[i];\n    callback(node, 'nodes[' + i + ']', this);\n  }\n};\n\n/**\n * Create a new ArrayNode having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node): Node} callback\n * @returns {ArrayNode} Returns a transformed copy of the node\n */\nArrayNode.prototype.map = function (callback) {\n  var nodes = [];\n  for (var i = 0; i < this.nodes.length; i++) {\n    nodes[i] = this._ifNode(callback(this.nodes[i], 'nodes[' + i + ']', this));\n  }\n  return new ArrayNode(nodes);\n};\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {ArrayNode}\n */\nArrayNode.prototype.clone = function() {\n  return new ArrayNode(this.nodes.slice(0));\n};\n\n/**\n * Get string representation\n * @return {String} str\n * @override\n */\nArrayNode.prototype.toString = function() {\n  return string.format(this.nodes);\n};\n\n/**\n * Get LaTeX representation\n * @param {Object|function} callback(s)\n * @param {String} type\n * @return {String} str\n */\nArrayNode.prototype._toTex = function(callbacks) {\n  this.latexType = this.latexType || 'bmatrix';\n  var s = '\\\\begin{' + this.latexType + '}';\n\n  this.nodes.forEach(function(node) {\n    if (node.nodes) {\n      s += node.nodes.map(function(childNode) {\n        return childNode.toTex(callbacks);\n      }).join('&');\n    }\n    else {\n      s += node.toTex(callbacks);\n    }\n\n    // new line\n    s += '\\\\\\\\';\n  });\n  s += '\\\\end{' + this.latexType + '}';\n  return s;\n};\n\nmodule.exports = ArrayNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/ArrayNode.js\n ** module id = 198\n ** module chunks = 0\n **/","'use strict';\n\nvar Node = require('./Node'),\n    ArrayNode = require('./ArrayNode'),\n\n    keywords = require('../keywords'),\n    operators = require('../operators'),\n\n    latex = require('../../util/latex'),\n    isString = require('../../util/string').isString;\n\n/**\n * @constructor AssignmentNode\n * @extends {Node}\n * Define a symbol, like \"a = 3.2\"\n *\n * @param {String} name       Symbol name\n * @param {Node} expr         The expression defining the symbol\n */\nfunction AssignmentNode(name, expr) {\n  if (!(this instanceof AssignmentNode)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  // validate input\n  if (!isString(name))          throw new TypeError('String expected for parameter \"name\"');\n  if (!(expr instanceof Node))  throw new TypeError('Node expected for parameter \"expr\"');\n  if (name in keywords)         throw new Error('Illegal symbol name, \"'  + name +  '\" is a reserved keyword');\n\n  this.name = name;\n  this.expr = expr;\n}\n\nAssignmentNode.prototype = new Node();\n\nAssignmentNode.prototype.type = 'AssignmentNode';\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          or constants globally available for the compiled\n *                          expression\n * @private\n */\nAssignmentNode.prototype._compile = function (defs) {\n  return 'scope[\"' + this.name + '\"] = ' + this.expr._compile(defs) + '';\n};\n\n\n/**\n * Execute a callback for each of the child nodes of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nAssignmentNode.prototype.forEach = function (callback) {\n  callback(this.expr, 'expr', this);\n};\n\n/**\n * Create a new AssignmentNode having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node): Node} callback\n * @returns {AssignmentNode} Returns a transformed copy of the node\n */\nAssignmentNode.prototype.map = function (callback) {\n  return new AssignmentNode(this.name, this._ifNode(callback(this.expr, 'expr', this)));\n};\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {AssignmentNode}\n */\nAssignmentNode.prototype.clone = function() {\n  return new AssignmentNode(this.name, this.expr);\n};\n\n/**\n * Get string representation\n * @return {String}\n */\nAssignmentNode.prototype.toString = function() {\n  var precedence = operators.getPrecedence(this);\n  var exprPrecedence = operators.getPrecedence(this.expr);\n  var expr = this.expr.toString();\n  if ((exprPrecedence !== null) && (exprPrecedence <= precedence)) {\n    expr = '(' + expr + ')';\n  }\n  return this.name + ' = ' + expr;\n};\n\n/**\n * Get LaTeX representation\n * @param {Object|function} callback(s)\n * @return {String}\n */\nAssignmentNode.prototype._toTex = function(callbacks) {\n  var precedence = operators.getPrecedence(this);\n  var exprPrecedence = operators.getPrecedence(this.expr);\n\n  var expr = this.expr.toTex(callbacks);\n  if ((exprPrecedence !== null) && (exprPrecedence <= precedence)) {\n    expr = '\\\\left(' + expr + '\\\\right)';\n  }\n\n  return latex.toSymbol(this.name) + ':=' + expr;\n};\n\nmodule.exports = AssignmentNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/AssignmentNode.js\n ** module id = 199\n ** module chunks = 0\n **/","'use strict';\n\nvar Node = require('./Node');\nvar ResultSet = require('../../type/ResultSet');\nvar isBoolean = require('../../util/boolean').isBoolean;\n\n/**\n * @constructor BlockNode\n * @extends {Node}\n * Holds a set with blocks\n * @param {Array.<{node: Node} | {node: Node, visible: boolean}>} blocks\n *            An array with blocks, where a block is constructed as an Object\n *            with properties block, which is a Node, and visible, which is\n *            a boolean. The property visible is optional and is true by default\n */\nfunction BlockNode(blocks) {\n  if (!(this instanceof BlockNode)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  // validate input, copy blocks\n  if (!Array.isArray(blocks)) throw new Error('Array expected');\n  this.blocks = blocks.map(function (block) {\n    var node    = block && block.node;\n    var visible = block && block.visible !== undefined ? block.visible : true;\n\n    if (!(node instanceof Node))  throw new TypeError('Property \"node\" must be a Node');\n    if (!isBoolean(visible))      throw new TypeError('Property \"visible\" must be a boolean');\n\n    return {\n      node: node,\n      visible: visible\n    }\n  });\n}\n\nBlockNode.prototype = new Node();\n\nBlockNode.prototype.type = 'BlockNode';\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          or constants globally available for the compiled\n *                          expression\n * @return {String} js\n * @private\n */\nBlockNode.prototype._compile = function (defs) {\n  defs.ResultSet = ResultSet;\n  var blocks = this.blocks.map(function (param) {\n    var js = param.node._compile(defs);\n    if (param.visible) {\n      return 'results.push(' + js + ');';\n    }\n    else {\n      return js + ';';\n    }\n  });\n\n  return '(function () {' +\n      'var results = [];' +\n      blocks.join('') +\n      'return new ResultSet(results);' +\n      '})()';\n};\n\n/**\n * Execute a callback for each of the child blocks of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nBlockNode.prototype.forEach = function (callback) {\n  for (var i = 0; i < this.blocks.length; i++) {\n    callback(this.blocks[i].node, 'blocks[' + i + '].node', this);\n  }\n};\n\n/**\n * Create a new BlockNode having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node): Node} callback\n * @returns {BlockNode} Returns a transformed copy of the node\n */\nBlockNode.prototype.map = function (callback) {\n  var blocks = [];\n  for (var i = 0; i < this.blocks.length; i++) {\n    var block = this.blocks[i];\n    var node = this._ifNode(callback(block.node, 'blocks[' + i + '].node', this));\n    blocks[i] = {\n      node: node,\n      visible: block.visible\n    };\n  }\n  return new BlockNode(blocks);\n};\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {BlockNode}\n */\nBlockNode.prototype.clone = function() {\n  var blocks = this.blocks.map(function(block) {\n    return {\n      node: block.node,\n      visible: block.visible\n    };\n  });\n\n  return new BlockNode(blocks);\n};\n\n/**\n * Get string representation\n * @return {String} str\n * @override\n */\nBlockNode.prototype.toString = function() {\n  return this.blocks.map(function (param) {\n    return param.node.toString() + (param.visible ? '' : ';');\n  }).join('\\n');\n};\n\n/**\n * Get LaTeX representation\n * @param {Object|function} callback(s)\n * @return {String} str\n */\nBlockNode.prototype._toTex = function(callbacks) {\n  return this.blocks.map(function (param) {\n    return param.node.toTex(callbacks) + (param.visible ? '' : ';');\n  }).join('\\n');\n};\n\nmodule.exports = BlockNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/BlockNode.js\n ** module id = 200\n ** module chunks = 0\n **/","'use strict';\n\nvar Node = require('./Node');\nvar latex = require('../../util/latex');\nvar BigNumber = require('../../type/BigNumber');\nvar Complex = require('../../type/Complex');\nvar Unit = require('../../type/Unit');\nvar util = require('../../util');\nvar operators = require('../operators');\nvar isString = util.string.isString;\nvar isNumber = util.number.isNumber;\nvar isBoolean = util['boolean'].isBoolean;\n\n/**\n * A lazy evaluating conditional operator: 'condition ? trueExpr : falseExpr'\n *\n * @param {Node} condition   Condition, must result in a boolean\n * @param {Node} trueExpr    Expression evaluated when condition is true\n * @param {Node} falseExpr   Expression evaluated when condition is true\n *\n * @constructor ConditionalNode\n * @extends {Node}\n */\nfunction ConditionalNode (condition, trueExpr, falseExpr) {\n  if (!(this instanceof ConditionalNode)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n  if (!(condition instanceof Node)) throw new TypeError('Parameter condition must be a Node');\n  if (!(trueExpr instanceof Node))  throw new TypeError('Parameter trueExpr must be a Node');\n  if (!(falseExpr instanceof Node)) throw new TypeError('Parameter falseExpr must be a Node');\n\n  this.condition = condition;\n  this.trueExpr = trueExpr;\n  this.falseExpr = falseExpr;\n}\n\nConditionalNode.prototype = new Node();\n\nConditionalNode.prototype.type = 'ConditionalNode';\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          or constants globally available for the compiled\n *                          expression\n * @return {String} js\n * @private\n */\nConditionalNode.prototype._compile = function(defs) {\n  /**\n   * Test whether a condition is met\n   * @param {*} condition\n   * @returns {boolean} true if condition is true or non-zero, else false\n   */\n  defs.testCondition = function (condition) {\n    if (isNumber(condition) || isBoolean(condition) || isString(condition)) {\n      return condition ? true : false;\n    }\n\n    if (condition instanceof BigNumber) {\n      return condition.isZero() ? false : true;\n    }\n\n    if (condition instanceof Complex) {\n      return (condition.re || condition.im) ? true : false;\n    }\n\n    if (condition instanceof Unit) {\n      return condition.value ? true : false;\n    }\n\n    if (condition === null || condition === undefined) {\n      return false;\n    }\n\n    throw new TypeError('Unsupported type of condition \"' + defs.math['typeof'](condition) + '\"');\n  };\n\n  return (\n      'testCondition(' + this.condition._compile(defs) + ') ? ' +\n      '( ' + this.trueExpr._compile(defs) + ') : ' +\n      '( ' + this.falseExpr._compile(defs) + ')'\n      );\n};\n\n/**\n * Execute a callback for each of the child nodes of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nConditionalNode.prototype.forEach = function (callback) {\n  callback(this.condition, 'condition', this);\n  callback(this.trueExpr, 'trueExpr', this);\n  callback(this.falseExpr, 'falseExpr', this);\n};\n\n/**\n * Create a new ConditionalNode having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node): Node} callback\n * @returns {ConditionalNode} Returns a transformed copy of the node\n */\nConditionalNode.prototype.map = function (callback) {\n  return new ConditionalNode(\n      this._ifNode(callback(this.condition, 'condition', this)),\n      this._ifNode(callback(this.trueExpr, 'trueExpr', this)),\n      this._ifNode(callback(this.falseExpr, 'falseExpr', this))\n  );\n};\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {ConditionalNode}\n */\nConditionalNode.prototype.clone = function() {\n  return new ConditionalNode(this.condition, this.trueExpr, this.falseExpr);\n};\n\n/**\n * Get string representation\n * @return {String} str\n */\nConditionalNode.prototype.toString = function() {\n  var precedence = operators.getPrecedence(this);\n\n  //Enclose Arguments in parentheses if they are an OperatorNode\n  //or have lower or equal precedence\n  //NOTE: enclosing all OperatorNodes in parentheses is a decision\n  //purely based on aesthetics and readability\n  var condition = this.condition.toString();\n  var conditionPrecedence = operators.getPrecedence(this.condition);\n  if ((this.condition.type === 'OperatorNode')\n      || ((conditionPrecedence !== null) && (conditionPrecedence <= precedence))) {\n    condition = '(' + condition + ')';\n  }\n\n  var trueExpr = this.trueExpr.toString();\n  var truePrecedence = operators.getPrecedence(this.trueExpr);\n  if ((this.trueExpr.type === 'OperatorNode')\n      || ((truePrecedence !== null) && (truePrecedence <= precedence))) {\n    trueExpr = '(' + trueExpr + ')';\n  }\n\n  var falseExpr = this.falseExpr.toString();\n  var falsePrecedence = operators.getPrecedence(this.falseExpr);\n  if ((this.falseExpr.type === 'OperatorNode')\n      || ((falsePrecedence !== null) && (falsePrecedence <= precedence))) {\n    falseExpr = '(' + falseExpr + ')';\n  }\n  return condition + ' ? ' + trueExpr + ' : ' + falseExpr;\n};\n\n/**\n * Get LaTeX representation\n * @param {Object|function} callback(s)\n * @return {String} str\n */\nConditionalNode.prototype._toTex = function(callbacks) {\n  return '\\\\left\\\\{\\\\begin{array}{l l}{'\n    + this.trueExpr.toTex(callbacks) + '}, &\\\\quad{\\\\text{if}\\\\;'\n    + this.condition.toTex(callbacks)\n    + '}\\\\\\\\{' + this.falseExpr.toTex(callbacks)\n    + '}, &\\\\quad{\\\\text{otherwise}}\\\\end{array}\\\\right.';\n};\n\nmodule.exports = ConditionalNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/ConditionalNode.js\n ** module id = 201\n ** module chunks = 0\n **/","'use strict';\n\nvar Node = require('./Node');\nvar BigNumber = require('../../type/BigNumber');\nvar type = require('../../util/types').type;\nvar isString = require('../../util/string').isString;\n\n/**\n * A ConstantNode holds a constant value like a number or string. A ConstantNode\n * stores a stringified version of the value and uses this to compile to\n * JavaScript.\n *\n * In case of a stringified number as input, this may be compiled to a BigNumber\n * when the math instance is configured for BigNumbers.\n *\n * Usage:\n *\n *     // stringified values with type\n *     new ConstantNode('2.3', 'number');\n *     new ConstantNode('true', 'boolean');\n *     new ConstantNode('hello', 'string');\n *\n *     // non-stringified values, type will be automatically detected\n *     new ConstantNode(2.3);\n *     new ConstantNode('hello');\n *\n * @param {String | Number | Boolean | null | undefined} value\n *                            When valueType is provided, value must contain\n *                            an uninterpreted string representing the value.\n *                            When valueType is undefined, value can be a\n *                            number, string, boolean, null, or undefined, and\n *                            the type will be determined automatically.\n * @param {String} [valueType]  The type of value. Choose from 'number', 'string',\n *                              'boolean', 'undefined', 'null'\n * @constructor ConstantNode\n * @extends {Node}\n */\nfunction ConstantNode(value, valueType) {\n  if (!(this instanceof ConstantNode)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (valueType) {\n    if (!isString(valueType)) {\n      throw new TypeError('String expected for parameter \"valueType\"');\n    }\n    if (!isString(value)){\n      throw new TypeError('String expected for parameter \"value\"');\n    }\n\n    this.value = value;\n    this.valueType = valueType;\n  }\n  else {\n    // stringify the value and determine the type\n    this.value = value + '';\n    this.valueType = type(value);\n  }\n\n  if (!SUPPORTED_TYPES[this.valueType]) {\n    throw new TypeError('Unsupported type of value \"' + this.valueType + '\"');\n  }\n}\n\nvar SUPPORTED_TYPES = {\n  'number': true,\n  'string': true,\n  'boolean': true,\n  'undefined': true,\n  'null': true\n};\n\nConstantNode.prototype = new Node();\n\nConstantNode.prototype.type = 'ConstantNode';\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          or constants globally available for the compiled\n *                          expression\n * @return {String} js\n * @private\n */\nConstantNode.prototype._compile = function (defs) {\n  switch (this.valueType) {\n    case 'number':\n      if (defs.math.config().number === 'bignumber') {\n        return 'math.bignumber(\"' + this.value + '\")';\n      }\n      else {\n        // remove leading zeros like '003.2' which are not allowed by JavaScript\n        return this.value.replace(/^(0*)[0-9]/, function (match, zeros) {\n          return match.substring(zeros.length);\n        });\n      }\n\n    case 'string':\n      return '\"' + this.value + '\"';\n\n    case 'boolean':\n      return this.value;\n\n    case 'undefined':\n      return this.value;\n\n    case 'null':\n      return this.value;\n\n    default:\n        // TODO: move this error to the constructor?\n      throw new TypeError('Unsupported type of constant \"' + this.valueType + '\"');\n  }\n};\n\n/**\n * Execute a callback for each of the child nodes of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nConstantNode.prototype.forEach = function (callback) {\n  // nothing to do, we don't have childs\n};\n\n\n/**\n * Create a new ConstantNode having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node) : Node} callback\n * @returns {ConstantNode} Returns a clone of the node\n */\nConstantNode.prototype.map = function (callback) {\n  return this.clone();\n};\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {ConstantNode}\n */\nConstantNode.prototype.clone = function() {\n  return new ConstantNode(this.value, this.valueType);\n};\n\n/**\n * Get string representation\n * @return {String} str\n */\nConstantNode.prototype.toString = function() {\n  switch (this.valueType) {\n    case 'string':\n      return '\"' + this.value + '\"';\n\n    default:\n      return this.value;\n  }\n};\n\n/**\n * Get LaTeX representation\n * @param {Object|function} callback(s)\n * @return {String} str\n */\nConstantNode.prototype._toTex = function(callbacks) {\n  var value = this.value,\n      index;\n  switch (this.valueType) {\n    case 'string':\n      return '\\\\text{' + value + '}';\n\n    case 'number':\n      index = value.toLowerCase().indexOf('e');\n      if (index !== -1) {\n        return value.substring(0, index) + '\\\\cdot10^{' +\n            value.substring(index + 1) + '}';\n      }\n      return value;\n\n    default:\n      return value;\n  }\n};\n\nmodule.exports = ConstantNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/ConstantNode.js\n ** module id = 202\n ** module chunks = 0\n **/","'use strict';\n\nvar Node = require('./Node.js');\nvar RangeNode = require('./RangeNode');\nvar SymbolNode = require('./SymbolNode');\n\nvar BigNumber = require('../../type/BigNumber');\nvar Range = require('../../type/Range');\n\nvar isNode = Node.isNode;\nvar isArray = Array.isArray;\n\n/**\n * @constructor IndexNode\n * @extends Node\n *\n * get a subset of a matrix\n *\n * @param {Node} object\n * @param {Node[]} ranges\n */\nfunction IndexNode (object, ranges) {\n  if (!(this instanceof IndexNode)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  // validate input\n  if (!(object instanceof Node)) throw new TypeError('Node expected for parameter \"object\"');\n  if (!isArray(ranges) || !ranges.every(isNode)) {\n    throw new TypeError('Array containing Nodes expected for parameter \"ranges\"');\n  }\n\n  this.object = object;\n  this.ranges = ranges;\n}\n\nIndexNode.prototype = new Node();\n\nIndexNode.prototype.type = 'IndexNode';\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          or constants globally available for the compiled\n *                          expression\n * @return {String} js\n * @private\n */\nIndexNode.prototype._compile = function (defs) {\n  return this.compileSubset(defs);\n};\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs           Object which can be used to define functions\n *                                or constants globally available for the\n *                                compiled expression\n * @param {String} [replacement]  If provided, the function returns\n *                                  \"math.subset(obj, math.index(...), replacement)\"\n *                                Else, the function returns\n *                                  \"math.subset(obj, math.index(...))\"\n * @return {String} js\n * @returns {string}\n */\nIndexNode.prototype.compileSubset = function(defs, replacement) {\n  // check whether any of the ranges expressions uses the context symbol 'end'\n  function test(node) {\n    return (node instanceof SymbolNode) && (node.name == 'end');\n  }\n\n  var someUseEnd = false;\n  var rangesUseEnd = this.ranges.map(function (range) {\n    var useEnd = range.filter(test).length > 0;\n    someUseEnd = useEnd ? useEnd : someUseEnd;\n    return useEnd;\n  });\n\n  // create a Range from start, step and end\n  defs.range = function (start, end, step) {\n    return new Range(\n            start instanceof BigNumber ? start.toNumber() : start,\n            end instanceof BigNumber ? end.toNumber() : end,\n            step instanceof BigNumber ? step.toNumber() : step\n    );\n  };\n\n  // TODO: implement support for bignumber (currently bignumbers are silently\n  //       reduced to numbers when changing the value to zero-based)\n\n  // TODO: Optimization: when the range values are ConstantNodes,\n  //       we can beforehand resolve the zero-based value\n\n  var ranges = this.ranges.map(function(range, i) {\n    var useEnd = rangesUseEnd[i];\n    if (range instanceof RangeNode) {\n      if (useEnd) {\n        defs.args.end = true;\n\n        // resolve end and create range\n        return '(function () {' +\n            '  var end = size[' + i + '];' +\n            '  return range(' +\n            '    ' + range.start._compile(defs) + ', ' +\n            '    ' + range.end._compile(defs) + ', ' +\n            '    ' + (range.step ? range.step._compile(defs) : '1') +\n            '  );' +\n            '})()';\n      }\n      else {\n        // create range\n        return 'range(' +\n            range.start._compile(defs) + ', ' +\n            range.end._compile(defs) + ', ' +\n            (range.step ? range.step._compile(defs) : '1') +\n            ')';\n      }\n    }\n    else {\n      if (useEnd) {\n        defs.args.end = true;\n\n        // resolve the parameter 'end'\n        return '(function () {' +\n            '  var end = size[' + i + '];' +\n            '  return ' + range._compile(defs) + ';' +\n            '})()'\n      }\n      else {\n        // just evaluate the expression\n        return range._compile(defs);\n      }\n    }\n  });\n\n  // if some parameters use the 'end' parameter, we need to calculate the size\n  if (someUseEnd) {\n    return '(function () {' +\n        '  var obj = ' + this.object._compile(defs) + ';' +\n        '  var size = math.size(obj).valueOf();' +\n        '  return math.subset(' +\n        '    obj, ' +\n        '    math.index(' + ranges.join(', ') + ')' +\n        '    ' + (replacement ? (', ' + replacement) : '') +\n        '  );' +\n        '})()';\n  }\n  else {\n    return 'math.subset(' +\n        this.object._compile(defs) + ',' +\n        'math.index(' + ranges.join(', ') + ')' +\n        (replacement ? (', ' + replacement) : '') +\n        ')';\n  }\n};\n\n/**\n * Execute a callback for each of the child nodes of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nIndexNode.prototype.forEach = function (callback) {\n  // object\n  callback(this.object, 'object', this);\n\n  // ranges\n  for (var i = 0; i < this.ranges.length; i++) {\n    callback(this.ranges[i], 'ranges[' + i + ']', this);\n  }\n};\n\n/**\n * Create a new IndexNode having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node): Node} callback\n * @returns {IndexNode} Returns a transformed copy of the node\n */\nIndexNode.prototype.map = function (callback) {\n  var object = this._ifNode(callback(this.object, 'object', this));\n\n  var ranges = [];\n  for (var i = 0; i < this.ranges.length; i++) {\n    ranges[i] = this._ifNode(callback(this.ranges[i], 'ranges[' + i + ']', this));\n  }\n\n  return new IndexNode(object, ranges);\n};\n\n/**\n * Get the name of the object linked to this IndexNode\n * @return {string} name\n */\nIndexNode.prototype.objectName = function() {\n  return this.object.name;\n};\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {IndexNode}\n */\nIndexNode.prototype.clone = function() {\n  return new IndexNode(this.object, this.ranges.slice(0));\n};\n\n/**\n * Get string representation\n * @return {String} str\n */\nIndexNode.prototype.toString = function() {\n  // format the parameters like \"[1, 0:5]\"\n  return this.object.toString() + '[' + this.ranges.join(', ') + ']';\n};\n\n/**\n * Get LaTeX representation\n * @param {Object|function} callback(s)\n * @return {String} str\n */\nIndexNode.prototype._toTex = function(callbacks) {\n  var ranges = this.ranges.map(function (range) {\n    return range.toTex(callbacks);\n  });\n  return this.object.toTex(callbacks) + '_{\\\\left[' + ranges.join(',') + '\\\\right]}';\n};\n\nmodule.exports = IndexNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/IndexNode.js\n ** module id = 203\n ** module chunks = 0\n **/","'use strict';\n\nvar Node = require('./Node');\nvar keywords = require('../keywords');\nvar latex = require('../../util/latex');\nvar operators = require('../operators');\nvar isString = require('../../util/string').isString;\nvar isArray = Array.isArray;\n\n/**\n * @constructor FunctionAssignmentNode\n * @extends {Node}\n * Function assignment\n *\n * @param {String} name           Function name\n * @param {String[]} params         Function parameter names\n * @param {Node} expr             The function expression\n */\nfunction FunctionAssignmentNode(name, params, expr) {\n  if (!(this instanceof FunctionAssignmentNode)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  // validate input\n  if (!isString(name)) throw new TypeError('String expected for parameter \"name\"');\n  if (!isArray(params) || !params.every(isString))  throw new TypeError('Array containing strings expected for parameter \"params\"');\n  if (!(expr instanceof Node)) throw new TypeError('Node expected for parameter \"expr\"');\n  if (name in keywords) throw new Error('Illegal function name, \"'  + name +  '\" is a reserved keyword');\n\n  this.name = name;\n  this.params = params;\n  this.expr = expr;\n}\n\nFunctionAssignmentNode.prototype = new Node();\n\nFunctionAssignmentNode.prototype.type = 'FunctionAssignmentNode';\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          or constants globally available for the compiled\n *                          expression\n * @return {String} js\n * @private\n */\nFunctionAssignmentNode.prototype._compile = function (defs) {\n  // add the function arguments to defs (used by SymbolNode and UpdateNode)\n  this.params.forEach(function (variable) {\n    defs.args[variable] = true;\n  });\n\n  return 'scope[\"' + this.name + '\"] = ' +\n      '  (function () {' +\n      '    var fn = function ' + this.name + '(' + this.params.join(',') + ') {' +\n      '      if (arguments.length != ' + this.params.length + ') {' +\n      // TODO: use util.error.ArgumentsError here?\n      // TODO: test arguments error\n      '        throw new SyntaxError(\"Wrong number of arguments in function ' + this.name + ' (\" + arguments.length + \" provided, ' + this.params.length + ' expected)\");' +\n      '      }' +\n      '      return ' + this.expr._compile(defs) + '' +\n      '    };' +\n      '    fn.syntax = \"' + this.name + '(' + this.params.join(', ') + ')\";' +\n      '    return fn;' +\n      '  })();';\n};\n\n/**\n * Execute a callback for each of the child nodes of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nFunctionAssignmentNode.prototype.forEach = function (callback) {\n  callback(this.expr, 'expr', this);\n};\n\n/**\n * Create a new FunctionAssignmentNode having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node): Node} callback\n * @returns {FunctionAssignmentNode} Returns a transformed copy of the node\n */\nFunctionAssignmentNode.prototype.map = function (callback) {\n  var expr = this._ifNode(callback(this.expr, 'expr', this));\n\n  return new FunctionAssignmentNode(this.name, this.params.slice(0), expr);\n};\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {FunctionAssignmentNode}\n */\nFunctionAssignmentNode.prototype.clone = function() {\n  return new FunctionAssignmentNode(this.name, this.params.slice(0), this.expr);\n};\n\n/**\n * get string representation\n * @return {String} str\n */\nFunctionAssignmentNode.prototype.toString = function() {\n  var precedence = operators.getPrecedence(this);\n  var exprPrecedence = operators.getPrecedence(this.expr);\n\n  var expr = this.expr.toString();\n  if ((exprPrecedence !== null) && (exprPrecedence <= precedence)) {\n    expr = '(' + expr + ')';\n  }\n  return 'function ' + this.name +\n      '(' + this.params.join(', ') + ') = ' + expr;\n};\n\n/**\n * get LaTeX representation\n * @param {Object|function} callback(s)\n * @return {String} str\n */\nFunctionAssignmentNode.prototype._toTex = function(callbacks) {\n  var precedence = operators.getPrecedence(this);\n  var exprPrecedence = operators.getPrecedence(this.expr);\n\n  var expr = this.expr.toTex(callbacks);\n  if ((exprPrecedence !== null) && (exprPrecedence <= precedence)) {\n    expr = '\\\\left(' + expr + '\\\\right)';\n  }\n\n  return latex.toSymbol(this.name) \n    + '\\\\left(' + this.params.map(latex.toSymbol).join(',') + '\\\\right):=' + expr;\n};\n\nmodule.exports = FunctionAssignmentNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/FunctionAssignmentNode.js\n ** module id = 204\n ** module chunks = 0\n **/","'use strict';\n\nvar Node = require('./Node');\nvar SymbolNode = require('./SymbolNode');\n\nvar latex = require('../../util/latex');\nvar isNode = Node.isNode;\nvar isArray = Array.isArray;\n\n/**\n * @constructor FunctionNode\n * @extends {Node}\n * invoke a list with arguments on a node\n * @param {string} name\n * @param {Node[]} args\n */\nfunction FunctionNode (name, args) {\n  if (!(this instanceof FunctionNode)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  // validate input\n  if (typeof name !== 'string') throw new TypeError('string expected for parameter \"name\"');\n  if (!isArray(args) || !args.every(isNode)) {\n    throw new TypeError('Array containing Nodes expected for parameter \"args\"');\n  }\n\n  this.name = name;\n  this.args = args || [];\n}\n\nFunctionNode.prototype = new Node();\n\nFunctionNode.prototype.type = 'FunctionNode';\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          or constants globally available for the compiled\n *                          expression\n * @return {String} js\n * @private\n */\nFunctionNode.prototype._compile = function (defs) {\n  var fn = defs.math[this.name];\n  var isRaw = (typeof fn === 'function') && (fn.rawArgs == true);\n\n  // compile the parameters\n  var args = this.args.map(function (arg) {\n    return arg._compile(defs);\n  });\n\n  if (isRaw) {\n    // pass unevaluated parameters (nodes) to the function\n    var paramsName;\n    do {\n      paramsName = 'p' + Math.round(Math.random() * 10000);\n    }\n    while (paramsName in defs);\n    defs[paramsName] = this.args;\n\n    return '(\"' + this.name + '\" in scope ? ' +\n        'scope[\"' + this.name + '\"](' + args.join(', ') + ') : ' +\n        'math[\"' + this.name + '\"]' + '(' + paramsName + ', math, scope))';\n  }\n  else {\n    // \"regular\" evaluation\n    var symbol = new SymbolNode(this.name);\n    return symbol._compile(defs) + '(' + args.join(', ') + ')';\n  }\n};\n\n/**\n * Execute a callback for each of the child nodes of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nFunctionNode.prototype.forEach = function (callback) {\n  for (var i = 0; i < this.args.length; i++) {\n    callback(this.args[i], 'args[' + i + ']', this);\n  }\n};\n\n/**\n * Create a new FunctionNode having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node): Node} callback\n * @returns {FunctionNode} Returns a transformed copy of the node\n */\nFunctionNode.prototype.map = function (callback) {\n  var args = [];\n  for (var i = 0; i < this.args.length; i++) {\n    args[i] = this._ifNode(callback(this.args[i], 'args[' + i + ']', this));\n  }\n  return new FunctionNode(this.name, args);\n};\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {FunctionNode}\n */\nFunctionNode.prototype.clone = function() {\n  return new FunctionNode(this.name, this.args.slice(0));\n};\n\n/**\n * Get string representation\n * @return {String} str\n */\nFunctionNode.prototype.toString = function() {\n  // format the parameters like \"add(2, 4.2)\"\n  return this.name + '(' + this.args.join(', ') + ')';\n};\n\n/**\n * Get LaTeX representation\n * @param {Object|function} callback(s)\n * @return {String} str\n */\nFunctionNode.prototype._toTex = function(callbacks) {\n  return latex.toFunction(this, callbacks, this.name);\n};\n\n/**\n * Get identifier.\n * @return {String}\n */\nFunctionNode.prototype.getIdentifier = function () {\n  return this.type + ':' + this.name;\n};\n\nmodule.exports = FunctionNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/FunctionNode.js\n ** module id = 205\n ** module chunks = 0\n **/","'use strict';\n\nvar keywords = require('../keywords');\n\n/**\n * Node\n */\nfunction Node() {\n  if (!(this instanceof Node)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n}\n\n/**\n * Evaluate the node\n * @return {*} result\n */\n// TODO: cleanup deprecated code one day. Deprecated since version 0.19.0\nNode.prototype.eval = function () {\n  throw new Error('Node.eval is deprecated. ' +\n      'Use Node.compile(math).eval([scope]) instead.');\n};\n\nNode.prototype.type = 'Node';\n\n/**\n * Compile the node to javascript code\n * @param {Object} math             math.js instance\n * @return {{eval: function}} expr  Returns an object with a function 'eval',\n *                                  which can be invoked as expr.eval([scope]),\n *                                  where scope is an optional object with\n *                                  variables.\n */\nNode.prototype.compile = function (math) {\n  if (!(math instanceof Object)) {\n    throw new TypeError('Object expected for parameter math');\n  }\n\n  // definitions globally available inside the closure of the compiled expressions\n  var defs = {\n    math: _transform(math),\n    args: {}, // can be filled with names of FunctionAssignment arguments\n    _validateScope: _validateScope\n  };\n\n  var code = this._compile(defs);\n\n  var defsCode = Object.keys(defs).map(function (name) {\n    return '    var ' + name + ' = defs[\"' + name + '\"];';\n  });\n\n  var factoryCode =\n      defsCode.join(' ') +\n          'return {' +\n          '  \"eval\": function (scope) {' +\n          '    if (scope) _validateScope(scope);' +\n          '    scope = scope || {};' +\n          '    return ' + code + ';' +\n          '  }' +\n          '};';\n\n  var factory = new Function ('defs', factoryCode);\n  return factory(defs);\n};\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          and constants globally available inside the closure\n *                          of the compiled expression\n * @return {String} js\n * @private\n */\nNode.prototype._compile = function (defs) {\n  // must be implemented by each of the Node implementations\n  throw new Error('Cannot compile a Node interface');\n};\n\n/**\n * Execute a callback for each of the child nodes of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nNode.prototype.forEach = function (callback) {\n  // must be implemented by each of the Node implementations\n  throw new Error('Cannot run forEach on a Node interface');\n};\n\n/**\n * Create a new Node having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node): Node} callback\n * @returns {OperatorNode} Returns a transformed copy of the node\n */\nNode.prototype.map = function (callback) {\n  // must be implemented by each of the Node implementations\n  throw new Error('Cannot run map on a Node interface');\n};\n\n/**\n * Validate whether an object is a Node, for use with map\n * @param {Node} node\n * @returns {Node} Returns the input if it's a node, else throws an Error\n * @protected\n */\nNode.prototype._ifNode = function (node) {\n  if (!(node instanceof Node)) {\n    throw new TypeError('Callback function must return a Node');\n  }\n\n  return node;\n};\n\n/**\n * Recursively traverse all nodes in a node tree. Executes given callback for\n * this node and each of its child nodes.\n * @param {function(node: Node, path: string, parent: Node)} callback\n *          A callback called for every node in the node tree.\n */\nNode.prototype.traverse = function (callback) {\n  // execute callback for itself\n  callback(this, null, null);\n\n  // recursively traverse over all childs of a node\n  function _traverse (node, callback) {\n    node.forEach(function(child, path, parent) {\n      callback(child, path, parent);\n      _traverse(child, callback);\n    });\n  }\n  _traverse(this, callback);\n};\n\n/**\n * Recursively transform a node tree via a transform function.\n *\n * For example, to replace all nodes of type SymbolNode having name 'x' with a\n * ConstantNode with value 2:\n *\n *     var res = Node.transform(function (node, path, parent) {\n *       if (node instanceof SymbolNode) && (node.name == 'x')) {\n *         return new ConstantNode(2);\n *       }\n *       else {\n *         return node;\n *       }\n *     });\n *\n * @param {function(node: Node, path: string, parent: Node) : Node} callback\n *          A mapping function accepting a node, and returning\n *          a replacement for the node or the original node.\n *          Signature: callback(node: Node, index: string, parent: Node) : Node\n * @return {Node} Returns the original node or its replacement\n */\nNode.prototype.transform = function (callback) {\n  // check itself\n  var replacement = callback(this, null, null);\n  if (replacement !== this) {\n    return replacement;\n  }\n\n  // traverse over all childs\n  function _transform (node, callback) {\n    return node.map(function(child, path, parent) {\n      var replacement = callback(child, path, parent);\n      return (replacement !== child) ? replacement : _transform(child, callback);\n    });\n  }\n  return _transform(this, callback);\n};\n\n/**\n * Find any node in the node tree matching given filter function. For example, to\n * find all nodes of type SymbolNode having name 'x':\n *\n *     var results = Node.filter(function (node) {\n *       return (node instanceof SymbolNode) && (node.name == 'x');\n *     });\n *\n * @param {function(node: Node, path: string, parent: Node) : Node} callback\n *            A test function returning true when a node matches, and false\n *            otherwise. Function signature:\n *            callback(node: Node, index: string, parent: Node) : boolean\n * @return {Node[]} nodes       An array with nodes matching given filter criteria\n */\nNode.prototype.filter = function (callback) {\n  var nodes = [];\n\n  this.traverse(function (node, path, parent) {\n    if (callback(node, path, parent)) {\n      nodes.push(node);\n    }\n  });\n\n  return nodes;\n};\n\n// TODO: deprecated since version 1.1.0, remove this some day\nNode.prototype.find = function () {\n  throw new Error('Function Node.find is deprecated. Use Node.filter instead.');\n};\n\n// TODO: deprecated since version 1.1.0, remove this some day\nNode.prototype.match = function () {\n  throw new Error('Function Node.match is deprecated. See functions Node.filter, Node.transform, Node.traverse.');\n};\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {Node}\n */\nNode.prototype.clone = function() {\n  // must be implemented by each of the Node implementations\n  throw new Error('Cannot clone a Node interface');\n};\n\n/**\n * Get string representation\n * @return {String}\n */\nNode.prototype.toString = function() {\n  return '';\n};\n\n/**\n * Get LaTeX representation. (wrapper function)\n * This functions get's either an object containing callbacks or\n * a single callback. It decides whether to call the callback and if\n * not or if the callback returns nothing, it calls the default\n * LaTeX implementation of the node (_toTex).\n *\n * @param {Object|function} callback(s)\n * @return {String}\n */\nNode.prototype.toTex = function(callback) {\n  var customTex;\n  if (this.type === 'ArrayNode') {\n    //FIXME this is only a workaround for a breaking change,\n    //remove this in version2\n    delete this.latexType;\n  }\n  if (typeof callback === 'object') {\n    if ((this.type === 'FunctionNode') && callback.hasOwnProperty(this.name)) {\n      //if callback is a map of callback functions and this is a FunctionNode\n      customTex = callback[this.name](this, callback);\n    }\n  }\n  else if (typeof callback === 'function') {\n    //if callback is a function\n    customTex = callback(this, callback);\n  }\n  else if ((typeof callback === 'string') && (this.type === 'ArrayNode')) {\n    //FIXME this is only a workaround for a breaking change,\n    //remove this in version2\n    this.latexType = callback;\n  }\n  else if (typeof callback !== 'undefined') {\n    throw new TypeError('Object or function expected as callback');\n  }\n\n  if (typeof customTex !== 'undefined') {\n    return customTex;\n  }\n\n  return this._toTex(callback);\n};\n\n/**\n * Internal function to generate the LaTeX output.\n * This has to be implemented by every Node\n *\n * @param {Object}|function}\n * @throws {Error}\n */\nNode.prototype._toTex = function () {\n  if (this.type === 'Node') {\n    //FIXME remove this in v2\n    return '';\n  }\n  //must be implemented by each of the Node implementations\n  throw new Error('_toTex not implemented for this Node');\n};\n\n/**\n * Get identifier.\n * @return {String}\n */\nNode.prototype.getIdentifier = function () {\n return this.type;\n};\n\n/**\n * Test whether an object is a Node\n * @param {*} object\n * @returns {boolean} isNode\n */\nNode.isNode = function(object) {\n  return object instanceof Node;\n};\n\n/**\n * Validate the symbol names of a scope.\n * Throws an error when the scope contains an illegal symbol.\n * @param {Object} scope\n */\nfunction _validateScope (scope) {\n  for (var symbol in scope) {\n    if (scope.hasOwnProperty(symbol)) {\n      if (symbol in keywords) {\n        throw new Error('Scope contains an illegal symbol, \"' + symbol + '\" is a reserved keyword');\n      }\n    }\n  }\n}\n\n/**\n * Replace all functions having a transform function attached at property transform\n * with their transform.\n * @param {Object} math\n * @return {Object} transformed\n * @private\n */\nfunction _transform(math) {\n  var transformed = Object.create(math);\n\n  if (math.expression && math.expression.transform) {\n    for (var name in math.expression.transform) {\n      if (math.expression.transform.hasOwnProperty(name)) {\n        transformed[name] = math.expression.transform[name];\n      }\n    }\n  }\n\n  return transformed;\n}\n\nmodule.exports = Node;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/Node.js\n ** module id = 206\n ** module chunks = 0\n **/","'use strict';\n\nvar Node = require('./Node'),\n    ConstantNode = require('./ConstantNode'),\n    SymbolNode = require('./SymbolNode'),\n    FunctionNode = require('./FunctionNode'),\n    latex = require('../../util/latex'),\n    operators = require('../operators'),\n    isArray = Array.isArray,\n    isNode = Node.isNode;\n\n/**\n * @constructor OperatorNode\n * @extends {Node}\n * An operator with two arguments, like 2+3\n *\n * @param {String} op       Operator name, for example '+'\n * @param {String} fn       Function name, for example 'add'\n * @param {Node[]} args     Operator arguments\n */\nfunction OperatorNode (op, fn, args) {\n  if (!(this instanceof OperatorNode)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  //validate input\n  if (typeof op !== 'string') {\n    throw new TypeError('string expected for parameter \"op\"');\n  }\n  if (typeof fn !== 'string') {\n    throw new TypeError('string expected for parameter \"fn\"');\n  }\n  if (!isArray(args) || !args.every(isNode)) {\n    throw new TypeError('Array containing Nodes expected for parameter \"args\"');\n  }\n\n  this.op = op;\n  this.fn = fn;\n  this.args = args || [];\n}\n\nOperatorNode.prototype = new Node();\n\nOperatorNode.prototype.type = 'OperatorNode';\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          or constants globally available for the compiled\n *                          expression\n * @return {String} js\n * @private\n */\nOperatorNode.prototype._compile = function (defs) {\n  if (!(this.fn in defs.math)) {\n    throw new Error('Function ' + this.fn + ' missing in provided namespace \"math\"');\n  }\n\n  var args = this.args.map(function (arg) {\n    return arg._compile(defs);\n  });\n  return 'math.' + this.fn + '(' + args.join(', ') + ')';\n};\n\n/**\n * Execute a callback for each of the child nodes of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nOperatorNode.prototype.forEach = function (callback) {\n  for (var i = 0; i < this.args.length; i++) {\n    callback(this.args[i], 'args[' + i + ']', this);\n  }\n};\n\n/**\n * Create a new OperatorNode having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node): Node} callback\n * @returns {OperatorNode} Returns a transformed copy of the node\n */\nOperatorNode.prototype.map = function (callback) {\n  var args = [];\n  for (var i = 0; i < this.args.length; i++) {\n    args[i] = this._ifNode(callback(this.args[i], 'args[' + i + ']', this));\n  }\n  return new OperatorNode(this.op, this.fn, args);\n};\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {OperatorNode}\n */\nOperatorNode.prototype.clone = function() {\n  return new OperatorNode(this.op, this.fn, this.args.slice(0));\n};\n\n/**\n * Calculate which parentheses are necessary. Gets an OperatorNode\n * (which is the root of the tree) and an Array of Nodes\n * (this.args) and returns an array where 'true' means that an argument\n * has to be enclosed in parentheses whereas 'false' means the opposite.\n *\n * @param {OperatorNode} root\n * @param {Node[]} arguments\n * @param {bool}\n * @return {bool[]}\n * @private\n */\nfunction calculateNecessaryParentheses (root, args, latex) {\n  //precedence of the root OperatorNode\n  var precedence = operators.getPrecedence(root);\n  var associativity = operators.getAssociativity(root);\n\n  switch (args.length) {\n    case 1: //unary operators\n      //precedence of the operand\n      var operandPrecedence = operators.getPrecedence(args[0]);\n\n      //handle special cases for LaTeX, where some of the parentheses aren't needed\n      if (latex && (operandPrecedence !== null)) {\n        var operandIdentifier = args[0].getIdentifier();\n        var rootIdentifier = root.getIdentifier();\n        if (operators.properties[precedence][rootIdentifier].latexLeftParens === false) {\n          return [false];\n        }\n\n        if (operators.properties[operandPrecedence][operandIdentifier].latexParens === false) {\n          return [false];\n        }\n      }\n\n      if (operandPrecedence === null) {\n        //if the operand has no defined precedence, no parens are needed\n        return [false];\n      }\n\n      if (operandPrecedence <= precedence) {\n        //if the operands precedence is lower, parens are needed\n        return [true];\n      }\n\n      //otherwise, no parens needed\n      return [false];\n\n    case 2: //binary operators\n      var lhsParens; //left hand side needs parenthesis?\n      //precedence of the left hand side\n      var lhsPrecedence = operators.getPrecedence(args[0]);\n      //is the root node associative with the left hand side\n      var assocWithLhs = operators.isAssociativeWith(root, args[0]);\n\n      if (lhsPrecedence === null) {\n        //if the left hand side has no defined precedence, no parens are needed\n        //FunctionNode for example\n        lhsParens = false;\n      }\n      else if ((lhsPrecedence === precedence) && (associativity === 'right') && !assocWithLhs) {\n        //In case of equal precedence, if the root node is left associative\n        // parens are **never** necessary for the left hand side.\n        //If it is right associative however, parens are necessary\n        //if the root node isn't associative with the left hand side\n        lhsParens = true;\n      }\n      else if (lhsPrecedence < precedence) {\n        lhsParens = true;\n      }\n      else {\n        lhsParens = false;\n      }\n\n      var rhsParens; //right hand side needs parenthesis?\n      //precedence of the right hand side\n      var rhsPrecedence = operators.getPrecedence(args[1]);\n      //is the root node associative with the right hand side?\n      var assocWithRhs = operators.isAssociativeWith(root, args[1]);\n\n      if (rhsPrecedence === null) {\n        //if the right hand side has no defined precedence, no parens are needed\n        //FunctionNode for example\n        rhsParens = false;\n      }\n      else if ((rhsPrecedence === precedence) && (associativity === 'left') && !assocWithRhs) {\n        //In case of equal precedence, if the root node is right associative\n        // parens are **never** necessary for the right hand side.\n        //If it is left associative however, parens are necessary\n        //if the root node isn't associative with the right hand side\n        rhsParens = true;\n      }\n      else if (rhsPrecedence < precedence) {\n        rhsParens = true;\n      }\n      else {\n        rhsParens = false;\n      }\n\n      //handle special cases for LaTeX, where some of the parentheses aren't needed\n      if (latex) {\n        var rootIdentifier = root.getIdentifier();\n        var lhsIdentifier = root.args[0].getIdentifier();\n        var rhsIdentifier = root.args[1].getIdentifier();\n\n        if (lhsPrecedence !== null) {\n          if (operators.properties[precedence][rootIdentifier].latexLeftParens === false) {\n            lhsParens = false;\n          }\n\n          if (operators.properties[lhsPrecedence][lhsIdentifier].latexParens === false) {\n            lhsParens = false;\n          }\n        }\n\n        if (rhsPrecedence !== null) {\n          if (operators.properties[precedence][rootIdentifier].latexRightParens === false) {\n            rhsParens = false;\n          }\n\n          if (operators.properties[rhsPrecedence][rhsIdentifier].latexParens === false) {\n            rhsParens = false;\n          }\n        }\n      }\n\n      return [lhsParens, rhsParens];\n    default:\n      //behavior is undefined, fall back to putting everything in parens\n      var parens = [];\n      args.forEach(function () {\n        parens.push(true);\n      });\n      return parens;\n  }\n}\n\n/**\n * Get string representation.\n * @return {String} str\n */\nOperatorNode.prototype.toString = function() {\n  var args = this.args;\n  var parens = calculateNecessaryParentheses(this, args, false);\n\n  switch (args.length) {\n    case 1: //unary operators\n      var assoc = operators.getAssociativity(this);\n\n      var operand = args[0].toString();\n      if (parens[0]) {\n        operand = '(' + operand + ')';\n      }\n\n      if (assoc === 'right') { //prefix operator\n        return this.op + operand;\n      }\n      else if (assoc === 'left') { //postfix\n        return operand + this.op;\n      }\n\n      //fall back to postfix\n      return operand + this.op;\n\n    case 2:\n      var lhs = args[0].toString(); //left hand side\n      var rhs = args[1].toString(); //right hand side\n      if (parens[0]) { //left hand side in parenthesis?\n        lhs = '(' + lhs + ')';\n      }\n      if (parens[1]) { //right hand side in parenthesis?\n        rhs = '(' + rhs + ')';\n      }\n\n      return lhs + ' ' + this.op + ' ' + rhs;\n\n    default:\n      //fallback to formatting as a function call\n      return this.fn + '(' + this.args.join(', ') + ')';\n  }\n};\n\n/**\n * Get LaTeX representation\n * @param {Object|function} callback(s)\n * @return {String} str\n */\nOperatorNode.prototype._toTex = function(callbacks) {\n var args = this.args; \n var parens = calculateNecessaryParentheses(this, args, true);\n var op = latex.operators[this.fn];\n op = typeof op === 'undefined' ? this.op : op; //fall back to using this.op\n\n switch (args.length) {\n   case 1: //unary operators\n     var assoc = operators.getAssociativity(this);\n\n     var operand = args[0].toTex(callbacks);\n     if (parens[0]) {\n       operand = '\\\\left(' + operand + '\\\\right)';\n     }\n\n     if (assoc === 'right') { //prefix operator\n       return op + operand;\n     }\n     else if (assoc === 'left') { //postfix operator\n       return operand + op;\n     }\n\n     //fall back to postfix\n     return operand + op;\n\n   case 2: //binary operators\n     var lhs = args[0]; //left hand side\n     var lhsTex =  lhs.toTex(callbacks);\n     if (parens[0]) {\n       lhsTex = '\\\\left(' + lhsTex + '\\\\right)';\n     }\n\n     var rhs = args[1]; //right hand side\n     var rhsTex = rhs.toTex(callbacks);\n     if (parens[1]) {\n       rhsTex = '\\\\left(' + rhsTex + '\\\\right)';\n     }\n\n     //handle some exceptions (due to the way LaTeX works)\n     switch (this.getIdentifier()) {\n       case 'OperatorNode:divide':\n         //op contains '\\\\frac' at this point\n         return op + '{' + lhsTex + '}' + '{' + rhsTex + '}';\n       case 'OperatorNode:pow':\n         lhsTex = '{' + lhsTex + '}';\n         rhsTex = '{' + rhsTex + '}';\n         switch (lhs.getIdentifier()) {\n           case 'ConditionalNode': //\n           case 'OperatorNode:divide':\n             lhsTex = '\\\\left(' + lhsTex + '\\\\right)';\n         }\n     }\n     return lhsTex + op + rhsTex;\n\n   default:\n     //fall back to formatting as a function call\n     //as this is a fallback, it doesn't use\n     //fancy function names\n     return '\\\\mathrm{' + this.fn + '}\\\\left('\n             + args.map(function (arg) {\n               return arg.toTex(callbacks);\n             }).join(',') + '\\\\right)';\n }\n};\n\n/**\n * Get identifier.\n * @return {String}\n */\nOperatorNode.prototype.getIdentifier = function () {\n  return this.type + ':' + this.fn;\n};\n\nmodule.exports = OperatorNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/OperatorNode.js\n ** module id = 207\n ** module chunks = 0\n **/","'use strict';\n\nvar Node = require('./Node');\nvar operators = require('../operators');\n\nvar isNode = Node.isNode;\n\n/**\n * @constructor RangeNode\n * @extends {Node}\n * create a range\n * @param {Node} start  included lower-bound\n * @param {Node} end    included lower-bound\n * @param {Node} [step] optional step\n */\nfunction RangeNode (start, end, step) {\n  if (!(this instanceof RangeNode)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  // validate inputs\n  if (!isNode(start)) throw new TypeError('Node expected');\n  if (!isNode(end)) throw new TypeError('Node expected');\n  if (step && !isNode(step)) throw new TypeError('Node expected');\n  if (arguments.length > 3) throw new Error('Too many arguments');\n\n  this.start = start;         // included lower-bound\n  this.end   = end;           // included upper-bound\n  this.step  = step || null;  // optional step\n}\n\nRangeNode.prototype = new Node();\n\nRangeNode.prototype.type = 'RangeNode';\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          or constants globally available for the compiled\n *                          expression\n * @return {String} js\n * @private\n */\nRangeNode.prototype._compile = function (defs) {\n  return 'math.range(' +\n      this.start._compile(defs) + ', ' +\n      this.end._compile(defs) +\n      (this.step ? (', ' + this.step._compile(defs)) : '') +\n      ')';\n};\n\n/**\n * Execute a callback for each of the child nodes of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nRangeNode.prototype.forEach = function (callback) {\n  callback(this.start, 'start', this);\n  callback(this.end, 'end', this);\n  if (this.step) {\n    callback(this.step, 'step', this);\n  }\n};\n\n/**\n * Create a new RangeNode having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node): Node} callback\n * @returns {RangeNode} Returns a transformed copy of the node\n */\nRangeNode.prototype.map = function (callback) {\n  return new RangeNode(\n      this._ifNode(callback(this.start, 'start', this)),\n      this._ifNode(callback(this.end, 'end', this)),\n      this.step && this._ifNode(callback(this.step, 'step', this))\n  );\n};\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {RangeNode}\n */\nRangeNode.prototype.clone = function() {\n  return new RangeNode(this.start, this.end, this.step && this.step);\n};\n\n/**\n * Get string representation\n * @return {String} str\n */\nRangeNode.prototype.toString = function() {\n  var precedence = operators.getPrecedence(this);\n\n  //format string as start:step:stop\n  var str;\n\n  var start = this.start.toString();\n  var startPrecedence = operators.getPrecedence(this.start);\n  if ((startPrecedence !== null) && (startPrecedence <= precedence)) {\n    start = '(' + start + ')';\n  }\n  str = start;\n\n  if (this.step) {\n    var step = this.step.toString();\n    var stepPrecedence = operators.getPrecedence(this.step);\n    if ((stepPrecedence !== null) && (stepPrecedence <= precedence)) {\n      step = '(' + step + ')';\n    }\n    str += ':' + step;\n  }\n\n  var end = this.end.toString();\n  var endPrecedence = operators.getPrecedence(this.end);\n  if ((endPrecedence !== null) && (endPrecedence <= precedence)) {\n    end = '(' + end + ')';\n  }\n  str += ':' + end;\n\n  return str;\n};\n\n/**\n * Get LaTeX representation\n * @params {Object|function} callback(s)\n * @return {String} str\n */\nRangeNode.prototype._toTex = function(callbacks) {\n  var str = this.start.toTex(callbacks);\n  if (this.step) {\n    str += ':' + this.step.toTex(callbacks);\n  }\n  str += ':' + this.end.toTex(callbacks);\n\n  return str;\n};\n\nmodule.exports = RangeNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/RangeNode.js\n ** module id = 208\n ** module chunks = 0\n **/","'use strict';\n\nvar Node = require('./Node'),\n    Unit = require('../../type/Unit'),\n\n    latex = require('../../util/latex'),\n    isString = require('../../util/string').isString;\n\n/**\n * @constructor SymbolNode\n * @extends {Node}\n * A symbol node can hold and resolve a symbol\n * @param {String} name\n * @extends {Node}\n */\nfunction SymbolNode(name) {\n  if (!(this instanceof SymbolNode)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  // validate input\n  if (!isString(name))  throw new TypeError('String expected for parameter \"name\"');\n\n  this.name = name;\n}\n\nSymbolNode.prototype = new Node();\n\nSymbolNode.prototype.type = 'SymbolNode';\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          or constants globally available for the compiled\n *                          expression\n * @return {String} js\n * @private\n */\nSymbolNode.prototype._compile = function (defs) {\n  // add a function to the definitions\n  defs['undef'] = undef;\n  defs['Unit'] = Unit;\n\n  if (this.name in defs.args) {\n    // this is a FunctionAssignment argument\n    // (like an x when inside the expression of a function assignment `f(x) = ...`)\n    return this.name;\n  }\n  else if (this.name in defs.math) {\n    return '(\"' + this.name + '\" in scope ? scope[\"' + this.name + '\"] : math[\"' + this.name + '\"])';\n  }\n  else {\n    return '(' +\n        '\"' + this.name + '\" in scope ? scope[\"' + this.name + '\"] : ' +\n        (Unit.isValuelessUnit(this.name) ?\n            'new Unit(null, \"' + this.name + '\")' :\n            'undef(\"' + this.name + '\")') +\n        ')';\n  }\n};\n\n/**\n * Execute a callback for each of the child nodes of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nSymbolNode.prototype.forEach = function (callback) {\n  // nothing to do, we don't have childs\n};\n\n/**\n * Create a new SymbolNode having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node) : Node} callback\n * @returns {SymbolNode} Returns a clone of the node\n */\nSymbolNode.prototype.map = function (callback) {\n  return this.clone();\n};\n\n/**\n * Throws an error 'Undefined symbol {name}'\n * @param {String} name\n */\nfunction undef (name) {\n  throw new Error('Undefined symbol ' + name);\n}\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {SymbolNode}\n */\nSymbolNode.prototype.clone = function() {\n  return new SymbolNode(this.name);\n};\n\n/**\n * Get string representation\n * @return {String} str\n * @override\n */\nSymbolNode.prototype.toString = function() {\n  return this.name;\n};\n\n/**\n * Get LaTeX representation\n * @param {Object|function} callback(s)\n * @return {String} str\n * @override\n */\nSymbolNode.prototype._toTex = function(callbacks) {\n  var symbol = latex.toSymbol(this.name);\n  if (symbol[0] === '\\\\') {\n    //no space needed if the symbol starts with '\\'\n    return symbol;\n  }\n  //the space prevents symbols from breaking stuff like '\\cdot' if it's written right before the symbol\n  return ' ' + symbol;\n};\n\nmodule.exports = SymbolNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/SymbolNode.js\n ** module id = 209\n ** module chunks = 0\n **/","'use strict';\n\nvar Node = require('./Node'),\n    IndexNode = require('./IndexNode');\n\n/**\n * @constructor UpdateNode\n * @extends {Node}\n * Update a matrix subset, like A[2,3] = 4.5\n *\n * @param {IndexNode} index             IndexNode containing symbol and ranges\n * @param {Node} expr                   The expression defining the symbol\n */\nfunction UpdateNode(index, expr) {\n  if (!(this instanceof UpdateNode)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (!(index instanceof IndexNode)) {\n    throw new TypeError('Expected IndexNode for parameter \"index\"');\n  }\n  if (!(expr instanceof Node)) {\n    throw new TypeError('Expected Node for parameter \"expr\"');\n  }\n\n  this.index = index;\n  this.expr = expr;\n}\n\nUpdateNode.prototype = new Node();\n\nUpdateNode.prototype.type = 'UpdateNode';\n\n/**\n * Compile the node to javascript code\n * @param {Object} defs     Object which can be used to define functions\n *                          or constants globally available for the compiled\n *                          expression\n * @return {String} js\n * @private\n */\nUpdateNode.prototype._compile = function (defs) {\n  var lhs = (this.index.objectName() in defs.args)\n    ? this.name + ' = ' // this is a FunctionAssignment argument\n    : 'scope[\"' + this.index.objectName() + '\\\"]';\n\n  var rhs = this.index.compileSubset(defs,  this.expr._compile(defs));\n\n  return lhs + ' = ' + rhs;\n};\n\n/**\n * Execute a callback for each of the child nodes of this node\n * @param {function(child: Node, path: string, parent: Node)} callback\n */\nUpdateNode.prototype.forEach = function (callback) {\n  callback(this.index, 'index', this);\n  callback(this.expr, 'expr', this);\n};\n\n/**\n * Create a new UpdateNode having it's childs be the results of calling\n * the provided callback function for each of the childs of the original node.\n * @param {function(child: Node, path: string, parent: Node): Node} callback\n * @returns {UpdateNode} Returns a transformed copy of the node\n */\nUpdateNode.prototype.map = function (callback) {\n  return new UpdateNode(\n      this._ifNode(callback(this.index, 'index', this)),\n      this._ifNode(callback(this.expr, 'expr', this))\n  );\n};\n\n/**\n * Create a clone of this node, a shallow copy\n * @return {UpdateNode}\n */\nUpdateNode.prototype.clone = function() {\n  return new UpdateNode(this.index, this.expr);\n};\n\n/**\n * Get string representation\n * @return {String}\n */\nUpdateNode.prototype.toString = function() {\n  return this.index.toString() + ' = ' + this.expr.toString();\n};\n\n/**\n * Get LaTeX representation\n * @param {Object|function} callback(s)\n * @return {String}\n */\nUpdateNode.prototype._toTex = function(callbacks) {\n  return this.index.toTex(callbacks) + ':=' + this.expr.toTex(callbacks);\n};\n\nmodule.exports = UpdateNode;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/node/UpdateNode.js\n ** module id = 210\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'e',\n  'category': 'Constants',\n  'syntax': [\n    'e'\n  ],\n  'description': 'Euler\\'s number, the base of the natural logarithm. Approximately equal to 2.71828',\n  'examples': [\n    'e',\n    'e ^ 2',\n    'exp(2)',\n    'log(e)'\n  ],\n  'seealso': ['exp']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/e.js\n ** module id = 211\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'false',\n  'category': 'Constants',\n  'syntax': [\n    'false'\n  ],\n  'description': 'Boolean value false',\n  'examples': [\n    'false'\n  ],\n  'seealso': ['true']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/false.js\n ** module id = 212\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'i',\n  'category': 'Constants',\n  'syntax': [\n    'i'\n  ],\n  'description': 'Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.',\n  'examples': [\n    'i',\n    'i * i',\n    'sqrt(-1)'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/i.js\n ** module id = 213\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'Infinity',\n  'category': 'Constants',\n  'syntax': [\n    'Infinity'\n  ],\n  'description': 'Infinity, a number which is larger than the maximum number that can be handled by a floating point number.',\n  'examples': [\n    'Infinity',\n    '1 / 0'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/Infinity.js\n ** module id = 214\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'LN2',\n  'category': 'Constants',\n  'syntax': [\n    'LN2'\n  ],\n  'description': 'Returns the natural logarithm of 2, approximately equal to 0.693',\n  'examples': [\n    'LN2',\n    'log(2)'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/LN2.js\n ** module id = 215\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'LN10',\n  'category': 'Constants',\n  'syntax': [\n    'LN10'\n  ],\n  'description': 'Returns the natural logarithm of 10, approximately equal to 2.302',\n  'examples': [\n    'LN10',\n    'log(10)'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/LN10.js\n ** module id = 216\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'LOG2E',\n  'category': 'Constants',\n  'syntax': [\n    'LOG2E'\n  ],\n  'description': 'Returns the base-2 logarithm of E, approximately equal to 1.442',\n  'examples': [\n    'LOG2E',\n    'log(e, 2)'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/LOG2E.js\n ** module id = 217\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'LOG10E',\n  'category': 'Constants',\n  'syntax': [\n    'LOG10E'\n  ],\n  'description': 'Returns the base-10 logarithm of E, approximately equal to 0.434',\n  'examples': [\n    'LOG10E',\n    'log(e, 10)'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/LOG10E.js\n ** module id = 218\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'NaN',\n  'category': 'Constants',\n  'syntax': [\n    'NaN'\n  ],\n  'description': 'Not a number',\n  'examples': [\n    'NaN',\n    '0 / 0'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/NaN.js\n ** module id = 219\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'null',\n  'category': 'Constants',\n  'syntax': [\n    'null'\n  ],\n  'description': 'Value null',\n  'examples': [\n    'null'\n  ],\n  'seealso': ['true', 'false']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/null.js\n ** module id = 220\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'pi',\n  'category': 'Constants',\n  'syntax': [\n    'pi'\n  ],\n  'description': 'The number pi is a mathematical constant that is the ratio of a circle\\'s circumference to its diameter, and is approximately equal to 3.14159',\n  'examples': [\n    'pi',\n    'sin(pi/2)'\n  ],\n  'seealso': ['tau']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/pi.js\n ** module id = 221\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'phi',\n  'category': 'Constants',\n  'syntax': [\n    'phi'\n  ],\n  'description': 'Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...',\n  'examples': [\n    'tau'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/phi.js\n ** module id = 222\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'SQRT1_2',\n  'category': 'Constants',\n  'syntax': [\n    'SQRT1_2'\n  ],\n  'description': 'Returns the square root of 1/2, approximately equal to 0.707',\n  'examples': [\n    'SQRT1_2',\n    'sqrt(1/2)'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/SQRT1_2.js\n ** module id = 223\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'SQRT2',\n  'category': 'Constants',\n  'syntax': [\n    'SQRT2'\n  ],\n  'description': 'Returns the square root of 2, approximately equal to 1.414',\n  'examples': [\n    'SQRT2',\n    'sqrt(2)'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/SQRT2.js\n ** module id = 224\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'tau',\n  'category': 'Constants',\n  'syntax': [\n    'tau'\n  ],\n  'description': 'Tau is the ratio constant of a circle\\'s circumference to radius, equal to 2 * pi, approximately 6.2832.',\n  'examples': [\n    'tau',\n    '2 * pi'\n  ],\n  'seealso': ['pi']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/tau.js\n ** module id = 225\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'true',\n  'category': 'Constants',\n  'syntax': [\n    'true'\n  ],\n  'description': 'Boolean value true',\n  'examples': [\n    'true'\n  ],\n  'seealso': ['false']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/true.js\n ** module id = 226\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'version',\n  'category': 'Constants',\n  'syntax': [\n    'version'\n  ],\n  'description': 'A string with the version number of math.js',\n  'examples': [\n    'version'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/constants/version.js\n ** module id = 227\n ** module chunks = 0\n **/","var map = {\n\t\"./clone\": 169,\n\t\"./clone.js\": 169,\n\t\"./filter\": 170,\n\t\"./filter.js\": 170,\n\t\"./forEach\": 177,\n\t\"./forEach.js\": 177,\n\t\"./format\": 171,\n\t\"./format.js\": 171,\n\t\"./import\": 172,\n\t\"./import.js\": 172,\n\t\"./map\": 173,\n\t\"./map.js\": 173,\n\t\"./print\": 174,\n\t\"./print.js\": 174,\n\t\"./sort\": 175,\n\t\"./sort.js\": 175,\n\t\"./typeof\": 176,\n\t\"./typeof.js\": 176\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 228;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/utils ^\\.\\/.*$\n ** module id = 228\n ** module chunks = 0\n **/","var DimensionError = require('../../error/DimensionError');\nvar IndexError = require('../../error/IndexError');\n\n/**\n * Transform zero-based indices to one-based indices in errors\n * @param {Error} err\n * @returns {Error} Returns the transformed error\n */\nexports.transform = function (err) {\n  if (err instanceof IndexError) {\n    return new IndexError(err.index + 1, err.min + 1, err.max + 1);\n  }\n\n  return err;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/transform/error.transform.js\n ** module id = 229\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Test whether value is a Boolean\n * @param {*} value\n * @return {Boolean} isBoolean\n */\nexports.isBoolean = function(value) {\n  return (value instanceof Boolean) || (typeof value == 'boolean');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/util/boolean.js\n ** module id = 230\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'abs',\n  'category': 'Arithmetic',\n  'syntax': [\n    'abs(x)'\n  ],\n  'description': 'Compute the absolute value.',\n  'examples': [\n    'abs(3.5)',\n    'abs(-4.2)'\n  ],\n  'seealso': ['sign']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/abs.js\n ** module id = 231\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'add',\n  'category': 'Operators',\n  'syntax': [\n    'x + y',\n    'add(x, y)'\n  ],\n  'description': 'Add two values.',\n  'examples': [\n    'a = 2.1 + 3.6',\n    'a - 3.6',\n    '3 + 2i',\n    '\"hello\" + \" world\"',\n    '3 cm + 2 inch'\n  ],\n  'seealso': [\n    'subtract'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/add.js\n ** module id = 232\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'ceil',\n  'category': 'Arithmetic',\n  'syntax': [\n    'ceil(x)'\n  ],\n  'description':\n      'Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.',\n  'examples': [\n    'ceil(3.2)',\n    'ceil(3.8)',\n    'ceil(-4.2)'\n  ],\n  'seealso': ['floor', 'fix', 'round']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/ceil.js\n ** module id = 233\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'cube',\n  'category': 'Arithmetic',\n  'syntax': [\n    'cube(x)'\n  ],\n  'description': 'Compute the cube of a value. The cube of x is x * x * x.',\n  'examples': [\n    'cube(2)',\n    '2^3',\n    '2 * 2 * 2'\n  ],\n  'seealso': [\n    'multiply',\n    'square',\n    'pow'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/cube.js\n ** module id = 234\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'divide',\n  'category': 'Operators',\n  'syntax': [\n    'x / y',\n    'divide(x, y)'\n  ],\n  'description': 'Divide two values.',\n  'examples': [\n    'a = 2 / 3',\n    'a * 3',\n    '4.5 / 2',\n    '3 + 4 / 2',\n    '(3 + 4) / 2',\n    '18 km / 4.5'\n  ],\n  'seealso': [\n    'multiply'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/divide.js\n ** module id = 235\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'dotDivide',\n  'category': 'Operators',\n  'syntax': [\n    'x ./ y',\n    'dotDivide(x, y)'\n  ],\n  'description': 'Divide two values element wise.',\n  'examples': [\n    'a = [1, 2, 3; 4, 5, 6]',\n    'b = [2, 1, 1; 3, 2, 5]',\n    'a ./ b'\n  ],\n  'seealso': [\n    'multiply',\n    'dotMultiply',\n    'divide'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/dotDivide.js\n ** module id = 236\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'dotMultiply',\n  'category': 'Operators',\n  'syntax': [\n    'x .* y',\n    'dotMultiply(x, y)'\n  ],\n  'description': 'Multiply two values element wise.',\n  'examples': [\n    'a = [1, 2, 3; 4, 5, 6]',\n    'b = [2, 1, 1; 3, 2, 5]',\n    'a .* b'\n  ],\n  'seealso': [\n    'multiply',\n    'divide',\n    'dotDivide'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/dotMultiply.js\n ** module id = 237\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'dotpow',\n  'category': 'Operators',\n  'syntax': [\n    'x .^ y',\n    'dotpow(x, y)'\n  ],\n  'description':\n      'Calculates the power of x to y element wise.',\n  'examples': [\n    'a = [1, 2, 3; 4, 5, 6]',\n    'a .^ 2'\n  ],\n  'seealso': [\n    'pow'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/dotPow.js\n ** module id = 238\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'exp',\n  'category': 'Arithmetic',\n  'syntax': [\n    'exp(x)'\n  ],\n  'description': 'Calculate the exponent of a value.',\n  'examples': [\n    'exp(1.3)',\n    'e ^ 1.3',\n    'log(exp(1.3))',\n    'x = 2.4',\n    '(exp(i*x) == cos(x) + i*sin(x))   # Euler\\'s formula'\n  ],\n  'seealso': [\n    'pow',\n    'log'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/exp.js\n ** module id = 239\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'fix',\n  'category': 'Arithmetic',\n  'syntax': [\n    'fix(x)'\n  ],\n  'description':\n      'Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.',\n  'examples': [\n    'fix(3.2)',\n    'fix(3.8)',\n    'fix(-4.2)',\n    'fix(-4.8)'\n  ],\n  'seealso': ['ceil', 'floor', 'round']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/fix.js\n ** module id = 240\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'floor',\n  'category': 'Arithmetic',\n  'syntax': [\n    'floor(x)'\n  ],\n  'description':\n      'Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.',\n  'examples': [\n    'floor(3.2)',\n    'floor(3.8)',\n    'floor(-4.2)'\n  ],\n  'seealso': ['ceil', 'fix', 'round']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/floor.js\n ** module id = 241\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'gcd',\n  'category': 'Arithmetic',\n  'syntax': [\n    'gcd(a, b)',\n    'gcd(a, b, c, ...)'\n  ],\n  'description': 'Compute the greatest common divisor.',\n  'examples': [\n    'gcd(8, 12)',\n    'gcd(-4, 6)',\n    'gcd(25, 15, -10)'\n  ],\n  'seealso': [ 'lcm', 'xgcd' ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/gcd.js\n ** module id = 242\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'lcm',\n  'category': 'Arithmetic',\n  'syntax': [\n    'lcm(x, y)'\n  ],\n  'description': 'Compute the least common multiple.',\n  'examples': [\n    'lcm(4, 6)',\n    'lcm(6, 21)',\n    'lcm(6, 21, 5)'\n  ],\n  'seealso': [ 'gcd' ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/lcm.js\n ** module id = 243\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'log',\n  'category': 'Arithmetic',\n  'syntax': [\n    'log(x)',\n    'log(x, base)'\n  ],\n  'description': 'Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).',\n  'examples': [\n    'log(3.5)',\n    'a = log(2.4)',\n    'exp(a)',\n    '10 ^ 4',\n    'log(10000, 10)',\n    'log(10000) / log(10)',\n    'b = log(1024, 2)',\n    '2 ^ b'\n  ],\n  'seealso': [\n    'exp',\n    'log10'\n  ]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/log.js\n ** module id = 244\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'log10',\n  'category': 'Arithmetic',\n  'syntax': [\n    'log10(x)'\n  ],\n  'description': 'Compute the 10-base logarithm of a value.',\n  'examples': [\n    'log10(0.00001)',\n    'log10(10000)',\n    '10 ^ 4',\n    'log(10000) / log(10)',\n    'log(10000, 10)'\n  ],\n  'seealso': [\n    'exp',\n    'log'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/log10.js\n ** module id = 245\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'mod',\n  'category': 'Operators',\n  'syntax': [\n    'x % y',\n    'x mod y',\n    'mod(x, y)'\n  ],\n  'description':\n      'Calculates the modulus, the remainder of an integer division.',\n  'examples': [\n    '7 % 3',\n    '11 % 2',\n    '10 mod 4',\n    'function isOdd(x) = x % 2',\n    'isOdd(2)',\n    'isOdd(3)'\n  ],\n  'seealso': ['divide']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/mod.js\n ** module id = 246\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'multiply',\n  'category': 'Operators',\n  'syntax': [\n    'x * y',\n    'multiply(x, y)'\n  ],\n  'description': 'multiply two values.',\n  'examples': [\n    'a = 2.1 * 3.4',\n    'a / 3.4',\n    '2 * 3 + 4',\n    '2 * (3 + 4)',\n    '3 * 2.1 km'\n  ],\n  'seealso': [\n    'divide'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/multiply.js\n ** module id = 247\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'norm',\n  'category': 'Arithmetic',\n  'syntax': [\n    'norm(x)',\n    'norm(x, p)'\n  ],\n  'description': 'Calculate the norm of a number, vector or matrix.',\n  'examples': [\n    'abs(-3.5)',\n    'norm(-3.5)',\n    'norm(3 - 4i))',\n    'norm([1, 2, -3], Infinity)',\n    'norm([1, 2, -3], -Infinity)',\n    'norm([3, 4], 2)',\n    'norm([[1, 2], [3, 4]], 1)',\n    'norm([[1, 2], [3, 4]], \\'inf\\')',\n    'norm([[1, 2], [3, 4]], \\'fro\\')'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/norm.js\n ** module id = 248\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'nthRoot',\n  'category': 'Arithmetic',\n  'syntax': [\n    'nthRoot(a)',\n    'nthRoot(a, root)'\n  ],\n  'description': 'Calculate the nth root of a value. ' +\n      'The principal nth root of a positive real number A, ' +\n      'is the positive real solution of the equation \"x^root = A\".',\n  'examples': [\n    '4 ^ 3',\n    'nthRoot(64, 3)',\n    'nthRoot(9, 2)',\n    'sqrt(9)'\n  ],\n  'seealso': [\n    'sqrt',\n    'pow'\n  ]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/nthRoot.js\n ** module id = 249\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'pow',\n  'category': 'Operators',\n  'syntax': [\n    'x ^ y',\n    'pow(x, y)'\n  ],\n  'description':\n      'Calculates the power of x to y, x^y.',\n  'examples': [\n    '2^3 = 8',\n    '2*2*2',\n    '1 + e ^ (pi * i)'\n  ],\n  'seealso': [ 'multiply' ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/pow.js\n ** module id = 250\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'round',\n  'category': 'Arithmetic',\n  'syntax': [\n    'round(x)',\n    'round(x, n)'\n  ],\n  'description':\n      'round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.',\n  'examples': [\n    'round(3.2)',\n    'round(3.8)',\n    'round(-4.2)',\n    'round(-4.8)',\n    'round(pi, 3)',\n    'round(123.45678, 2)'\n  ],\n  'seealso': ['ceil', 'floor', 'fix']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/round.js\n ** module id = 251\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'sign',\n  'category': 'Arithmetic',\n  'syntax': [\n    'sign(x)'\n  ],\n  'description':\n      'Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.',\n  'examples': [\n    'sign(3.5)',\n    'sign(-4.2)',\n    'sign(0)'\n  ],\n  'seealso': [\n    'abs'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/sign.js\n ** module id = 252\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'sqrt',\n  'category': 'Arithmetic',\n  'syntax': [\n    'sqrt(x)'\n  ],\n  'description':\n      'Compute the square root value. If x = y * y, then y is the square root of x.',\n  'examples': [\n    'sqrt(25)',\n    '5 * 5',\n    'sqrt(-1)'\n  ],\n  'seealso': [\n    'square',\n    'multiply'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/sqrt.js\n ** module id = 253\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'square',\n  'category': 'Arithmetic',\n  'syntax': [\n    'square(x)'\n  ],\n  'description':\n      'Compute the square of a value. The square of x is x * x.',\n  'examples': [\n    'square(3)',\n    'sqrt(9)',\n    '3^2',\n    '3 * 3'\n  ],\n  'seealso': [\n    'multiply',\n    'pow',\n    'sqrt',\n    'cube'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/square.js\n ** module id = 254\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'subtract',\n  'category': 'Operators',\n  'syntax': [\n    'x - y',\n    'subtract(x, y)'\n  ],\n  'description': 'subtract two values.',\n  'examples': [\n    'a = 5.3 - 2',\n    'a + 2',\n    '2/3 - 1/6',\n    '2 * 3 - 3',\n    '2.1 km - 500m'\n  ],\n  'seealso': [\n    'add'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/subtract.js\n ** module id = 255\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'unaryMinus',\n  'category': 'Operators',\n  'syntax': [\n    '-x',\n    'unaryMinus(x)'\n  ],\n  'description':\n      'Inverse the sign of a value. Converts booleans and strings to numbers.',\n  'examples': [\n    '-4.5',\n    '-(-5.6)',\n    '-\"22\"'\n  ],\n  'seealso': [\n    'add', 'subtract', 'unaryPlus'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/unaryMinus.js\n ** module id = 256\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'unaryPlus',\n  'category': 'Operators',\n  'syntax': [\n    '+x',\n    'unaryPlus(x)'\n  ],\n  'description':\n      'Converts booleans and strings to numbers.',\n  'examples': [\n    '+true',\n    '+\"2\"'\n  ],\n  'seealso': [\n    'add', 'subtract', 'unaryMinus'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/unaryPlus.js\n ** module id = 257\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'xgcd',\n  'category': 'Arithmetic',\n  'syntax': [\n    'xgcd(a, b)'\n  ],\n  'description': 'Calculate the extended greatest common divisor for two values',\n  'examples': [\n    'xgcd(8, 12)',\n    'gcd(8, 12)',\n    'xgcd(36163, 21199)'\n  ],\n  'seealso': [ 'gcd', 'lcm' ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/arithmetic/xgcd.js\n ** module id = 258\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'bitAnd',\n  'category': 'Bitwise',\n  'syntax': [\n    'x & y',\n    'bitAnd(x, y)'\n  ],\n  'description': 'Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0',\n  'examples': [\n    '5 & 3',\n    'bitAnd(53, 131)',\n    '[1, 12, 31] & 42'\n  ],\n  'seealso': [\n    'bitNot', 'bitOr', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/bitwise/bitAnd.js\n ** module id = 259\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'bitNot',\n  'category': 'Bitwise',\n  'syntax': [\n    '~x',\n    'bitNot(x)'\n  ],\n  'description': 'Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.',\n  'examples': [\n    '~1',\n    '~2',\n    'bitNot([2, -3, 4])'\n  ],\n  'seealso': [\n    'bitAnd', 'bitOr', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/bitwise/bitNot.js\n ** module id = 260\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'bitOr',\n  'category': 'Bitwise',\n  'syntax': [\n    'x | y',\n    'bitOr(x, y)'\n  ],\n  'description': 'Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.',\n  'examples': [\n    '5 | 3',\n    'bitOr([1, 2, 3], 4)'\n  ],\n  'seealso': [\n    'bitAnd', 'bitNot', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/bitwise/bitOr.js\n ** module id = 261\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'bitXor',\n  'category': 'Bitwise',\n  'syntax': [\n    'bitXor(x, y)'\n  ],\n  'description': 'Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.',\n  'examples': [\n    'bitOr(1, 2)',\n    'bitXor([2, 3, 4], 4)'\n  ],\n  'seealso': [\n    'bitAnd', 'bitNot', 'bitOr', 'leftShift', 'rightArithShift', 'rightLogShift'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/bitwise/bitXor.js\n ** module id = 262\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'leftShift',\n  'category': 'Bitwise',\n  'syntax': [\n    'x << y',\n    'leftShift(x, y)'\n  ],\n  'description': 'Bitwise left logical shift of a value x by y number of bits.',\n  'examples': [\n    '4 << 1',\n    '8 >> 1'\n  ],\n  'seealso': [\n    'bitAnd', 'bitNot', 'bitOr', 'bitXor', 'rightArithShift', 'rightLogShift'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/bitwise/leftShift.js\n ** module id = 263\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'rightArithShift',\n  'category': 'Bitwise',\n  'syntax': [\n    'x >> y',\n    'leftShift(x, y)'\n  ],\n  'description': 'Bitwise right arithmetic shift of a value x by y number of bits.',\n  'examples': [\n    '8 >> 1',\n    '4 << 1',\n    '-12 >> 2'\n  ],\n  'seealso': [\n    'bitAnd', 'bitNot', 'bitOr', 'bitXor', 'leftShift', 'rightLogShift'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/bitwise/rightArithShift.js\n ** module id = 264\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'rightLogShift',\n  'category': 'Bitwise',\n  'syntax': [\n    'x >> y',\n    'leftShift(x, y)'\n  ],\n  'description': 'Bitwise right logical shift of a value x by y number of bits.',\n  'examples': [\n    '8 >>> 1',\n    '4 << 1',\n    '-12 >>> 2'\n  ],\n  'seealso': [\n    'bitAnd', 'bitNot', 'bitOr', 'bitXor', 'leftShift', 'rightArithShift'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/bitwise/rightLogShift.js\n ** module id = 265\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'arg',\n  'category': 'Complex',\n  'syntax': [\n    'arg(x)'\n  ],\n  'description':\n      'Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).',\n  'examples': [\n    'arg(2 + 2i)',\n    'atan2(3, 2)',\n    'arg(2 + 3i)'\n  ],\n  'seealso': [\n    're',\n    'im',\n    'conj',\n    'abs'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/complex/arg.js\n ** module id = 266\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'conj',\n  'category': 'Complex',\n  'syntax': [\n    'conj(x)'\n  ],\n  'description':\n      'Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.',\n  'examples': [\n    'conj(2 + 3i)',\n    'conj(2 - 3i)',\n    'conj(-5.2i)'\n  ],\n  'seealso': [\n    're',\n    'im',\n    'abs',\n    'arg'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/complex/conj.js\n ** module id = 267\n ** module chunks = 0\n **/","module.exports = {\n  'name': 're',\n  'category': 'Complex',\n  'syntax': [\n    're(x)'\n  ],\n  'description': 'Get the real part of a complex number.',\n  'examples': [\n    're(2 + 3i)',\n    'im(2 + 3i)',\n    're(-5.2i)',\n    're(2.4)'\n  ],\n  'seealso': [\n    'im',\n    'conj',\n    'abs',\n    'arg'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/complex/re.js\n ** module id = 268\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'im',\n  'category': 'Complex',\n  'syntax': [\n    'im(x)'\n  ],\n  'description': 'Get the imaginary part of a complex number.',\n  'examples': [\n    'im(2 + 3i)',\n    're(2 + 3i)',\n    'im(-5.2i)',\n    'im(2.4)'\n  ],\n  'seealso': [\n    're',\n    'conj',\n    'abs',\n    'arg'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/complex/im.js\n ** module id = 269\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'bignumber',\n  'category': 'Type',\n  'syntax': [\n    'bignumber(x)'\n  ],\n  'description':\n      'Create a big number from a number or string.',\n  'examples': [\n    '0.1 + 0.2',\n    'bignumber(0.1) + bignumber(0.2)',\n    'bignumber(\"7.2\")',\n    'bignumber(\"7.2e500\")',\n    'bignumber([0.1, 0.2, 0.3])'\n  ],\n  'seealso': [\n    'boolean', 'complex', 'index', 'matrix', 'string', 'unit'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/construction/bignumber.js\n ** module id = 270\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'boolean',\n  'category': 'Type',\n  'syntax': [\n    'x',\n    'boolean(x)'\n  ],\n  'description':\n      'Convert a string or number into a boolean.',\n  'examples': [\n    'boolean(0)',\n    'boolean(1)',\n    'boolean(3)',\n    'boolean(\"true\")',\n    'boolean(\"false\")',\n    'boolean([1, 0, 1, 1])'\n  ],\n  'seealso': [\n    'bignumber', 'complex', 'index', 'matrix', 'number', 'string', 'unit'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/construction/boolean.js\n ** module id = 271\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'complex',\n  'category': 'Type',\n  'syntax': [\n    'complex()',\n    'complex(re, im)',\n    'complex(string)'\n  ],\n  'description':\n      'Create a complex number.',\n  'examples': [\n    'complex()',\n    'complex(2, 3)',\n    'complex(\"7 - 2i\")'\n  ],\n  'seealso': [\n    'bignumber', 'boolean', 'index', 'matrix', 'number', 'string', 'unit'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/construction/complex.js\n ** module id = 272\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'index',\n  'category': 'Type',\n  'syntax': [\n    '[start]',\n    '[start:end]',\n    '[start:step:end]',\n    '[start1, start 2, ...]',\n    '[start1:end1, start2:end2, ...]',\n    '[start1:step1:end1, start2:step2:end2, ...]'\n  ],\n  'description':\n      'Create an index to get or replace a subset of a matrix',\n  'examples': [\n    '[]',\n    '[1, 2, 3]',\n    'A = [1, 2, 3; 4, 5, 6]',\n    'A[1, :]',\n    'A[1, 2] = 50',\n    'A[0:2, 0:2] = ones(2, 2)'\n  ],\n  'seealso': [\n    'bignumber', 'boolean', 'complex', 'matrix,', 'number', 'range', 'string', 'unit'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/construction/index.js\n ** module id = 273\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'matrix',\n  'category': 'Type',\n  'syntax': [\n    '[]',\n    '[a1, b1, ...; a2, b2, ...]',\n    'matrix()',\n    'matrix([...])'\n  ],\n  'description':\n      'Create a matrix.',\n  'examples': [\n    '[]',\n    '[1, 2, 3]',\n    '[1, 2, 3; 4, 5, 6]',\n    'matrix()',\n    'matrix([3, 4])'\n  ],\n  'seealso': [\n    'bignumber', 'boolean', 'complex', 'index', 'number', 'string', 'unit'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/construction/matrix.js\n ** module id = 274\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'number',\n  'category': 'Type',\n  'syntax': [\n    'x',\n    'number(x)'\n  ],\n  'description':\n      'Create a number or convert a string or boolean into a number.',\n  'examples': [\n    '2',\n    '2e3',\n    '4.05',\n    'number(2)',\n    'number(\"7.2\")',\n    'number(true)',\n    'number([true, false, true, true])',\n    'number(\"52cm\", \"m\")'\n  ],\n  'seealso': [\n    'bignumber', 'boolean', 'complex', 'index', 'matrix', 'string', 'unit'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/construction/number.js\n ** module id = 275\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'string',\n  'category': 'Type',\n  'syntax': [\n    '\"text\"',\n    'string(x)'\n  ],\n  'description':\n      'Create a string or convert a value to a string',\n  'examples': [\n    '\"Hello World!\"',\n    'string(4.2)',\n    'string(3 + 2i)'\n  ],\n  'seealso': [\n    'bignumber', 'boolean', 'complex', 'index', 'matrix', 'number', 'unit'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/construction/string.js\n ** module id = 276\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'unit',\n  'category': 'Type',\n  'syntax': [\n    'value unit',\n    'unit(value, unit)',\n    'unit(string)'\n  ],\n  'description':\n      'Create a unit.',\n  'examples': [\n    '5.5 mm',\n    '3 inch',\n    'unit(7.1, \"kilogram\")',\n    'unit(\"23 deg\")'\n  ],\n  'seealso': [\n    'bignumber', 'boolean', 'complex', 'index', 'matrix', 'number', 'string'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/construction/unit.js\n ** module id = 277\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'eval',\n  'category': 'Expression',\n  'syntax': [\n    'eval(expression)',\n    'eval([expr1, expr2, expr3, ...])'\n  ],\n  'description': 'Evaluate an expression or an array with expressions.',\n  'examples': [\n    'eval(\"2 + 3\")',\n    'eval(\"sqrt(\" + 4 + \")\")'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/expression/eval.js\n ** module id = 278\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'help',\n  'category': 'Expression',\n  'syntax': [\n    'help(object)',\n    'help(string)'\n  ],\n  'description': 'Display documentation on a function or data type.',\n  'examples': [\n    'help(sqrt)',\n    'help(\"complex\")'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/expression/help.js\n ** module id = 279\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'and',\n  'category': 'Logical',\n  'syntax': [\n    'x and y',\n    'and(x, y)'\n  ],\n  'description': 'Logical and. Test whether two values are both defined with a nonzero/nonempty value.',\n  'examples': [\n    'true and false',\n    'true and true',\n    '2 and 4'\n  ],\n  'seealso': [\n    'not', 'or', 'xor'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/logical/and.js\n ** module id = 280\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'not',\n  'category': 'Logical',\n  'syntax': [\n    '!x',\n    'not x',\n    'not(x)'\n  ],\n  'description': 'Logical not. Flips the boolean value of given argument.',\n  'examples': [\n    '!true',\n    'not false',\n    '!2',\n    '!0'\n  ],\n  'seealso': [\n    'and', 'or', 'xor'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/logical/not.js\n ** module id = 281\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'or',\n  'category': 'Logical',\n  'syntax': [\n    'x or y',\n    'or(x, y)'\n  ],\n  'description': 'Logical or. Test if at least one value is defined with a nonzero/nonempty value.',\n  'examples': [\n    'true or false',\n    'false or false',\n    '0 or 4'\n  ],\n  'seealso': [\n    'not', 'and', 'xor'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/logical/or.js\n ** module id = 282\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'xor',\n  'category': 'Logical',\n  'syntax': [\n    'x or y',\n    'or(x, y)'\n  ],\n  'description': 'Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.',\n  'examples': [\n    'true xor false',\n    'false xor false',\n    'true xor true',\n    '0 or 4'\n  ],\n  'seealso': [\n    'not', 'and', 'or'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/logical/xor.js\n ** module id = 283\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'concat',\n  'category': 'Matrix',\n  'syntax': [\n    'concat(A, B, C, ...)',\n    'concat(A, B, C, ..., dim)'\n  ],\n  'description': 'Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.',\n  'examples': [\n    'A = [1, 2; 5, 6]',\n    'B = [3, 4; 7, 8]',\n    'concat(A, B)',\n    'concat(A, B, 1)',\n    'concat(A, B, 2)'\n  ],\n  'seealso': [\n    'det', 'diag', 'eye', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/concat.js\n ** module id = 284\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'cross',\n  'category': 'Matrix',\n  'syntax': [\n    'cross(A, B)'\n  ],\n  'description': 'Calculate the cross product for two vectors in three dimensional space.',\n  'examples': [\n    'cross([1, 1, 0],  [0, 1, 1])',\n    'cross([3, -3, 1], [4, 9, 2])',\n    'cross([2, 3, 4],  [5, 6, 7])'\n  ],\n  'seealso': [\n    'multiply',\n    'dot'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/cross.js\n ** module id = 285\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'det',\n  'category': 'Matrix',\n  'syntax': [\n    'det(x)'\n  ],\n  'description': 'Calculate the determinant of a matrix',\n  'examples': [\n    'det([1, 2; 3, 4])',\n    'det([-2, 2, 3; -1, 1, 3; 2, 0, -1])'\n  ],\n  'seealso': [\n    'concat', 'diag', 'eye', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/det.js\n ** module id = 286\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'diag',\n  'category': 'Matrix',\n  'syntax': [\n    'diag(x)',\n    'diag(x, k)'\n  ],\n  'description': 'Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.',\n  'examples': [\n    'diag(1:3)',\n    'diag(1:3, 1)',\n    'a = [1, 2, 3; 4, 5, 6; 7, 8, 9]',\n    'diag(a)'\n  ],\n  'seealso': [\n    'concat', 'det', 'eye', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/diag.js\n ** module id = 287\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'dot',\n  'category': 'Matrix',\n  'syntax': [\n    'dot(A, B)'\n  ],\n  'description': 'Calculate the dot product of two vectors. ' +\n      'The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] ' +\n      'is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn',\n  'examples': [\n    'dot([2, 4, 1], [2, 2, 3])',\n    '[2, 4, 1] * [2, 2, 3]'\n  ],\n  'seealso': [\n    'multiply',\n    'cross'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/dot.js\n ** module id = 288\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'eye',\n  'category': 'Matrix',\n  'syntax': [\n    'eye(n)',\n    'eye(m, n)',\n    'eye([m, n])',\n    'eye'\n  ],\n  'description': 'Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.',\n  'examples': [\n    'eye(3)',\n    'eye(3, 5)',\n    'a = [1, 2, 3; 4, 5, 6]',\n    'eye(size(a))'\n  ],\n  'seealso': [\n    'concat', 'det', 'diag', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/eye.js\n ** module id = 289\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'flatten',\n  'category': 'Matrix',\n  'syntax': [\n    'flatten(x)'\n  ],\n  'description': 'Flatten a multi dimensional matrix into a single dimensional matrix.',\n  'examples': [\n    'a = [1, 2, 3; 4, 5, 6]',\n    'size(a)',\n    'b = flatten(a)',\n    'size(b)'\n  ],\n  'seealso': [\n    'concat', 'resize', 'size', 'squeeze'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/flatten.js\n ** module id = 290\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'inv',\n  'category': 'Matrix',\n  'syntax': [\n    'inv(x)'\n  ],\n  'description': 'Calculate the inverse of a matrix',\n  'examples': [\n    'inv([1, 2; 3, 4])',\n    'inv(4)',\n    '1 / 4'\n  ],\n  'seealso': [\n    'concat', 'det', 'diag', 'eye', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/inv.js\n ** module id = 291\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'ones',\n  'category': 'Matrix',\n  'syntax': [\n    'ones(m)',\n    'ones(m, n)',\n    'ones(m, n, p, ...)',\n    'ones([m])',\n    'ones([m, n])',\n    'ones([m, n, p, ...])',\n    'ones'\n  ],\n  'description': 'Create a matrix containing ones.',\n  'examples': [\n    'ones(3)',\n    'ones(3, 5)',\n    'ones([2,3]) * 4.5',\n    'a = [1, 2, 3; 4, 5, 6]',\n    'ones(size(a))'\n  ],\n  'seealso': [\n    'concat', 'det', 'diag', 'eye', 'inv', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/ones.js\n ** module id = 292\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'range',\n  'category': 'Type',\n  'syntax': [\n    'start:end',\n    'start:step:end',\n    'range(start, end)',\n    'range(start, end, step)',\n    'range(string)'\n  ],\n  'description':\n      'Create a range. Lower bound of the range is included, upper bound is excluded.',\n  'examples': [\n    '1:5',\n    '3:-1:-3',\n    'range(3, 7)',\n    'range(0, 12, 2)',\n    'range(\"4:10\")',\n    'a = [1, 2, 3, 4; 5, 6, 7, 8]',\n    'a[1:2, 1:2]'\n  ],\n  'seealso': [\n    'concat', 'det', 'diag', 'eye', 'inv', 'ones', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/range.js\n ** module id = 293\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'resize',\n  'category': 'Matrix',\n  'syntax': [\n    'resize(x, size)',\n    'resize(x, size, defaultValue)'\n  ],\n  'description': 'Resize a matrix.',\n  'examples': [\n    'resize([1,2,3,4,5], [3])',\n    'resize([1,2,3], [5])',\n    'resize([1,2,3], [5], -1)',\n    'resize(2, [2, 3])',\n    'resize(\"hello\", [8], \"!\")'\n  ],\n  'seealso': [\n    'size', 'subset', 'squeeze'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/resize.js\n ** module id = 294\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'size',\n  'category': 'Matrix',\n  'syntax': [\n    'size(x)'\n  ],\n  'description': 'Calculate the size of a matrix.',\n  'examples': [\n    'size(2.3)',\n    'size(\"hello world\")',\n    'a = [1, 2; 3, 4; 5, 6]',\n    'size(a)',\n    'size(1:6)'\n  ],\n  'seealso': [\n    'concat', 'det', 'diag', 'eye', 'inv', 'ones', 'range', 'squeeze', 'subset', 'trace', 'transpose', 'zeros'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/size.js\n ** module id = 295\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'squeeze',\n  'category': 'Matrix',\n  'syntax': [\n    'squeeze(x)'\n  ],\n  'description': 'Remove inner and outer singleton dimensions from a matrix.',\n  'examples': [\n    'a = zeros(3,2,1)',\n    'size(squeeze(a))',\n    'b = zeros(1,1,3)',\n    'size(squeeze(b))'\n  ],\n  'seealso': [\n    'concat', 'det', 'diag', 'eye', 'inv', 'ones', 'range', 'size', 'subset', 'trace', 'transpose', 'zeros'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/squeeze.js\n ** module id = 296\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'subset',\n  'category': 'Matrix',\n  'syntax': [\n    'value(index)',\n    'value(index) = replacement',\n    'subset(value, [index])',\n    'subset(value, [index], replacement)'\n  ],\n  'description': 'Get or set a subset of a matrix or string. ' +\n      'Indexes are one-based. ' +\n      'Both the ranges lower-bound and upper-bound are included.',\n  'examples': [\n    'd = [1, 2; 3, 4]',\n    'e = []',\n    'e[1, 1:2] = [5, 6]',\n    'e[2, :] = [7, 8]',\n    'f = d * e',\n    'f[2, 1]',\n    'f[:, 1]'\n  ],\n  'seealso': [\n    'concat', 'det', 'diag', 'eye', 'inv', 'ones', 'range', 'size', 'squeeze', 'trace', 'transpose', 'zeros'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/subset.js\n ** module id = 297\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'trace',\n  'category': 'Matrix',\n  'syntax': [\n    'trace(A)'\n  ],\n  'description': 'Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.',\n  'examples': [\n    'A = [1, 2, 3; -1, 2, 3; 2, 0, 3]',\n    'trace(A)'\n  ],\n  'seealso': [\n    'concat', 'det', 'diag', 'eye', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'transpose', 'zeros'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/trace.js\n ** module id = 298\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'transpose',\n  'category': 'Matrix',\n  'syntax': [\n    'x\\'',\n    'transpose(x)'\n  ],\n  'description': 'Transpose a matrix',\n  'examples': [\n    'a = [1, 2, 3; 4, 5, 6]',\n    'a\\'',\n    'transpose(a)'\n  ],\n  'seealso': [\n    'concat', 'det', 'diag', 'eye', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'zeros'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/transpose.js\n ** module id = 299\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'zeros',\n  'category': 'Matrix',\n  'syntax': [\n    'zeros(m)',\n    'zeros(m, n)',\n    'zeros(m, n, p, ...)',\n    'zeros([m])',\n    'zeros([m, n])',\n    'zeros([m, n, p, ...])',\n    'zeros'\n  ],\n  'description': 'Create a matrix containing zeros.',\n  'examples': [\n    'zeros(3)',\n    'zeros(3, 5)',\n    'a = [1, 2, 3; 4, 5, 6]',\n    'zeros(size(a))'\n  ],\n  'seealso': [\n    'concat', 'det', 'diag', 'eye', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/matrix/zeros.js\n ** module id = 300\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'combinations',\n  'category': 'Probability',\n  'syntax': [\n    'combinations(n, k)'\n  ],\n  'description': 'Compute the number of combinations of n items taken k at a time',\n  'examples': [\n    'combinations(7, 5)'\n  ],\n  'seealso': ['permutations', 'factorial']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/probability/combinations.js\n ** module id = 301\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'factorial',\n  'category': 'Probability',\n  'syntax': [\n    'n!',\n    'factorial(n)'\n  ],\n  'description': 'Compute the factorial of a value',\n  'examples': [\n    '5!',\n    '5 * 4 * 3 * 2 * 1',\n    '3!'\n  ],\n  'seealso': ['combinations', 'permutations', 'gamma']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/probability/factorial.js\n ** module id = 302\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'gamma',\n  'category': 'Probability',\n  'syntax': [\n    'gamma(n)'\n  ],\n  'description': 'Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.',\n  'examples': [\n    'gamma(4)',\n    '3!',\n    'gamma(1/2)',\n    'sqrt(pi)'\n  ],\n  'seealso': ['factorial']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/probability/gamma.js\n ** module id = 303\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'permutations',\n  'category': 'Probability',\n  'syntax': [\n    'permutations(n)',\n    'permutations(n, k)'\n  ],\n  'description': 'Compute the number of permutations of n items taken k at a time',\n  'examples': [\n    'permutations(5)',\n    'permutations(5, 3)'\n  ],\n  'seealso': ['combinations', 'factorial']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/probability/permutations.js\n ** module id = 304\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'pickRandom',\n  'category': 'Probability',\n  'syntax': [\n    'pickRandom(array)'\n  ],\n  'description':\n      'Pick a random entry from a given array.',\n  'examples': [\n    'pickRandom(0:10)',\n    'pickRandom([1, 3, 1, 6])'\n  ],\n  'seealso': ['random', 'randomInt']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/probability/pickRandom.js\n ** module id = 305\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'random',\n  'category': 'Probability',\n  'syntax': [\n    'random()',\n    'random(max)',\n    'random(min, max)',\n    'random(size)',\n    'random(size, max)',\n    'random(size, min, max)'\n  ],\n  'description':\n      'Return a random number.',\n  'examples': [\n    'random()',\n    'random(10, 20)',\n    'random([2, 3])'\n  ],\n  'seealso': ['pickRandom', 'randomInt']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/probability/random.js\n ** module id = 306\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'randInt',\n  'category': 'Probability',\n  'syntax': [\n    'randInt()',\n    'randInt(max)',\n    'randInt(min, max)',\n    'randInt(size)',\n    'randInt(size, max)',\n    'randInt(size, min, max)'\n  ],\n  'description':\n      'Return a random integer number',\n  'examples': [\n    'randInt()',\n    'randInt(10, 20)',\n    'randInt([2, 3], 10)'\n  ],\n  'seealso': ['pickRandom', 'random']\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/probability/randomInt.js\n ** module id = 307\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'compare',\n  'category': 'Relational',\n  'syntax': [\n    'compare(x, y)'\n  ],\n  'description':\n      'Compare two values. Returns 1 if x is larger than y, -1 if x is smaller than y, and 0 if x and y are equal.',\n  'examples': [\n    'compare(2, 3)',\n    'compare(3, 2)',\n    'compare(2, 2)',\n    'compare(5cm, 40mm)',\n    'compare(2, [1, 2, 3])'\n  ],\n  'seealso': [\n    'equal', 'unequal', 'smaller', 'smallerEq', 'largerEq'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/relational/compare.js\n ** module id = 308\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'deepEqual',\n  'category': 'Relational',\n  'syntax': [\n    'deepEqual(x, y)'\n  ],\n  'description':\n      'Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.',\n  'examples': [\n    '[1,3,4] == [1,3,4]',\n    '[1,3,4] == [1,3]'\n  ],\n  'seealso': [\n    'equal', 'unequal', 'smaller', 'larger', 'smallerEq', 'largerEq', 'compare'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/relational/deepEqual.js\n ** module id = 309\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'equal',\n  'category': 'Relational',\n  'syntax': [\n    'x == y',\n    'equal(x, y)'\n  ],\n  'description':\n      'Check equality of two values. Returns true if the values are equal, and false if not.',\n  'examples': [\n    '2+2 == 3',\n    '2+2 == 4',\n    'a = 3.2',\n    'b = 6-2.8',\n    'a == b',\n    '50cm == 0.5m'\n  ],\n  'seealso': [\n    'unequal', 'smaller', 'larger', 'smallerEq', 'largerEq', 'compare', 'deepEqual'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/relational/equal.js\n ** module id = 310\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'larger',\n  'category': 'Relational',\n  'syntax': [\n    'x > y',\n    'larger(x, y)'\n  ],\n  'description':\n      'Check if value x is larger than y. Returns true if x is larger than y, and false if not.',\n  'examples': [\n    '2 > 3',\n    '5 > 2*2',\n    'a = 3.3',\n    'b = 6-2.8',\n    '(a > b)',\n    '(b < a)',\n    '5 cm > 2 inch'\n  ],\n  'seealso': [\n    'equal', 'unequal', 'smaller', 'smallerEq', 'largerEq', 'compare'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/relational/larger.js\n ** module id = 311\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'largerEq',\n  'category': 'Relational',\n  'syntax': [\n    'x >= y',\n    'largerEq(x, y)'\n  ],\n  'description':\n      'Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.',\n  'examples': [\n    '2 > 1+1',\n    '2 >= 1+1',\n    'a = 3.2',\n    'b = 6-2.8',\n    '(a > b)'\n  ],\n  'seealso': [\n    'equal', 'unequal', 'smallerEq', 'smaller', 'largerEq', 'compare'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/relational/largerEq.js\n ** module id = 312\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'smaller',\n  'category': 'Relational',\n  'syntax': [\n    'x < y',\n    'smaller(x, y)'\n  ],\n  'description':\n      'Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.',\n  'examples': [\n    '2 < 3',\n    '5 < 2*2',\n    'a = 3.3',\n    'b = 6-2.8',\n    '(a < b)',\n    '5 cm < 2 inch'\n  ],\n  'seealso': [\n    'equal', 'unequal', 'larger', 'smallerEq', 'largerEq', 'compare'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/relational/smaller.js\n ** module id = 313\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'smallerEq',\n  'category': 'Relational',\n  'syntax': [\n    'x <= y',\n    'smallerEq(x, y)'\n  ],\n  'description':\n      'Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.',\n  'examples': [\n    '2 < 1+1',\n    '2 <= 1+1',\n    'a = 3.2',\n    'b = 6-2.8',\n    '(a < b)'\n  ],\n  'seealso': [\n    'equal', 'unequal', 'larger', 'smaller', 'largerEq', 'compare'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/relational/smallerEq.js\n ** module id = 314\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'unequal',\n  'category': 'Relational',\n  'syntax': [\n    'x != y',\n    'unequal(x, y)'\n  ],\n  'description':\n      'Check unequality of two values. Returns true if the values are unequal, and false if they are equal.',\n  'examples': [\n    '2+2 != 3',\n    '2+2 != 4',\n    'a = 3.2',\n    'b = 6-2.8',\n    'a != b',\n    '50cm != 0.5m',\n    '5 cm != 2 inch'\n  ],\n  'seealso': [\n    'equal', 'smaller', 'larger', 'smallerEq', 'largerEq', 'compare', 'deepEqual'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/relational/unequal.js\n ** module id = 315\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'max',\n  'category': 'Statistics',\n  'syntax': [\n    'max(a, b, c, ...)',\n    'max(A)',\n    'max(A, dim)'\n  ],\n  'description': 'Compute the maximum value of a list of values.',\n  'examples': [\n    'max(2, 3, 4, 1)',\n    'max([2, 3, 4, 1])',\n    'max([2, 5; 4, 3])',\n    'max([2, 5; 4, 3], 1)',\n    'max([2, 5; 4, 3], 2)',\n    'max(2.7, 7.1, -4.5, 2.0, 4.1)',\n    'min(2.7, 7.1, -4.5, 2.0, 4.1)'\n  ],\n  'seealso': [\n    'mean',\n    'median',\n    'min',\n    'prod',\n    'std',\n    'sum',\n    'var'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/statistics/max.js\n ** module id = 316\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'mean',\n  'category': 'Statistics',\n  'syntax': [\n    'mean(a, b, c, ...)',\n    'mean(A)',\n    'mean(A, dim)'\n  ],\n  'description': 'Compute the arithmetic mean of a list of values.',\n  'examples': [\n    'mean(2, 3, 4, 1)',\n    'mean([2, 3, 4, 1])',\n    'mean([2, 5; 4, 3])',\n    'mean([2, 5; 4, 3], 1)',\n    'mean([2, 5; 4, 3], 2)',\n    'mean([1.0, 2.7, 3.2, 4.0])'\n  ],\n  'seealso': [\n    'max',\n    'median',\n    'min',\n    'prod',\n    'std',\n    'sum',\n    'var'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/statistics/mean.js\n ** module id = 317\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'median',\n  'category': 'Statistics',\n  'syntax': [\n    'median(a, b, c, ...)',\n    'median(A)'\n  ],\n  'description': 'Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.',\n  'examples': [\n    'median(5, 2, 7)',\n    'median([3, -1, 5, 7])'\n  ],\n  'seealso': [\n    'max',\n    'mean',\n    'min',\n    'prod',\n    'std',\n    'sum',\n    'var'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/statistics/median.js\n ** module id = 318\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'min',\n  'category': 'Statistics',\n  'syntax': [\n    'min(a, b, c, ...)',\n    'min(A)',\n    'min(A, dim)'\n  ],\n  'description': 'Compute the minimum value of a list of values.',\n  'examples': [\n    'min(2, 3, 4, 1)',\n    'min([2, 3, 4, 1])',\n    'min([2, 5; 4, 3])',\n    'min([2, 5; 4, 3], 1)',\n    'min([2, 5; 4, 3], 2)',\n    'min(2.7, 7.1, -4.5, 2.0, 4.1)',\n    'max(2.7, 7.1, -4.5, 2.0, 4.1)'\n  ],\n  'seealso': [\n    'max',\n    'mean',\n    'median',\n    'prod',\n    'std',\n    'sum',\n    'var'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/statistics/min.js\n ** module id = 319\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'prod',\n  'category': 'Statistics',\n  'syntax': [\n    'prod(a, b, c, ...)',\n    'prod(A)'\n  ],\n  'description': 'Compute the product of all values.',\n  'examples': [\n    'prod(2, 3, 4)',\n    'prod([2, 3, 4])',\n    'prod([2, 5; 4, 3])'\n  ],\n  'seealso': [\n    'max',\n    'mean',\n    'min',\n    'median',\n    'min',\n    'std',\n    'sum',\n    'var'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/statistics/prod.js\n ** module id = 320\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'std',\n  'category': 'Statistics',\n  'syntax': [\n    'std(a, b, c, ...)',\n    'std(A)',\n    'std(A, normalization)'\n  ],\n  'description': 'Compute the standard deviation of all values, defined as std(A) = sqrt(var(A)). Optional parameter normalization can be \"unbiased\" (default), \"uncorrected\", or \"biased\".',\n  'examples': [\n    'std(2, 4, 6)',\n    'std([2, 4, 6, 8])',\n    'std([2, 4, 6, 8], \"uncorrected\")',\n    'std([2, 4, 6, 8], \"biased\")',\n    'std([1, 2, 3; 4, 5, 6])'\n  ],\n  'seealso': [\n    'max',\n    'mean',\n    'min',\n    'median',\n    'min',\n    'prod',\n    'sum',\n    'var'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/statistics/std.js\n ** module id = 321\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'sum',\n  'category': 'Statistics',\n  'syntax': [\n    'sum(a, b, c, ...)',\n    'sum(A)'\n  ],\n  'description': 'Compute the sum of all values.',\n  'examples': [\n    'sum(2, 3, 4, 1)',\n    'sum([2, 3, 4, 1])',\n    'sum([2, 5; 4, 3])'\n  ],\n  'seealso': [\n    'max',\n    'mean',\n    'median',\n    'min',\n    'prod',\n    'std',\n    'sum',\n    'var'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/statistics/sum.js\n ** module id = 322\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'var',\n  'category': 'Statistics',\n  'syntax': [\n    'var(a, b, c, ...)',\n    'var(A)',\n    'var(A, normalization)'\n  ],\n  'description': 'Compute the variance of all values. Optional parameter normalization can be \"unbiased\" (default), \"uncorrected\", or \"biased\".',\n  'examples': [\n    'var(2, 4, 6)',\n    'var([2, 4, 6, 8])',\n    'var([2, 4, 6, 8], \"uncorrected\")',\n    'var([2, 4, 6, 8], \"biased\")',\n    'var([1, 2, 3; 4, 5, 6])'\n  ],\n  'seealso': [\n    'max',\n    'mean',\n    'min',\n    'median',\n    'min',\n    'prod',\n    'std',\n    'sum'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/statistics/var.js\n ** module id = 323\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'acos',\n  'category': 'Trigonometry',\n  'syntax': [\n    'acos(x)'\n  ],\n  'description': 'Compute the inverse cosine of a value in radians.',\n  'examples': [\n    'acos(0.5)',\n    'acos(cos(2.3))'\n  ],\n  'seealso': [\n    'cos',\n    'atan',\n    'asin'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/acos.js\n ** module id = 324\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'acosh',\n  'category': 'Trigonometry',\n  'syntax': [\n    'acosh(x)'\n  ],\n  'description': 'Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.',\n  'examples': [\n    'acosh(1.5)'\n  ],\n  'seealso': [\n    'cosh',\n    'asinh',\n    'atanh'\n  ]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/acosh.js\n ** module id = 325\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'acot',\n  'category': 'Trigonometry',\n  'syntax': [\n    'acot(x)'\n  ],\n  'description': 'Calculate the inverse cotangent of a value.',\n  'examples': [\n    'acot(0.5)',\n    'acot(cot(0.5))',\n    'acot(2)'\n  ],\n  'seealso': [\n    'cot',\n    'atan'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/acot.js\n ** module id = 326\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'acoth',\n  'category': 'Trigonometry',\n  'syntax': [\n    'acoth(x)'\n  ],\n  'description': 'Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.',\n  'examples': [\n    'acoth(0.5)'\n  ],\n  'seealso': [\n    'acsch',\n    'asech'\n  ]\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/acoth.js\n ** module id = 327\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'acsc',\n  'category': 'Trigonometry',\n  'syntax': [\n    'acsc(x)'\n  ],\n  'description': 'Calculate the inverse cotangent of a value.',\n  'examples': [\n    'acsc(0.5)',\n    'acsc(csc(0.5))',\n    'acsc(2)'\n  ],\n  'seealso': [\n    'csc',\n    'asin',\n    'asec'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/acsc.js\n ** module id = 328\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'acsch',\n  'category': 'Trigonometry',\n  'syntax': [\n    'acsch(x)'\n  ],\n  'description': 'Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.',\n  'examples': [\n    'acsch(0.5)'\n  ],\n  'seealso': [\n    'asech',\n    'acoth'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/acsch.js\n ** module id = 329\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'asec',\n  'category': 'Trigonometry',\n  'syntax': [\n    'asec(x)'\n  ],\n  'description': 'Calculate the inverse secant of a value.',\n  'examples': [\n    'asec(0.5)',\n    'asec(sec(0.5))',\n    'asec(2)'\n  ],\n  'seealso': [\n    'acos',\n    'acot',\n    'acsc'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/asec.js\n ** module id = 330\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'asech',\n  'category': 'Trigonometry',\n  'syntax': [\n    'asech(x)'\n  ],\n  'description': 'Calculate the inverse secant of a value.',\n  'examples': [\n    'asech(0.5)'\n  ],\n  'seealso': [\n    'acsch',\n    'acoth'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/asech.js\n ** module id = 331\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'asin',\n  'category': 'Trigonometry',\n  'syntax': [\n    'asin(x)'\n  ],\n  'description': 'Compute the inverse sine of a value in radians.',\n  'examples': [\n    'asin(0.5)',\n    'asin(sin(2.3))'\n  ],\n  'seealso': [\n    'sin',\n    'acos',\n    'atan'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/asin.js\n ** module id = 332\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'asinh',\n  'category': 'Trigonometry',\n  'syntax': [\n    'asinh(x)'\n  ],\n  'description': 'Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.',\n  'examples': [\n    'asinh(0.5)'\n  ],\n  'seealso': [\n    'acosh',\n    'atanh'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/asinh.js\n ** module id = 333\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'atan',\n  'category': 'Trigonometry',\n  'syntax': [\n    'atan(x)'\n  ],\n  'description': 'Compute the inverse tangent of a value in radians.',\n  'examples': [\n    'atan(0.5)',\n    'atan(tan(2.3))'\n  ],\n  'seealso': [\n    'tan',\n    'acos',\n    'asin'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/atan.js\n ** module id = 334\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'atanh',\n  'category': 'Trigonometry',\n  'syntax': [\n    'atanh(x)'\n  ],\n  'description': 'Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.',\n  'examples': [\n    'atanh(0.5)'\n  ],\n  'seealso': [\n    'acosh',\n    'asinh'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/atanh.js\n ** module id = 335\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'atan2',\n  'category': 'Trigonometry',\n  'syntax': [\n    'atan2(y, x)'\n  ],\n  'description':\n      'Computes the principal value of the arc tangent of y/x in radians.',\n  'examples': [\n    'atan2(2, 2) / pi',\n    'angle = 60 deg in rad',\n    'x = cos(angle)',\n    'y = sin(angle)',\n    'atan2(y, x)'\n  ],\n  'seealso': [\n    'sin',\n    'cos',\n    'tan'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/atan2.js\n ** module id = 336\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'cos',\n  'category': 'Trigonometry',\n  'syntax': [\n    'cos(x)'\n  ],\n  'description': 'Compute the cosine of x in radians.',\n  'examples': [\n    'cos(2)',\n    'cos(pi / 4) ^ 2',\n    'cos(180 deg)',\n    'cos(60 deg)',\n    'sin(0.2)^2 + cos(0.2)^2'\n  ],\n  'seealso': [\n    'acos',\n    'sin',\n    'tan'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/cos.js\n ** module id = 337\n ** module chunks = 0\n **/","module.exports = {\r\n  'name': 'cosh',\r\n  'category': 'Trigonometry',\r\n  'syntax': [\r\n    'cosh(x)'\r\n  ],\r\n  'description': 'Compute the hyperbolic cosine of x in radians.',\r\n  'examples': [\r\n    'cosh(0.5)'\r\n  ],\r\n  'seealso': [\r\n    'sinh',\r\n    'tanh',\r\n    'coth'\r\n  ]\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/cosh.js\n ** module id = 338\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'cot',\n  'category': 'Trigonometry',\n  'syntax': [\n    'cot(x)'\n  ],\n  'description': 'Compute the cotangent of x in radians. Defined as 1/tan(x)',\n  'examples': [\n    'cot(2)',\n    '1 / tan(2)'\n  ],\n  'seealso': [\n    'sec',\n    'csc',\n    'tan'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/cot.js\n ** module id = 339\n ** module chunks = 0\n **/","module.exports = {\r\n  'name': 'coth',\r\n  'category': 'Trigonometry',\r\n  'syntax': [\r\n    'coth(x)'\r\n  ],\r\n  'description': 'Compute the hyperbolic cotangent of x in radians.',\r\n  'examples': [\r\n    'coth(2)',\r\n    '1 / tanh(2)'\r\n  ],\r\n  'seealso': [\r\n    'sech',\r\n    'csch',\r\n    'tanh'\r\n  ]\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/coth.js\n ** module id = 340\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'csc',\n  'category': 'Trigonometry',\n  'syntax': [\n    'csc(x)'\n  ],\n  'description': 'Compute the cosecant of x in radians. Defined as 1/sin(x)',\n  'examples': [\n    'csc(2)',\n    '1 / sin(2)'\n  ],\n  'seealso': [\n    'sec',\n    'cot',\n    'sin'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/csc.js\n ** module id = 341\n ** module chunks = 0\n **/","module.exports = {\r\n  'name': 'csch',\r\n  'category': 'Trigonometry',\r\n  'syntax': [\r\n    'csch(x)'\r\n  ],\r\n  'description': 'Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)',\r\n  'examples': [\r\n    'csch(2)',\r\n    '1 / sinh(2)'\r\n  ],\r\n  'seealso': [\r\n    'sech',\r\n    'coth',\r\n    'sinh'\r\n  ]\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/csch.js\n ** module id = 342\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'sec',\n  'category': 'Trigonometry',\n  'syntax': [\n    'sec(x)'\n  ],\n  'description': 'Compute the secant of x in radians. Defined as 1/cos(x)',\n  'examples': [\n    'sec(2)',\n    '1 / cos(2)'\n  ],\n  'seealso': [\n    'cot',\n    'csc',\n    'cos'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/sec.js\n ** module id = 343\n ** module chunks = 0\n **/","module.exports = {\r\n  'name': 'sech',\r\n  'category': 'Trigonometry',\r\n  'syntax': [\r\n    'sech(x)'\r\n  ],\r\n  'description': 'Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)',\r\n  'examples': [\r\n    'sech(2)',\r\n    '1 / cosh(2)'\r\n  ],\r\n  'seealso': [\r\n    'coth',\r\n    'csch',\r\n    'cosh'\r\n  ]\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/sech.js\n ** module id = 344\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'sin',\n  'category': 'Trigonometry',\n  'syntax': [\n    'sin(x)'\n  ],\n  'description': 'Compute the sine of x in radians.',\n  'examples': [\n    'sin(2)',\n    'sin(pi / 4) ^ 2',\n    'sin(90 deg)',\n    'sin(30 deg)',\n    'sin(0.2)^2 + cos(0.2)^2'\n  ],\n  'seealso': [\n    'asin',\n    'cos',\n    'tan'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/sin.js\n ** module id = 345\n ** module chunks = 0\n **/","module.exports = {\r\n  'name': 'sinh',\r\n  'category': 'Trigonometry',\r\n  'syntax': [\r\n    'sinh(x)'\r\n  ],\r\n  'description': 'Compute the hyperbolic sine of x in radians.',\r\n  'examples': [\r\n    'sinh(0.5)'\r\n  ],\r\n  'seealso': [\r\n    'cosh',\r\n    'tanh'\r\n  ]\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/sinh.js\n ** module id = 346\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'tan',\n  'category': 'Trigonometry',\n  'syntax': [\n    'tan(x)'\n  ],\n  'description': 'Compute the tangent of x in radians.',\n  'examples': [\n    'tan(0.5)',\n    'sin(0.5) / cos(0.5)',\n    'tan(pi / 4)',\n    'tan(45 deg)'\n  ],\n  'seealso': [\n    'atan',\n    'sin',\n    'cos'\n  ]\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/tan.js\n ** module id = 347\n ** module chunks = 0\n **/","module.exports = {\r\n  'name': 'tanh',\r\n  'category': 'Trigonometry',\r\n  'syntax': [\r\n    'tanh(x)'\r\n  ],\r\n  'description': 'Compute the hyperbolic tangent of x in radians.',\r\n  'examples': [\r\n    'tanh(0.5)',\r\n    'sinh(0.5) / cosh(0.5)'\r\n  ],\r\n  'seealso': [\r\n    'sinh',\r\n    'cosh'\r\n  ]\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/trigonometry/tanh.js\n ** module id = 348\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'to',\n  'category': 'Units',\n  'syntax': [\n    'x to unit',\n    'to(x, unit)'\n  ],\n  'description': 'Change the unit of a value.',\n  'examples': [\n    '5 inch to cm',\n    '3.2kg to g',\n    '16 bytes in bits'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/units/to.js\n ** module id = 349\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'clone',\n  'category': 'Utils',\n  'syntax': [\n    'clone(x)'\n  ],\n  'description': 'Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices',\n  'examples': [\n    'clone(3.5)',\n    'clone(2 - 4i)',\n    'clone(45 deg)',\n    'clone([1, 2; 3, 4])',\n    'clone(\"hello world\")'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/utils/clone.js\n ** module id = 350\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'map',\n  'category': 'Utils',\n  'syntax': [\n    'map(x, callback)'\n  ],\n  'description': 'Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.',\n  'examples': [\n    'map([1, 2, 3], function(val) { return value * value })'\n  ],\n  'seealso': ['filter', 'forEach']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/utils/map.js\n ** module id = 351\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'filter',\n  'category': 'Utils',\n  'syntax': [\n    'filter(x, test)'\n  ],\n  'description': 'Filter items in a matrix.',\n  'examples': [\n    'isPositive(x) = x > 0',\n    'filter([6, -2, -1, 4, 3], isPositive)',\n    'filter([6, -2, 0, 1, 0], x != 0)'\n  ],\n  'seealso': ['sort', 'map', 'forEach']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/utils/filter.js\n ** module id = 352\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'forEach',\n  'category': 'Utils',\n  'syntax': [\n    'forEach(x, callback)'\n  ],\n  'description': 'Iterates over all elements of a matrix/array, and executes the given callback function.',\n  'examples': [\n    'forEach([1, 2, 3], function(val) { console.log(val) })'\n  ],\n  'seealso': ['map', 'sort', 'filter']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/utils/forEach.js\n ** module id = 353\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'format',\n  'category': 'Utils',\n  'syntax': [\n    'format(value)',\n    'format(value, precision)'\n  ],\n  'description': 'Format a value of any type as string.',\n  'examples': [\n    'format(2.3)',\n    'format(3 - 4i)',\n    'format([])',\n    'format(pi, 3)'\n  ],\n  'seealso': ['print']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/utils/format.js\n ** module id = 354\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'import',\n  'category': 'Utils',\n  'syntax': [\n    'import(string)'\n  ],\n  'description': 'Import functions from a file.',\n  'examples': [\n    'import(\"numbers\")',\n    'import(\"./mylib.js\")'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/utils/import.js\n ** module id = 355\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'sort',\n  'category': 'Utils',\n  'syntax': [\n    'sort(x)',\n    'sort(x, compare)'\n  ],\n  'description': 'Sort the items in a matrix. Compare can be a string \"asc\" or \"desc\", or a custom sort function.',\n  'examples': [\n    'sort([5, 10, 1])',\n    'sort([\"C\", \"B\", \"A\", \"D\"])',\n    'sortByLength(a, b) = size(a)[1] - size(b)[1]',\n    'sort([\"Langdon\", \"Tom\", \"Sara\"], sortByLength)'\n  ],\n  'seealso': ['map', 'filter', 'forEach']\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/utils/sort.js\n ** module id = 356\n ** module chunks = 0\n **/","module.exports = {\n  'name': 'typeof',\n  'category': 'Utils',\n  'syntax': [\n    'typeof(x)'\n  ],\n  'description': 'Get the type of a variable.',\n  'examples': [\n    'typeof(3.5)',\n    'typeof(2 - 4i)',\n    'typeof(45 deg)',\n    'typeof(\"hello world\")'\n  ],\n  'seealso': []\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/docs/function/utils/typeof.js\n ** module id = 357\n ** module chunks = 0\n **/","'use strict';\n\n// NOTE: distribution is NOT added to math.distribution but returned by the factory function\n// TODO: rethink math.distribution\n\nmodule.exports = function (math) {\n  var Matrix = math.type.Matrix;\n  var array = require('../../util/array');\n  var collection = math.collection;\n  var isCollection = collection.isCollection;\n\n  /**\n   * Create a distribution object with a set of random functions for given\n   * random distribution.\n   *\n   * Syntax:\n   *\n   *     math.distribution(name)\n   *\n   * Examples:\n   *\n   *     var normalDist = math.distribution('normal'); // create a normal distribution\n   *     normalDist.random(0, 10);                      // get a random value between 0 and 10\n   *\n   * See also:\n   *\n   *     random, randomInt, pickRandom\n   *\n   * @param {String} name   Name of a distribution. Choose from 'uniform', 'normal'.\n   * @return {Object}       Returns a distribution object containing functions:\n   *                        `random([size] [, min] [, max])`,\n   *                        `randomInt([min] [, max])`,\n   *                        `pickRandom(array)`\n   */\n  function distribution(name) {\n    if (!distributions.hasOwnProperty(name))\n      throw new Error('Unknown distribution ' + name);\n\n    var args = Array.prototype.slice.call(arguments, 1),\n        distribution = distributions[name].apply(this, args);\n\n    return (function(distribution) {\n\n      // This is the public API for all distributions\n      var randFunctions = {\n\n        random: function(arg1, arg2, arg3) {\n          var size, min, max;\n          if (arguments.length > 3) {\n            throw new math.error.ArgumentsError('random', arguments.length, 0, 3);\n\n          // `random(max)` or `random(size)`\n          } else if (arguments.length === 1) {\n            if (isCollection(arg1)) {\n              size = arg1;\n            }\n            else {\n              max = arg1;\n            }\n          // `random(min, max)` or `random(size, max)`\n          } else if (arguments.length === 2) {\n            if (isCollection(arg1)) {\n              size = arg1;\n              max = arg2;\n            }\n            else {\n              min = arg1;\n              max = arg2;\n            }\n          // `random(size, min, max)`\n          } else {\n            size = arg1;\n            min = arg2;\n            max = arg3;\n          }\n\n          // TODO: validate type of min, max, and size\n\n          if (max === undefined) max = 1;\n          if (min === undefined) min = 0;\n          if (size !== undefined) {\n            var res = _randomDataForMatrix(size.valueOf(), min, max, _random);\n            return (size instanceof Matrix) ? math.matrix(res) : res;\n          }\n          else return _random(min, max);\n        },\n\n        randomInt: function(arg1, arg2, arg3) {\n          var size, min, max;\n          if (arguments.length > 3 || arguments.length < 1)\n            throw new math.error.ArgumentsError('randomInt', arguments.length, 1, 3);\n\n          // `random(max)` or `random(size)`\n          else if (arguments.length === 1)\n            if (isCollection(arg1)) {\n              size = arg1;\n            }\n            else {\n              max = arg1;\n            }\n          // `randomInt(min, max)` or `randomInt(size, max)`\n          else if (arguments.length === 2) {\n            if (isCollection(arg1)) {\n              size = arg1;\n              max = arg2;\n            }\n            else {\n              min = arg1;\n              max = arg2;\n            }\n          // `randomInt(size, min, max)`\n          } else {\n            size = arg1;\n            min = arg2;\n            max = arg3;\n          }\n\n          // TODO: validate type of min, max, and size\n\n          if (min === undefined) min = 0;\n          if (size !== undefined) {\n            var res = _randomDataForMatrix(size.valueOf(), min, max, _randomInt);\n            return (size instanceof Matrix) ? math.matrix(res) : res;\n          }\n          else return _randomInt(min, max);\n        },\n\n        pickRandom: function(possibles) {\n          if (arguments.length !== 1) {\n            throw new math.error.ArgumentsError('pickRandom', arguments.length, 1);\n          }\n          if (possibles instanceof Matrix) {\n            possibles = possibles.valueOf(); // get Array\n          }\n          else if (!Array.isArray(possibles)) {\n            throw new math.error.UnsupportedTypeError('pickRandom', math['typeof'](possibles));\n          }\n\n          if (array.size(possibles).length > 1) {\n            throw new Error('Only one dimensional vectors supported');\n          }\n\n          // TODO: add support for multi dimensional matrices\n          return possibles[Math.floor(Math.random() * possibles.length)];\n        }\n\n      };\n\n      var _random = function(min, max) {\n        return min + distribution() * (max - min);\n      };\n\n      var _randomInt = function(min, max) {\n        return Math.floor(min + distribution() * (max - min));\n      };\n\n      // This is a function for generating a random matrix recursively.\n      var _randomDataForMatrix = function(size, min, max, randFunc) {\n        var data = [], length, i;\n        size = size.slice(0);\n\n        if (size.length > 1) {\n          for (i = 0, length = size.shift(); i < length; i++)\n            data.push(_randomDataForMatrix(size, min, max, randFunc));\n        } else {\n          for (i = 0, length = size.shift(); i < length; i++)\n            data.push(randFunc(min, max));\n        }\n\n        return data;\n      };\n\n      return randFunctions;\n\n    })(distribution);\n  };\n\n  // Each distribution is a function that takes no argument and when called returns\n  // a number between 0 and 1.\n  var distributions = {\n\n    uniform: function() {\n      return Math.random;\n    },\n\n    // Implementation of normal distribution using Box-Muller transform\n    // ref : http://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform\n    // We take : mean = 0.5, standard deviation = 1/6\n    // so that 99.7% values are in [0, 1].\n    normal: function() {\n      return function() {\n        var u1, u2,\n            picked = -1;\n        // We reject values outside of the interval [0, 1]\n        // TODO: check if it is ok to do that?\n        while (picked < 0 || picked > 1) {\n          u1 = Math.random();\n          u2 = Math.random();\n          picked = 1/6 * Math.pow(-2 * Math.log(u1), 0.5) * Math.cos(2 * Math.PI * u2) + 0.5;\n        }\n        return picked;\n      }\n    }\n  };\n\n  return distribution;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/function/probability/distribution.js\n ** module id = 358\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * Determine the type of a variable\n *\n *     type(x)\n *\n * @param {*} x\n * @return {String} type  Lower case type, for example 'number', 'string',\n *                        'array', 'date'.\n */\nexports.type = function(x) {\n  var type = typeof x;\n\n  if (type === 'object') {\n    if (x === null)           return 'null';\n    if (x instanceof Boolean) return 'boolean';\n    if (x instanceof Number)  return 'number';\n    if (x instanceof String)  return 'string';\n    if (Array.isArray(x))     return 'array';\n    if (x instanceof Date)    return 'date';\n    if (x instanceof Function)return 'function';\n    if (x instanceof RegExp)  return 'regexp';\n  }\n\n  return type;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/util/types.js\n ** module id = 359\n ** module chunks = 0\n **/","/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/baseCopy.js\n ** module id = 360\n ** module chunks = 0\n **/","var constant = require('../utility/constant'),\n    isNative = require('../lang/isNative'),\n    toObject = require('./toObject');\n\n/** Native method references. */\nvar getOwnPropertySymbols = isNative(getOwnPropertySymbols = Object.getOwnPropertySymbols) && getOwnPropertySymbols;\n\n/**\n * Creates an array of the own symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !getOwnPropertySymbols ? constant([]) : function(object) {\n  return getOwnPropertySymbols(toObject(object));\n};\n\nmodule.exports = getSymbols;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/getSymbols.js\n ** module id = 361\n ** module chunks = 0\n **/","var escapeRegExp = require('../string/escapeRegExp'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  escapeRegExp(objToString)\n  .replace(/toString|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (objToString.call(value) == funcTag) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isNative;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lang/isNative.js\n ** module id = 362\n ** module chunks = 0\n **/","var isLength = require('../internal/isLength'),\n    isNative = require('../lang/isNative'),\n    isObject = require('../lang/isObject'),\n    shimKeys = require('../internal/shimKeys');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys;\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  if (object) {\n    var Ctor = object.constructor,\n        length = object.length;\n  }\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isLength(length))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\nmodule.exports = keys;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/object/keys.js\n ** module id = 363\n ** module chunks = 0\n **/","var createBaseFor = require('./createBaseFor');\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/baseFor.js\n ** module id = 364\n ** module chunks = 0\n **/","var constant = require('../utility/constant'),\n    isNative = require('../lang/isNative');\n\n/** Native method references. */\nvar ArrayBuffer = isNative(ArrayBuffer = global.ArrayBuffer) && ArrayBuffer,\n    bufferSlice = isNative(bufferSlice = ArrayBuffer && new ArrayBuffer(0).slice) && bufferSlice,\n    floor = Math.floor,\n    Uint8Array = isNative(Uint8Array = global.Uint8Array) && Uint8Array;\n\n/** Used to clone array buffers. */\nvar Float64Array = (function() {\n  // Safari 5 errors when using an array buffer to initialize a typed array\n  // where the array buffer's `byteLength` is not a multiple of the typed\n  // array's `BYTES_PER_ELEMENT`.\n  try {\n    var func = isNative(func = global.Float64Array) && func,\n        result = new func(new ArrayBuffer(10), 0, 1) && func;\n  } catch(e) {}\n  return result;\n}());\n\n/** Used as the size, in bytes, of each `Float64Array` element. */\nvar FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\n\n/**\n * Creates a clone of the given array buffer.\n *\n * @private\n * @param {ArrayBuffer} buffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction bufferClone(buffer) {\n  return bufferSlice.call(buffer, 0);\n}\nif (!bufferSlice) {\n  // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\n  bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function(buffer) {\n    var byteLength = buffer.byteLength,\n        floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\n        offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\n        result = new ArrayBuffer(byteLength);\n\n    if (floatLength) {\n      var view = new Float64Array(result, 0, floatLength);\n      view.set(new Float64Array(buffer, 0, floatLength));\n    }\n    if (byteLength != offset) {\n      view = new Uint8Array(result, offset);\n      view.set(new Uint8Array(buffer, offset));\n    }\n    return result;\n  };\n}\n\nmodule.exports = bufferClone;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/bufferClone.js\n ** module id = 365\n ** module chunks = 0\n **/","/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/isLength.js\n ** module id = 366\n ** module chunks = 0\n **/","/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/isObjectLike.js\n ** module id = 367\n ** module chunks = 0\n **/","// function utils\n\n/*\n * Memoize a given function by caching the computed result.\n * The cache of a memoized function can be cleared by deleting the `cache`\n * property of the function.\n *\n * @param {function} fn   The function to be memoized. Must be a pure function.\n * @return {function}     Returns the memoized function\n */\nexports.memoize = function(fn) {\n  return function memoize() {\n    if (typeof memoize.cache !== 'object') {\n      memoize.cache = {};\n    }\n\n    var hash = JSON.stringify(arguments);\n    if (!(hash in memoize.cache)) {\n      return memoize.cache[hash] = fn.apply(fn, arguments);\n    }\n    return memoize.cache[hash];\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/util/function.js\n ** module id = 368\n ** module chunks = 0\n **/","/*! decimal.js v4.0.2 https://github.com/MikeMcl/decimal.js/LICENCE */\r\n;(function (global) {\r\n    'use strict';\r\n\r\n\r\n    /*\r\n     *  decimal.js v4.0.2\r\n     *  An arbitrary-precision Decimal type for JavaScript.\r\n     *  https://github.com/MikeMcl/decimal.js\r\n     *  Copyright (c) 2014 Michael Mclaughlin <M8ch88l@gmail.com>\r\n     *  MIT Expat Licence\r\n     */\r\n\r\n\r\n    var convertBase, decimal, noConflict,\r\n        crypto = global['crypto'],\r\n        external = true,\r\n        id = 0,\r\n        mathfloor = Math.floor,\r\n        mathpow = Math.pow,\r\n        outOfRange,\r\n        toString = Object.prototype.toString,\r\n        BASE = 1e7,\r\n        LOGBASE = 7,\r\n        NUMERALS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_',\r\n        P = {},\r\n\r\n        /*\r\n         The maximum exponent magnitude.\r\n         The limit on the value of toExpNeg, toExpPos, minE and maxE.\r\n         */\r\n        EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n        /*\r\n         The limit on the value of precision, and on the argument to toDecimalPlaces,\r\n         toExponential, toFixed, toFormat, toPrecision and toSignificantDigits.\r\n         */\r\n        MAX_DIGITS = 1E9,                      // 0 to 1e+9\r\n\r\n        /*\r\n         To decide whether or not to calculate x.pow(integer y) using the 'exponentiation by\r\n         squaring' algorithm or by exp(y*ln(x)), the number of significant digits of x is multiplied\r\n         by y. If this number is less than INT_POW_LIMIT then the former algorithm is used.\r\n         */\r\n        INT_POW_LIMIT = 3000,                  // 0 to 5000\r\n\r\n        // The natural logarithm of 10 (1025 digits).\r\n        LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058';\r\n\r\n\r\n    // Decimal prototype methods\r\n\r\n\r\n    /*\r\n     * Return a new Decimal whose value is the absolute value of this Decimal.\r\n     *\r\n     */\r\n    P['absoluteValue'] = P['abs'] = function () {\r\n        var x = new this['constructor'](this);\r\n\r\n        if ( x['s'] < 0 ) {\r\n            x['s'] = 1;\r\n        }\r\n\r\n        return rnd(x);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in\r\n     * the direction of positive Infinity.\r\n     *\r\n     */\r\n    P['ceil'] = function () {\r\n\r\n        return rnd( new this['constructor'](this), this['e'] + 1, 2 );\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1    if the value of this Decimal is greater than the value of Decimal(y, b),\r\n     *  -1    if the value of this Decimal is less than the value of Decimal(y, b),\r\n     *   0    if they have the same value,\r\n     *  null  if the value of either Decimal is NaN.\r\n     *\r\n     */\r\n    P['comparedTo'] = P['cmp'] = function ( y, b ) {\r\n        var a,\r\n            x = this,\r\n            xc = x['c'],\r\n            yc = ( id = -id, y = new x['constructor']( y, b ), y['c'] ),\r\n            i = x['s'],\r\n            j = y['s'],\r\n            k = x['e'],\r\n            l = y['e'];\r\n\r\n        // Either NaN?\r\n        if ( !i || !j ) {\r\n            return null;\r\n        }\r\n\r\n        a = xc && !xc[0];\r\n        b = yc && !yc[0];\r\n\r\n        // Either zero?\r\n        if ( a || b ) {\r\n            return a ? b ? 0 : -j : i;\r\n        }\r\n\r\n        // Signs differ?\r\n        if ( i != j ) {\r\n            return i;\r\n        }\r\n\r\n        a = i < 0;\r\n\r\n        // Either Infinity?\r\n        if ( !xc || !yc ) {\r\n            return k == l ? 0 : !xc ^ a ? 1 : -1;\r\n        }\r\n\r\n        // Compare exponents.\r\n        if ( k != l ) {\r\n            return k > l ^ a ? 1 : -1;\r\n        }\r\n\r\n        // Compare digit by digit.\r\n        for ( i = -1,\r\n              j = ( k = xc.length ) < ( l = yc.length ) ? k : l;\r\n              ++i < j; ) {\r\n\r\n            if ( xc[i] != yc[i] ) {\r\n                return xc[i] > yc[i] ^ a ? 1 : -1;\r\n            }\r\n        }\r\n\r\n        // Compare lengths.\r\n        return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the number of decimal places of the value of this Decimal.\r\n     *\r\n     */\r\n     P['decimalPlaces'] = P['dp'] = function () {\r\n        var c, v,\r\n            n = null;\r\n\r\n        if ( c = this['c'] ) {\r\n            n = ( ( v = c.length - 1 ) - mathfloor( this['e'] / LOGBASE ) ) * LOGBASE;\r\n\r\n            if ( v = c[v] ) {\r\n\r\n                // Subtract the number of trailing zeros of the last number.\r\n                for ( ; v % 10 == 0; v /= 10, n-- );\r\n            }\r\n\r\n            if ( n < 0 ) {\r\n                n = 0;\r\n            }\r\n        }\r\n\r\n        return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new Decimal whose value is the value of this Decimal divided by Decimal(y, b),\r\n     * rounded to precision significant digits using rounding mode rounding.\r\n     *\r\n     */\r\n    P['dividedBy'] = P['div'] = function ( y, b ) {\r\n        id = 2;\r\n\r\n        return div( this, new this['constructor']( y, b ) );\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Decimal whose value is the integer part of dividing the value of this Decimal by\r\n     * the value of Decimal(y, b), rounded to precision significant digits using rounding mode\r\n     * rounding.\r\n     *\r\n     */\r\n    P['dividedToIntegerBy'] = P['divToInt'] = function ( y, b ) {\r\n        var x = this,\r\n            Decimal = x['constructor'];\r\n        id = 18;\r\n\r\n        return rnd(\r\n          div( x, new Decimal( y, b ), 0, 1, 1 ), Decimal['precision'], Decimal['rounding']\r\n        );\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Decimal is equal to the value of Decimal(n, b), otherwise\r\n     * return false.\r\n     *\r\n     */\r\n    P['equals'] = P['eq'] = function ( n, b ) {\r\n        id = 3;\r\n\r\n        return this['cmp']( n, b ) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Decimal whose value is the exponential of the value of this Decimal, i.e. the\r\n     * base e raised to the power the value of this Decimal, rounded to precision significant digits\r\n     * using rounding mode rounding.\r\n     *\r\n     */\r\n    P['exponential'] = P['exp'] = function () {\r\n\r\n        return exp(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in\r\n     * the direction of negative Infinity.\r\n     *\r\n     */\r\n    P['floor'] = function () {\r\n\r\n        return rnd( new this['constructor'](this), this['e'] + 1, 3 );\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Decimal is greater than the value of Decimal(n, b), otherwise\r\n     * return false.\r\n     *\r\n     */\r\n    P['greaterThan'] = P['gt'] = function ( n, b ) {\r\n        id = 4;\r\n\r\n        return this['cmp']( n, b ) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Decimal is greater than or equal to the value of\r\n     * Decimal(n, b), otherwise return false.\r\n     *\r\n     */\r\n    P['greaterThanOrEqualTo'] = P['gte'] = function ( n, b ) {\r\n        id = 5;\r\n        b = this['cmp']( n, b );\r\n\r\n        return b == 1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n     *\r\n     */\r\n    P['isFinite'] = function () {\r\n\r\n        return !!this['c'];\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Decimal is an integer, otherwise return false.\r\n     *\r\n     */\r\n    P['isInteger'] = P['isInt'] = function () {\r\n\r\n        return !!this['c'] && mathfloor( this['e'] / LOGBASE ) > this['c'].length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Decimal is NaN, otherwise return false.\r\n     *\r\n     */\r\n    P['isNaN'] = function () {\r\n\r\n        return !this['s'];\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Decimal is negative, otherwise return false.\r\n     *\r\n     */\r\n    P['isNegative'] = P['isNeg'] = function () {\r\n\r\n        return this['s'] < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n     *\r\n     */\r\n    P['isZero'] = function () {\r\n\r\n        return !!this['c'] && this['c'][0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Decimal is less than Decimal(n, b), otherwise return false.\r\n     *\r\n     */\r\n    P['lessThan'] = P['lt'] = function ( n, b ) {\r\n        id = 6;\r\n\r\n        return this['cmp']( n, b ) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this Decimal is less than or equal to Decimal(n, b), otherwise\r\n     * return false.\r\n     *\r\n     */\r\n    P['lessThanOrEqualTo'] = P['lte'] = function ( n, b ) {\r\n        id = 7;\r\n        b = this['cmp']( n, b );\r\n\r\n        return b == -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the logarithm of the value of this Decimal to the specified base, rounded\r\n     * to precision significant digits using rounding mode rounding.\r\n     *\r\n     * If no base is specified, return log[10](arg).\r\n     *\r\n     * log[base](arg) = ln(arg) / ln(base)\r\n     *\r\n     * The result will always be correctly rounded if the base of the log is 2 or 10, and\r\n     * 'almost always' if not:\r\n     *\r\n     * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n     * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n     * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n     *\r\n     * log[-b](a)       = NaN\r\n     * log[0](a)        = NaN\r\n     * log[1](a)        = NaN\r\n     * log[NaN](a)      = NaN\r\n     * log[Infinity](a) = NaN\r\n     * log[b](0)        = -Infinity\r\n     * log[b](-0)       = -Infinity\r\n     * log[b](-a)       = NaN\r\n     * log[b](1)        = 0\r\n     * log[b](Infinity) = Infinity\r\n     * log[b](NaN)      = NaN\r\n     *\r\n     * [base] {number|string|Decimal} The base of the logarithm.\r\n     * [b] {number} The base of base.\r\n     *\r\n     */\r\n    P['logarithm'] = P['log'] = function ( base, b ) {\r\n        var base10, c, denom, i, inf, num, sd, sd10, r,\r\n            arg = this,\r\n            Decimal = arg['constructor'],\r\n            pr = Decimal['precision'],\r\n            rm = Decimal['rounding'],\r\n            guard = 5;\r\n\r\n        // Default base is 10.\r\n        if ( base == null ) {\r\n            base = new Decimal(10);\r\n            base10 = true;\r\n        } else {\r\n            id = 15;\r\n            base = new Decimal( base, b );\r\n            c = base['c'];\r\n\r\n            // If base < 0 or +-Infinity/NaN or 0 or 1.\r\n            if ( base['s'] < 0 || !c || !c[0] || !base['e'] && c[0] == 1 && c.length == 1 ) {\r\n\r\n                return new Decimal(NaN);\r\n            }\r\n            base10 = base['eq'](10);\r\n        }\r\n        c = arg['c'];\r\n\r\n        // If arg < 0 or +-Infinity/NaN or 0 or 1.\r\n        if ( arg['s'] < 0 || !c || !c[0] || !arg['e'] && c[0] == 1 && c.length == 1 ) {\r\n\r\n            return new Decimal( c && !c[0] ? -1 / 0 : arg['s'] != 1 ? NaN : c ? 0 : 1 / 0 );\r\n        }\r\n\r\n        /*\r\n          The result will have an infinite decimal expansion if base is 10 and arg is not an\r\n          integer power of 10...\r\n         */\r\n        inf = base10 && ( i = c[0], c.length > 1 || i != 1 && i != 10 &&\r\n          i != 1e2 && i != 1e3 && i != 1e4 && i != 1e5 && i != 1e6 );\r\n            /*\r\n            // or if base last digit's evenness is not the same as arg last digit's evenness...\r\n            // (FAILS when e.g. base.c[0] = 10 and c[0] = 1)\r\n            || ( base['c'][ base['c'].length - 1 ] & 1 ) != ( c[ c.length - 1 ] & 1 )\r\n              // or if base is 2 and there is more than one 1 in arg in base 2.\r\n              // (SLOWS the method down significantly)\r\n              || base['eq'](2) && arg.toString(2).replace( /[^1]+/g, '' ) != '1';\r\n             */\r\n\r\n        external = false;\r\n        sd = pr + guard;\r\n        sd10 = sd + 10;\r\n\r\n        num = ln( arg, sd );\r\n\r\n        if (base10) {\r\n\r\n            if ( sd10 > LN10.length ) {\r\n                ifExceptionsThrow( Decimal, 1, sd10, 'log' );\r\n            }\r\n            denom = new Decimal( LN10.slice( 0, sd10 ) );\r\n        } else {\r\n            denom = ln( base, sd );\r\n        }\r\n\r\n        // The result will have 5 rounding digits.\r\n        r = div( num, denom, sd, 1 );\r\n\r\n        /*\r\n         If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n         calculate 10 further digits.\r\n\r\n         If the result is known to have an infinite decimal expansion, repeat this until it is\r\n         clear that the result is above or below the boundary. Otherwise, if after calculating\r\n         the 10 further digits, the last 14 are nines, round up and assume the result is exact.\r\n         Also assume the result is exact if the last 14 are zero.\r\n\r\n         Example of a result that will be incorrectly rounded:\r\n         log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n         The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7,\r\n         but it will be given as 2.6 as there are 15 zeros immediately after the requested\r\n         decimal place, so the exact result would be assumed to be 2.6, which rounded using\r\n         ROUND_CEIL to 1 decimal place is still 2.6.\r\n         */\r\n        if ( checkRoundingDigits( r['c'], i = pr, rm ) ) {\r\n\r\n            do {\r\n                sd += 10;\r\n                num = ln( arg, sd );\r\n\r\n                if (base10) {\r\n                    sd10 = sd + 10;\r\n\r\n                    if ( sd10 > LN10.length ) {\r\n                        ifExceptionsThrow( Decimal, 1, sd10, 'log' );\r\n                    }\r\n                    denom = new Decimal( LN10.slice( 0, sd10 ) );\r\n                } else {\r\n                    denom = ln( base, sd );\r\n                }\r\n\r\n                r = div( num, denom, sd, 1 );\r\n\r\n                if ( !inf ) {\r\n\r\n                    // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n                    if ( +coefficientToString( r['c'] ).slice( i + 1, i + 15 ) + 1 == 1e14 ) {\r\n                        r = rnd( r, pr + 1, 0 );\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            } while ( checkRoundingDigits( r['c'], i += 10, rm ) );\r\n        }\r\n        external = true;\r\n\r\n        return rnd( r, pr, rm );\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new Decimal whose value is the value of this Decimal minus Decimal(y, b), rounded\r\n     * to precision significant digits using rounding mode rounding.\r\n     *\r\n     */\r\n    P['minus'] = function ( y, b ) {\r\n        var t, i, j, xLTy,\r\n            x = this,\r\n            Decimal = x['constructor'],\r\n            a = x['s'];\r\n\r\n        id = 8;\r\n        y = new Decimal( y, b );\r\n        b = y['s'];\r\n\r\n        // Either NaN?\r\n        if ( !a || !b ) {\r\n\r\n            return new Decimal(NaN);\r\n        }\r\n\r\n        // Signs differ?\r\n        if ( a != b ) {\r\n            y['s'] = -b;\r\n\r\n            return x['plus'](y);\r\n        }\r\n\r\n        var xc = x['c'],\r\n            yc = y['c'],\r\n            e = mathfloor( y['e'] / LOGBASE ),\r\n            k = mathfloor( x['e'] / LOGBASE ),\r\n            pr = Decimal['precision'],\r\n            rm = Decimal['rounding'];\r\n\r\n        if ( !k || !e ) {\r\n\r\n            // Either Infinity?\r\n            if ( !xc || !yc ) {\r\n\r\n                return xc ? ( y['s'] = -b, y ) : new Decimal( yc ? x : NaN );\r\n            }\r\n\r\n            // Either zero?\r\n            if ( !xc[0] || !yc[0] ) {\r\n\r\n                // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n                x = yc[0] ? ( y['s'] = -b, y ) : new Decimal( xc[0] ? x :\r\n\r\n                  // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n                  rm == 3 ? -0 : 0 );\r\n\r\n                return external ? rnd( x, pr, rm ) : x;\r\n            }\r\n        }\r\n\r\n        xc = xc.slice();\r\n        i = xc.length;\r\n\r\n        // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n        if ( a = k - e ) {\r\n\r\n            if ( xLTy = a < 0 ) {\r\n                a = -a;\r\n                t = xc;\r\n                i = yc.length;\r\n            } else {\r\n                e = k;\r\n                t = yc;\r\n            }\r\n\r\n            if ( ( k = Math.ceil( pr / LOGBASE ) ) > i ) {\r\n                i = k;\r\n            }\r\n\r\n            /*\r\n             Numbers with massively different exponents would result in a massive number of\r\n             zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n             rounding by limiting the number of zeros to max( pr, i ) + 2, where pr is precision and\r\n             i is the length of the coefficient of whichever is greater, x or y.\r\n             */\r\n            if ( a > ( i += 2 ) ) {\r\n                a = i;\r\n                t.length = 1;\r\n            }\r\n\r\n            t.reverse();\r\n            for ( b = a; b--; t.push(0) );\r\n            t.reverse();\r\n        } else {\r\n            // Exponents equal. Check digits.\r\n\r\n            if ( xLTy = i < ( j = yc.length ) ) {\r\n                j = i;\r\n            }\r\n\r\n            for ( a = b = 0; b < j; b++ ) {\r\n\r\n                if ( xc[b] != yc[b] ) {\r\n                    xLTy = xc[b] < yc[b];\r\n\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // x < y? Point xc to the array of the bigger number.\r\n        if ( xLTy ) {\r\n            t = xc, xc = yc, yc = t;\r\n            y['s'] = -y['s'];\r\n        }\r\n\r\n        /*\r\n         Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n         needs to start at yc length.\r\n         */\r\n        if ( ( b = -( ( j = xc.length ) - yc.length ) ) > 0 ) {\r\n\r\n            for ( ; b--; xc[j++] = 0 );\r\n        }\r\n\r\n        // Subtract yc from xc.\r\n        for ( k = BASE - 1, b = yc.length; b > a; ) {\r\n\r\n            if ( xc[--b] < yc[b] ) {\r\n\r\n                for ( i = b; i && !xc[--i]; xc[i] = k );\r\n                --xc[i];\r\n                xc[b] += BASE;\r\n            }\r\n            xc[b] -= yc[b];\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for ( ; xc[--j] == 0; xc.pop() );\r\n\r\n        // Remove leading zeros and adjust exponent accordingly.\r\n        for ( ; xc[0] == 0; xc.shift(), --e );\r\n\r\n        if ( !xc[0] ) {\r\n\r\n            // Zero.\r\n            xc = [ e = 0 ];\r\n\r\n            // Following IEEE 754 (2008) 6.3, n - n = -0 when rounding towards -Infinity.\r\n            y['s'] = rm == 3 ? -1 : 1;\r\n        }\r\n\r\n        y['c'] = xc;\r\n\r\n        // Get the number of digits of xc[0].\r\n        for ( a = 1, b = xc[0]; b >= 10; b /= 10, a++ );\r\n        y['e'] = a + e * LOGBASE - 1;\r\n\r\n        return external ? rnd( y, pr, rm ) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new Decimal whose value is the value of this Decimal modulo Decimal(y, b), rounded\r\n     * to precision significant digits using rounding mode rounding.\r\n     *\r\n     * The result depends on the modulo mode.\r\n     *\r\n     */\r\n    P['modulo'] = P['mod'] = function ( y, b ) {\r\n        var n, q,\r\n            x = this,\r\n            Decimal = x['constructor'],\r\n            m = Decimal['modulo'];\r\n\r\n        id = 9;\r\n        y = new Decimal( y, b );\r\n        b = y['s'];\r\n        n = !x['c'] || !b || y['c'] && !y['c'][0];\r\n\r\n        /*\r\n         Return NaN if x is Infinity or NaN, or y is NaN or zero, else return x if y is Infinity\r\n         or x is zero.\r\n         */\r\n        if ( n || !y['c'] || x['c'] && !x['c'][0] ) {\r\n\r\n            return n\r\n              ? new Decimal(NaN)\r\n              : rnd( new Decimal(x), Decimal['precision'], Decimal['rounding'] );\r\n        }\r\n\r\n        external = false;\r\n\r\n        if ( m == 9 ) {\r\n\r\n            // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n            // r = x - qy    where  0 <= r < abs(y)\r\n            y['s'] = 1;\r\n            q = div( x, y, 0, 3, 1 );\r\n            y['s'] = b;\r\n            q['s'] *= b;\r\n        } else {\r\n            q = div( x, y, 0, m, 1 );\r\n        }\r\n\r\n        q = q['times'](y);\r\n        external = true;\r\n\r\n        return x['minus'](q);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n     * rounded to precision significant digits using rounding mode rounding.\r\n     *\r\n     */\r\n    P['naturalLogarithm'] = P['ln'] = function () {\r\n\r\n        return ln(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if\r\n     * multiplied by -1.\r\n     *\r\n     */\r\n    P['negated'] = P['neg'] = function () {\r\n        var x = new this['constructor'](this);\r\n        x['s'] = -x['s'] || null;\r\n\r\n        return rnd(x);\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new Decimal whose value is the value of this Decimal plus Decimal(y, b), rounded\r\n     * to precision significant digits using rounding mode rounding.\r\n     *\r\n     */\r\n    P['plus'] = function ( y, b ) {\r\n        var t,\r\n            x = this,\r\n            Decimal = x['constructor'],\r\n            a = x['s'];\r\n\r\n        id = 10;\r\n        y = new Decimal( y, b );\r\n        b = y['s'];\r\n\r\n        // Either NaN?\r\n        if ( !a || !b ) {\r\n\r\n            return new Decimal(NaN);\r\n        }\r\n\r\n        // Signs differ?\r\n        if ( a != b ) {\r\n            y['s'] = -b;\r\n\r\n            return x['minus'](y);\r\n        }\r\n\r\n        var xc = x['c'],\r\n            yc = y['c'],\r\n            e = mathfloor( y['e'] / LOGBASE ),\r\n            k = mathfloor( x['e'] / LOGBASE ),\r\n            pr = Decimal['precision'],\r\n            rm = Decimal['rounding'];\r\n\r\n        if ( !k || !e ) {\r\n\r\n            // Either Infinity?\r\n            if ( !xc || !yc ) {\r\n\r\n                // Return +-Infinity.\r\n                return new Decimal( a / 0 );\r\n            }\r\n\r\n            // Either zero?\r\n            if ( !xc[0] || !yc[0] ) {\r\n\r\n                // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n                x = yc[0] ? y : new Decimal( xc[0] ? x : a * 0 );\r\n\r\n                return external ? rnd( x, pr, rm ) : x;\r\n            }\r\n        }\r\n\r\n        xc = xc.slice();\r\n\r\n        // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n        if ( a = k - e ) {\r\n\r\n            if ( a < 0 ) {\r\n                a = -a;\r\n                t = xc;\r\n                b = yc.length;\r\n            } else {\r\n                e = k;\r\n                t = yc;\r\n                b = xc.length;\r\n            }\r\n\r\n            if ( ( k = Math.ceil( pr / LOGBASE ) ) > b ) {\r\n                b = k;\r\n            }\r\n\r\n            // Limit number of zeros prepended to max( pr, b ) + 1.\r\n            if ( a > ++b ) {\r\n                a = b;\r\n                t.length = 1;\r\n            }\r\n\r\n            for ( t.reverse(); a--; t.push(0) );\r\n            t.reverse();\r\n        }\r\n\r\n        // Point xc to the longer array.\r\n        if ( xc.length - yc.length < 0 ) {\r\n            t = yc, yc = xc, xc = t;\r\n        }\r\n\r\n        // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n        for ( a = yc.length, b = 0, k = BASE; a; xc[a] %= k ) {\r\n            b = ( xc[--a] = xc[a] + yc[a] + b ) / k | 0;\r\n        }\r\n\r\n        if (b) {\r\n            xc.unshift(b);\r\n            ++e;\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for ( a = xc.length; xc[--a] == 0; xc.pop() );\r\n\r\n        // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n        y['c'] = xc;\r\n\r\n        // Get the number of digits of xc[0].\r\n        for ( a = 1, b = xc[0]; b >= 10; b /= 10, a++ );\r\n        y['e'] = a + e * LOGBASE - 1;\r\n\r\n        return external ? rnd( y, pr, rm ) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the number of significant digits of this Decimal.\r\n     *\r\n     * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n     *\r\n     */\r\n    P['precision'] = P['sd'] = function (z) {\r\n        var n = null,\r\n            x = this;\r\n\r\n        if ( z != n && z !== !!z && z !== 1 && z !== 0 ) {\r\n\r\n            // 'precision() argument not a boolean or binary digit: {z}'\r\n            ifExceptionsThrow( x['constructor'], 'argument', z, 'precision', 1 );\r\n        }\r\n\r\n        if ( x['c'] ) {\r\n            n = getCoeffLength( x['c'] );\r\n\r\n            if ( z && x['e'] + 1 > n ) {\r\n                n = x['e'] + 1;\r\n            }\r\n        }\r\n\r\n        return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n     * rounding mode rounding.\r\n     *\r\n     */\r\n    P['round'] = function () {\r\n        var x = this,\r\n            Decimal = x['constructor'];\r\n\r\n        return rnd( new Decimal(x), x['e'] + 1, Decimal['rounding'] );\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt( N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt( I) =  I\r\n     *  sqrt( 0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new Decimal whose value is the square root of this Decimal, rounded to precision\r\n     * significant digits using rounding mode rounding.\r\n     *\r\n     */\r\n    P['squareRoot'] = P['sqrt'] = function () {\r\n        var m, n, sd, r, rep, t,\r\n            x = this,\r\n            c = x['c'],\r\n            s = x['s'],\r\n            e = x['e'],\r\n            Decimal = x['constructor'],\r\n            half = new Decimal(0.5);\r\n\r\n        // Negative/NaN/Infinity/zero?\r\n        if ( s !== 1 || !c || !c[0] ) {\r\n\r\n            return new Decimal( !s || s < 0 && ( !c || c[0] ) ? NaN : c ? x : 1 / 0 );\r\n        }\r\n\r\n        external = false;\r\n\r\n        // Initial estimate.\r\n        s = Math.sqrt( +x );\r\n\r\n        /*\r\n         Math.sqrt underflow/overflow?\r\n         Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n         */\r\n        if ( s == 0 || s == 1 / 0 ) {\r\n            n = coefficientToString(c);\r\n\r\n            if ( ( n.length + e ) % 2 == 0 ) {\r\n                n += '0';\r\n            }\r\n\r\n            s = Math.sqrt(n);\r\n            e = mathfloor( ( e + 1 ) / 2 ) - ( e < 0 || e % 2 );\r\n\r\n            if ( s == 1 / 0 ) {\r\n                n = '1e' + e;\r\n            } else {\r\n                n = s.toExponential();\r\n                n = n.slice( 0, n.indexOf('e') + 1 ) + e;\r\n            }\r\n\r\n            r = new Decimal(n);\r\n        } else {\r\n            r = new Decimal( s.toString() );\r\n        }\r\n\r\n        sd = ( e = Decimal['precision'] ) + 3;\r\n\r\n        // Newton-Raphson iteration.\r\n        for ( ; ; ) {\r\n            t = r;\r\n            r = half['times']( t['plus']( div( x, t, sd + 2, 1 ) ) );\r\n\r\n            if ( coefficientToString( t['c'] ).slice( 0, sd ) ===\r\n                ( n = coefficientToString( r['c'] ) ).slice( 0, sd ) ) {\r\n                n = n.slice( sd - 3, sd + 1 );\r\n\r\n                /*\r\n                 The 4th rounding digit may be in error by -1 so if the 4 rounding digits are\r\n                 9999 or 4999 (i.e. approaching a rounding boundary) continue the iteration.\r\n                 */\r\n                if ( n == '9999' || !rep && n == '4999' ) {\r\n\r\n                    /*\r\n                     On the first iteration only, check to see if rounding up gives the exact result\r\n                     as the nines may infinitely repeat.\r\n                     */\r\n                    if ( !rep ) {\r\n                        rnd( t, e + 1, 0 );\r\n\r\n                        if ( t['times'](t)['eq'](x) ) {\r\n                            r = t;\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n                    sd += 4;\r\n                    rep = 1;\r\n                } else {\r\n\r\n                    /*\r\n                     If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n                     If not, then there are further digits and m will be truthy.\r\n                     */\r\n                    if ( !+n || !+n.slice(1) && n.charAt(0) == '5' ) {\r\n\r\n                        // Truncate to the first rounding digit.\r\n                        rnd( r, e + 1, 1 );\r\n                        m = !r['times'](r)['eq'](x);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        external = true;\r\n\r\n        return rnd( r, e, Decimal['rounding'], m );\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new Decimal whose value is this Decimal times Decimal(y), rounded to precision\r\n     * significant digits using rounding mode rounding.\r\n     *\r\n     */\r\n    P['times'] = function ( y, b ) {\r\n        var c, e,\r\n            x = this,\r\n            Decimal = x['constructor'],\r\n            xc = x['c'],\r\n            yc = ( id = 11, y = new Decimal( y, b ), y['c'] ),\r\n            i = mathfloor( x['e'] / LOGBASE ),\r\n            j = mathfloor( y['e'] / LOGBASE ),\r\n            a = x['s'];\r\n\r\n        b = y['s'];\r\n\r\n        y['s'] = a == b ? 1 : -1;\r\n\r\n        // Either NaN/Infinity/0?\r\n        if ( !i && ( !xc || !xc[0] ) || !j && ( !yc || !yc[0] ) ) {\r\n\r\n            // Either NaN?\r\n            return new Decimal( !a || !b ||\r\n\r\n              // x is 0 and y is Infinity  or y is 0 and x is Infinity?\r\n              xc && !xc[0] && !yc || yc && !yc[0] && !xc\r\n\r\n                // Return NaN.\r\n                ? NaN\r\n\r\n                // Either Infinity?\r\n                : !xc || !yc\r\n\r\n                  // Return +-Infinity.\r\n                  ? y['s'] / 0\r\n\r\n                  // x or y is 0. Return +-0.\r\n                  : y['s'] * 0 );\r\n        }\r\n\r\n        e = i + j;\r\n        a = xc.length;\r\n        b = yc.length;\r\n\r\n        if ( a < b ) {\r\n\r\n            // Swap.\r\n            c = xc, xc = yc, yc = c;\r\n            j = a, a = b, b = j;\r\n        }\r\n\r\n        for ( j = a + b, c = []; j--; c.push(0) );\r\n\r\n        // Multiply!\r\n        for ( i = b - 1; i > -1; i-- ) {\r\n            b = 0;\r\n\r\n            for ( j = a + i; j > i; ) {\r\n                  b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n                  c[j--] = b % BASE | 0;\r\n                  b = b / BASE | 0;\r\n            }\r\n            c[j] = ( c[j] + b ) % BASE | 0;\r\n        }\r\n\r\n        if (b) {\r\n            ++e;\r\n        } else if ( !c[0] ) {\r\n\r\n            // Remove leading zero.\r\n            c.shift();\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for ( j = c.length; !c[--j]; c.pop() );\r\n        y['c'] = c;\r\n\r\n        // Get the number of digits of c[0].\r\n        for ( a = 1, b = c[0]; b >= 10; b /= 10, a++ );\r\n        y['e'] = a + e * LOGBASE - 1;\r\n\r\n        return external ? rnd( y, Decimal['precision'], Decimal['rounding'] ) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of dp\r\n     * decimal places using rounding mode rm or rounding if rm is omitted.\r\n     *\r\n     * If dp is omitted, return a new Decimal whose value is the value of this Decimal.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * 'toDP() dp out of range: {dp}'\r\n     * 'toDP() dp not an integer: {dp}'\r\n     * 'toDP() rounding mode not an integer: {rm}'\r\n     * 'toDP() rounding mode out of range: {rm}'\r\n     *\r\n     */\r\n    P['toDecimalPlaces'] = P['toDP'] = function ( dp, rm ) {\r\n        var x = this;\r\n        x = new x['constructor'](x);\r\n\r\n        return dp == null || !checkArg( x, dp, 'toDP' )\r\n          ? x\r\n          : rnd( x, ( dp | 0 ) + x['e'] + 1, checkRM( x, rm, 'toDP' ) );\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Decimal in exponential notation rounded to dp\r\n     * fixed decimal places using rounding mode rounding.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * errors true: Throw if dp and rm are not undefined, null or integers in range.\r\n     * errors false: Ignore dp and rm if not numbers or not in range, and truncate non-integers.\r\n     *\r\n     * 'toExponential() dp not an integer: {dp}'\r\n     * 'toExponential() dp out of range: {dp}'\r\n     * 'toExponential() rounding mode not an integer: {rm}'\r\n     * 'toExponential() rounding mode out of range: {rm}'\r\n     *\r\n     */\r\n    P['toExponential'] = function ( dp, rm ) {\r\n        var x = this;\r\n\r\n        return x['c']\r\n          ? format( x, dp != null && checkArg( x, dp, 'toExponential' ) ? dp | 0 : null,\r\n            dp != null && checkRM( x, rm, 'toExponential' ), 1 )\r\n          : x.toString();\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n     * dp fixed decimal places and rounded using rounding mode rm or rounding if rm is omitted.\r\n     *\r\n     * Note: as with JS numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * errors true: Throw if dp and rm are not undefined, null or integers in range.\r\n     * errors false: Ignore dp and rm if not numbers or not in range, and truncate non-integers.\r\n     *\r\n     * 'toFixed() dp not an integer: {dp}'\r\n     * 'toFixed() dp out of range: {dp}'\r\n     * 'toFixed() rounding mode not an integer: {rm}'\r\n     * 'toFixed() rounding mode out of range: {rm}'\r\n     *\r\n     */\r\n    P['toFixed'] = function ( dp, rm ) {\r\n        var str,\r\n            x = this,\r\n            Decimal = x['constructor'],\r\n            neg = Decimal['toExpNeg'],\r\n            pos = Decimal['toExpPos'];\r\n\r\n        if ( dp != null ) {\r\n            dp = checkArg( x, dp, str = 'toFixed' ) ? x['e'] + ( dp | 0 ) : null;\r\n            rm = checkRM( x, rm, str );\r\n        }\r\n\r\n        // Prevent toString returning exponential notation;\r\n        Decimal['toExpNeg'] = -( Decimal['toExpPos'] = 1 / 0 );\r\n\r\n        if ( dp == null || !x['c'] ) {\r\n            str = x.toString();\r\n        } else {\r\n            str = format( x, dp, rm );\r\n\r\n            // (-0).toFixed() is '0', but (-0.1).toFixed() is '-0'.\r\n            // (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n            if ( x['s'] < 0 && x['c'] ) {\r\n\r\n                // As e.g. (-0).toFixed(3), will wrongly be returned as -0.000 from toString.\r\n                if ( !x['c'][0] ) {\r\n                    str = str.replace( '-', '' );\r\n\r\n                // As e.g. -0.5 if rounded to -0 will cause toString to omit the minus sign.\r\n                } else if ( str.indexOf('-') < 0 ) {\r\n                    str = '-' + str;\r\n                }\r\n            }\r\n        }\r\n        Decimal['toExpNeg'] = neg;\r\n        Decimal['toExpPos'] = pos;\r\n\r\n        return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Decimal in fixed-point notation to dp decimal\r\n     * places, rounded using rounding mode rm or Decimal.rounding if rm is omitted, and formatted\r\n     * according to the following properties of the Decimal.format object.\r\n     *\r\n     *  Decimal.format = {\r\n     *      decimalSeparator : '.',\r\n     *      groupSeparator : ',',\r\n     *      groupSize : 3,\r\n     *      secondaryGroupSize : 0,\r\n     *      fractionGroupSeparator : '\\xA0',    // non-breaking space\r\n     *      fractionGroupSize : 0\r\n     *  };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive\r\n     *\r\n     * (If dp or rm are invalid the error message will give the offending method call as toFixed.)\r\n     *\r\n     */\r\n    P['toFormat'] = function( dp, rm ) {\r\n        var x = this;\r\n\r\n        if ( !x['c'] ) {\r\n            return x.toString();\r\n        }\r\n\r\n        var i,\r\n            isNeg = x['s'] < 0,\r\n            f = x['constructor']['format'],\r\n            groupSeparator = f['groupSeparator'],\r\n            g1 = +f['groupSize'],\r\n            g2 = +f['secondaryGroupSize'],\r\n            arr = x.toFixed( dp, rm ).split('.'),\r\n            intPart = arr[0],\r\n            fractionPart = arr[1],\r\n            intDigits = isNeg ? intPart.slice(1) : intPart,\r\n            len = intDigits.length;\r\n\r\n        if (g2) {\r\n            len -= ( i = g1, g1 = g2, g2 = i );\r\n        }\r\n\r\n        if ( g1 > 0 && len > 0 ) {\r\n            i = len % g1 || g1;\r\n            intPart = intDigits.substr( 0, i );\r\n\r\n            for ( ; i < len; i += g1 ) {\r\n                intPart += groupSeparator + intDigits.substr( i, g1 );\r\n            }\r\n\r\n            if ( g2 > 0 ) {\r\n                intPart += groupSeparator + intDigits.slice(i);\r\n            }\r\n\r\n            if (isNeg) {\r\n                intPart = '-' + intPart;\r\n            }\r\n        }\r\n\r\n        return fractionPart\r\n          ? intPart + f['decimalSeparator'] + ( ( g2 = +f['fractionGroupSize'] )\r\n            ? fractionPart.replace( new RegExp( '\\\\d{' + g2 + '}\\\\B', 'g' ),\r\n              '$&' + f['fractionGroupSeparator'] )\r\n            : fractionPart )\r\n          : intPart;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string array representing the value of this Decimal as a simple fraction with an\r\n     * integer numerator and an integer denominator.\r\n     *\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n     *\r\n     */\r\n    P['toFraction'] = function (maxD) {\r\n        var d0, d2, e, frac, n, n0, p, q,\r\n            x = this,\r\n            Decimal = x['constructor'],\r\n            n1 = d0 = new Decimal( Decimal['ONE'] ),\r\n            d1 = n0 = new Decimal(0),\r\n            xc = x['c'],\r\n            d = new Decimal(d1);\r\n\r\n        // NaN, Infinity.\r\n        if ( !xc ) {\r\n\r\n            return x.toString();\r\n        }\r\n\r\n        e = d['e'] = getCoeffLength(xc) - x['e'] - 1;\r\n        d['c'][0] = mathpow( 10, ( p = e % LOGBASE ) < 0 ? LOGBASE + p : p );\r\n\r\n        // If maxD is undefined or null...\r\n        if ( maxD == null ||\r\n\r\n             // or NaN...\r\n             ( !( id = 12, n = new Decimal(maxD) )['s'] ||\r\n\r\n               // or less than 1, or Infinity...\r\n               ( outOfRange = n['cmp'](n1) < 0 || !n['c'] ) ||\r\n\r\n                 // or not an integer...\r\n                 ( Decimal['errors'] && mathfloor( n['e'] / LOGBASE ) < n['c'].length - 1 ) ) &&\r\n\r\n                   // 'toFraction() max denominator not an integer: {maxD}'\r\n                   // 'toFraction() max denominator out of range: {maxD}'\r\n                   !ifExceptionsThrow( Decimal, 'max denominator', maxD, 'toFraction', 0 ) ||\r\n\r\n                     // or greater than the maximum denominator needed to specify the value exactly.\r\n                     ( maxD = n )['cmp'](d) > 0 ) {\r\n\r\n            // d is 10**e, n1 is 1.\r\n            maxD = e > 0 ? d : n1;\r\n        }\r\n\r\n        external = false;\r\n        n = new Decimal( coefficientToString(xc) );\r\n        p = Decimal['precision'];\r\n        Decimal['precision'] = e = xc.length * LOGBASE * 2;\r\n\r\n        for ( ; ; )  {\r\n            q = div( n, d, 0, 1, 1 );\r\n            d2 = d0['plus']( q['times'](d1) );\r\n\r\n            if ( d2['cmp'](maxD) == 1 ) {\r\n\r\n                break;\r\n            }\r\n            d0 = d1;\r\n            d1 = d2;\r\n\r\n            n1 = n0['plus']( q['times']( d2 = n1 ) );\r\n            n0 = d2;\r\n\r\n            d = n['minus']( q['times']( d2 = d ) );\r\n            n = d2;\r\n        }\r\n\r\n        d2 = div( maxD['minus'](d0), d1, 0, 1, 1 );\r\n        n0 = n0['plus']( d2['times'](n1) );\r\n        d0 = d0['plus']( d2['times'](d1) );\r\n        n0['s'] = n1['s'] = x['s'];\r\n\r\n        // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n        frac = div( n1, d1, e, 1 )['minus'](x)['abs']()['cmp'](\r\n               div( n0, d0, e, 1 )['minus'](x)['abs']() ) < 1\r\n          ? [ n1 + '', d1 + '' ]\r\n          : [ n0 + '', d0 + '' ];\r\n\r\n        external = true;\r\n        Decimal['precision'] = p;\r\n\r\n        return frac;\r\n    };\r\n\r\n\r\n    /*\r\n     * Returns a new Decimal whose value is the nearest multiple of the magnitude of n to the value\r\n     * of this Decimal.\r\n     *\r\n     * If the value of this Decimal is equidistant from two multiples of n, the rounding mode rm,\r\n     * or rounding if rm is omitted or is null or undefined, determines the direction of the\r\n     * nearest multiple.\r\n     *\r\n     * In the context of this method, rounding mode 4 (ROUND_HALF_UP) is the same as rounding mode 0\r\n     * (ROUND_UP), and so on.\r\n     *\r\n     * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n     * or n is NaN, in which case the return value will be also be NaN.\r\n     *\r\n     * The return value is not rounded to precision significant digits.\r\n     *\r\n     * n {number|string|Decimal} The magnitude to round to a multiple of.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * 'toNearest() rounding mode not an integer: {rm}'\r\n     * 'toNearest() rounding mode out of range: {rm}'\r\n     *\r\n     */\r\n    P['toNearest'] = function ( n, rm ) {\r\n        var x = this,\r\n            Decimal = x['constructor'];\r\n\r\n        x = new Decimal(x);\r\n\r\n        if ( n == null ) {\r\n            n = new Decimal( Decimal['ONE'] );\r\n            rm = Decimal['rounding'];\r\n        } else {\r\n            id = 17;\r\n            n = new Decimal(n);\r\n            rm = checkRM( x, rm, 'toNearest' );\r\n        }\r\n\r\n        // If n is finite...\r\n        if ( n['c'] ) {\r\n\r\n           // If x is finite...\r\n            if ( x['c'] ) {\r\n\r\n                if ( n['c'][0] ) {\r\n                    external = false;\r\n                    x = div( x, n, 0, rm < 4 ? [4, 5, 7, 8][rm] : rm, 1 )['times'](n);\r\n                    external = true;\r\n                    rnd(x);\r\n                } else {\r\n                    x['c'] = [ x['e'] = 0 ];\r\n                }\r\n            }\r\n\r\n        // n is NaN or +-Infinity. If x is not NaN...\r\n        } else if ( x['s'] ) {\r\n\r\n            // If n is +-Infinity...\r\n            if ( n['s'] ) {\r\n                n['s'] = x['s'];\r\n            }\r\n            x = n;\r\n        }\r\n\r\n        return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this Decimal converted to a number primitive.\r\n     *\r\n     */\r\n    P['toNumber'] = function () {\r\n        var x = this;\r\n\r\n        // Ensure zero has correct sign.\r\n        return +x || ( x['s'] ? 0 * x['s'] : NaN );\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Decimal whose value is the value of this Decimal raised to the power\r\n     * Decimal(y, b), rounded to precision significant digits using rounding mode rounding.\r\n     *\r\n     * ECMAScript compliant.\r\n     *\r\n     *   x is any value, including NaN.\r\n     *   n is any number, including �Infinity unless stated.\r\n     *\r\n     *   pow( x, NaN )                           = NaN\r\n     *   pow( x, �0 )                            = 1\r\n\r\n     *   pow( NaN, nonzero )                     = NaN\r\n     *   pow( abs(n) > 1, +Infinity )            = +Infinity\r\n     *   pow( abs(n) > 1, -Infinity )            = +0\r\n     *   pow( abs(n) == 1, �Infinity )           = NaN\r\n     *   pow( abs(n) < 1, +Infinity )            = +0\r\n     *   pow( abs(n) < 1, -Infinity )            = +Infinity\r\n     *   pow( +Infinity, n > 0 )                 = +Infinity\r\n     *   pow( +Infinity, n < 0 )                 = +0\r\n     *   pow( -Infinity, odd integer > 0 )       = -Infinity\r\n     *   pow( -Infinity, even integer > 0 )      = +Infinity\r\n     *   pow( -Infinity, odd integer < 0 )       = -0\r\n     *   pow( -Infinity, even integer < 0 )      = +0\r\n     *   pow( +0, n > 0 )                        = +0\r\n     *   pow( +0, n < 0 )                        = +Infinity\r\n     *   pow( -0, odd integer > 0 )              = -0\r\n     *   pow( -0, even integer > 0 )             = +0\r\n     *   pow( -0, odd integer < 0 )              = -Infinity\r\n     *   pow( -0, even integer < 0 )             = +Infinity\r\n     *   pow( finite n < 0, finite non-integer ) = NaN\r\n     *\r\n     * For non-integer and larger exponents pow(x, y) is calculated using\r\n     *\r\n     *   x^y = exp(y*ln(x))\r\n     *\r\n     * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n     * probability of an incorrectly rounded result\r\n     * P( [49]9{14} | [50]0{14} ) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n     * i.e. 1 in 250,000,000,000,000\r\n     *\r\n     * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n     *\r\n     * y {number|string|Decimal} The power to which to raise this Decimal.\r\n     * [b] {number} The base of y.\r\n     *\r\n     */\r\n    P['toPower'] = P['pow'] = function ( y, b ) {\r\n        var a, e, n, r,\r\n            x = this,\r\n            Decimal = x['constructor'],\r\n            s = x['s'],\r\n            yN = +( id = 13, y = new Decimal( y, b ) ),\r\n            i = yN < 0 ? -yN : yN,\r\n            pr = Decimal['precision'],\r\n            rm = Decimal['rounding'];\r\n\r\n        // Handle +-Infinity, NaN and +-0.\r\n        if ( !x['c'] || !y['c'] || ( n = !x['c'][0] ) || !y['c'][0] ) {\r\n\r\n            // valueOf -0 is 0, so check for 0 then multiply it by the sign.\r\n            return new Decimal( mathpow( n ? s * 0 : +x, yN ) );\r\n        }\r\n\r\n        x = new Decimal(x);\r\n        a = x['c'].length;\r\n\r\n        // if x == 1\r\n        if ( !x['e'] && x['c'][0] == x['s'] && a == 1 ) {\r\n\r\n            return x;\r\n        }\r\n\r\n        b = y['c'].length - 1;\r\n\r\n        // if y == 1\r\n        if ( !y['e'] && y['c'][0] == y['s'] && !b ) {\r\n            r = rnd( x, pr, rm );\r\n        } else {\r\n            e = mathfloor( y['e'] / LOGBASE );\r\n            n = e >= b;\r\n\r\n            // If y is not an integer and x is negative, return NaN.\r\n            if ( !n && s < 0 ) {\r\n                r = new Decimal(NaN);\r\n            } else {\r\n\r\n                /*\r\n                 If the approximate number of significant digits of x multiplied by abs(y) is less\r\n                 than INT_POW_LIMIT use the 'exponentiation by squaring' algorithm.\r\n                 */\r\n                if ( n && a * LOGBASE * i < INT_POW_LIMIT ) {\r\n                    r = intPow( Decimal, x, i );\r\n\r\n                    if ( y['s'] < 0 ) {\r\n\r\n                        return Decimal['ONE']['div'](r);\r\n                    }\r\n                } else {\r\n\r\n                    // Result is negative if x is negative and the last digit of integer y is odd.\r\n                    s = s < 0 && y['c'][ Math.max( e, b ) ] & 1 ? -1 : 1;\r\n\r\n                    b = mathpow( +x, yN );\r\n\r\n                    /*\r\n                     Estimate result exponent.\r\n                     x^y = 10^e,  where e = y * log10(x)\r\n                     log10(x) = log10(x_significand) + x_exponent\r\n                     log10(x_significand) = ln(x_significand) / ln(10)\r\n                     */\r\n                    e = b == 0 || !isFinite(b)\r\n                      ? mathfloor( yN * ( Math.log( '0.' + coefficientToString( x['c'] ) ) /\r\n                        Math.LN10 + x['e'] + 1 ) )\r\n                      : new Decimal( b + '' )['e'];\r\n\r\n                    // Estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e:-1\r\n\r\n                    // Overflow/underflow?\r\n                    if ( e > Decimal['maxE'] + 1 || e < Decimal['minE'] - 1 ) {\r\n\r\n                        return new Decimal( e > 0 ? s / 0 : 0 );\r\n                    }\r\n\r\n                    external = false;\r\n                    Decimal['rounding'] = x['s'] = 1;\r\n\r\n                    /*\r\n                     Estimate extra digits needed from ln(x) to ensure five correct rounding digits\r\n                     in result (i was unnecessary before max exponent was extended?).\r\n                     Example of failure before i was introduced: (precision: 10),\r\n                     new Decimal(2.32456).pow('2087987436534566.46411')\r\n                     should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n                     */\r\n                    i = Math.min( 12, ( e + '' ).length );\r\n\r\n                    // r = x^y = exp(y*ln(x))\r\n                    r = exp( y['times']( ln( x, pr + i ) ), pr );\r\n\r\n                    // Truncate to the required precision plus five rounding digits.\r\n                    r = rnd( r, pr + 5, 1 );\r\n\r\n                    /*\r\n                     If the rounding digits are [49]9999 or [50]0000 increase the precision by 10\r\n                     and recalculate the result.\r\n                     */\r\n                    if ( checkRoundingDigits( r['c'], pr, rm ) ) {\r\n                        e = pr + 10;\r\n\r\n                        // Truncate to the increased precision plus five rounding digits.\r\n                        r = rnd( exp( y['times']( ln( x, e + i ) ), e ), e + 5, 1 );\r\n\r\n                        /*\r\n                          Check for 14 nines from the 2nd rounding digit (the first rounding digit\r\n                          may be 4 or 9).\r\n                         */\r\n                        if ( +coefficientToString( r['c'] ).slice( pr + 1, pr + 15 ) + 1 == 1e14 ) {\r\n                            r = rnd( r, pr + 1, 0 );\r\n                        }\r\n                    }\r\n\r\n                    r['s'] = s;\r\n                    external = true;\r\n                    Decimal['rounding'] = rm;\r\n                }\r\n\r\n                r = rnd( r, pr, rm );\r\n            }\r\n        }\r\n\r\n        return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Decimal rounded to sd significant digits\r\n     * using rounding mode rounding.\r\n     *\r\n     * Return exponential notation if sd is less than the number of digits necessary to represent\r\n     * the integer part of the value in normal notation.\r\n     *\r\n     * sd {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * errors true: Throw if sd and rm are not undefined, null or integers in range.\r\n     * errors false: Ignore sd and rm if not numbers or not in range, and truncate non-integers.\r\n     *\r\n     * 'toPrecision() sd not an integer: {sd}'\r\n     * 'toPrecision() sd out of range: {sd}'\r\n     * 'toPrecision() rounding mode not an integer: {rm}'\r\n     * 'toPrecision() rounding mode out of range: {rm}'\r\n     *\r\n     */\r\n    P['toPrecision'] = function ( sd, rm ) {\r\n        var x = this;\r\n\r\n        return sd != null && checkArg( x, sd, 'toPrecision', 1 ) && x['c']\r\n          ? format( x, --sd | 0, checkRM( x, rm, 'toPrecision' ), 2 )\r\n          : x.toString();\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Decimal whose value is this Decimal rounded to a maximum of d significant\r\n     * digits using rounding mode rm, or to precision and rounding respectively if omitted.\r\n     *\r\n     * [d] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * 'toSD() digits out of range: {d}'\r\n     * 'toSD() digits not an integer: {d}'\r\n     * 'toSD() rounding mode not an integer: {rm}'\r\n     * 'toSD() rounding mode out of range: {rm}'\r\n     *\r\n     */\r\n    P['toSignificantDigits'] = P['toSD'] = function ( d, rm ) {\r\n        var x = this,\r\n            Decimal = x['constructor'];\r\n\r\n        x = new Decimal(x);\r\n\r\n        return d == null || !checkArg( x, d, 'toSD', 1 )\r\n          ? rnd( x, Decimal['precision'], Decimal['rounding'] )\r\n          : rnd( x, d | 0, checkRM( x, rm, 'toSD' ) );\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this Decimal in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round to precision significant digits\r\n     * using rounding mode rounding.\r\n     *\r\n     * Return exponential notation if a base is not specified, and this Decimal has a positive\r\n     * exponent equal to or greater than toExpPos, or a negative exponent equal to or less than\r\n     * toExpNeg.\r\n     *\r\n     * [b] {number} Base. Integer, 2 to 64 inclusive.\r\n     *\r\n     */\r\n     P['toString'] = function (b) {\r\n        var u, str, strL,\r\n            x = this,\r\n            Decimal = x['constructor'],\r\n            xe = x['e'];\r\n\r\n        // Infinity or NaN?\r\n        if ( xe === null ) {\r\n            str = x['s'] ? 'Infinity' : 'NaN';\r\n\r\n        // Exponential format?\r\n        } else if ( b === u && ( xe <= Decimal['toExpNeg'] || xe >= Decimal['toExpPos'] ) ) {\r\n\r\n            return format( x, null, Decimal['rounding'], 1 );\r\n        } else {\r\n            str = coefficientToString( x['c'] );\r\n\r\n            // Negative exponent?\r\n            if ( xe < 0 ) {\r\n\r\n                // Prepend zeros.\r\n                for ( ; ++xe; str = '0' + str );\r\n                str = '0.' + str;\r\n\r\n            // Positive exponent?\r\n            } else if ( strL = str.length, xe > 0 ) {\r\n\r\n                if ( ++xe > strL ) {\r\n\r\n                    // Append zeros.\r\n                    for ( xe -= strL; xe-- ; str += '0' );\r\n\r\n                } else if ( xe < strL ) {\r\n                    str = str.slice( 0, xe ) + '.' + str.slice(xe);\r\n                }\r\n\r\n            // Exponent zero.\r\n            } else {\r\n                u = str.charAt(0);\r\n\r\n                if ( strL > 1 ) {\r\n                    str = u + '.' + str.slice(1);\r\n\r\n                // Avoid '-0'\r\n                } else if ( u == '0' ) {\r\n\r\n                    return u;\r\n                }\r\n            }\r\n\r\n            if ( b != null ) {\r\n\r\n                if ( !( outOfRange = !( b >= 2 && b < 65 ) ) &&\r\n                  ( b == (b | 0) || !Decimal['errors'] ) ) {\r\n                    str = convertBase( Decimal, str, b | 0, 10, x['s'] );\r\n\r\n                    // Avoid '-0'\r\n                    if ( str == '0' ) {\r\n\r\n                        return str;\r\n                    }\r\n                } else {\r\n\r\n                    // 'toString() base not an integer: {b}'\r\n                    // 'toString() base out of range: {b}'\r\n                    ifExceptionsThrow( Decimal, 'base', b, 'toString', 0 );\r\n                }\r\n            }\r\n        }\r\n\r\n        return x['s'] < 0 ? '-' + str : str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n     *\r\n     */\r\n    P['truncated'] = P['trunc'] = function () {\r\n\r\n        return rnd( new this['constructor'](this), this['e'] + 1, 1 );\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument.\r\n     *\r\n     * Ensures that JSON.stringify() uses toString for serialization.\r\n     *\r\n     */\r\n    P['valueOf'] = P['toJSON'] = function () {\r\n\r\n        return this.toString();\r\n    };\r\n\r\n\r\n    /*\r\n    // Add aliases to match BigDecimal method names.\r\n    P['add'] = P['plus'];\r\n    P['subtract'] = P['minus'];\r\n    P['multiply'] = P['times'];\r\n    P['divide'] = P['div'];\r\n    P['remainder'] = P['mod'];\r\n    P['compareTo'] = P['cmp'];\r\n    P['negate'] = P['neg'];\r\n     */\r\n\r\n\r\n    // Private functions for Decimal.prototype methods.\r\n\r\n\r\n    /*\r\n     *  coefficientToString\r\n     *  checkRoundingDigits\r\n     *  checkRM\r\n     *  checkArg\r\n     *  convertBase\r\n     *  div\r\n     *  exp\r\n     *  format\r\n     *  getCoeffLength\r\n     *  ifExceptionsThrow\r\n     *  intPow\r\n     *  ln\r\n     *  rnd\r\n     */\r\n\r\n\r\n    function coefficientToString(a) {\r\n        var s, z,\r\n            i = 1,\r\n            j = a.length,\r\n            r = a[0] + '';\r\n\r\n        for ( ; i < j; i++ ) {\r\n            s = a[i] + '';\r\n\r\n            for ( z = LOGBASE - s.length; z--; ) {\r\n                s = '0' + s;\r\n            }\r\n\r\n            r += s;\r\n        }\r\n\r\n        // '0'\r\n        for ( j = r.length; r.charCodeAt(--j) === 48; );\r\n\r\n        return r.slice( 0, j + 1 || 1 );\r\n    }\r\n\r\n\r\n    /*\r\n     * Check 5 rounding digits if repeating is null, 4 otherwise.\r\n     * repeating == null if caller is log or pow,\r\n     * repeating != null if caller is ln or exp.\r\n     *\r\n     *\r\n     // Previous, much simpler implementation when coefficient was base 10.\r\n     function checkRoundingDigits( c, i, rm, repeating ) {\r\n         return ( !repeating && rm > 3 && c[i] == 4 ||\r\n           ( repeating || rm < 4 ) && c[i] == 9 ) && c[i + 1] == 9 && c[i + 2] == 9 &&\r\n             c[i + 3] == 9 && ( repeating != null || c[i + 4] == 9 ) ||\r\n               repeating == null && ( c[i] == 5 || !c[i] ) && !c[i + 1] && !c[i + 2] &&\r\n                 !c[i + 3] && !c[i + 4];\r\n     }\r\n     */\r\n    function checkRoundingDigits( c, i, rm, repeating ) {\r\n        var ci, k, n, r, rd;\r\n\r\n        // Get the length of the first element of the array c.\r\n        for ( k = 1, n = c[0]; n >= 10; n /= 10, k++ );\r\n\r\n        n = i - k;\r\n\r\n        // Is the rounding digit in the first element of c?\r\n        if ( n < 0 ) {\r\n            n += LOGBASE;\r\n            ci = 0;\r\n        } else {\r\n            ci = Math.ceil( ( n + 1 ) / LOGBASE );\r\n            n %= LOGBASE;\r\n        }\r\n\r\n        k = mathpow( 10, LOGBASE - n );\r\n        rd = c[ci] % k | 0;\r\n\r\n        if ( repeating == null ) {\r\n\r\n            if ( n < 3 ) {\r\n\r\n                if ( n == 0 ) {\r\n                    rd = rd / 100 | 0;\r\n                } else if ( n == 1 ) {\r\n                    rd = rd / 10 | 0;\r\n                }\r\n\r\n                r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n            } else {\r\n                r = ( rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2 ) &&\r\n                    ( c[ci + 1] / k / 100 | 0 ) == mathpow( 10, n - 2 ) - 1 ||\r\n                        ( rd == k / 2 || rd == 0 ) && ( c[ci + 1] / k / 100 | 0 ) == 0;\r\n            }\r\n        } else {\r\n\r\n            if ( n < 4 ) {\r\n\r\n                if ( n == 0 ) {\r\n                    rd = rd / 1000 | 0;\r\n                } else if ( n == 1 ) {\r\n                    rd = rd / 100 | 0;\r\n                } else if ( n == 2 ) {\r\n                    rd = rd / 10 | 0;\r\n                }\r\n\r\n                r = ( repeating || rm < 4 ) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n            } else {\r\n                r = ( ( repeating || rm < 4 ) && rd + 1 == k ||\r\n                ( !repeating && rm > 3 ) && rd + 1 == k / 2 ) &&\r\n                    ( c[ci + 1] / k / 1000 | 0 ) == mathpow( 10, n - 3 ) - 1;\r\n            }\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n\r\n    /*\r\n     * Check and return rounding mode. If rm is invalid, return rounding mode rounding.\r\n     */\r\n    function checkRM( x, rm, method ) {\r\n        var Decimal = x['constructor'];\r\n\r\n        return rm == null || ( ( outOfRange = rm < 0 || rm > 8 ) ||\r\n          rm !== 0 && ( Decimal['errors'] ? parseInt : parseFloat )(rm) != rm ) &&\r\n            !ifExceptionsThrow( Decimal, 'rounding mode', rm, method, 0 )\r\n              ? Decimal['rounding'] : rm | 0;\r\n    }\r\n\r\n\r\n    /*\r\n     * Check that argument n is in range, return true or false.\r\n     */\r\n    function checkArg( x, n, method, min ) {\r\n        var Decimal = x['constructor'];\r\n\r\n        return !( outOfRange = n < ( min || 0 ) || n >= MAX_DIGITS + 1 ) &&\r\n\r\n          /*\r\n           * Include 'n === 0' because Opera has 'parseFloat(-0) == -0' as false\r\n           * despite having 'parseFloat(-0) === -0 && parseFloat('-0') === -0 && 0 == -0' as true.\r\n           */\r\n          ( n === 0 || ( Decimal['errors'] ? parseInt : parseFloat )(n) == n ) ||\r\n            ifExceptionsThrow( Decimal, 'argument', n, method, 0 );\r\n    }\r\n\r\n\r\n    /*\r\n     * Convert a numeric string of baseIn to a numeric string of baseOut.\r\n     */\r\n    convertBase = (function () {\r\n\r\n        /*\r\n         * Convert string of baseIn to an array of numbers of baseOut.\r\n         * Eg. convertBase('255', 10, 16) returns [15, 15].\r\n         * Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n         */\r\n        function toBaseOut( str, baseIn, baseOut ) {\r\n            var j,\r\n                arr = [0],\r\n                arrL,\r\n                i = 0,\r\n                strL = str.length;\r\n\r\n            for ( ; i < strL; ) {\r\n                for ( arrL = arr.length; arrL--; arr[arrL] *= baseIn );\r\n                arr[ j = 0 ] += NUMERALS.indexOf( str.charAt( i++ ) );\r\n\r\n                for ( ; j < arr.length; j++ ) {\r\n\r\n                    if ( arr[j] > baseOut - 1 ) {\r\n\r\n                        if ( arr[j + 1] == null ) {\r\n                            arr[j + 1] = 0;\r\n                        }\r\n                        arr[j + 1] += arr[j] / baseOut | 0;\r\n                        arr[j] %= baseOut;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return arr.reverse();\r\n        }\r\n\r\n        return function ( Decimal, str, baseOut, baseIn, sign ) {\r\n            var e, j, r, x, xc, y,\r\n                i = str.indexOf( '.' ),\r\n                pr = Decimal['precision'],\r\n                rm = Decimal['rounding'];\r\n\r\n            if ( baseIn < 37 ) {\r\n                str = str.toLowerCase();\r\n            }\r\n\r\n            // Non-integer.\r\n            if ( i >= 0 ) {\r\n                str = str.replace( '.', '' );\r\n                y = new Decimal(baseIn);\r\n                x = intPow( Decimal, y, str.length - i );\r\n\r\n                /*\r\n                 Convert str as if an integer, then divide the result by its base raised to a power\r\n                 such that the fraction part will be restored.\r\n                 Use toFixed to avoid possible exponential notation.\r\n                 */\r\n                y['c'] = toBaseOut( x.toFixed(), 10, baseOut );\r\n                y['e'] = y['c'].length;\r\n            }\r\n\r\n            // Convert the number as integer.\r\n            xc = toBaseOut( str, baseIn, baseOut );\r\n            e = j = xc.length;\r\n\r\n            // Remove trailing zeros.\r\n            for ( ; xc[--j] == 0; xc.pop() );\r\n\r\n            if ( !xc[0] ) {\r\n\r\n                return '0';\r\n            }\r\n\r\n            if ( i < 0 ) {\r\n                e--;\r\n            } else {\r\n                x['c'] = xc;\r\n                x['e'] = e;\r\n\r\n                // sign is needed for correct rounding.\r\n                x['s'] = sign;\r\n                x = div( x, y, pr, rm, 0, baseOut );\r\n                xc = x['c'];\r\n                r = x['r'];\r\n                e = x['e'];\r\n            }\r\n\r\n            // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n            i = xc[pr];\r\n            j = baseOut / 2;\r\n            r = r || xc[pr + 1] != null;\r\n\r\n            if ( rm < 4\r\n              ? ( i != null || r ) && ( rm == 0 || rm == ( x['s'] < 0 ? 3 : 2 ) )\r\n              : i > j || i == j && ( rm == 4 || r || rm == 6 && xc[pr - 1] & 1 ||\r\n                rm == ( x['s'] < 0 ? 8 : 7 ) ) ) {\r\n\r\n                xc.length = pr;\r\n\r\n                // Rounding up may mean the previous digit has to be rounded up and so on.\r\n                for ( --baseOut; ++xc[--pr] > baseOut; ) {\r\n                    xc[pr] = 0;\r\n\r\n                    if ( !pr ) {\r\n                        ++e;\r\n                        xc.unshift(1);\r\n                    }\r\n                }\r\n            } else {\r\n                xc.length = pr;\r\n            }\r\n\r\n            // Determine trailing zeros.\r\n            for ( j = xc.length; !xc[--j]; );\r\n\r\n            // E.g. [4, 11, 15] becomes 4bf.\r\n            for ( i = 0, str = ''; i <= j; str += NUMERALS.charAt( xc[i++] ) );\r\n\r\n            // Negative exponent?\r\n            if ( e < 0 ) {\r\n\r\n                // Prepend zeros.\r\n                for ( ; ++e; str = '0' + str );\r\n\r\n                str = '0.' + str;\r\n\r\n            // Positive exponent?\r\n            } else {\r\n                i = str.length;\r\n\r\n                if ( ++e > i ) {\r\n\r\n                    // Append zeros.\r\n                    for ( e -= i; e-- ; str += '0' );\r\n\r\n                } else if ( e < i ) {\r\n                    str = str.slice( 0, e ) + '.' + str.slice(e);\r\n                }\r\n            }\r\n\r\n            // No negative numbers: the caller will add the sign.\r\n            return str;\r\n        };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Perform division in the specified base. Called by div and convertBase.\r\n     */\r\n    var div = ( function () {\r\n\r\n        // Assumes non-zero x and k, and hence non-zero result.\r\n        function multiplyInteger( x, k, base ) {\r\n            var temp,\r\n                carry = 0,\r\n                i = x.length;\r\n\r\n            for ( x = x.slice(); i--; ) {\r\n                temp = x[i] * k + carry;\r\n                x[i] = temp % base | 0;\r\n                carry = temp / base | 0;\r\n            }\r\n\r\n            if (carry) {\r\n                x.unshift(carry);\r\n            }\r\n\r\n            return x;\r\n        }\r\n\r\n        function compare( a, b, aL, bL ) {\r\n            var i, cmp;\r\n\r\n            if ( aL != bL ) {\r\n                cmp = aL > bL ? 1 : -1;\r\n            } else {\r\n\r\n                for ( i = cmp = 0; i < aL; i++ ) {\r\n\r\n                    if ( a[i] != b[i] ) {\r\n                        cmp = a[i] > b[i] ? 1 : -1;\r\n\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return cmp;\r\n        }\r\n\r\n        function subtract( a, b, aL, base ) {\r\n            var i = 0;\r\n\r\n            // Subtract b from a.\r\n            for ( ; aL--; ) {\r\n                a[aL] -= i;\r\n                i = a[aL] < b[aL] ? 1 : 0;\r\n                a[aL] = i * base + a[aL] - b[aL];\r\n            }\r\n\r\n            // Remove leading zeros.\r\n            for ( ; !a[0] && a.length > 1; a.shift() );\r\n        }\r\n\r\n        // x: dividend, y: divisor.\r\n        return function ( x, y, pr, rm, dp, base ) {\r\n            var cmp, e, i, logbase, more, n, prod, prodL, q, qc, rem, remL, rem0, t, xi, xL, yc0,\r\n                yL, yz,\r\n                Decimal = x['constructor'],\r\n                s = x['s'] == y['s'] ? 1 : -1,\r\n                xc = x['c'],\r\n                yc = y['c'];\r\n\r\n            // Either NaN, Infinity or 0?\r\n            if ( !xc || !xc[0] || !yc || !yc[0] ) {\r\n\r\n                return new Decimal(\r\n\r\n                  // Return NaN if either NaN, or both Infinity or 0.\r\n                  !x['s'] || !y['s'] || ( xc ? yc && xc[0] == yc[0] : !yc ) ? NaN :\r\n\r\n                    // Return +-0 if x is 0 or y is +-Infinity, or return +-Infinity as y is 0.\r\n                    xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n                );\r\n            }\r\n\r\n            if (base) {\r\n                logbase = 1;\r\n                e = x['e'] - y['e'];\r\n            } else {\r\n                base = BASE;\r\n                logbase = LOGBASE;\r\n                e = mathfloor( x['e'] / logbase ) - mathfloor( y['e'] / logbase );\r\n            }\r\n\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n            q = new Decimal(s);\r\n            qc = q['c'] = [];\r\n\r\n            // Result exponent may be one less then the current value of e.\r\n            // The coefficients of the Decimals from convertBase may have trailing zeros.\r\n            for ( i = 0; yc[i] == ( xc[i] || 0 ); i++ );\r\n\r\n            if ( yc[i] > ( xc[i] || 0 ) ) {\r\n                e--;\r\n            }\r\n\r\n            if ( pr == null ) {\r\n                s = pr = Decimal['precision'];\r\n                rm = Decimal['rounding'];\r\n            } else if (dp) {\r\n                s = pr + ( x['e'] - y['e'] ) + 1;\r\n            } else {\r\n                s = pr;\r\n            }\r\n\r\n            if ( s < 0 ) {\r\n                qc.push(1);\r\n                more = true;\r\n            } else {\r\n\r\n                // Convert base 10 decimal places to base 1e7 decimal places.\r\n                s = s / logbase + 2 | 0;\r\n                i = 0;\r\n\r\n                // divisor < 1e7\r\n                if ( yL == 1 ) {\r\n                    n = 0;\r\n                    yc = yc[0];\r\n                    s++;\r\n\r\n                    // 'n' is the carry.\r\n                    for ( ; ( i < xL || n ) && s--; i++ ) {\r\n                        t = n * base + ( xc[i] || 0 );\r\n                        qc[i] = t / yc | 0;\r\n                        n = t % yc | 0;\r\n                    }\r\n\r\n                    more = n || i < xL;\r\n\r\n                // divisor >= 1e7\r\n                } else {\r\n\r\n                    // Normalise xc and yc so highest order digit of yc is >= base/2\r\n                    n = base / ( yc[0] + 1 ) | 0;\r\n\r\n                    if ( n > 1 ) {\r\n                        yc = multiplyInteger( yc, n, base );\r\n                        xc = multiplyInteger( xc, n, base );\r\n                        yL = yc.length;\r\n                        xL = xc.length;\r\n                    }\r\n\r\n                    xi = yL;\r\n                    rem = xc.slice( 0, yL );\r\n                    remL = rem.length;\r\n\r\n                    // Add zeros to make remainder as long as divisor.\r\n                    for ( ; remL < yL; rem[remL++] = 0 );\r\n\r\n                    yz = yc.slice();\r\n                    yz.unshift(0);\r\n                    yc0 = yc[0];\r\n\r\n                    if ( yc[1] >= base / 2 ) {\r\n                        yc0++;\r\n                    }\r\n\r\n                    do {\r\n                        n = 0;\r\n\r\n                        // Compare divisor and remainder.\r\n                        cmp = compare( yc, rem, yL, remL );\r\n\r\n                        // If divisor < remainder.\r\n                        if ( cmp < 0 ) {\r\n\r\n                            // Calculate trial digit, n.\r\n                            rem0 = rem[0];\r\n\r\n                            if ( yL != remL ) {\r\n                                rem0 = rem0 * base + ( rem[1] || 0 );\r\n                            }\r\n\r\n                            // n will be how many times the divisor goes into the current remainder.\r\n                            n = rem0 / yc0 | 0;\r\n\r\n                            /*\r\n                              Algorithm:\r\n                              1. product = divisor * trial digit (n)\r\n                              2. if product > remainder: product -= divisor, n--\r\n                              3. remainder -= product\r\n                              4. if product was < remainder at 2:\r\n                                5. compare new remainder and divisor\r\n                                6. If remainder > divisor: remainder -= divisor, n++\r\n                            */\r\n\r\n                            if ( n > 1 ) {\r\n\r\n                                if ( n >= base ) {\r\n                                    n = base - 1;\r\n                                }\r\n\r\n                                // product = divisor * trial digit.\r\n                                prod = multiplyInteger( yc, n, base );\r\n                                prodL = prod.length;\r\n                                remL = rem.length;\r\n\r\n                                // Compare product and remainder.\r\n                                cmp = compare( prod, rem, prodL, remL );\r\n\r\n                                // product > remainder.\r\n                                if ( cmp == 1 ) {\r\n                                    n--;\r\n\r\n                                    // Subtract divisor from product.\r\n                                    subtract( prod, yL < prodL ? yz : yc, prodL, base );\r\n                                }\r\n                            } else {\r\n\r\n                                // cmp is -1.\r\n                                // If n is 0, there is no need to compare yc and rem again below, so change cmp to 1 to avoid it.\r\n                                // If n is 1 there IS a need to compare yc and rem again below.\r\n                                if ( n == 0 ) {\r\n                                    cmp = n = 1;\r\n                                }\r\n                                prod = yc.slice();\r\n                            }\r\n                            prodL = prod.length;\r\n\r\n                            if ( prodL < remL ) {\r\n                                prod.unshift(0);\r\n                            }\r\n\r\n                            // Subtract product from remainder.\r\n                            subtract( rem, prod, remL, base );\r\n\r\n                            // If product was < previous remainder.\r\n                            if ( cmp == -1 ) {\r\n                                remL = rem.length;\r\n\r\n                                // Compare divisor and new remainder.\r\n                                cmp = compare( yc, rem, yL, remL );\r\n\r\n                                // If divisor < new remainder, subtract divisor from remainder.\r\n                                if ( cmp < 1 ) {\r\n                                    n++;\r\n\r\n                                    // Subtract divisor from remainder.\r\n                                    subtract( rem, yL < remL ? yz : yc, remL, base );\r\n                                }\r\n                            }\r\n\r\n                            remL = rem.length;\r\n\r\n                        } else if ( cmp === 0 ) {\r\n                            n++;\r\n                            rem = [0];\r\n                        }    // if cmp === 1, n will be 0\r\n\r\n                        // Add the next digit, n, to the result array.\r\n                        qc[i++] = n;\r\n\r\n                        // Update the remainder.\r\n                        if ( cmp && rem[0] ) {\r\n                            rem[remL++] = xc[xi] || 0;\r\n                        } else {\r\n                            rem = [ xc[xi] ];\r\n                            remL = 1;\r\n                        }\r\n\r\n                    } while ( ( xi++ < xL || rem[0] != null ) && s-- );\r\n\r\n                    more = rem[0] != null;\r\n                }\r\n\r\n                // Leading zero?\r\n                if ( !qc[0] ) {\r\n                    qc.shift();\r\n                }\r\n            }\r\n\r\n            // If div is being used for base conversion.\r\n            if ( logbase == 1 ) {\r\n                q['e'] = e;\r\n                q['r'] = +more;\r\n            } else {\r\n\r\n                // To calculate q.e, first get the number of digits of qc[0].\r\n                for ( i = 1, s = qc[0]; s >= 10; s /= 10, i++ );\r\n                q['e'] = i + e * logbase - 1;\r\n\r\n                rnd( q, dp ? pr + q['e'] + 1 : pr, rm, more );\r\n            }\r\n\r\n            return q;\r\n        };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Taylor/Maclaurin series.\r\n     *\r\n     * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n     *\r\n     * Argument reduction:\r\n     *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n     *   exp(x) = exp(x / 2^k)^(2^k)\r\n     *\r\n     * Previously, the argument was initially reduced by\r\n     * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n     * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n     * found to be slower than just dividing repeatedly by 32 as above.\r\n     *\r\n     * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n     * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n     * ( Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324 )\r\n     *\r\n     *  exp(Infinity)  = Infinity\r\n     *  exp(-Infinity) = 0\r\n     *  exp(NaN)       = NaN\r\n     *  exp(+-0)       = 1\r\n     *\r\n     *  exp(x) is non-terminating for any finite, non-zero x.\r\n     *\r\n     *  The result will always be correctly rounded.\r\n     *\r\n     */\r\n    function exp( x, pr ) {\r\n        var denom, guard, j, pow, sd, sum, t,\r\n            rep = 0,\r\n            i = 0,\r\n            k = 0,\r\n            Decimal = x['constructor'],\r\n            one = Decimal['ONE'],\r\n            rm = Decimal['rounding'],\r\n            precision = Decimal['precision'];\r\n\r\n        // 0/NaN/Infinity?\r\n        if ( !x['c'] || !x['c'][0] || x['e'] > 17 ) {\r\n\r\n            return new Decimal( x['c']\r\n              ? !x['c'][0] ? one : x['s'] < 0 ? 0 : 1 / 0\r\n              : x['s'] ? x['s'] < 0 ? 0 : x : NaN );\r\n        }\r\n\r\n        if ( pr == null ) {\r\n\r\n            /*\r\n             Estimate result exponent.\r\n             e^x = 10^j, where j = x * log10(e) and\r\n             log10(e) = ln(e) / ln(10) = 1 / ln(10),\r\n             so j = x / ln(10)\r\n            j = mathfloor( x / Math.LN10 );\r\n\r\n            // Overflow/underflow? Estimate may be +-1 of true value.\r\n            if ( j > Decimal['maxE'] + 1 || j < Decimal['minE'] - 1 ) {\r\n\r\n                return new Decimal( j > 0 ? 1 / 0 : 0 );\r\n            }\r\n             */\r\n\r\n            external = false;\r\n            sd = precision;\r\n        } else {\r\n            sd = pr;\r\n        }\r\n\r\n        t = new Decimal(0.03125);\r\n\r\n        // while abs(x) >= 0.1\r\n        while ( x['e'] > -2 ) {\r\n\r\n            // x = x / 2^5\r\n            x = x['times'](t);\r\n            k += 5;\r\n        }\r\n\r\n        /*\r\n         Use 2 * log10(2^k) + 5 to estimate the increase in precision necessary to ensure the first\r\n         4 rounding digits are correct.\r\n         */\r\n        guard = Math.log( mathpow( 2, k ) ) / Math.LN10 * 2 + 5 | 0;\r\n        sd += guard;\r\n\r\n        denom = pow = sum = new Decimal(one);\r\n        Decimal['precision'] = sd;\r\n\r\n        for ( ; ; ) {\r\n            pow = rnd( pow['times'](x), sd, 1 );\r\n            denom = denom['times'](++i);\r\n            t = sum['plus']( div( pow, denom, sd, 1 ) );\r\n\r\n            if ( coefficientToString( t['c'] ).slice( 0, sd ) ===\r\n                 coefficientToString( sum['c'] ).slice( 0, sd ) ) {\r\n                j = k;\r\n\r\n                while ( j-- ) {\r\n                    sum = rnd( sum['times'](sum), sd, 1 );\r\n                }\r\n\r\n                /*\r\n                 Check to see if the first 4 rounding digits are [49]999.\r\n                 If so, repeat the summation with a higher precision, otherwise\r\n                 E.g. with precision: 18, rounding: 1\r\n                 exp(18.404272462595034083567793919843761) = 98372560.1229999999\r\n                                           when it should be 98372560.123\r\n\r\n                 sd - guard is the index of first rounding digit.\r\n                 */\r\n                if ( pr == null ) {\r\n\r\n                    if ( rep < 3 && checkRoundingDigits( sum['c'], sd - guard, rm, rep ) ) {\r\n                        Decimal['precision'] = sd += 10;\r\n                        denom = pow = t = new Decimal(one);\r\n                        i = 0;\r\n                        rep++;\r\n                    } else {\r\n\r\n                        return rnd( sum, Decimal['precision'] = precision, rm, external = true );\r\n                    }\r\n                } else {\r\n                    Decimal['precision'] = precision;\r\n\r\n                    return sum;\r\n                }\r\n            }\r\n            sum = t;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of Decimal n in normal or exponential notation\r\n     * rounded to the specified decimal places or significant digits.\r\n     * Called by toString, toExponential (k is 1), toFixed, and toPrecision (k is 2).\r\n     * i is the index (with the value in normal notation) of the digit that may be rounded up.\r\n     * j is the rounding mode, then the number of digits required including fraction-part trailing\r\n     * zeros.\r\n     */\r\n    function format( n, i, j, k ) {\r\n        var s, z,\r\n            Decimal = n['constructor'],\r\n            e = ( n = new Decimal(n) )['e'];\r\n\r\n        // i == null when toExponential(no arg), or toString() when x >= toExpPos etc.\r\n        if ( i == null ) {\r\n            j = 0;\r\n        } else {\r\n            rnd( n, ++i, j );\r\n\r\n            // If toFixed, n['e'] may have changed if the value was rounded up.\r\n            j = k ? i : i + n['e'] - e;\r\n        }\r\n\r\n        e = n['e'];\r\n        s = coefficientToString( n['c'] );\r\n\r\n        /*\r\n         toPrecision returns exponential notation if the number of significant digits specified\r\n         is less than the number of digits necessary to represent the integer part of the value\r\n         in normal notation.\r\n         */\r\n\r\n        // Exponential notation.\r\n        if ( k == 1 || k == 2 && ( i <= e || e <= Decimal['toExpNeg'] ) ) {\r\n\r\n            // Append zeros?\r\n            for ( ; s.length < j; s += '0' );\r\n\r\n            if ( s.length > 1 ) {\r\n                s = s.charAt(0) + '.' + s.slice(1);\r\n            }\r\n\r\n            s += ( e < 0 ? 'e' : 'e+' ) + e;\r\n\r\n        // Normal notation.\r\n        } else {\r\n            k = s.length;\r\n\r\n            // Negative exponent?\r\n            if ( e < 0 ) {\r\n                z = j - k;\r\n\r\n                // Prepend zeros.\r\n                for ( ; ++e; s = '0' + s );\r\n                s = '0.' + s;\r\n\r\n            // Positive exponent?\r\n            } else {\r\n\r\n                if ( ++e > k ) {\r\n                    z = j - e;\r\n\r\n                    // Append zeros.\r\n                    for ( e -= k; e-- ; s += '0' );\r\n\r\n                    if ( z > 0 ) {\r\n                        s += '.';\r\n                    }\r\n\r\n                } else {\r\n                    z = j - k;\r\n\r\n                    if ( e < k ) {\r\n                        s = s.slice( 0, e ) + '.' + s.slice(e);\r\n                    } else if ( z > 0 ) {\r\n                        s += '.';\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Append more zeros?\r\n            if ( z > 0 ) {\r\n\r\n                for ( ; z--; s += '0' );\r\n            }\r\n        }\r\n\r\n        return n['s'] < 0 && n['c'][0] ? '-' + s : s;\r\n    }\r\n\r\n\r\n    function getCoeffLength(c) {\r\n        var v = c.length - 1,\r\n            n = v * LOGBASE + 1;\r\n\r\n        if ( v = c[v] ) {\r\n\r\n            // Subtract the number of trailing zeros of the last number.\r\n            for ( ; v % 10 == 0; v /= 10, n-- );\r\n\r\n            // Add the number of digits of the first number.\r\n            for ( v = c[0]; v >= 10; v /= 10, n++ );\r\n        }\r\n\r\n        return n;\r\n    }\r\n\r\n\r\n    /*\r\n     * Assemble error messages. Throw Decimal Errors.\r\n     */\r\n    function ifExceptionsThrow( Decimal, message, arg, method, more ) {\r\n\r\n        if ( Decimal['errors'] ) {\r\n            var error = new Error( ( method || [\r\n              'new Decimal', 'cmp', 'div', 'eq', 'gt', 'gte', 'lt', 'lte', 'minus', 'mod',\r\n              'plus', 'times', 'toFraction', 'pow', 'random', 'log', 'sqrt', 'toNearest', 'divToInt'\r\n              ][ id ? id < 0 ? -id : id : 1 / id < 0 ? 1 : 0 ] ) + '() ' + ( [\r\n              'number type has more than 15 significant digits', 'LN10 out of digits' ][message]\r\n              || message + ( [ outOfRange ? ' out of range' : ' not an integer',\r\n              ' not a boolean or binary digit' ][more] || '' ) ) + ': ' + arg\r\n            );\r\n            error['name'] = 'Decimal Error';\r\n            outOfRange = id = 0;\r\n\r\n            throw error;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     * Use 'exponentiation by squaring' for small integers. Called by convertBase and pow.\r\n     */\r\n    function intPow( Decimal, x, i ) {\r\n        var r = new Decimal( Decimal['ONE'] );\r\n\r\n        for ( external = false; ; ) {\r\n\r\n            if ( i & 1 ) {\r\n                r = r['times'](x);\r\n            }\r\n            i >>= 1;\r\n\r\n            if ( !i ) {\r\n\r\n                break;\r\n            }\r\n            x = x['times'](x);\r\n        }\r\n        external = true;\r\n\r\n        return r;\r\n    }\r\n\r\n\r\n    /*\r\n     *  ln(-n)        = NaN\r\n     *  ln(0)         = -Infinity\r\n     *  ln(-0)        = -Infinity\r\n     *  ln(1)         = 0\r\n     *  ln(Infinity)  = Infinity\r\n     *  ln(-Infinity) = NaN\r\n     *  ln(NaN)       = NaN\r\n     *\r\n     *  ln(n) (n != 1) is non-terminating.\r\n     *\r\n     */\r\n    function ln( y, pr ) {\r\n        var c, c0, denom, e, num, rep, sd, sum, t, x1, x2,\r\n            n = 1,\r\n            guard = 10,\r\n            x = y,\r\n            xc = x['c'],\r\n            Decimal = x['constructor'],\r\n            one = Decimal['ONE'],\r\n            rm = Decimal['rounding'],\r\n            precision = Decimal['precision'];\r\n\r\n        // x < 0 or +-Infinity/NaN or 0 or 1.\r\n        if ( x['s'] < 0 || !xc || !xc[0] || !x['e'] && xc[0] == 1 && xc.length == 1 ) {\r\n\r\n            return new Decimal( xc && !xc[0] ? -1 / 0 : x['s'] != 1 ? NaN : xc ? 0 : x );\r\n        }\r\n\r\n        if ( pr == null ) {\r\n            external = false;\r\n            sd = precision;\r\n        } else {\r\n            sd = pr;\r\n        }\r\n\r\n        Decimal['precision'] = sd += guard;\r\n\r\n        c = coefficientToString(xc);\r\n        c0 = c.charAt(0);\r\n\r\n        if ( Math.abs( e = x['e'] ) < 1.5e15 ) {\r\n\r\n            /*\r\n             Argument reduction.\r\n             The series converges faster the closer the argument is to 1, so using\r\n             ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n             multiply the argument by itself until the leading digits of the significand are 7, 8,\r\n             9, 10, 11, 12 or 13, recording the number of multiplications so the sum of the series\r\n             can later be divided by this number, then separate out the power of 10 using\r\n             ln(a*10^b) = ln(a) + b*ln(10).\r\n             */\r\n\r\n            // max n is 21 ( gives 0.9, 1.0 or 1.1 ) ( 9e15 / 21 = 4.2e14 ).\r\n            //while ( c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1 ) {\r\n            // max n is 6 ( gives 0.7 - 1.3 )\r\n            while ( c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3 ) {\r\n                x = x['times'](y);\r\n                c = coefficientToString( x['c'] );\r\n                c0 = c.charAt(0);\r\n                n++;\r\n            }\r\n\r\n            e = x['e'];\r\n\r\n            if ( c0 > 1 ) {\r\n                x = new Decimal( '0.' + c );\r\n                e++;\r\n            } else {\r\n                x = new Decimal( c0 + '.' + c.slice(1) );\r\n            }\r\n        } else {\r\n\r\n            /*\r\n             The argument reduction method above may result in overflow if the argument y is a\r\n             massive number with exponent >= 1500000000000000 ( 9e15 / 6 = 1.5e15 ), so instead\r\n             recall this function using ln(x*10^e) = ln(x) + e*ln(10).\r\n             */\r\n            x = new Decimal( c0 + '.' + c.slice(1) );\r\n\r\n            if ( sd + 2 > LN10.length ) {\r\n                ifExceptionsThrow( Decimal, 1, sd + 2, 'ln' );\r\n            }\r\n\r\n            x = ln( x, sd - guard )['plus'](\r\n                new Decimal( LN10.slice( 0, sd + 2 ) )['times']( e + '' )\r\n            );\r\n\r\n            Decimal['precision'] = precision;\r\n\r\n            return pr == null ? rnd( x, precision, rm, external = true ) : x;\r\n        }\r\n\r\n        // x1 is x reduced to a value near 1.\r\n        x1 = x;\r\n\r\n        /*\r\n         Taylor series.\r\n         ln(y) = ln( (1 + x)/(1 - x) ) = 2( x + x^3/3 + x^5/5 + x^7/7 + ... )\r\n         where\r\n         x = (y - 1)/(y + 1)              ( |x| < 1 )\r\n         */\r\n        sum = num = x = div( x['minus'](one), x['plus'](one), sd, 1 );\r\n        x2 = rnd( x['times'](x), sd, 1 );\r\n        denom = 3;\r\n\r\n        for ( ; ; ) {\r\n            num = rnd( num['times'](x2), sd, 1 );\r\n            t = sum['plus']( div( num, new Decimal(denom), sd, 1 ) );\r\n\r\n            if ( coefficientToString( t['c'] ).slice( 0, sd ) ===\r\n                 coefficientToString( sum['c'] ).slice( 0, sd ) ) {\r\n                sum = sum['times'](2);\r\n\r\n                /*\r\n                 Reverse the argument reduction. Check that e is not 0 because, as well as\r\n                 preventing an unnecessary calculation, -0 + 0 = +0 and to ensure correct\r\n                 rounding later -0 needs to stay -0.\r\n                 */\r\n                if ( e !== 0 ) {\r\n\r\n                    if ( sd + 2 > LN10.length ) {\r\n                        ifExceptionsThrow( Decimal, 1, sd + 2, 'ln' );\r\n                    }\r\n\r\n                    sum = sum['plus'](\r\n                        new Decimal( LN10.slice( 0, sd + 2 ) )['times']( e + '' )\r\n                    );\r\n                }\r\n\r\n                sum = div( sum, new Decimal(n), sd, 1 );\r\n\r\n                /*\r\n                 Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n                 been repeated previously) and the first 4 rounding digits 9999?\r\n\r\n                 If so, restart the summation with a higher precision, otherwise\r\n                 e.g. with precision: 12, rounding: 1\r\n                 ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n\r\n                 sd - guard is the index of first rounding digit.\r\n                 */\r\n                if ( pr == null ) {\r\n\r\n                    if ( checkRoundingDigits( sum['c'], sd - guard, rm, rep ) ) {\r\n                        Decimal['precision'] = sd += guard;\r\n                        t = num = x = div( x1['minus'](one), x1['plus'](one), sd, 1 );\r\n                        x2 = rnd( x['times'](x), sd, 1 );\r\n                        denom = rep = 1;\r\n                    } else {\r\n\r\n                        return rnd( sum, Decimal['precision'] = precision, rm, external = true );\r\n                    }\r\n                } else {\r\n                    Decimal['precision'] = precision;\r\n\r\n                    return sum;\r\n                }\r\n            }\r\n\r\n            sum = t;\r\n            denom += 2;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     */\r\n     function rnd( x, sd, rm, r ) {\r\n        var digits, i, j, k, n, rd, xc, xci,\r\n            Decimal = x['constructor'];\r\n\r\n        // Don't round if sd is null or undefined.\r\n        out: if ( sd != null ) {\r\n\r\n            // Infinity/NaN.\r\n            if ( !( xc = x['c'] ) ) {\r\n\r\n                return x;\r\n            }\r\n\r\n            /*\r\n             rd, the rounding digit, i.e. the digit after the digit that may be rounded up,\r\n             n, a base 1e7 number, the element of xc containing rd,\r\n             xci, the index of n within xc,\r\n             digits, the number of digits of n,\r\n             i, what would be the index of rd within n if all the numbers were 7 digits long (i.e. they had leading zeros)\r\n             j, if > 0, the actual index of rd within n (if < 0, rd is a leading zero),\r\n             nLeadingZeros, the number of leading zeros n would have if it were 7 digits long.\r\n             */\r\n\r\n            // Get the length of the first element of the coefficient array xc.\r\n            for ( digits = 1, k = xc[0]; k >= 10; k /= 10, digits++ );\r\n\r\n            i = sd - digits;\r\n\r\n            // Is the rounding digit in the first element of xc?\r\n            if ( i < 0 ) {\r\n                i += LOGBASE;\r\n                j = sd;\r\n                n = xc[ xci = 0 ];\r\n\r\n                // Get the rounding digit at index j of n.\r\n                rd = n / mathpow( 10, digits - j - 1 ) % 10 | 0;\r\n            } else {\r\n                xci = Math.ceil( ( i + 1 ) / LOGBASE );\r\n\r\n                if ( xci >= xc.length ) {\r\n\r\n                    if (r) {\r\n\r\n                        // Needed by exp, ln and sqrt.\r\n                        for ( ; xc.length <= xci; xc.push(0) );\r\n\r\n                        n = rd = 0;\r\n                        digits = 1;\r\n                        i %= LOGBASE;\r\n                        j = i - LOGBASE + 1;\r\n                    } else {\r\n\r\n                      break out;\r\n                    }\r\n                } else {\r\n                    n = k = xc[xci];\r\n\r\n                    // Get the number of digits of n.\r\n                    for ( digits = 1; k >= 10; k /= 10, digits++ );\r\n\r\n                    // Get the index of rd within n.\r\n                    i %= LOGBASE;\r\n\r\n                    // Get the index of rd within n, adjusted for leading zeros.\r\n                    // The number of leading zeros of n is given by LOGBASE - digits.\r\n                    j = i - LOGBASE + digits;\r\n\r\n                    // Get the rounding digit at index j of n.\r\n                    // Floor using Math.floor instead of | 0 as rd may be outside int range.\r\n                    rd = j < 0 ? 0 : mathfloor( n / mathpow( 10, digits - j - 1 ) % 10 );\r\n                }\r\n            }\r\n\r\n            r = r || sd < 0 ||\r\n              // Are there any non-zero digits after the rounding digit?\r\n              xc[xci + 1] != null || ( j < 0 ? n : n % mathpow( 10, digits - j - 1 ) );\r\n\r\n            /*\r\n             The expression  n % mathpow( 10, digits - j - 1 )  returns all the digits of n to the\r\n             right of the digit at (left-to-right) index j,\r\n             e.g. if n is 908714 and j is 2, the expression will give 714.\r\n             */\r\n\r\n            r = rm < 4\r\n              ? ( rd || r ) && ( rm == 0 || rm == ( x['s'] < 0 ? 3 : 2 ) )\r\n              : rd > 5 || rd == 5 && ( rm == 4 || r ||\r\n                // Check whether the digit to the left of the rounding digit is odd.\r\n                rm == 6 && ( ( i > 0 ? j > 0 ? n / mathpow( 10, digits - j ) : 0 : xc[xci - 1] ) % 10 ) & 1 ||\r\n                  rm == ( x['s'] < 0 ? 8 : 7 ) );\r\n\r\n            if ( sd < 1 || !xc[0] ) {\r\n                xc.length = 0;\r\n\r\n                if (r) {\r\n\r\n                    // Convert sd to decimal places.\r\n                    sd -= x['e'] + 1;\r\n\r\n                    // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n                    xc[0] = mathpow( 10, sd % LOGBASE );\r\n                    x['e'] = -sd || 0;\r\n                } else {\r\n\r\n                    // Zero.\r\n                    xc[0] = x['e'] = 0;\r\n                }\r\n\r\n                return x;\r\n            }\r\n\r\n            // Remove excess digits.\r\n\r\n            if ( i == 0 ) {\r\n                xc.length = xci;\r\n                k = 1;\r\n                xci--;\r\n            } else {\r\n                xc.length = xci + 1;\r\n                k = mathpow( 10, LOGBASE - i );\r\n\r\n                // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n                // j > 0 means i > number of leading zeros of n.\r\n                xc[xci] = j > 0 ? ( n / mathpow( 10, digits - j ) % mathpow( 10, j ) | 0 ) * k : 0;\r\n            }\r\n\r\n            // Round up?\r\n            if (r) {\r\n\r\n                for ( ; ; ) {\r\n\r\n                    // Is the digit to be rounded up in the first element of xc?\r\n                    if ( xci == 0 ) {\r\n\r\n                        // i will be the length of xc[0] before k is added.\r\n                        for ( i = 1, j = xc[0]; j >= 10; j /= 10, i++ );\r\n\r\n                        j = xc[0] += k;\r\n\r\n                        for ( k = 1; j >= 10; j /= 10, k++ );\r\n\r\n                        // if i != k the length has increased.\r\n                        if ( i != k ) {\r\n                            x['e']++;\r\n\r\n                            if ( xc[0] == BASE ) {\r\n                                xc[0] = 1;\r\n                            }\r\n                        }\r\n\r\n                        break;\r\n                    } else {\r\n                        xc[xci] += k;\r\n\r\n                        if ( xc[xci] != BASE ) {\r\n\r\n                            break;\r\n                        }\r\n\r\n                        xc[xci--] = 0;\r\n                        k = 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Remove trailing zeros.\r\n            for ( i = xc.length; xc[--i] === 0; xc.pop() );\r\n        }\r\n\r\n        if (external) {\r\n\r\n            // Overflow?\r\n            if ( x['e'] > Decimal['maxE'] ) {\r\n\r\n                // Infinity.\r\n                x['c'] = x['e'] = null;\r\n\r\n            // Underflow?\r\n            } else if ( x['e'] < Decimal['minE'] ) {\r\n\r\n                // Zero.\r\n                x['c'] = [ x['e'] = 0 ];\r\n            }\r\n        }\r\n\r\n        return x;\r\n    }\r\n\r\n\r\n    decimal = (function () {\r\n\r\n\r\n        // Private functions used by static Decimal methods.\r\n\r\n\r\n        /*\r\n         *  The following emulations or wrappers of Math object functions are currently\r\n         *  commented-out and not in the public API.\r\n         *\r\n         *  abs\r\n         *  acos\r\n         *  asin\r\n         *  atan\r\n         *  atan2\r\n         *  ceil\r\n         *  cos\r\n         *  floor\r\n         *  round\r\n         *  sin\r\n         *  tan\r\n         *  trunc\r\n         */\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the absolute value of n.\r\n         *\r\n         * n {number|string|Decimal}\r\n         *\r\n        function abs(n) { return new this(n)['abs']() }\r\n         */\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the arccosine in radians of n.\r\n         *\r\n         * n {number|string|Decimal}\r\n         *\r\n        function acos(n) { return new this( Math.acos(n) + '' ) }\r\n         */\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the arcsine in radians of n.\r\n         *\r\n         * n {number|string|Decimal}\r\n         *\r\n        function asin(n) { return new this( Math.asin(n) + '' ) }\r\n         */\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the arctangent in radians of n.\r\n         *\r\n         * n {number|string|Decimal}\r\n         *\r\n        function atan(n) { return new this( Math.atan(n) + '' ) }\r\n         */\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the arctangent in radians of y/x in the range\r\n         * -PI to PI (inclusive).\r\n         *\r\n         * y {number|string|Decimal} The y-coordinate.\r\n         * x {number|string|Decimal} The x-coordinate.\r\n         *\r\n        function atan2( y, x ) { return new this( Math.atan2( y, x ) + '' ) }\r\n         */\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is n round to an integer using ROUND_CEIL.\r\n         *\r\n         * n {number|string|Decimal}\r\n         *\r\n        function ceil(n) { return new this(n)['ceil']() }\r\n         */\r\n\r\n\r\n        /*\r\n         * Configure global settings for a Decimal constructor.\r\n         *\r\n         * obj is an object with any of the following properties,\r\n         *\r\n         *   precision  {number}\r\n         *   rounding   {number}\r\n         *   toExpNeg   {number}\r\n         *   toExpPos   {number}\r\n         *   minE       {number}\r\n         *   maxE       {number}\r\n         *   errors     {boolean|number}\r\n         *   crypto     {boolean|number}\r\n         *   modulo     {number}\r\n         *\r\n         *   format     {object}     See Decimal.prototype.toFormat\r\n         *      decimalSeparator       {string}\r\n         *      groupSeparator         {string}\r\n         *      groupSize              {number}\r\n         *      secondaryGroupSize     {number}\r\n         *      fractionGroupSeparator {string}\r\n         *      fractionGroupSize      {number}\r\n         *\r\n         *   A format object will replace the existing Decimal.format object without any property\r\n         *   checking.\r\n         *\r\n         * E.g.\r\n         *   Decimal.config({ precision: 20, rounding: 4 })\r\n         *\r\n         */\r\n        function config(obj) {\r\n            var p, u, v,\r\n                Decimal = this,\r\n                c = 'config',\r\n                parse = Decimal['errors'] ? parseInt : parseFloat;\r\n\r\n            if ( obj == u || typeof obj != 'object' &&\r\n              // 'config() object expected: {obj}'\r\n              !ifExceptionsThrow( Decimal, 'object expected', obj, c ) ) {\r\n\r\n                return Decimal;\r\n            }\r\n\r\n            // precision {number} Integer, 1 to MAX_DIGITS inclusive.\r\n            if ( ( v = obj[ p = 'precision' ] ) != u ) {\r\n\r\n                if ( !( outOfRange = v < 1 || v > MAX_DIGITS ) && parse(v) == v ) {\r\n                    Decimal[p] = v | 0;\r\n                } else {\r\n\r\n                    // 'config() precision not an integer: {v}'\r\n                    // 'config() precision out of range: {v}'\r\n                    ifExceptionsThrow( Decimal, p, v, c, 0 );\r\n                }\r\n            }\r\n\r\n            // rounding {number} Integer, 0 to 8 inclusive.\r\n            if ( ( v = obj[ p = 'rounding' ] ) != u ) {\r\n\r\n                if ( !( outOfRange = v < 0 || v > 8 ) && parse(v) == v ) {\r\n                    Decimal[p] = v | 0;\r\n                } else {\r\n\r\n                    // 'config() rounding not an integer: {v}'\r\n                    // 'config() rounding out of range: {v}'\r\n                    ifExceptionsThrow( Decimal, p, v, c, 0 );\r\n                }\r\n            }\r\n\r\n            // toExpNeg {number} Integer, -EXP_LIMIT to 0 inclusive.\r\n            if ( ( v = obj[ p = 'toExpNeg' ] ) != u ) {\r\n\r\n                if ( !( outOfRange = v < -EXP_LIMIT || v > 0 ) && parse(v) == v ) {\r\n                    Decimal[p] = mathfloor(v);\r\n                } else {\r\n\r\n                    // 'config() toExpNeg not an integer: {v}'\r\n                    // 'config() toExpNeg out of range: {v}'\r\n                    ifExceptionsThrow( Decimal, p, v, c, 0 );\r\n                }\r\n            }\r\n\r\n            // toExpPos {number} Integer, 0 to EXP_LIMIT inclusive.\r\n            if ( ( v = obj[ p = 'toExpPos' ] ) != u ) {\r\n\r\n                if ( !( outOfRange = v < 0 || v > EXP_LIMIT ) && parse(v) == v ) {\r\n                    Decimal[p] = mathfloor(v);\r\n                } else {\r\n\r\n                    // 'config() toExpPos not an integer: {v}'\r\n                    // 'config() toExpPos out of range: {v}'\r\n                    ifExceptionsThrow( Decimal, p, v, c, 0 );\r\n                }\r\n            }\r\n\r\n             // minE {number} Integer, -EXP_LIMIT to 0 inclusive.\r\n            if ( ( v = obj[ p = 'minE' ] ) != u ) {\r\n\r\n                if ( !( outOfRange = v < -EXP_LIMIT || v > 0 ) && parse(v) == v ) {\r\n                    Decimal[p] = mathfloor(v);\r\n                } else {\r\n\r\n                    // 'config() minE not an integer: {v}'\r\n                    // 'config() minE out of range: {v}'\r\n                    ifExceptionsThrow( Decimal, p, v, c, 0 );\r\n                }\r\n            }\r\n\r\n            // maxE {number} Integer, 0 to EXP_LIMIT inclusive.\r\n            if ( ( v = obj[ p = 'maxE' ] ) != u ) {\r\n\r\n                if ( !( outOfRange = v < 0 || v > EXP_LIMIT ) && parse(v) == v ) {\r\n                    Decimal[p] = mathfloor(v);\r\n                } else {\r\n\r\n                    // 'config() maxE not an integer: {v}'\r\n                    // 'config() maxE out of range: {v}'\r\n                    ifExceptionsThrow( Decimal, p, v, c, 0 );\r\n                }\r\n            }\r\n\r\n            // errors {boolean|number} true, false, 1 or 0.\r\n            if ( ( v = obj[ p = 'errors' ] ) != u ) {\r\n\r\n                if ( v === !!v || v === 1 || v === 0 ) {\r\n                    outOfRange = id = 0;\r\n                    Decimal[p] = !!v;\r\n                } else {\r\n\r\n                    // 'config() errors not a boolean or binary digit: {v}'\r\n                    ifExceptionsThrow( Decimal, p, v, c, 1 );\r\n                }\r\n            }\r\n\r\n            // crypto {boolean|number} true, false, 1 or 0.\r\n            if ( ( v = obj[ p = 'crypto' ] ) != u ) {\r\n\r\n                if ( v === !!v || v === 1 || v === 0 ) {\r\n                    Decimal[p] = !!( v && crypto && typeof crypto == 'object' );\r\n                } else {\r\n\r\n                    // 'config() crypto not a boolean or binary digit: {v}'\r\n                    ifExceptionsThrow( Decimal, p, v, c, 1 );\r\n                }\r\n            }\r\n\r\n            // modulo {number} Integer, 0 to 9 inclusive.\r\n            if ( ( v = obj[ p = 'modulo' ] ) != u ) {\r\n\r\n                if ( !( outOfRange = v < 0 || v > 9 ) && parse(v) == v ) {\r\n                    Decimal[p] = v | 0;\r\n                } else {\r\n\r\n                    // 'config() modulo not an integer: {v}'\r\n                    // 'config() modulo out of range: {v}'\r\n                    ifExceptionsThrow( Decimal, p, v, c, 0 );\r\n                }\r\n            }\r\n\r\n            // format {object}\r\n            if ( ( obj = obj[ p = 'format' ] ) != u ) {\r\n\r\n                if ( typeof obj == 'object' ) {\r\n                    Decimal[p] = obj;\r\n                } else {\r\n\r\n                    // 'config() format object expected: {obj}'\r\n                    ifExceptionsThrow( Decimal, 'format object expected', obj, c );\r\n                }\r\n            }\r\n\r\n            return Decimal;\r\n        }\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the cosine of n.\r\n         *\r\n         * n {number|string|Decimal} A number given in radians.\r\n         *\r\n        function cos(n) { return new this( Math.cos(n) + '' ) }\r\n         */\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the exponential of n,\r\n         *\r\n         * n {number|string|Decimal} The power to which to raise the base of the natural log.\r\n         *\r\n         */\r\n        function exp(n) { return new this(n)['exp'](); }\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is n round to an integer using ROUND_FLOOR.\r\n         *\r\n         * n {number|string|Decimal}\r\n         *\r\n        function floor(n) { return new this(n)['floor']() }\r\n         */\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the natural logarithm of n.\r\n         *\r\n         * n {number|string|Decimal}\r\n         *\r\n         */\r\n        function ln(n) { return new this(n)['ln'](); }\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the log of x to the base y, or to base 10 if no\r\n         * base is specified.\r\n         *\r\n         * log[y](x)\r\n         *\r\n         * x {number|string|Decimal} The argument of the logarithm.\r\n         * y {number|string|Decimal} The base of the logarithm.\r\n         *\r\n         */\r\n        function log( x, y ) { return new this(x)['log'](y); }\r\n\r\n\r\n        /*\r\n         * Handle max and min. ltgt is 'lt' or 'gt'.\r\n         */\r\n        function maxOrMin( Decimal, args, ltgt ) {\r\n            var m, n,\r\n                i = 0;\r\n\r\n            if ( toString.call( args[0] ) == '[object Array]' ) {\r\n                args = args[0];\r\n            }\r\n\r\n            m = new Decimal( args[0] );\r\n\r\n            for ( ; ++i < args.length; ) {\r\n                n = new Decimal( args[i] );\r\n\r\n                if ( !n['s'] ) {\r\n                    m = n;\r\n\r\n                    break;\r\n                } else if ( m[ltgt](n) ) {\r\n                    m = n;\r\n                }\r\n            }\r\n\r\n            return m;\r\n        }\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the maximum of the arguments.\r\n         *\r\n         * arguments {number|string|Decimal}\r\n         *\r\n         */\r\n        function max() { return maxOrMin( this, arguments, 'lt' ); }\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the minimum of the arguments.\r\n         *\r\n         * arguments {number|string|Decimal}\r\n         *\r\n         */\r\n        function min() { return maxOrMin( this, arguments, 'gt' ); }\r\n\r\n\r\n        /*\r\n         * Parse the value of a new Decimal from a number or string.\r\n         */\r\n        var parseDecimal = (function () {\r\n            var isValid = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n                trim = String.prototype.trim ||\r\n                  function () { return this.replace(/^\\s+|\\s+$/g, ''); };\r\n\r\n            return function ( Decimal, x, n, b ) {\r\n                var d, e, i, isNum, orig, valid;\r\n\r\n                if ( typeof n != 'string' ) {\r\n\r\n                    // If n is a number, check if minus zero.\r\n                    n = ( isNum = typeof n == 'number' || toString.call(n) == '[object Number]' ) &&\r\n                        n === 0 && 1 / n < 0 ? '-0' : n + '';\r\n                }\r\n                orig = n;\r\n\r\n                if ( b == null && isValid.test(n) ) {\r\n\r\n                    // Determine sign.\r\n                    x['s'] = n.charCodeAt(0) === 45 ? ( n = n.slice(1), -1 ) : 1;\r\n\r\n                // Either n is not a valid Decimal or a base has been specified.\r\n                } else {\r\n\r\n                    /*\r\n                     Enable exponential notation to be used with base 10 argument.\r\n                     Ensure return value is rounded to precision as with other bases.\r\n                     */\r\n                    if ( b == 10 ) {\r\n\r\n                        return rnd( new Decimal(n), Decimal['precision'], Decimal['rounding'] );\r\n                    }\r\n\r\n                    n = trim.call(n).replace( /^\\+(?!-)/, '' );\r\n\r\n                    x['s'] = n.charCodeAt(0) === 45 ? ( n = n.replace( /^-(?!-)/, '' ), -1 ) : 1;\r\n\r\n                    if ( b != null ) {\r\n\r\n                        if ( ( b == (b | 0) || !Decimal['errors'] ) &&\r\n                          !( outOfRange = !( b >= 2 && b < 65 ) ) ) {\r\n                            d = '[' + NUMERALS.slice( 0, b = b | 0 ) + ']+';\r\n\r\n                           // Remove the `.` from e.g. '1.', and replace e.g. '.1' with '0.1'.\r\n                            n = n.replace( /\\.$/, '' ).replace( /^\\./, '0.' );\r\n\r\n                            // Any number in exponential form will fail due to the e+/-.\r\n                            if ( valid = new RegExp(\r\n                              '^' + d + '(?:\\\\.' + d + ')?$', b < 37 ? 'i' : '' ).test(n) ) {\r\n\r\n                                if (isNum) {\r\n\r\n                                    if ( n.replace( /^0\\.0*|\\./, '' ).length > 15 ) {\r\n\r\n                                        // '{method} number type has more than 15 significant digits: {n}'\r\n                                        ifExceptionsThrow( Decimal, 0, orig );\r\n                                    }\r\n\r\n                                    // Prevent later check for length on converted number.\r\n                                    isNum = !isNum;\r\n                                }\r\n                                n = convertBase( Decimal, n, 10, b, x['s'] );\r\n\r\n                            } else if ( n != 'Infinity' && n != 'NaN' ) {\r\n\r\n                                // '{method} not a base {b} number: {n}'\r\n                                ifExceptionsThrow( Decimal, 'not a base ' + b + ' number', orig );\r\n                                n = 'NaN';\r\n                            }\r\n                        } else {\r\n\r\n                            // '{method} base not an integer: {b}'\r\n                            // '{method} base out of range: {b}'\r\n                            ifExceptionsThrow( Decimal, 'base', b, 0, 0 );\r\n\r\n                            // Ignore base.\r\n                            valid = isValid.test(n);\r\n                        }\r\n                    } else {\r\n                        valid = isValid.test(n);\r\n                    }\r\n\r\n                    if ( !valid ) {\r\n\r\n                        // Infinity/NaN\r\n                        x['c'] = x['e'] = null;\r\n\r\n                        // NaN\r\n                        if ( n != 'Infinity' ) {\r\n\r\n                            // No exception on NaN.\r\n                            if ( n != 'NaN' ) {\r\n\r\n                                // '{method} not a number: {n}'\r\n                                ifExceptionsThrow( Decimal, 'not a number', orig );\r\n                            }\r\n                            x['s'] = null;\r\n                        }\r\n                        id = 0;\r\n\r\n                        return x;\r\n                    }\r\n                }\r\n\r\n                // Decimal point?\r\n                if ( ( e = n.indexOf('.') ) > -1 ) {\r\n                    n = n.replace( '.', '' );\r\n                }\r\n\r\n                // Exponential form?\r\n                if ( ( i = n.search(/e/i) ) > 0 ) {\r\n\r\n                    // Determine exponent.\r\n                    if ( e < 0 ) {\r\n                        e = i;\r\n                    }\r\n                    e += +n.slice( i + 1 );\r\n                    n = n.substring( 0, i );\r\n\r\n                } else if ( e < 0 ) {\r\n\r\n                    // Integer.\r\n                    e = n.length;\r\n                }\r\n\r\n                // Determine leading zeros.\r\n                for ( i = 0; n.charCodeAt(i) === 48; i++ );\r\n\r\n                // Determine trailing zeros.\r\n                for ( b = n.length; n.charCodeAt(--b) === 48; );\r\n\r\n                n = n.slice( i, b + 1 );\r\n\r\n                if (n) {\r\n                    b = n.length;\r\n\r\n                    // Disallow numbers with over 15 significant digits if number type.\r\n                    if ( isNum && b > 15 ) {\r\n\r\n                        // '{method} number type has more than 15 significant digits: {n}'\r\n                        ifExceptionsThrow( Decimal, 0, orig );\r\n                    }\r\n\r\n                    x['e'] = e = e - i - 1;\r\n                    x['c'] = [];\r\n\r\n                    // Transform base\r\n\r\n                    // e is the base 10 exponent.\r\n                    // i is where to slice n to get the first element of the coefficient array.\r\n                    i = ( e + 1 ) % LOGBASE;\r\n\r\n                    if ( e < 0 ) {\r\n                        i += LOGBASE;\r\n                    }\r\n\r\n                    // b is n.length.\r\n                    if ( i < b ) {\r\n\r\n                        if (i) {\r\n                            x['c'].push( +n.slice( 0, i ) );\r\n                        }\r\n\r\n                        for ( b -= LOGBASE; i < b; ) {\r\n                            x['c'].push( +n.slice( i, i += LOGBASE ) );\r\n                        }\r\n\r\n                        n = n.slice(i);\r\n                        i = LOGBASE - n.length;\r\n                    } else {\r\n                        i -= b;\r\n                    }\r\n\r\n                    for ( ; i--; n += '0' );\r\n\r\n                    x['c'].push( +n );\r\n\r\n                    if (external) {\r\n\r\n                        // Overflow?\r\n                        if ( x['e'] > Decimal['maxE'] ) {\r\n\r\n                            // Infinity.\r\n                            x['c'] = x['e'] = null;\r\n\r\n                        // Underflow?\r\n                        } else if ( x['e'] < Decimal['minE'] ) {\r\n\r\n                            // Zero.\r\n                            x['c'] = [ x['e'] = 0 ];\r\n                        }\r\n                    }\r\n                } else {\r\n\r\n                    // Zero.\r\n                    x['c'] = [ x['e'] = 0 ];\r\n                }\r\n                id = 0;\r\n\r\n                return x;\r\n            };\r\n        })();\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is x raised to the power y.\r\n         *\r\n         * x {number|string|Decimal} The base.\r\n         * y {number|string|Decimal} The exponent.\r\n         *\r\n         */\r\n        function pow( x, y ) { return new this(x)['pow'](y); }\r\n\r\n\r\n        /*\r\n         * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and\r\n         * with dp, or Decimal.precision if dp is omitted, decimal places (or less if trailing\r\n         * zeros are produced).\r\n         *\r\n         * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n         *\r\n         */\r\n        function random(dp) {\r\n            var a, n, v,\r\n                i = 0,\r\n                r = [],\r\n                Decimal = this,\r\n                rand = new Decimal( Decimal['ONE'] );\r\n\r\n            if ( dp == null || !checkArg( rand, dp, 'random' ) ) {\r\n                dp = Decimal['precision'];\r\n            } else {\r\n                dp |= 0;\r\n            }\r\n\r\n            n = Math.ceil( dp / LOGBASE );\r\n\r\n            if ( Decimal['crypto'] ) {\r\n\r\n                // Browsers supporting crypto.getRandomValues.\r\n                if ( crypto && crypto['getRandomValues'] ) {\r\n\r\n                    a = crypto['getRandomValues']( new Uint32Array(n) );\r\n\r\n                    for ( ; i < n; ) {\r\n                        v = a[i];\r\n\r\n                        // 0 <= v < 4294967296\r\n                        // Probability that v >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n                        if ( v >= 4.29e9 ) {\r\n\r\n                            a[i] = crypto['getRandomValues']( new Uint32Array(1) )[0];\r\n                        } else {\r\n\r\n                            // 0 <= v <= 4289999999\r\n                            // 0 <= ( v % 1e7 ) <= 9999999\r\n                            r[i++] = v % 1e7;\r\n                        }\r\n                    }\r\n\r\n                // Node.js supporting crypto.randomBytes.\r\n                } else if ( crypto && crypto['randomBytes'] ) {\r\n\r\n                    // buffer\r\n                    a = crypto['randomBytes']( n *= 4 );\r\n\r\n                    for ( ; i < n; ) {\r\n\r\n                        // 0 <= v < 2147483648\r\n                        v = a[i] + ( a[i + 1] << 8 ) + ( a[i + 2] << 16 ) +\r\n                            ( ( a[i + 3] & 0x7f ) << 24 );\r\n\r\n                        // Probability that v >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n                        if ( v >= 2.14e9 ) {\r\n                            crypto['randomBytes'](4).copy( a, i );\r\n                        } else {\r\n\r\n                            // 0 <= v <= 2139999999\r\n                            // 0 <= ( v % 1e7 ) <= 9999999\r\n                            r.push( v % 1e7 );\r\n                            i += 4;\r\n                        }\r\n                    }\r\n                    i = n / 4;\r\n\r\n                } else {\r\n                    ifExceptionsThrow( Decimal, 'crypto unavailable', crypto, 'random' );\r\n                }\r\n            }\r\n\r\n            // Use Math.random: either Decimal.crypto is false or crypto is unavailable and errors is false.\r\n            if (!i) {\r\n\r\n                for ( ; i < n; ) {\r\n                    r[i++] = Math.random() * 1e7 | 0;\r\n                }\r\n            }\r\n\r\n            n = r[--i];\r\n            dp %= LOGBASE;\r\n\r\n            // Convert trailing digits to zeros according to dp.\r\n            if ( n && dp ) {\r\n                v = mathpow( 10, LOGBASE - dp );\r\n                r[i] = ( n / v | 0 ) * v;\r\n            }\r\n\r\n            // Remove trailing elements which are zero.\r\n            for ( ; r[i] === 0; i-- ) {\r\n                r.pop();\r\n            }\r\n\r\n            // Zero?\r\n            if ( i < 0 ) {\r\n                r = [ n = 0 ];\r\n            } else {\r\n                n = -1;\r\n\r\n                // Remove leading elements which are zero and adjust exponent accordingly.\r\n                for ( ; r[0] === 0; ) {\r\n                    r.shift();\r\n                    n -= LOGBASE;\r\n                }\r\n\r\n                // Count the digits of the first element of r to determine leading zeros.\r\n                for ( i = 1, v = r[0]; v >= 10; ) {\r\n                    v /= 10;\r\n                    i++;\r\n                }\r\n\r\n                // Adjust the exponent for leading zeros of the first element of r.\r\n                if ( i < LOGBASE ) {\r\n                    n -= LOGBASE - i;\r\n                }\r\n            }\r\n\r\n            rand['e'] = n;\r\n            rand['c'] = r;\r\n\r\n            return rand;\r\n        }\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is n round to an integer using rounding mode rounding.\r\n         *\r\n         * To emulate Math.round, set rounding to 7 (ROUND_HALF_CEIL).\r\n         *\r\n         * n {number|string|Decimal}\r\n         *\r\n        function round(n) {\r\n            var x = new this(n);\r\n\r\n            return rnd( x, x['e'] + 1, this['rounding'] );\r\n        }\r\n         */\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the sine of n.\r\n         *\r\n         * n {number|string|Decimal} A number given in radians.\r\n         *\r\n        function sin(n) { return new this( Math.sin(n) + '' ) }\r\n         */\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the square root of n.\r\n         *\r\n         * n {number|string|Decimal}\r\n         *\r\n         */\r\n        function sqrt(n) { return new this(n)['sqrt'](); }\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is the tangent of n.\r\n         *\r\n         * n {number|string|Decimal} A number given in radians.\r\n         *\r\n        function tan(n) { return new this( Math.tan(n) + '' ) }\r\n         */\r\n\r\n\r\n        /*\r\n         * Return a new Decimal whose value is n truncated to an integer.\r\n         *\r\n         * n {number|string|Decimal}\r\n         *\r\n        function trunc(n) { return new this(n)['trunc']() }\r\n         */\r\n\r\n\r\n        /*\r\n         * Create and return a Decimal constructor.\r\n         *\r\n         */\r\n        function decimalFactory(obj) {\r\n\r\n            /*\r\n             * The Decimal constructor and exported function.\r\n             * Create and return a new instance of a Decimal object.\r\n             *\r\n             * n {number|string|Decimal} A numeric value.\r\n             * [b] {number} The base of n. Integer, 2 to 64 inclusive.\r\n             *\r\n             */\r\n            function Decimal( n, b ) {\r\n                var x = this;\r\n\r\n                // Constructor called without new.\r\n                if ( !( x instanceof Decimal ) ) {\r\n                    ifExceptionsThrow( Decimal, 'Decimal called without new', n );\r\n\r\n                    return new Decimal( n, b );\r\n                }\r\n\r\n                // Retain a reference to this Decimal constructor, and shadow\r\n                // Decimal.prototype.constructor which points to Object.\r\n                x['constructor'] = Decimal;\r\n\r\n                // Duplicate.\r\n                if ( n instanceof Decimal ) {\r\n\r\n                    if ( b == null ) {\r\n                        id = 0;\r\n                        x['s'] = n['s'];\r\n                        x['e'] = n['e'];\r\n                        x['c'] = ( n = n['c'] ) ? n.slice() : n;\r\n\r\n                        return x;\r\n                    } else if ( b == 10 ) {\r\n\r\n                        return rnd( new Decimal(n), Decimal['precision'], Decimal['rounding'] );\r\n                    } else {\r\n                        n += '';\r\n                    }\r\n                }\r\n\r\n                return parseDecimal( Decimal, x, n, b );\r\n            }\r\n\r\n\r\n            /* ************************ CONSTRUCTOR DEFAULT PROPERTIES ************************** */\r\n\r\n            /*\r\n             These default values must be integers within the stated ranges (inclusive).\r\n             Most of these values can be changed during run-time using Decimal.config.\r\n             */\r\n\r\n            /*\r\n             The maximum number of significant digits of the result of a calculation or base\r\n             conversion.\r\n             E.g.  Decimal.config({ precision: 20 })\r\n             */\r\n            Decimal['precision'] = 20;                        // 1 to MAX_DIGITS\r\n\r\n            /*\r\n             The rounding mode used when rounding to precision.\r\n\r\n             ROUND_UP         0 Away from zero.\r\n             ROUND_DOWN       1 Towards zero.\r\n             ROUND_CEIL       2 Towards +Infinity.\r\n             ROUND_FLOOR      3 Towards -Infinity.\r\n             ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n             ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n             ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n             ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n             ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n\r\n             E.g.\r\n             Decimal.rounding = 4;\r\n             Decimal.rounding = Decimal.ROUND_HALF_UP;\r\n             */\r\n            Decimal['rounding'] = 4;                          // 0 to 8\r\n\r\n            /*\r\n             The modulo mode used when calculating the modulus: a mod n.\r\n             The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n             The remainder (r) is calculated as: r = a - n * q.\r\n\r\n             UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n             DOWN       1 The remainder has the same sign as the dividend.\r\n                          This modulo mode is commonly known as \"truncated division\" and matches\r\n                          as closely as possible, the behaviour of JS remainder operator (a % n).\r\n             FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n             HALF_EVEN  6 This modulo mode implements the IEEE 754 remainder function.\r\n             EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n                          The remainder is always positive.\r\n\r\n             The above modes - truncated division, floored division, Euclidian division and IEEE 754\r\n             remainder - are commonly used for the modulus operation. Although any other of the\r\n             rounding modes can be used, they may not give useful results.\r\n             */\r\n            Decimal['modulo'] = 1;                            // 0 to 9\r\n\r\n            // The exponent value at and beneath which toString returns exponential notation.\r\n            // Number type: -7\r\n            Decimal['toExpNeg'] = -7;                         // 0 to -EXP_LIMIT\r\n\r\n            // The exponent value at and above which toString returns exponential notation.\r\n            // Number type: 21\r\n            Decimal['toExpPos'] = 21;                         // 0 to EXP_LIMIT\r\n\r\n            // The minimum exponent value, beneath which underflow to zero occurs.\r\n            // Number type: -324  (5e-324)\r\n            Decimal['minE'] = -EXP_LIMIT;                     // -1 to -EXP_LIMIT\r\n\r\n            // The maximum exponent value, above which overflow to Infinity occurs.\r\n            // Number type:  308  (1.7976931348623157e+308)\r\n            Decimal['maxE'] = EXP_LIMIT;                      // 1 to EXP_LIMIT\r\n\r\n            // Whether Decimal Errors are ever thrown.\r\n            Decimal['errors'] = true;                         // true/false\r\n\r\n            // Whether to use cryptographically-secure random number generation, if available.\r\n            Decimal['crypto'] = false;                        // true/false\r\n\r\n            // Format specification for the Decimal.prototype.toFormat method\r\n            Decimal.format = {\r\n                decimalSeparator: '.',\r\n                groupSeparator: ',',\r\n                groupSize: 3,\r\n                secondaryGroupSize: 0,\r\n                fractionGroupSeparator: '\\xA0',              // non-breaking space\r\n                fractionGroupSize: 0\r\n            };\r\n\r\n\r\n            /* ********************** END OF CONSTRUCTOR DEFAULT PROPERTIES ********************* */\r\n\r\n\r\n            Decimal.prototype = P;\r\n\r\n            Decimal['ONE'] = new Decimal(1);\r\n\r\n            /*\r\n            // Pi to 80 s.d.\r\n            Decimal['PI'] = new Decimal(\r\n                '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089'\r\n            );\r\n             */\r\n\r\n            Decimal['ROUND_UP'] = 0;\r\n            Decimal['ROUND_DOWN'] = 1;\r\n            Decimal['ROUND_CEIL'] = 2;\r\n            Decimal['ROUND_FLOOR'] = 3;\r\n            Decimal['ROUND_HALF_UP'] = 4;\r\n            Decimal['ROUND_HALF_DOWN'] = 5;\r\n            Decimal['ROUND_HALF_EVEN'] = 6;\r\n            Decimal['ROUND_HALF_CEIL'] = 7;\r\n            Decimal['ROUND_HALF_FLOOR'] = 8;\r\n\r\n            // modulo mode\r\n            Decimal['EUCLID'] = 9;\r\n\r\n            //Decimal['abs'] = abs;\r\n            //Decimal['acos'] = acos;\r\n            //Decimal['asin'] = asin;\r\n            //Decimal['atan'] = atan;\r\n            //Decimal['atan2'] = atan2;\r\n            //Decimal['ceil'] = ceil;\r\n            //Decimal['cos'] = cos;\r\n            //Decimal['floor'] = floor;\r\n            //Decimal['round'] = round;\r\n            //Decimal['sin'] = sin;\r\n            //Decimal['tan'] = tan;\r\n            //Decimal['trunc'] = trunc;\r\n\r\n            Decimal['config'] = config;\r\n            Decimal['constructor'] = decimalFactory;\r\n            Decimal['exp'] = exp;\r\n            Decimal['ln'] = ln;\r\n            Decimal['log'] = log;\r\n            Decimal['max'] = max;\r\n            Decimal['min'] = min;\r\n            Decimal['pow'] = pow;\r\n            Decimal['sqrt'] = sqrt;\r\n            Decimal['random'] = random;\r\n\r\n            if ( obj != null ) {\r\n                Decimal['config'](obj);\r\n            }\r\n\r\n            return Decimal;\r\n        }\r\n\r\n        return decimalFactory();\r\n    })();\r\n\r\n\r\n    // Export.\r\n\r\n\r\n    // AMD.\r\n    if ( typeof define == 'function' && define.amd ) {\r\n\r\n        define(function () {\r\n            return decimal;\r\n        });\r\n\r\n    // Node and other environments that support module.exports.\r\n    } else if ( typeof module != 'undefined' && module.exports ) {\r\n        module.exports = decimal;\r\n\r\n        if ( !crypto ) {\r\n\r\n            try {\r\n                crypto = require('crypto');\r\n            } catch (e) {}\r\n        }\r\n\r\n    // Browser.\r\n    } else {\r\n        noConflict = global['Decimal'];\r\n\r\n        decimal['noConflict'] = function () {\r\n            global['Decimal'] = noConflict;\r\n\r\n            return decimal;\r\n        };\r\n\r\n        global['Decimal'] = decimal;\r\n    }\r\n})(this);\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/~/decimal.js/decimal.js\n ** module id = 369\n ** module chunks = 0\n **/","'use strict';\n\n// Reserved keywords not allowed to use in the parser\nmodule.exports = {\n  end: true\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/keywords.js\n ** module id = 370\n ** module chunks = 0\n **/","'use strict'\n\n//list of identifiers of nodes in order of their precedence\n//also contains information about left/right associativity\n//and which other operator the operator is associative with\n//Example:\n// addition is associative with addition and subtraction, because:\n// (a+b)+c=a+(b+c)\n// (a+b)-c=a+(b-c)\n//\n// postfix operators are left associative, prefix operators \n// are right associative\n//\n//It's also possible to set the following properties:\n// latexParens: if set to false, this node doesn't need to be enclosed\n//              in parentheses when using LaTeX\n// latexLeftParens: if set to false, this !OperatorNode's! \n//                  left argument doesn't need to be enclosed\n//                  in parentheses\n// latexRightParens: the same for the right argument\nvar properties = [\n  { //assignment\n    'AssignmentNode': {},\n    'FunctionAssignmentNode': {}\n  },\n  { //conditional expression\n    'ConditionalNode': {\n      latexLeftParens: false,\n      latexRightParens: false,\n      latexParens: false\n      //conditionals don't need parentheses in LaTeX because\n      //they are 2 dimensional\n    }\n  },\n  { //logical or\n    'OperatorNode:or': {\n      associativity: 'left',\n      associativeWith: []\n    }\n\n  },\n  { //logical xor\n    'OperatorNode:xor': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  },\n  { //logical and\n    'OperatorNode:and': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  },\n  { //bitwise or\n    'OperatorNode:bitOr': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  },\n  { //bitwise xor\n    'OperatorNode:bitXor': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  },\n  { //bitwise and\n    'OperatorNode:bitAnd': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  },\n  { //relational operators\n    'OperatorNode:equal': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:unequal': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:smaller': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:larger': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:smallerEq': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:largerEq': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  },\n  { //bitshift operators\n    'OperatorNode:leftShift': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:rightArithShift': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:rightLogShift': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  },\n  { //unit conversion\n    'OperatorNode:to': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  },\n  { //range\n    'RangeNode': {}\n  },\n  { //addition, subtraction\n    'OperatorNode:add': {\n      associativity: 'left',\n      associativeWith: ['OperatorNode:add', 'OperatorNode:subtract']\n    },\n    'OperatorNode:subtract': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  },\n  { //multiply, divide, modulus\n    'OperatorNode:multiply': {\n      associativity: 'left',\n      associativeWith: [\n        'OperatorNode:multiply',\n        'OperatorNode:divide',\n        'Operator:dotMultiply',\n        'Operator:dotDivide'\n      ]\n    },\n    'OperatorNode:divide': {\n      associativity: 'left',\n      associativeWith: [],\n      latexLeftParens: false,\n      latexRightParens: false,\n      latexParens: false\n      //fractions don't require parentheses because\n      //they're 2 dimensional, so parens aren't needed\n      //in LaTeX\n    },\n    'OperatorNode:dotMultiply': {\n      associativity: 'left',\n      associativeWith: [\n        'OperatorNode:multiply',\n        'OperatorNode:divide',\n        'OperatorNode:dotMultiply',\n        'OperatorNode:doDivide'\n      ]\n    },\n    'OperatorNode:dotDivide': {\n      associativity: 'left',\n      associativeWith: []\n    },\n    'OperatorNode:mod': {\n      associativity: 'left',\n      associativeWith: []\n    }\n  },\n  { //unary prefix operators\n    'OperatorNode:unaryPlus': {\n      associativity: 'right'\n    },\n    'OperatorNode:unaryMinus': {\n      associativity: 'right'\n    },\n    'OperatorNode:bitNot': {\n      associativity: 'right'\n    },\n    'OperatorNode:not': {\n      associativity: 'right'\n    }\n  },\n  { //exponentiation\n    'OperatorNode:pow': {\n      associativity: 'right',\n      associativeWith: [],\n      latexRightParens: false,\n      //the exponent doesn't need parentheses in\n      //LaTeX because it's 2 dimensional\n      //(it's on top)\n    },\n    'OperatorNode:dotPow': {\n      associativity: 'right',\n      associativeWith: []\n    }\n  },\n  { //factorial\n    'OperatorNode:factorial': {\n      associativity: 'left'\n    }\n  },\n  { //matrix transpose\n    'OperatorNode:transpose': {\n      associativity: 'left'\n    }\n  }\n];\n\n/**\n * Get the precedence of a Node.\n * Higher number for higher precedence, starting with 0.\n * Returns null if the precedence is undefined.\n *\n * @param {Node}\n * @return {Number|null}\n */\nfunction getPrecedence (node) {\n  var identifier = node.getIdentifier();\n  for (var i = 0; i < properties.length; i++) {\n    if (identifier in properties[i]) {\n      return i;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the associativity of an operator (left or right).\n * Returns a string containing 'left' or 'right' or null if\n * the associativity is not defined.\n *\n * @param {Node}\n * @return {String|null}\n * @throws {Error}\n */\nfunction getAssociativity (node) {\n  var identifier = node.getIdentifier();\n  var index = getPrecedence(node);\n  if (index === null) {\n    //node isn't in the list\n    return null;\n  }\n  var property = properties[index][identifier];\n\n  if (property.hasOwnProperty('associativity')) {\n    if (property.associativity === 'left') {\n      return 'left';\n    }\n    if (property.associativity === 'right') {\n      return 'right';\n    }\n    //associativity is invalid\n    throw Error('\\'' + identifier + '\\' has the invalid associativity \\''\n                + property.associativity + '\\'.');\n  }\n\n  //associativity is undefined\n  return null;\n}\n\n/**\n * Check if an operator is associative with another operator.\n * Returns either true or false or null if not defined.\n *\n * @param {Node} nodeA\n * @param {Node} nodeB\n * @return {bool|null}\n */\nfunction isAssociativeWith (nodeA, nodeB) {\n  var identifierA = nodeA.getIdentifier();\n  var identifierB = nodeB.getIdentifier();\n  var index = getPrecedence(nodeA);\n  if (index === null) {\n    //node isn't in the list\n    return null;\n  }\n  var property = properties[index][identifierA];\n\n  if (property.hasOwnProperty('associativeWith')\n      && (property.associativeWith instanceof Array)) {\n    for (var i = 0; i < property.associativeWith.length; i++) {\n      if (property.associativeWith[i] === identifierB) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  //associativeWith is not defined\n  return null;\n}\n\nmodule.exports.properties = properties;\nmodule.exports.getPrecedence = getPrecedence;\nmodule.exports.getAssociativity = getAssociativity;\nmodule.exports.isAssociativeWith = isAssociativeWith;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/expression/operators.js\n ** module id = 371\n ** module chunks = 0\n **/","'use strict';\n\nexports.symbols = {\n  // GREEK LETTERS\n  Alpha: 'A',     alpha: '\\\\alpha',\n  Beta: 'B',      beta: '\\\\beta',\n  Gamma: '\\\\Gamma',    gamma: '\\\\gamma',\n  Delta: '\\\\Delta',    delta: '\\\\delta',\n  Epsilon: 'E',   epsilon: '\\\\epsilon',  varepsilon: '\\\\varepsilon',\n  Zeta: 'Z',      zeta: '\\\\zeta',\n  Eta: 'H',       eta: '\\\\eta',\n  Theta: '\\\\Theta',    theta: '\\\\theta',    vartheta: '\\\\vartheta',\n  Iota: 'I',      iota: '\\\\iota',\n  Kappa: 'K',     kappa: '\\\\kappa',    varkappa: '\\\\varkappa',\n  Lambda: '\\\\Lambda',   lambda: '\\\\lambda',\n  Mu: 'M',        mu: '\\\\mu',\n  Nu: 'N',        nu: '\\\\nu',\n  Xi: '\\\\Xi',       xi: '\\\\xi',\n  Omicron: 'O',   omicron: 'o',\n  Pi: '\\\\Pi',       pi: '\\\\pi',       varpi: '\\\\varpi',\n  Rho: 'P',       rho: '\\\\rho',      varrho: '\\\\varrho',\n  Sigma: '\\\\Sigma',    sigma: '\\\\sigma',    varsigma: '\\\\varsigma',\n  Tau: 'T',       tau: '\\\\tau',\n  Upsilon: '\\\\Upsilon',  upsilon: '\\\\upsilon',\n  Phi: '\\\\Phi',      phi: '\\\\phi',      varphi: '\\\\varphi',\n  Chi: 'X',       chi: '\\\\chi',\n  Psi: '\\\\Psi',      psi: '\\\\psi',\n  Omega: '\\\\Omega',    omega: '\\\\omega',\n  //logic\n  'true': '\\\\mathrm{True}',\n  'false': '\\\\mathrm{False}',\n  //other\n  i: 'i', //TODO use \\i ??\n  inf: '\\\\infty',\n  Inf: '\\\\infty',\n  infinity: '\\\\infty',\n  Infinity: '\\\\infty',\n  oo: '\\\\infty',\n  lim: '\\\\lim',\n  'undefined': '\\\\mathbf{?}'\n};\n\nexports.operators = {\n  'transpose': '^\\\\top',\n  'factorial': '!',\n  'pow': '^',\n  'dotPow': '.^\\\\wedge', //TODO find ideal solution\n  'unaryPlus': '+',\n  'unaryMinus': '-',\n  'bitNot': '~', //TODO find ideal solution\n  'not': '\\\\neg',\n  'multiply': '\\\\cdot',\n  'divide': '\\\\frac', //TODO how to handle that properly?\n  'dotMultiply': '.\\\\cdot', //TODO find ideal solution\n  'dotDivide': '.:', //TODO find ideal solution\n  'mod': '\\\\mod',\n  'add': '+',\n  'subtract': '-',\n  'to': '\\\\rightarrow',\n  'leftShift': '<<',\n  'rightArithShift': '>>',\n  'rightLogShift': '>>>',\n  'equal': '=',\n  'unequal': '\\\\neq',\n  'smaller': '<',\n  'larger': '>',\n  'smallerEq': '\\\\leq',\n  'largerEq': '\\\\geq',\n  'bitAnd': '\\\\&',\n  'bitXor': '\\\\underline{|}',\n  'bitOr': '|',\n  'and': '\\\\wedge',\n  'xor': '\\\\veebar',\n  'or': '\\\\vee'\n};\n\n\n//create a comma separated list of function arguments\nfunction functionArgs(args, callbacks) {\n  return args.map( function (arg) {\n    return arg.toTex(callbacks);\n  }).join(',');\n}\n\nvar defaultTemplate = '\\\\mathrm{%name%}\\\\left(%*%\\\\right)';\n\n/*\n * expand a template\n *\n * @param {String} template\n * @param {String} name of the function\n * @param {Array} arguments of the function ( Strings )\n **/\nfunction expandTemplate(template, name, args) {\n  //replace %name% with the variable 'name'\n  template = template.replace(/%name%/g, name);\n\n  //replace %0%, %1% .... with the arguments in args\n  args.forEach(function (arg, index) {\n    template = template.replace(RegExp('%' + index + '%', 'g'), arg);\n  });\n\n  //replace %*% with a comma separated list of all arguments\n  template = template.replace('%*%', args.map(function (arg) {\n      return arg;\n    }).join(','));\n\n  //replace %% with %, this comes in handy when you need a % in your LaTeX string\n  template = template.replace('%%', '%');\n\n  return template;\n}\n\n//this is a map containing all the latex converters for all the functions\nvar functions = {\n  //arithmetic\n  'abs': '\\\\left|%0%\\\\right|',\n  'add': '\\\\left(%0%+%1%\\\\right)',\n  'ceil': '\\\\left\\\\lceil%0%\\\\right\\\\rceil',\n  'cube': '\\\\left(%0%\\\\right)^3',\n  'divide': '\\\\frac{%0%}{%1%}',\n  'dotDivide': '\\\\left(%0%' + exports.operators['dotDivide'] + '%1%\\\\right)',\n  'dotMultiply': '\\\\left(%0%' + exports.operators['dotMultiply'] + '%1%\\\\right)',\n  'dotPow': '\\\\left(%0%' + exports.operators['dotPow'] + '%1%\\\\right)',\n  'exp': '\\\\exp\\\\left(%0%\\\\right)',\n  'fix': defaultTemplate,\n  'floor': '\\\\left\\\\lfloor%0%\\\\right\\\\rfloor',\n  'gcd': '\\\\gcd\\\\left(%*%\\\\right)',\n  'lcm': defaultTemplate,\n  'log10': '\\\\log_{10}\\\\left(%0%\\\\right)',\n  'log': {\n    1: '\\\\ln\\\\left(%0%\\\\right)',\n    2: '\\\\log_{%1%}\\\\left(%0%\\\\right)'\n  },\n  'mod': '\\\\left(%0%' + exports.operators['mod'] + '%1%\\\\right)',\n  'multiply': '\\\\left(%0%' + exports.operators['multiply'] + '%1%\\\\right)',\n  'norm': {\n    1: '\\\\left\\\\|%0%\\\\right\\\\|',\n    2: defaultTemplate\n  },\n  'nthRoot': '\\\\sqrt[%1%]{%0%}',\n  'pow': '\\\\left(%0%\\\\right)' + exports.operators['pow'] + '{%1%}',\n  'round': {\n    1: '\\\\left\\\\lfloor%0%\\\\right\\\\rceil',\n    2: defaultTemplate\n  },\n  'sign': defaultTemplate,\n  'sqrt': '\\\\sqrt{%0%}',\n  'square': '\\\\left(%0%\\\\right)^2',\n  'subtract': '\\\\left(%0%' + exports.operators['subtract'] + '%1%\\\\right)',\n  'unaryMinus': exports.operators['unaryMinus'] + '\\\\left(%0%\\\\right)',\n  'unaryPlus': exports.operators['unaryPlus'] + '\\\\left(%0%\\\\right)',\n  'xgcd': defaultTemplate,\n\n  //bitwise\n  'bitAnd': '\\\\left(%0%' + exports.operators['bitAnd'] + '%1%\\\\right)',\n  'bitOr': '\\\\left(%0%' + exports.operators['bitOr'] + '%1%\\\\right)',\n  'bitXor': '\\\\left(%0%' + exports.operators['bitXor'] + '%1%\\\\right)',\n  'bitNot': exports.operators['bitNot'] + '\\\\left(%0%\\\\right)',\n  'leftShift': '\\\\left(%0%' + exports.operators['leftShift'] + '%1%\\\\right)',\n  'rightArithShift': '\\\\left(%0%' + exports.operators['rightArithShift'] + '%1%\\\\right)',\n  'rightLogShift': '\\\\left(%0%' + exports.operators['rightLogShift'] + '%1%\\\\right)',\n\n  //complex\n  'arg': '\\\\arg\\\\left(%0%\\\\right)',\n  'conj': '\\\\left(%0%\\\\right)^*',\n  'im': '\\\\Im\\\\left\\\\lbrace%0%\\\\right\\\\rbrace',\n  're': '\\\\Re\\\\left\\\\lbrace%0%\\\\right\\\\rbrace',\n\n  //construction\n  'bignumber': {\n    0: '0',\n    1: '\\\\left(%0%\\\\right)'\n  },\n  'boolean': defaultTemplate,\n  'chain': defaultTemplate,\n  'complex': {\n    0: '0',\n    1: '\\\\left(%0%\\\\right)',\n    2: '\\\\left(\\\\left(%0%\\\\right)+'\n      + exports.symbols['i'] + '\\\\cdot\\\\left(%1%\\\\right)\\\\right)',\n  },\n  'index': defaultTemplate,\n  'matrix': {\n    0: '\\\\begin{bmatrix}\\\\end{bmatrix}',\n    1: '\\\\left(%0%\\\\right)',\n    2: '\\\\left(%0%\\\\right)'\n  },\n  'number': {\n    0: '0',\n    1: '\\\\left(%0%\\\\right)',\n    2: '\\\\left(\\\\left(%0%\\\\right)%1%\\\\right)'\n  },\n  'parser': defaultTemplate,\n  'string': {\n    0: '\"\"',\n    1: function (node) {\n      return '\"' + node.args[0].toString() + '\"';\n    }\n  },\n  'unit': {\n    1: '\\\\left(%0%\\\\right)',\n    2: '\\\\left(\\\\left(%0%\\\\right)%1%\\\\right)'\n  },\n\n  //expression TODO does the default even work in this case? (.toTex on the args)\n  'compile': defaultTemplate,\n  'eval': defaultTemplate,\n  'help': defaultTemplate,\n  'parse': defaultTemplate,\n\n  //logical\n  'and': '\\\\left(%0%' + exports.operators['and'] + '%1%\\\\right)',\n  'not': exports.operators['not'] + '\\\\left(%0%\\\\right)',\n  'or': '\\\\left(%0%' + exports.operators['or'] + '%1%\\\\right)',\n  'xor': '\\\\left(%0%' + exports.operators['xor'] + '%1%\\\\right)',\n\n  //matrix\n  'concat': defaultTemplate,\n  'cross': '\\\\left(%0%\\\\right)\\\\times\\\\left(%1%\\\\right)',\n  'det': '\\\\det\\\\left(%0%\\\\right)',\n  'diag': defaultTemplate,\n  'dot': '\\\\left(%0%\\\\cdot%1%\\\\right)',\n  'eye': defaultTemplate,\n  'flatten': defaultTemplate,\n  'inv': '\\\\left(%0%\\\\right)^{-1}',\n  'ones': defaultTemplate,\n  'range': defaultTemplate,\n  'resize': defaultTemplate,\n  'size': defaultTemplate,\n  'squeeze': defaultTemplate,\n  'subset': defaultTemplate,\n  'trace': '\\\\mathrm{tr}\\\\left(%0%\\\\right)',\n  'transpose': '\\\\left(%0%\\\\right)' + exports.operators['transpose'],\n  'zeros': defaultTemplate,\n\n  //probability\n  'combinations': '\\\\binom{%0%}{%1%}',\n  'distribution': defaultTemplate,\n  'factorial': '\\\\left(%0%\\\\right)' + exports.operators['factorial'],\n  'gamma': '\\\\Gamma\\\\left(%0%\\\\right)',\n  'permutations': defaultTemplate,\n  'pickRandom': defaultTemplate,\n  'randomInt': defaultTemplate,\n  'random': defaultTemplate,\n\n  //relational\n  'compare': defaultTemplate,\n  'deepEqual': defaultTemplate,\n  'equal': '\\\\left(%0%' + exports.operators['equal'] + '%1%\\\\right)',\n  'largerEq': '\\\\left(%0%' + exports.operators['largerEq'] + '%1%\\\\right)',\n  'larger': '\\\\left(%0%' + exports.operators['larger'] + '%1%\\\\right)',\n  'smallerEq': '\\\\left(%0%' + exports.operators['smallerEq'] + '%1%\\\\right)',\n  'smaller': '\\\\left(%0%' + exports.operators['smaller'] + '%1%\\\\right)',\n  'unequal': '\\\\left(%0%' + exports.operators['unequal'] + '%1%\\\\right)',\n\n  //statistics\n  'max': '\\\\max\\\\left(%*%\\\\right)',\n  'mean': defaultTemplate,\n  'median': defaultTemplate,\n  'min': '\\\\min\\\\left(%*%\\\\right)',\n  'prod': defaultTemplate,\n  'std': defaultTemplate,\n  'sum': defaultTemplate,\n  'var': '\\\\mathrm{Var}\\\\left(%*%\\\\right)',\n\n  //trigonometry\n  'acosh': '\\\\cosh^{-1}\\\\left(%0%\\\\right)',\n  'acos': '\\\\cos^{-1}\\\\left(%0%\\\\right)',\n  'acoth': '\\\\coth^{-1}\\\\left(%0%\\\\right)',\n  'acot': '\\\\cot^{-1}\\\\left(%0%\\\\right)',\n  'acsch': '\\\\mathrm{csch}^{-1}\\\\left(%0%\\\\right)',\n  'acsc': '\\\\csc^{-1}\\\\left(%0%\\\\right)',\n  'asech': '\\\\mathrm{sech}^{-1}\\\\left(%0%\\\\right)',\n  'asec': '\\\\sec^{-1}\\\\left(%0%\\\\right)',\n  'asinh': '\\\\sinh^{-1}\\\\left(%0%\\\\right)',\n  'asin': '\\\\sin^{-1}\\\\left(%0%\\\\right)',\n  'atan2': '\\\\mathrm{atan2}\\\\left(%*%\\\\right)',\n  'atanh': '\\\\tanh^{-1}\\\\left(%0%\\\\right)',\n  'atan': '\\\\tan^{-1}\\\\left(%0%\\\\right)',\n  'cosh': '\\\\cosh\\\\left(%0%\\\\right)',\n  'cos': '\\\\cos\\\\left(%0%\\\\right)',\n  'coth': '\\\\coth\\\\left(%0%\\\\right)',\n  'cot': '\\\\cot\\\\left(%0%\\\\right)',\n  'csch': '\\\\mathrm{csch}\\\\left(%0%\\\\right)',\n  'csc': '\\\\csc\\\\left(%0%\\\\right)',\n  'sech': '\\\\mathrm{sech}\\\\left(%0%\\\\right)',\n  'sec': '\\\\sec\\\\left(%0%\\\\right)',\n  'sinh': '\\\\sinh\\\\left(%0%\\\\right)',\n  'sin': '\\\\sin\\\\left(%0%\\\\right)',\n  'tanh': '\\\\tanh\\\\left(%0%\\\\right)',\n  'tan': '\\\\tan\\\\left(%0%\\\\right)',\n\n  //units\n  'to': '\\\\left(%0%' + exports.operators['to'] + '%1%\\\\right)',\n\n  //utils\n  'clone': defaultTemplate,\n  'filter': defaultTemplate,\n  'forEach': defaultTemplate,\n  'format': defaultTemplate,\n  'import': defaultTemplate,\n  'map': defaultTemplate,\n  'print': defaultTemplate,\n  'sort': defaultTemplate,\n  'typeof': defaultTemplate\n};\n\nvar units = {\n  deg: '^\\\\circ'\n};\n\n//FIXME find a good solution so that single characters still\n//get rendered in regular italic whereas single character units\n//are rendered with \\mathrm\nexports.toSymbol = function (name) {\n  if (units.hasOwnProperty(name)) {\n    return units[name];\n  }\n\n  if (exports.symbols.hasOwnProperty(name)) {\n    return exports.symbols[name];\n  }\n  else if (name.indexOf('_') !== -1) {\n    //symbol with index (eg. alpha_1)\n    var index = name.indexOf('_');\n    return exports.toSymbol(name.substring(0, index)) + '_{'\n      + exports.toSymbol(name.substring(index + 1)) + '}';\n  }\n  return '\\\\mathrm{' + name + '}';\n};\n\n//returns the latex output for a given function\nexports.toFunction = function (node, callbacks, name) {\n  var latexConverter = functions[name];\n  var args = node.args.map(function (arg) { //get LaTeX of the arguments\n    return arg.toTex(callbacks);\n  });\n\n  switch (typeof latexConverter) {\n    case 'function': //a callback function\n      return latexConverter(node, callbacks);\n    case 'string': //a template string\n      return expandTemplate(latexConverter, name, args);\n    case 'object': //an object with different \"converters\" for different numbers of arguments\n      switch (typeof latexConverter[args.length]) {\n        case 'function':\n          return latexConverter[args.length](node, callbacks);\n        case 'string':\n          return expandTemplate(latexConverter[args.length], name, args);\n      }\n      //no break here! That's intentionally\n    default:\n      return expandTemplate(defaultTemplate, name, args);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mathjs/lib/util/latex.js\n ** module id = 372\n ** module chunks = 0\n **/","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var getter = _.constant(object);\n *\n * getter() === object;\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/utility/constant.js\n ** module id = 373\n ** module chunks = 0\n **/","var isObject = require('../lang/isObject');\n\n/**\n * Converts `value` to an object if it is not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/toObject.js\n ** module id = 374\n ** module chunks = 0\n **/","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('./isIndex'),\n    isLength = require('./isLength'),\n    keysIn = require('../object/keysIn'),\n    support = require('../support');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = length && isLength(length) &&\n    (isArray(object) || (support.nonEnumArgs && isArguments(object)));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = shimKeys;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/shimKeys.js\n ** module id = 375\n ** module chunks = 0\n **/","var baseToString = require('../internal/baseToString');\n\n/**\n * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n * In addition to special characters the forward slash is escaped to allow for\n * easier `eval` use and `Function` compilation.\n */\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/string/escapeRegExp.js\n ** module id = 376\n ** module chunks = 0\n **/","var toObject = require('./toObject');\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/createBaseFor.js\n ** module id = 377\n ** module chunks = 0\n **/","/**\n * Converts `value` to a string if it is not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  if (typeof value == 'string') {\n    return value;\n  }\n  return value == null ? '' : (value + '');\n}\n\nmodule.exports = baseToString;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/baseToString.js\n ** module id = 378\n ** module chunks = 0\n **/","var isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  var length = isObjectLike(value) ? value.length : undefined;\n  return isLength(length) && objToString.call(value) == argsTag;\n}\n\nmodule.exports = isArguments;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lang/isArguments.js\n ** module id = 379\n ** module chunks = 0\n **/","/**\n * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = Math.pow(2, 53) - 1;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = +value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/internal/isIndex.js\n ** module id = 380\n ** module chunks = 0\n **/","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('../internal/isIndex'),\n    isLength = require('../internal/isLength'),\n    isObject = require('../lang/isObject'),\n    support = require('../support');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || (support.nonEnumArgs && isArguments(object))) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/object/keysIn.js\n ** module id = 381\n ** module chunks = 0\n **/","/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to detect DOM support. */\nvar document = (document = global.window) && document.document;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * An object environment feature flags.\n *\n * @static\n * @memberOf _\n * @type Object\n */\nvar support = {};\n\n(function(x) {\n  var Ctor = function() { this.x = x; },\n      object = { '0': x, 'length': x },\n      props = [];\n\n  Ctor.prototype = { 'valueOf': x, 'y': x };\n  for (var key in new Ctor) { props.push(key); }\n\n  /**\n   * Detect if functions can be decompiled by `Function#toString`\n   * (all but Firefox OS certified apps, older Opera mobile browsers, and\n   * the PlayStation 3; forced `false` for Windows 8 apps).\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.funcDecomp = /\\bthis\\b/.test(function() { return this; });\n\n  /**\n   * Detect if `Function#name` is supported (all but IE).\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.funcNames = typeof Function.name == 'string';\n\n  /**\n   * Detect if the DOM is supported.\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  try {\n    support.dom = document.createDocumentFragment().nodeType === 11;\n  } catch(e) {\n    support.dom = false;\n  }\n\n  /**\n   * Detect if `arguments` object indexes are non-enumerable.\n   *\n   * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n   * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n   * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n   * checks for indexes that exceed the number of function parameters and\n   * whose associated argument values are `0`.\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  try {\n    support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n  } catch(e) {\n    support.nonEnumArgs = true;\n  }\n}(1, 0));\n\nmodule.exports = support;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/support.js\n ** module id = 382\n ** module chunks = 0\n **/"],"sourceRoot":""}